/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package android.support.v13;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int confirm_credential_close_enter=0x7f01000a;
    public static final int confirm_credential_close_exit=0x7f01000b;
    public static final int confirm_credential_open_enter=0x7f01000c;
    public static final int confirm_credential_open_exit=0x7f01000d;
    public static final int enrollment_fingerprint_isolated_ridge_1_path_animation=0x7f01000e;
    public static final int enrollment_fingerprint_isolated_ridge_2_path_animation=0x7f01000f;
    public static final int enrollment_fingerprint_isolated_ridge_5_path_animation=0x7f010010;
    public static final int enrollment_fingerprint_isolated_ridge_6_path_animation=0x7f010011;
    public static final int enrollment_fingerprint_isolated_ridge_7_path_animation=0x7f010012;
    public static final int suw_slide_back_in=0x7f010013;
    public static final int suw_slide_back_out=0x7f010014;
    public static final int suw_slide_next_in=0x7f010015;
    public static final int suw_slide_next_out=0x7f010016;
    public static final int tooltip_enter=0x7f010017;
    public static final int tooltip_exit=0x7f010018;
  }
  public static final class animator {
    public static final int suw_slide_back_in=0x7f020000;
    public static final int suw_slide_back_out=0x7f020001;
    public static final int suw_slide_next_in=0x7f020002;
    public static final int suw_slide_next_out=0x7f020003;
  }
  public static final class array {
    /**
     * Titles for animator duration scale preference. [CHAR LIMIT=35]
     */
    public static final int animator_duration_scale_entries=0x7f030000;
    /**
     * Values for animator duration scale preference.
     */
    public static final int animator_duration_scale_values=0x7f030001;
    /**
     * Authentication Types used in APN editor
     */
    public static final int apn_auth_entries=0x7f030002;
    public static final int apn_auth_values=0x7f030003;
    /**
     * Authentication Types used in APN editor
     */
    public static final int apn_protocol_entries=0x7f030004;
    public static final int apn_protocol_values=0x7f030005;
    /**
     * Apps on SD installation location options in ApplicationSettings
     */
    public static final int app_install_location_entries=0x7f030006;
    /**
     * Do not translate.
     */
    public static final int app_install_location_values=0x7f030007;
    /**
     * Names of categories of app ops tabs
     */
    public static final int app_ops_categories=0x7f030008;
    /**
     * User display names for app ops codes
     */
    public static final int app_ops_labels=0x7f030009;
    /**
     * User display names for app ops codes
     */
    public static final int app_ops_summaries=0x7f03000a;
    /**
     * Titles for app process limit preference. [CHAR LIMIT=35]
     */
    public static final int app_process_limit_entries=0x7f03000b;
    /**
     * Values for app process limit preference.
     */
    public static final int app_process_limit_values=0x7f03000c;
    /**
     * Automatic storage management settings. The amount of days for the automatic storage manager
     * to retain. These are shown in a list dialog. [CHAR LIMIT=70]
     */
    public static final int automatic_storage_management_days=0x7f03000d;
    public static final int automatic_storage_management_days_values=0x7f03000e;
    /**
     * Labels on the side of batter graph in Quick Settings and Settings [CHAR LIMIT=8]
     */
    public static final int battery_labels=0x7f03000f;
    /**
     * Battery saver mode: allowable trigger threshold levels.
     */
    public static final int battery_saver_trigger_values=0x7f030010;
    public static final int batterymeter_bolt_points=0x7f030011;
    /**
     * BatteryMeterView parameters
     */
    public static final int batterymeter_color_levels=0x7f030012;
    public static final int batterymeter_color_values=0x7f030013;
    public static final int batterymeter_plus_points=0x7f030014;
    /**
     * Bearer Info used in APN editor
     */
    public static final int bearer_entries=0x7f030015;
    public static final int bearer_values=0x7f030016;
    /**
     * Summaries for Bluetooth Audio Codec Bits Per Sample selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_bits_per_sample_summaries=0x7f030017;
    /**
     * Titles for Bluetooth Audio Codec Bits Per Sample selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_bits_per_sample_titles=0x7f030018;
    /**
     * Values for Bluetooth Audio Codec Bits Per Sample selection preference.
     */
    public static final int bluetooth_a2dp_codec_bits_per_sample_values=0x7f030019;
    /**
     * Summaries for Bluetooth Audio Codec Channel Mode selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_channel_mode_summaries=0x7f03001a;
    /**
     * Titles for Bluetooth Audio Codec Channel Mode selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_channel_mode_titles=0x7f03001b;
    /**
     * Values for Bluetooth Audio Codec Channel Mode selection preference.
     */
    public static final int bluetooth_a2dp_codec_channel_mode_values=0x7f03001c;
    /**
     * Summaries for Bluetooth Audio Codec LDAC Playback Quality selection preference. [CHAR LIMIT=70]
     */
    public static final int bluetooth_a2dp_codec_ldac_playback_quality_summaries=0x7f03001d;
    /**
     * Titles for Bluetooth Audio Codec LDAC Playback Quality selection preference. [CHAR LIMIT=70]
     */
    public static final int bluetooth_a2dp_codec_ldac_playback_quality_titles=0x7f03001e;
    /**
     * Values for Bluetooth Audio Codec LDAC Playback Quaility selection preference.
     */
    public static final int bluetooth_a2dp_codec_ldac_playback_quality_values=0x7f03001f;
    /**
     * Summaries for Bluetooth Audio Codec Sample Rate selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_sample_rate_summaries=0x7f030020;
    /**
     * Titles for Bluetooth Audio Codec Sample Rate selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_sample_rate_titles=0x7f030021;
    /**
     * Values for Bluetooth Audio Codec Sample Rate selection preference.
     */
    public static final int bluetooth_a2dp_codec_sample_rate_values=0x7f030022;
    /**
     * Summaries for Bluetooth Audio Codec selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_summaries=0x7f030023;
    /**
     * Titles for Bluetooth Audio Codec selection preference. [CHAR LIMIT=50]
     */
    public static final int bluetooth_a2dp_codec_titles=0x7f030024;
    /**
     * Values for Bluetooth Audio Codec selection preference.
     */
    public static final int bluetooth_a2dp_codec_values=0x7f030025;
    /**
     * Values for Bluetooth AVRCP Versions
     */
    public static final int bluetooth_avrcp_version_values=0x7f030026;
    /**
     * Titles for Bluetooth AVRCP Versions
     */
    public static final int bluetooth_avrcp_versions=0x7f030027;
    /**
     * Discoverable mode timeout options
     */
    public static final int bluetooth_visibility_timeout_entries=0x7f030028;
    /**
     * Titles for captioning color preference.
     */
    public static final int captioning_color_selector_titles=0x7f030029;
    /**
     * Values for captioning color preference.
     */
    public static final int captioning_color_selector_values=0x7f03002a;
    /**
     * Titles for captioning character edge type preference. [CHAR LIMIT=35]
     */
    public static final int captioning_edge_type_selector_titles=0x7f03002b;
    /**
     * Values for captioning character edge type preference.
     */
    public static final int captioning_edge_type_selector_values=0x7f03002c;
    /**
     * Titles for captioning font size preference. [CHAR LIMIT=35]
     */
    public static final int captioning_font_size_selector_titles=0x7f03002d;
    /**
     * Values for captioning font size preference.
     */
    public static final int captioning_font_size_selector_values=0x7f03002e;
    /**
     * Titles for captioning opacity preference. [CHAR LIMIT=35]
     */
    public static final int captioning_opacity_selector_titles=0x7f03002f;
    /**
     * Values for captioning opacity preference.
     */
    public static final int captioning_opacity_selector_values=0x7f030030;
    /**
     * Titles for captioning text style preset preference. [CHAR LIMIT=35]
     */
    public static final int captioning_preset_selector_titles=0x7f030031;
    /**
     * Values for captioning text style preset preference.
     */
    public static final int captioning_preset_selector_values=0x7f030032;
    /**
     * Titles for captioning typeface preference. [CHAR LIMIT=35]
     */
    public static final int captioning_typeface_selector_titles=0x7f030033;
    /**
     * Values for captioning typeface preference.
     */
    public static final int captioning_typeface_selector_values=0x7f030034;
    /**
     * Description of each color mode for the display. [CHAR LIMIT=NONE]
     */
    public static final int color_mode_descriptions=0x7f030035;
    /**
     * IDs for each color mode. The values must match the corresponding constants in
     * android.view.Display
     */
    public static final int color_mode_ids=0x7f030036;
    /**
     * Name of each color mode for the display. [CHAR LIMIT=40]
     */
    public static final int color_mode_names=0x7f030037;
    /**
     * Array of titles for sim color for multi-sim
     */
    public static final int color_picker=0x7f030038;
    /**
     * List containing the component names of pre-installed audio and captioning services.
     */
    public static final int config_preinstalled_audio_and_caption_services=0x7f030039;
    /**
     * List containing the component names of pre-installed display services.
     */
    public static final int config_preinstalled_display_services=0x7f03003a;
    /**
     * List containing the component names of pre-installed interaction control services.
     */
    public static final int config_preinstalled_interaction_control_services=0x7f03003b;
    /**
     * List containing the component names of pre-installed screen reader services.
     */
    public static final int config_preinstalled_screen_reader_services=0x7f03003c;
    /**
     * Display color space adjustment modes for accessibility
     */
    public static final int daltonizer_type_entries=0x7f03003d;
    /**
     * Values for display color space adjustment modes for accessibility
     */
    public static final int daltonizer_type_values=0x7f03003e;
    /**
     * Data Usage settings. Range of data usage.
     */
    public static final int data_usage_data_range=0x7f03003f;
    /**
     * Titles for debug overdraw preference. [CHAR LIMIT=50]
     */
    public static final int debug_hw_overdraw_entries=0x7f030040;
    /**
     * Values for debug overdraw preference.
     */
    public static final int debug_hw_overdraw_values=0x7f030041;
    /**
     * Titles for debug renderer preference. [CHAR LIMIT=50]
     */
    public static final int debug_hw_renderer_entries=0x7f030042;
    /**
     * Values for debug renderer preference.
     */
    public static final int debug_hw_renderer_values=0x7f030043;
    /**
     * Display settings.  The delay in inactivity before the dream is shown. These are shown in a list dialog.
     */
    public static final int dream_timeout_entries=0x7f030044;
    /**
     * Do not translate.
     */
    public static final int dream_timeout_values=0x7f030045;
    /**
     * Type of EAP method when EAP SIM, AKA, AKA' are not supported
     */
    public static final int eap_method_without_sim_auth=0x7f030046;
    /**
     * Titles for OpenGL traces preference. [CHAR LIMIT=35]
     */
    public static final int enable_opengl_traces_entries=0x7f030047;
    /**
     * Values for OpenGL traces preference.
     */
    public static final int enable_opengl_traces_values=0x7f030048;
    public static final int entries_font_size=0x7f030049;
    public static final int entryvalues_font_size=0x7f03004a;
    /**
     * Summaries for HDCP checking preference. [CHAR LIMIT=100]
     */
    public static final int hdcp_checking_summaries=0x7f03004b;
    /**
     * Titles for HDCP checking preference. [CHAR LIMIT=35]
     */
    public static final int hdcp_checking_titles=0x7f03004c;
    /**
     * Values for HDCP checking preference.
     */
    public static final int hdcp_checking_values=0x7f03004d;
    public static final int input_method_selector_titles=0x7f03004e;
    public static final int input_method_selector_values=0x7f03004f;
    /**
     * Security settings.  The delay after screen is turned off until device locks.
     * These are shown in a list dialog.
     */
    public static final int lock_after_timeout_entries=0x7f030050;
    /**
     * Do not translate.
     */
    public static final int lock_after_timeout_values=0x7f030051;
    /**
     * Titles for the list of long press timeout options.
     */
    public static final int long_press_timeout_selector_titles=0x7f030052;
    /**
     * Values for the list of long press timeout options.
     */
    public static final int long_press_timeout_selector_values=0x7f030053;
    /**
     * MVNO Info used in APN editor
     */
    public static final int mvno_type_entries=0x7f030054;
    public static final int mvno_type_values=0x7f030055;
    /**
     * Titles for overlay display devices preference. [CHAR LIMIT=35]
     */
    public static final int overlay_display_devices_entries=0x7f030056;
    /**
     * Values for overlay display devices preference.
     */
    public static final int overlay_display_devices_values=0x7f030057;
    /**
     * Process stats memory use details: labels for memory states
     */
    public static final int proc_stats_memory_states=0x7f030058;
    /**
     * Process stats memory use details: labels for process
     */
    public static final int proc_stats_process_states=0x7f030059;
    /**
     * [CHAR LIMIT=40] Labels for memory states
     */
    public static final int ram_states=0x7f03005a;
    /**
     * Display settings.  The delay in inactivity before the screen is turned off. These are shown in a list dialog.
     */
    public static final int screen_timeout_entries=0x7f03005b;
    /**
     * Do not translate.
     */
    public static final int screen_timeout_values=0x7f03005c;
    /**
     * Values for premium SMS permission selector [CHAR LIMIT=30]
     */
    public static final int security_settings_premium_sms_values=0x7f03005d;
    /**
     * Titles for logd limit size lowram selection preference. [CHAR LIMIT=14]
     */
    public static final int select_logd_size_lowram_titles=0x7f03005e;
    /**
     * Summaries for logd limit size selection preference. [CHAR LIMIT=50]
     */
    public static final int select_logd_size_summaries=0x7f03005f;
    /**
     * Titles for logd limit size selection preference. [CHAR LIMIT=14]
     */
    public static final int select_logd_size_titles=0x7f030060;
    /**
     * Values for logd limit size selection preference.
     */
    public static final int select_logd_size_values=0x7f030061;
    /**
     * Summaries for logpersist state selection preference. [CHAR LIMIT=50]
     */
    public static final int select_logpersist_summaries=0x7f030062;
    /**
     * Titles for logpersist state selection preference. [CHAR LIMIT=26]
     */
    public static final int select_logpersist_titles=0x7f030063;
    /**
     * Values for logpersist state selection preference.
     */
    public static final int select_logpersist_values=0x7f030064;
    /**
     * Titles for non-rectangular clipping preference. [CHAR LIMIT=35]
     */
    public static final int show_non_rect_clip_entries=0x7f030065;
    /**
     * Values for non-rectangular clipping preference.
     */
    public static final int show_non_rect_clip_values=0x7f030066;
    /**
     * Display color space adjustment modes for developers
     */
    public static final int simulate_color_space_entries=0x7f030067;
    /**
     * Values for display color space adjustment modes for developers
     */
    public static final int simulate_color_space_values=0x7f030068;
    /**
     * The time zone picker screen has two levels.  The first level allows the user to choose a region.
     */
    public static final int timezone_filters=0x7f030069;
    /**
     * Titles for frame time tracking preference. [CHAR LIMIT=50]
     */
    public static final int track_frame_time_entries=0x7f03006a;
    /**
     * Values for frame time tracking preference.
     */
    public static final int track_frame_time_values=0x7f03006b;
    /**
     * Titles for transition animation scale preference. [CHAR LIMIT=35]
     */
    public static final int transition_animation_scale_entries=0x7f03006c;
    /**
     * Values for transition animation scale preference.
     */
    public static final int transition_animation_scale_values=0x7f03006d;
    /**
     * Do not translate.
     */
    public static final int tts_demo_string_langs=0x7f03006e;
    /**
     * Do not translate.
     */
    public static final int tts_demo_strings=0x7f03006f;
    /**
     * Default speech rate choices
     */
    public static final int tts_rate_entries=0x7f030070;
    /**
     * Do not translate.
     */
    public static final int tts_rate_values=0x7f030071;
    /**
     * Display options for UsageStats class
     */
    public static final int usage_stats_display_order_types=0x7f030072;
    /**
     * USB configuration names for Developer Settings.
     * This can be overridden by devices with additional USB configurations.
     */
    public static final int usb_configuration_titles=0x7f030073;
    /**
     * USB configuration values for Developer Settings.
     * These are lists of USB functions passed to the USB Manager to change USB configuraton.
     * This can be overridden by devices with additional USB configurations.
     * Do not translate.
     */
    public static final int usb_configuration_values=0x7f030074;
    /**
     * User content ratings for restricted users [CHAR LIMIT=30]
     */
    public static final int user_content_ratings_entries=0x7f030075;
    /**
     * Values for user content ratings for restricted users
     */
    public static final int user_content_ratings_values=0x7f030076;
    /**
     * Status for a VPN network. [CHAR LIMIT=100]
     */
    public static final int vpn_states=0x7f030077;
    /**
     * Short names for each VPN type, not really translatable. [CHAR LIMIT=20]
     */
    public static final int vpn_types=0x7f030078;
    /**
     * Longer descriptions for each VPN type. [CHAR LIMIT=100]
     */
    public static final int vpn_types_long=0x7f030079;
    public static final int when_to_start_screensaver_entries=0x7f03007a;
    public static final int when_to_start_screensaver_values=0x7f03007b;
    public static final int wifi_ap_band_config_2G_only=0x7f03007c;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     */
    public static final int wifi_ap_band_config_full=0x7f03007d;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     */
    public static final int wifi_ap_security=0x7f03007e;
    public static final int wifi_calling_mode_choices=0x7f03007f;
    public static final int wifi_calling_mode_choices_v2=0x7f030080;
    public static final int wifi_calling_mode_choices_v2_without_wifi_only=0x7f030081;
    public static final int wifi_calling_mode_choices_without_wifi_only=0x7f030082;
    public static final int wifi_calling_mode_values=0x7f030083;
    public static final int wifi_calling_mode_values_without_wifi_only=0x7f030084;
    /**
     * EAP method
     */
    public static final int wifi_eap_entries=0x7f030085;
    /**
     * Wi-Fi settings.  The type of EAP method a Wi-Fi network has.
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     * no translation found for wifi_ap_security:1 (7989073072260294673)
     */
    public static final int wifi_eap_method=0x7f030086;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     */
    public static final int wifi_ip_settings=0x7f030087;
    /**
     * Wi-Fi p2p settings device status message
     */
    public static final int wifi_p2p_status=0x7f030088;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     * no translation found for wifi_ap_band_config_2G_only:0 (7006771583217001015)
     */
    public static final int wifi_p2p_wps_setup=0x7f030089;
    /**
     * Phase 2 options for PEAP
     */
    public static final int wifi_peap_phase2_entries=0x7f03008a;
    /**
     * Type of EAP method when EAP SIM, AKA, AKA' are supported
     */
    public static final int wifi_peap_phase2_entries_with_sim_auth=0x7f03008b;
    /**
     * Phase 2 options for rest of EAP methods
     */
    public static final int wifi_phase2_entries=0x7f03008c;
    /**
     * Note that adding/removing/moving the items will need wifi settings code change.
     */
    public static final int wifi_proxy_settings=0x7f03008d;
    /**
     * Wi-Fi security choices used when manually added a Wi-Fi network
     */
    public static final int wifi_security=0x7f03008e;
    /**
     * Wi-Fi security types for New User Dialog. EAP is not configurable.
     */
    public static final int wifi_security_no_eap=0x7f03008f;
    /**
     * Wi-Fi settings. The signal strength a Wi-Fi network has.
     */
    public static final int wifi_signal=0x7f030090;
    /**
     * Wi-Fi settings. The status messages when the network is unknown.
     */
    public static final int wifi_status=0x7f030091;
    /**
     * Wi-Fi settings. The status messages when the network is known.
     */
    public static final int wifi_status_with_ssid=0x7f030092;
    /**
     * Titles for window animation scale preference. [CHAR LIMIT=35]
     */
    public static final int window_animation_scale_entries=0x7f030093;
    /**
     * Values for window animation scale preference.
     */
    public static final int window_animation_scale_values=0x7f030094;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f040000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f040001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f040002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f040003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f040004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f040005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f040006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f040007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f040008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f040009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f04000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f04000b;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f04000c;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f04000d;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f04000e;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f04000f;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f040010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f040011;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f040012;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f040013;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f040014;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f040015;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f040016;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f040017;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f040018;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f040019;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f04001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f04001b;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f04001c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f04001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f04001e;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f04001f;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f040020;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f040021;
    /**
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int adjustable=0x7f040022;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f040023;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f040024;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f040025;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f040026;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAbove=0x7f040027;
    /**
     * Whether a divider is allowed to draw after the last item
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAfterLastItem=0x7f040028;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerBelow=0x7f040029;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f04002a;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f04002b;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f04002c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int animation=0x7f04002d;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int animationDuration=0x7f04002e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int apnPreferenceStyle=0x7f04002f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int applyColorAccent=0x7f040030;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f040031;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f040032;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int aspectRatio=0x7f040033;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f040034;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f040035;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f040036;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f040037;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f040038;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f040039;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f04003a;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f04003b;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f04003c;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f04003d;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f04003e;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f04003f;
    /**
     * Color of predicted future use part of chart.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int barPredictionColor=0x7f040040;
    /**
     * Primary color of chart.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int barPrimaryColor=0x7f040041;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderDrawable=0x7f040042;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f040043;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomLabels=0x7f040044;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f040045;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f040046;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f040047;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f040048;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f040049;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f04004a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f04004b;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f04004c;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f04004d;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f04004e;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f04004f;
    /**
     * Background color for CardView.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int cardBackgroundColor=0x7f040050;
    /**
     * Corner radius for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardCornerRadius=0x7f040051;
    /**
     * Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardElevation=0x7f040052;
    /**
     * Maximum Elevation for CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cardMaxElevation=0x7f040053;
    /**
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardPreventCornerOverlap=0x7f040054;
    /**
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int cardUseCompatPadding=0x7f040055;
    /**
     * Minimum height of the chart itself.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int chartMinHeight=0x7f040056;
    /**
     * Default style for CheckBoxPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkBoxPreferenceStyle=0x7f040057;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f040058;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f040059;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f04005a;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f04005b;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f04005c;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f04005d;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f04005e;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f04005f;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f040060;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f040061;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f040062;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f040063;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f040064;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f040065;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f040066;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f040067;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f040068;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f040069;
    /**
     * Confirm device credentials screen
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int confirmDeviceCredentialsSideMargin=0x7f04006a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int confirmDeviceCredentialsTopMargin=0x7f04006b;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f04006c;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f04006d;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f04006e;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f04006f;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f040070;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f040071;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f040072;
    /**
     * Inner padding between the edges of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPadding=0x7f040073;
    /**
     * Inner padding between the bottom edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingBottom=0x7f040074;
    /**
     * Inner padding between the left edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingLeft=0x7f040075;
    /**
     * Inner padding between the right edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingRight=0x7f040076;
    /**
     * Inner padding between the top edge of the Card and children of the CardView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentPaddingTop=0x7f040077;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f040078;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int currentPageIndicatorColor=0x7f040079;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f04007a;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f04007b;
    /**
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int defaultValue=0x7f04007c;
    /**
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dependency=0x7f04007d;
    /**
     * The icon for the dialog.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogIcon=0x7f04007e;
    /**
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogLayout=0x7f04007f;
    /**
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessage=0x7f040080;
    /**
     * Default style for DialogPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogPreferenceStyle=0x7f040081;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f040082;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f040083;
    /**
     * The title in the dialog.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogTitle=0x7f040084;
    /**
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableDependentsState=0x7f040085;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f040086;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f040087;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f040088;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f040089;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f04008a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dotDiameter=0x7f04008b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dotGap=0x7f04008c;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f04008d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f04008e;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f04008f;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f040090;
    /**
     * Default style for DropDownPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropdownPreferenceStyle=0x7f040091;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f040092;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f040093;
    /**
     * Default style for EditTextPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextPreferenceStyle=0x7f040094;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f040095;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f040096;
    /**
     * Background color
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int emptyColor=0x7f040097;
    /**
     * Whether the Preference is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enabled=0x7f040098;
    /**
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f040099;
    /**
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entryValues=0x7f04009a;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f04009b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f04009c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f04009d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f04009e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f04009f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f0400a0;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fillColor=0x7f0400a1;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fillColorSecondary=0x7f0400a2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fingerprint_layout_theme=0x7f0400a3;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int followAxis=0x7f0400a4;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f0400a5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int footerPreferenceStyle=0x7f0400a6;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int forWork=0x7f0400a7;
    /**
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fragment=0x7f0400a8;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f0400a9;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f0400aa;
    /**
     * Text color, typeface, size, and style of header.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int headerAppearance=0x7f0400ab;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f0400ac;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f0400ad;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f0400ae;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f0400af;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ic_menu_moreoverflow=0x7f0400b0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ic_wps=0x7f0400b1;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f0400b2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconBackgroundColor=0x7f0400b3;
    /**
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconSpaceReserved=0x7f0400b4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int iconText=0x7f0400b5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTextColor=0x7f0400b6;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f0400b7;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f0400b8;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f0400b9;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f0400ba;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int incoming=0x7f0400bb;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f0400bc;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f0400bd;
    /**
     * Specifies whether the theme is light, otherwise it is dark.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f0400be;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f0400bf;
    /**
     * The key to store the Preference value.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f0400c0;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int keywords=0x7f0400c1;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int labelColor=0x7f0400c2;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int labelSize=0x7f0400c3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int labelTemplate=0x7f0400c4;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f0400c5;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extend android.support.v7.widget.RecyclerView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package name (android.support.v7.widget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f0400c6;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f0400c7;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f0400c8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f0400c9;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f0400ca;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f0400cb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f0400cc;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f0400cd;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f0400ce;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f0400cf;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f0400d0;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f0400d1;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f0400d2;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f0400d3;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f0400d4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxHeight=0x7f0400d5;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxWidth=0x7f0400d6;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f0400d7;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int messageText=0x7f0400d8;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int meterBackgroundColor=0x7f0400d9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int meterConsumedColor=0x7f0400da;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int min=0x7f0400db;
    /**
     * Minimum tick width for each slice in the bar chart.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int minTickWidth=0x7f0400dc;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f0400dd;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f0400de;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f0400df;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f0400e0;
    /**
     * The negative button text for the dialog. Set to @null to hide the negative button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int negativeButtonText=0x7f0400e1;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int neighborMargin=0x7f0400e2;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f0400e3;
    /**
     * optimal width of the chart
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int optimalWidth=0x7f0400e4;
    /**
     * how to weight extra space beyond optimal width
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int optimalWidthWeight=0x7f0400e5;
    /**
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int order=0x7f0400e6;
    /**
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int orderingFromXml=0x7f0400e7;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f0400e8;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f0400e9;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f0400ea;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f0400eb;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f0400ec;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int pageIndicatorColor=0x7f0400ed;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f0400ee;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f0400ef;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f0400f0;
    /**
     * Whether the Preference stores its value to the shared preferences.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int persistent=0x7f0400f1;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f0400f2;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f0400f3;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f0400f4;
    /**
     * The positive button text for the dialog. Set to @null to hide the positive button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int positiveButtonText=0x7f0400f5;
    /**
     * Default style for the PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceActivityStyle=0x7f0400f6;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int preferenceBackgroundColor=0x7f0400f7;
    /**
     * Default style for PreferenceCategory.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryStyle=0x7f0400f8;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentCompatStyle=0x7f0400f9;
    /**
     * Preference fragment list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentListStyle=0x7f0400fa;
    /**
     * Preference fragment padding side
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int preferenceFragmentPaddingSide=0x7f0400fb;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentStyle=0x7f0400fc;
    /**
     * Preference headers panel style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceHeaderPanelStyle=0x7f0400fd;
    /**
     * Default style for informational Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceInformationStyle=0x7f0400fe;
    /**
     * The preference layout that has the child/tabbed effect.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceLayoutChild=0x7f0400ff;
    /**
     * Preference list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceListStyle=0x7f040100;
    /**
     * Preference panel style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferencePanelStyle=0x7f040101;
    /**
     * Default style for PreferenceScreen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceScreenStyle=0x7f040102;
    /**
     * Default style for Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceStyle=0x7f040103;
    /**
     * Theme for inflating Preference objects
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceTheme=0x7f040104;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f040105;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preview=0x7f040106;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int primaryDrawable=0x7f040107;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f040108;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f040109;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f04010a;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f04010b;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f04010c;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f04010d;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f04010e;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f04010f;
    /**
     * This is used as summary for restricted switch preferences, default value is
     * @string/disabled_by_admin (Disabled by administrator).
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int restrictedSwitchSummary=0x7f040110;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f040111;
    /**
     * Default style for RingtonePreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ringtonePreferenceStyle=0x7f040112;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int safeRegion=0x7f040113;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f040114;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f040115;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f040116;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int secondaryDrawable=0x7f040117;
    /**
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int seekBarIncrement=0x7f040118;
    /**
     * Default style for seekbar preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarPreferenceStyle=0x7f040119;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f04011a;
    /**
     * Whether the Preference is selectable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectable=0x7f04011b;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f04011c;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f04011d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int setup_divider_color=0x7f04011e;
    /**
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldDisableView=0x7f04011f;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f040120;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f040121;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showPercentString=0x7f040122;
    /**
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is VISIBLE.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showSeekBarValue=0x7f040123;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f040124;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f040125;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sideLabels=0x7f040126;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int side_margin=0x7f040127;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f040128;
    /**
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLineTitle=0x7f040129;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f04012a;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f04012b;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f04012c;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f04012d;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f04012e;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f04012f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f040130;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f040131;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_encrypted=0x7f040132;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_metered=0x7f040133;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_saved=0x7f040134;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeColor=0x7f040135;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f040136;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f040137;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f040138;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f040139;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f04013a;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f04013b;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f04013c;
    /**
     * The summary for the Preference in a PreferenceActivity screen.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summary=0x7f04013d;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int summaryLineCount=0x7f04013e;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOff=0x7f04013f;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOn=0x7f040140;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int suwAspectRatio=0x7f040141;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwBackground=0x7f040142;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwBackgroundBaseColor=0x7f040143;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int suwBackgroundPatterned=0x7f040144;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwBackgroundTile=0x7f040145;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwCardBackground=0x7f040146;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int suwCollapsedSummary=0x7f040147;
    /**
     * Custom view attributes
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwColorPrimary=0x7f040148;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwContainer=0x7f040149;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDecorPaddingTop=0x7f04014a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>both</td><td>1</td><td></td></tr>
     * <tr><td>either</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int suwDividerCondition=0x7f04014b;
    /**
     * Deprecated. Use suwDividerInsetStart and suwDividerInsetEnd instead
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDividerInset=0x7f04014c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDividerInsetEnd=0x7f04014d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDividerInsetStart=0x7f04014e;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwDividerInsetStartNoIcon=0x7f04014f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int suwExpandedSummary=0x7f040150;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwFillContentLayoutStyle=0x7f040151;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwFooter=0x7f040152;
    /**
     * Subset of values in "gravity" in frameworks/base/core/res/res/values/attrs.xml. Only
     * horizontal values are listed here as the header does not support vertical gravity.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int suwGlifHeaderGravity=0x7f040153;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int suwHasStableIds=0x7f040154;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwHeader=0x7f040155;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwHeaderColor=0x7f040156;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int suwHeaderText=0x7f040157;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwIllustration=0x7f040158;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int suwIllustrationAspectRatio=0x7f040159;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwIllustrationHorizontalTile=0x7f04015a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwIllustrationImage=0x7f04015b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwItemDescriptionStyle=0x7f04015c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwItemDescriptionTitleStyle=0x7f04015d;
    /**
     * Theme attributes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwLayoutTheme=0x7f04015e;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwListItemIconColor=0x7f04015f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int suwMarginSides=0x7f040160;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwNavBarBackgroundColor=0x7f040161;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwNavBarButtonBackground=0x7f040162;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwNavBarTextColor=0x7f040163;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwNavBarTheme=0x7f040164;
    /**
     * Values copied from frameworks/base/core/res/res/values/attrs.xml
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>2</td><td>Displays bottom scroll indicator when vew can be scrolled down.</td></tr>
     * <tr><td>end</td><td>20</td><td>Displays right scroll indicator when vew can be scrolled in the
     * end direction.</td></tr>
     * <tr><td>left</td><td>4</td><td>Displays left scroll indicator when vew can be scrolled left.</td></tr>
     * <tr><td>none</td><td>0</td><td>No scroll indicators are displayed.</td></tr>
     * <tr><td>right</td><td>8</td><td>Displays right scroll indicator when vew can be scrolled right.</td></tr>
     * <tr><td>start</td><td>10</td><td>Displays right scroll indicator when vew can be scrolled in the
     * start direction.</td></tr>
     * <tr><td>top</td><td>1</td><td>Displays top scroll indicator when view can be scrolled up.</td></tr>
     * </table>
     */
    public static final int suwScrollIndicators=0x7f040165;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int suwStatusBarBackground=0x7f040166;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suwVideo=0x7f040167;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int sweepDrawable=0x7f040168;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int switchBarBackgroundColor=0x7f040169;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchBarMarginEnd=0x7f04016a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchBarMarginStart=0x7f04016b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchBarTheme=0x7f04016c;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f04016d;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f04016e;
    /**
     * Default style for switch compat preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceCompatStyle=0x7f04016f;
    /**
     * Default style for switch preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceStyle=0x7f040170;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f040171;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f040172;
    /**
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOff=0x7f040173;
    /**
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOn=0x7f040174;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f040175;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f040176;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f040177;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f040178;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f040179;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f04017a;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f04017b;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f04017c;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f04017d;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColor=0x7f04017e;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f04017f;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f040180;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f040181;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f040182;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f040183;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f040184;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f040185;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f040186;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f040187;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f040188;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int timestampText=0x7f040189;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f04018a;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f04018b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f04018c;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f04018d;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f04018e;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f04018f;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f040190;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f040191;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f040192;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f040193;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f040194;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f040195;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f040196;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f040197;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f040198;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f040199;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f04019a;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f04019b;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f04019c;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f04019d;
    /**
     * If true, an additional summary will be added in addition to the existing summary and
     * this will be used for enabled/disabled by admin strings leaving android.R.id.summary untouched.
     * As such when this is true, useAdminDisabledSummary will be overwritten to false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useAdditionalSummary=0x7f04019e;
    /**
     * If true then we can use enabled/disabled by admin strings for summary (android.R.id.summary).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useAdminDisabledSummary=0x7f04019f;
    /**
     * The user restriction on which the preference disabled by admin state will be based on.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int userRestriction=0x7f0401a0;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f0401a1;
    /**
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int widgetLayout=0x7f0401a2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int wifi_friction=0x7f0401a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int wifi_signal=0x7f0401a4;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int wifi_signal_color=0x7f0401a5;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f0401a6;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f0401a7;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f0401a8;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f0401a9;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f0401aa;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f0401ab;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f0401ac;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f0401ad;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f0401ae;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f0401af;
    /**
     * Default style for YesNoPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yesNoPreferenceStyle=0x7f0401b0;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f050000;
    /**
     * Whether to allow vertically stacked button bars. This is disabled for
     * configurations with a small (e.g. less than 320dp) screen height.
     */
    public static final int abc_allow_stacked_button_bar=0x7f050001;
    /**
     * Whether action menu items should be displayed in ALLCAPS or not.
     * Defaults to true. If this is not appropriate for specific locales
     * it should be disabled in that locale's resources.
     */
    public static final int abc_config_actionMenuItemAllCaps=0x7f050002;
    public static final int abc_config_closeDialogWhenTouchOutside=0x7f050003;
    public static final int abc_config_showMenuShortcutsWhenKeyboardPresent=0x7f050004;
    /**
     * Whether the bluetooth activation confirmation dialogs should be auto dismissed.
     * Can be overridden for specific product builds.
     */
    public static final int auto_confirm_bluetooth_activation_dialog=0x7f050005;
    /**
     * Display additional System Update menu if true
     */
    public static final int config_additional_system_update_setting_enable=0x7f050006;
    /**
     * Carrier_enabled editable
     * Carrier_enabled editable
     * Carrier_enabled editable
     * Carrier_enabled editable
     * Carrier_enabled editable
     * Carrier_enabled editable
     */
    public static final int config_allow_edit_carrier_enabled=0x7f050007;
    /**
     * Whether or not App & Notification screen should display recently used apps
     */
    public static final int config_display_recent_apps=0x7f050008;
    /**
     * When true enable color temperature setting.
     */
    public static final int config_enableColorTemperature=0x7f050009;
    /**
     * When true enable gesture setting.
     */
    public static final int config_gesture_settings_enabled=0x7f05000a;
    /**
     * Whether help links are defined.
     */
    public static final int config_has_help=0x7f05000b;
    /**
     * Whether none security option is hide or not  (country specific).
     * Whether none security option is hide or not  (country specific).
     */
    public static final int config_hide_none_security_option=0x7f05000c;
    /**
     * Whether swipe security option is hidden or not
     */
    public static final int config_hide_swipe_security_option=0x7f05000d;
    /**
     * If false, MIN is displayed. If true, MSID is displayed.
     */
    public static final int config_msid_enable=0x7f05000e;
    /**
     * Whether or not new device intro suggestion is supported for this device
     */
    public static final int config_new_device_intro_suggestion_supported=0x7f05000f;
    /**
     * Whether to show Camera HAL HDR+ switch in Developer Options
     */
    public static final int config_show_camera_hal_hdrplus=0x7f050010;
    /**
     * Whether to show Camera laser sensor switch in Developer Options
     */
    public static final int config_show_camera_laser_sensor=0x7f050011;
    /**
     * Whether to show a preference item for the manual in About phone
     */
    public static final int config_show_manual=0x7f050012;
    /**
     * Whether to show a preference item for mobile plan
     */
    public static final int config_show_mobile_plan=0x7f050013;
    /**
     * Whether to show a preference item for regulatory information in About phone
     */
    public static final int config_show_regulatory_info=0x7f050014;
    /**
     * Whether to show TelphonyMonitor switch in Developer Options
     */
    public static final int config_show_telephony_monitor=0x7f050015;
    /**
     * If the Storage Manager settings are enabled.
     */
    public static final int config_storage_manager_settings_enabled=0x7f050016;
    /**
     * If the support features are enabled.
     */
    public static final int config_support_enabled=0x7f050017;
    /**
     * Whether or not we should tint the icon color on setting pages.
     */
    public static final int config_tintSettingIcon=0x7f050018;
    /**
     * CryptKeeper allow rotation
     */
    public static final int crypt_keeper_allow_rotation=0x7f050019;
    /**
     * Whether there is a boot sounds checkbox
     */
    public static final int has_boot_sounds=0x7f05001a;
    /**
     * Whether or not the dock settings are to be displayed for this device when docked
     */
    public static final int has_dock_settings=0x7f05001b;
    /**
     * Whether the DEPRECATED power control widget is enabled for this
     * device. Should be overridden for specific product builds.
     */
    public static final int has_powercontrol_widget=0x7f05001c;
    /**
     * Whether there is a silent mode checkbox
     * Whether there is a silent mode checkbox
     */
    public static final int has_silent_mode=0x7f05001d;
    /**
     * Whether to use tablet layout
     * Whether to use tablet layout
     */
    public static final int suwUseTabletLayout=0x7f05001e;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f060000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f060001;
    public static final int abc_btn_colored_borderless_text_material=0x7f060002;
    public static final int abc_btn_colored_text_material=0x7f060003;
    public static final int abc_color_highlight_material=0x7f060004;
    public static final int abc_hint_foreground_material_dark=0x7f060005;
    public static final int abc_hint_foreground_material_light=0x7f060006;
    public static final int abc_input_method_navigation_guard=0x7f060007;
    public static final int abc_primary_text_disable_only_material_dark=0x7f060008;
    public static final int abc_primary_text_disable_only_material_light=0x7f060009;
    public static final int abc_primary_text_material_dark=0x7f06000a;
    public static final int abc_primary_text_material_light=0x7f06000b;
    public static final int abc_search_url_text=0x7f06000c;
    public static final int abc_search_url_text_normal=0x7f06000d;
    public static final int abc_search_url_text_pressed=0x7f06000e;
    public static final int abc_search_url_text_selected=0x7f06000f;
    public static final int abc_secondary_text_material_dark=0x7f060010;
    public static final int abc_secondary_text_material_light=0x7f060011;
    public static final int abc_tint_btn_checkable=0x7f060012;
    public static final int abc_tint_default=0x7f060013;
    public static final int abc_tint_edittext=0x7f060014;
    public static final int abc_tint_seek_thumb=0x7f060015;
    public static final int abc_tint_spinner=0x7f060016;
    public static final int abc_tint_switch_track=0x7f060017;
    public static final int accent_material_dark=0x7f060018;
    public static final int accent_material_light=0x7f060019;
    public static final int background_floating_material_dark=0x7f06001a;
    public static final int background_floating_material_light=0x7f06001b;
    public static final int background_material_dark=0x7f06001c;
    public static final int background_material_light=0x7f06001d;
    public static final int battery_icon_color_error=0x7f06001e;
    public static final int batterymeter_bolt_color=0x7f06001f;
    public static final int black=0x7f060020;
    public static final int blue=0x7f060021;
    public static final int bluetooth_dialog_text_color=0x7f060022;
    /**
     * White 50%
     */
    public static final int bright_foreground_disabled_material_dark=0x7f060023;
    /**
     * Black 50%
     */
    public static final int bright_foreground_disabled_material_light=0x7f060024;
    public static final int bright_foreground_inverse_material_dark=0x7f060025;
    public static final int bright_foreground_inverse_material_light=0x7f060026;
    public static final int bright_foreground_material_dark=0x7f060027;
    public static final int bright_foreground_material_light=0x7f060028;
    public static final int button_material_dark=0x7f060029;
    public static final int button_material_light=0x7f06002a;
    /**
     * Background color for dark CardView.
     */
    public static final int cardview_dark_background=0x7f06002b;
    /**
     * Background color for light CardView.
     */
    public static final int cardview_light_background=0x7f06002c;
    /**
     * Shadow color for the furthest pixels around CardView.
     */
    public static final int cardview_shadow_end_color=0x7f06002d;
    /**
     * Shadow color for the first pixels around CardView.
     */
    public static final int cardview_shadow_start_color=0x7f06002e;
    public static final int condition_card_background=0x7f06002f;
    public static final int confirm_device_credential_transparent_black=0x7f060030;
    public static final int conversation_background=0x7f060031;
    public static final int crypt_keeper_clock_am_pm=0x7f060032;
    public static final int crypt_keeper_clock_background=0x7f060033;
    public static final int crypt_keeper_clock_foreground=0x7f060034;
    public static final int crypt_keeper_password_background=0x7f060035;
    public static final int dark_mode_icon_color_dual_tone_background=0x7f060036;
    public static final int dark_mode_icon_color_dual_tone_fill=0x7f060037;
    public static final int dim_foreground_disabled_material_dark=0x7f060038;
    public static final int dim_foreground_disabled_material_light=0x7f060039;
    public static final int dim_foreground_material_dark=0x7f06003a;
    public static final int dim_foreground_material_light=0x7f06003b;
    public static final int disabled_text_color=0x7f06003c;
    public static final int divider_color=0x7f06003d;
    public static final int error_color_material=0x7f06003e;
    /**
     * The fallback color for tinting icons. Only used when colorControlNormal is unavailable
     */
    public static final int fallback_tintColor=0x7f06003f;
    public static final int fingerprint_indicator_background_activated=0x7f060040;
    public static final int fingerprint_indicator_background_resting=0x7f060041;
    public static final int fingerprint_message_color=0x7f060042;
    public static final int fingerprint_title_area_bg=0x7f060043;
    public static final int fingerprint_title_color=0x7f060044;
    public static final int foreground_material_dark=0x7f060045;
    public static final int foreground_material_light=0x7f060046;
    /**
     * Gestures settings
     */
    public static final int gestures_setting_background_color=0x7f060047;
    /**
     * TODO: This is 40% alpha on the default accent color.
     */
    public static final int highlighted_text_material_dark=0x7f060048;
    /**
     * TODO: This is 40% alpha on the default accent color.
     */
    public static final int highlighted_text_material_light=0x7f060049;
    /**
     * Accent color that matches the settings launcher icon
     */
    public static final int icon_accent=0x7f06004a;
    public static final int importance_disabled_slider_color=0x7f06004b;
    public static final int importance_disabled_tint=0x7f06004c;
    public static final int importance_icon_tint=0x7f06004d;
    public static final int importance_secondary_slider_color=0x7f06004e;
    public static final int light_mode_icon_color_dual_tone_background=0x7f06004f;
    public static final int light_mode_icon_color_dual_tone_fill=0x7f060050;
    public static final int lock_pattern_background=0x7f060051;
    public static final int lock_pattern_view_regular_color=0x7f060052;
    public static final int lock_pattern_view_regular_color_dark=0x7f060053;
    public static final int lock_pattern_view_success_color=0x7f060054;
    /**
     * Accessibility SUW colors
     */
    public static final int material_blue_500=0x7f060055;
    public static final int material_blue_700=0x7f060056;
    public static final int material_blue_grey_800=0x7f060057;
    public static final int material_blue_grey_900=0x7f060058;
    public static final int material_blue_grey_950=0x7f060059;
    public static final int material_deep_teal_200=0x7f06005a;
    public static final int material_deep_teal_500=0x7f06005b;
    public static final int material_empty_color_light=0x7f06005c;
    public static final int material_grey_100=0x7f06005d;
    public static final int material_grey_200=0x7f06005e;
    public static final int material_grey_300=0x7f06005f;
    public static final int material_grey_50=0x7f060060;
    public static final int material_grey_600=0x7f060061;
    public static final int material_grey_800=0x7f060062;
    public static final int material_grey_850=0x7f060063;
    public static final int material_grey_900=0x7f060064;
    public static final int memory_avg_use=0x7f060065;
    public static final int memory_critical=0x7f060066;
    public static final int memory_low=0x7f060067;
    public static final int memory_moderate=0x7f060068;
    public static final int memory_normal=0x7f060069;
    public static final int message_bubble_incoming=0x7f06006a;
    public static final int message_bubble_outgoing=0x7f06006b;
    public static final int message_icon_background_incoming=0x7f06006c;
    public static final int message_icon_background_outgoing=0x7f06006d;
    public static final int message_icon_text_incoming=0x7f06006e;
    public static final int message_icon_text_outgoing=0x7f06006f;
    public static final int message_text_incoming=0x7f060070;
    public static final int message_text_outgoing=0x7f060071;
    public static final int meter_background_color=0x7f060072;
    public static final int meter_consumed_color=0x7f060073;
    /**
     * Fallback color for versions of the system where ?android:attr/colorAccent is not available
     */
    public static final int preference_fallback_accent_color=0x7f060074;
    public static final int primary_dark_material_dark=0x7f060075;
    public static final int primary_dark_material_light=0x7f060076;
    public static final int primary_material_dark=0x7f060077;
    public static final int primary_material_light=0x7f060078;
    /**
     * 100% white
     */
    public static final int primary_text_default_material_dark=0x7f060079;
    /**
     * 87% black
     */
    public static final int primary_text_default_material_light=0x7f06007a;
    /**
     * 30% of default values
     */
    public static final int primary_text_disabled_material_dark=0x7f06007b;
    /**
     * 26% of default values
     */
    public static final int primary_text_disabled_material_light=0x7f06007c;
    public static final int red=0x7f06007d;
    /**
     * 20% white (foreground)
     */
    public static final int ripple_material_dark=0x7f06007e;
    /**
     * 12% black (foreground)
     */
    public static final int ripple_material_light=0x7f06007f;
    public static final int running_processes_free_ram=0x7f060080;
    public static final int running_processes_system_ram=0x7f060081;
    /**
     * 70% white
     */
    public static final int secondary_text_default_material_dark=0x7f060082;
    /**
     * 54% black
     */
    public static final int secondary_text_default_material_light=0x7f060083;
    public static final int secondary_text_disabled_material_dark=0x7f060084;
    public static final int secondary_text_disabled_material_light=0x7f060085;
    public static final int setup_divider_color_dark=0x7f060086;
    public static final int setup_divider_color_light=0x7f060087;
    public static final int setup_lock_pattern_view_error_color_dark=0x7f060088;
    public static final int setup_lock_pattern_view_regular_color_dark=0x7f060089;
    public static final int setup_lock_pattern_view_regular_color_light=0x7f06008a;
    public static final int setup_lock_pattern_view_success_color_dark=0x7f06008b;
    public static final int setup_lock_pattern_view_success_color_light=0x7f06008c;
    public static final int setup_wizard_wifi_color_dark=0x7f06008d;
    public static final int setup_wizard_wifi_color_light=0x7f06008e;
    /**
     * Color for the background of the shortcut icons.
     */
    public static final int shortcut_background=0x7f06008f;
    public static final int sim_noitification=0x7f060090;
    public static final int sliding_tab_title_text_color=0x7f060091;
    public static final int status_bar_color=0x7f060092;
    public static final int storage_wizard_button=0x7f060093;
    public static final int storage_wizard_button_red=0x7f060094;
    /**
     * Suggestion/condition colors
     */
    public static final int suggestion_condition_background=0x7f060095;
    /**
     * General colors
     */
    public static final int suw_color_accent_dark=0x7f060096;
    /**
     * GLIF colors
     */
    public static final int suw_color_accent_glif_dark=0x7f060097;
    public static final int suw_color_accent_glif_light=0x7f060098;
    public static final int suw_color_accent_light=0x7f060099;
    public static final int suw_flat_button_highlight=0x7f06009a;
    public static final int suw_glif_background_color_dark=0x7f06009b;
    public static final int suw_glif_background_color_light=0x7f06009c;
    public static final int suw_link_color_dark=0x7f06009d;
    public static final int suw_link_color_light=0x7f06009e;
    public static final int suw_list_item_icon_color_dark=0x7f06009f;
    public static final int suw_list_item_icon_color_light=0x7f0600a0;
    /**
     * Navigation bar colors
     */
    public static final int suw_navbar_bg_dark=0x7f0600a1;
    public static final int suw_navbar_bg_light=0x7f0600a2;
    public static final int suw_progress_bar_color_dark=0x7f0600a3;
    public static final int suw_progress_bar_color_light=0x7f0600a4;
    public static final int switch_thumb_disabled_material_dark=0x7f0600a5;
    public static final int switch_thumb_disabled_material_light=0x7f0600a6;
    public static final int switch_thumb_material_dark=0x7f0600a7;
    public static final int switch_thumb_material_light=0x7f0600a8;
    public static final int switch_thumb_normal_material_dark=0x7f0600a9;
    public static final int switch_thumb_normal_material_light=0x7f0600aa;
    public static final int timestamp_text_incoming=0x7f0600ab;
    public static final int timestamp_text_outgoing=0x7f0600ac;
    public static final int title_color=0x7f0600ad;
    /**
     * Tooltip specific colors
     */
    public static final int tooltip_background_dark=0x7f0600ae;
    public static final int tooltip_background_light=0x7f0600af;
    public static final int unlock_pattern_view_regular_color=0x7f0600b0;
    public static final int unlock_pattern_view_success_color=0x7f0600b1;
    public static final int usage_graph_dots=0x7f0600b2;
    public static final int voice_interaction_highlight=0x7f0600b3;
    public static final int white_disabled=0x7f0600b4;
    /**
     * Color for preference icons on the Wifi Network Details page
     */
    public static final int wifi_details_icon_color=0x7f0600b5;
    public static final int wifi_divider=0x7f0600b6;
  }
  public static final class dimen {
    /**
     * Default content inset of an action bar.
     * Default content inset of an action bar.
     */
    public static final int abc_action_bar_content_inset_material=0x7f070000;
    /**
     * Default content inset of an action bar with navigation.
     * Default content inset of an action bar with navigation.
     */
    public static final int abc_action_bar_content_inset_with_nav=0x7f070001;
    /**
     * Default height of an action bar.
     * Default height of an action bar.
     * Default height of an action bar.
     */
    public static final int abc_action_bar_default_height_material=0x7f070002;
    /**
     * Default end padding of an action bar.
     * Default end padding of an action bar.
     */
    public static final int abc_action_bar_default_padding_end_material=0x7f070003;
    /**
     * Default start padding of an action bar.
     * Default start padding of an action bar.
     */
    public static final int abc_action_bar_default_padding_start_material=0x7f070004;
    public static final int abc_action_bar_elevation_material=0x7f070005;
    /**
     * Vertical padding around action bar icons.
     */
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f070006;
    /**
     * Padding to add to the end of the overflow action button.
     */
    public static final int abc_action_bar_overflow_padding_end_material=0x7f070007;
    /**
     * Padding to add to the start of the overflow action button.
     */
    public static final int abc_action_bar_overflow_padding_start_material=0x7f070008;
    /**
     * Size of the indeterminate Progress Bar
     * Size of the indeterminate Progress Bar
     */
    public static final int abc_action_bar_progress_bar_size=0x7f070009;
    /**
     * Maximum height for a stacked tab bar as part of an action bar
     */
    public static final int abc_action_bar_stacked_max_height=0x7f07000a;
    /**
     * Maximum width for a stacked action bar tab. This prevents
     * action bar tabs from becoming too wide on a wide screen when only
     * a few are present.
     */
    public static final int abc_action_bar_stacked_tab_max_width=0x7f07000b;
    /**
     * Bottom margin for action bar subtitles
     */
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f07000c;
    /**
     * Top margin for action bar subtitles
     */
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f07000d;
    public static final int abc_action_button_min_height_material=0x7f07000e;
    public static final int abc_action_button_min_width_material=0x7f07000f;
    public static final int abc_action_button_min_width_overflow_material=0x7f070010;
    /**
     * Dialog button bar height
     * Dialog button bar height
     */
    public static final int abc_alert_dialog_button_bar_height=0x7f070011;
    public static final int abc_button_inset_horizontal_material=0x7f070012;
    public static final int abc_button_inset_vertical_material=0x7f070013;
    public static final int abc_button_padding_horizontal_material=0x7f070014;
    /**
     * Default inner padding within buttons
     */
    public static final int abc_button_padding_vertical_material=0x7f070015;
    /**
     * Minimum "smallest width" of the display for cascading menus to be enabled.
     */
    public static final int abc_cascading_menus_min_smallest_width=0x7f070016;
    /**
     * The maximum width we would prefer dialogs to be.  0 if there is no
     * maximum (let them grow as large as the screen).  Actual values are
     * specified for -large and -xlarge configurations.
     * see comment in values/config.xml
     * see comment in values/config.xml
     */
    public static final int abc_config_prefDialogWidth=0x7f070017;
    /**
     * Default rounded corner for controls
     */
    public static final int abc_control_corner_material=0x7f070018;
    /**
     * Default insets (outer padding) around controls
     */
    public static final int abc_control_inset_material=0x7f070019;
    /**
     * Default inner padding within controls
     */
    public static final int abc_control_padding_material=0x7f07001a;
    /**
     * The platform's desired fixed height for a dialog along the major axis
     * (the screen is in portrait). This may be either a fraction or a dimension.
     */
    public static final int abc_dialog_fixed_height_major=0x7f07001b;
    /**
     * The platform's desired fixed height for a dialog along the minor axis
     * (the screen is in landscape). This may be either a fraction or a dimension.
     */
    public static final int abc_dialog_fixed_height_minor=0x7f07001c;
    /**
     * The platform's desired fixed width for a dialog along the major axis
     * (the screen is in landscape). This may be either a fraction or a dimension.
     */
    public static final int abc_dialog_fixed_width_major=0x7f07001d;
    /**
     * The platform's desired fixed width for a dialog along the minor axis
     * (the screen is in portrait). This may be either a fraction or a dimension.
     */
    public static final int abc_dialog_fixed_width_minor=0x7f07001e;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f07001f;
    public static final int abc_dialog_list_padding_top_no_title=0x7f070020;
    /**
     * The platform's desired minimum size for a dialog's width when it
     * is along the major axis (that is the screen is landscape).  This may
     * be either a fraction or a dimension.
     */
    public static final int abc_dialog_min_width_major=0x7f070021;
    /**
     * The platform's desired minimum size for a dialog's width when it
     * is along the minor axis (that is the screen is portrait).  This may
     * be either a fraction or a dimension.
     */
    public static final int abc_dialog_min_width_minor=0x7f070022;
    public static final int abc_dialog_padding_material=0x7f070023;
    public static final int abc_dialog_padding_top_material=0x7f070024;
    public static final int abc_dialog_title_divider_material=0x7f070025;
    public static final int abc_disabled_alpha_material_dark=0x7f070026;
    public static final int abc_disabled_alpha_material_light=0x7f070027;
    /**
     * Width of the icon in a dropdown list
     */
    public static final int abc_dropdownitem_icon_width=0x7f070028;
    /**
     * Text padding for dropdown items
     */
    public static final int abc_dropdownitem_text_padding_left=0x7f070029;
    public static final int abc_dropdownitem_text_padding_right=0x7f07002a;
    public static final int abc_edit_text_inset_bottom_material=0x7f07002b;
    public static final int abc_edit_text_inset_horizontal_material=0x7f07002c;
    public static final int abc_edit_text_inset_top_material=0x7f07002d;
    public static final int abc_floating_window_z=0x7f07002e;
    /**
     * Default padding for list items. This should match the action bar
     * content inset so that ListActivity items line up correctly.
     */
    public static final int abc_list_item_padding_horizontal_material=0x7f07002f;
    public static final int abc_panel_menu_list_width=0x7f070030;
    public static final int abc_progress_bar_height_material=0x7f070031;
    public static final int abc_search_view_preferred_height=0x7f070032;
    /**
     * Preferred width of the search view.
     */
    public static final int abc_search_view_preferred_width=0x7f070033;
    public static final int abc_seekbar_track_background_height_material=0x7f070034;
    public static final int abc_seekbar_track_progress_height_material=0x7f070035;
    /**
     * Dialog padding minus control padding, used to fix alignment.
     */
    public static final int abc_select_dialog_padding_start_material=0x7f070036;
    /**
     * Since SwitchCompat can use optical insets on v18+, reset the manual padding
     */
    public static final int abc_switch_padding=0x7f070037;
    public static final int abc_text_size_body_1_material=0x7f070038;
    public static final int abc_text_size_body_2_material=0x7f070039;
    public static final int abc_text_size_button_material=0x7f07003a;
    public static final int abc_text_size_caption_material=0x7f07003b;
    public static final int abc_text_size_display_1_material=0x7f07003c;
    public static final int abc_text_size_display_2_material=0x7f07003d;
    public static final int abc_text_size_display_3_material=0x7f07003e;
    public static final int abc_text_size_display_4_material=0x7f07003f;
    public static final int abc_text_size_headline_material=0x7f070040;
    public static final int abc_text_size_large_material=0x7f070041;
    public static final int abc_text_size_medium_material=0x7f070042;
    public static final int abc_text_size_menu_header_material=0x7f070043;
    public static final int abc_text_size_menu_material=0x7f070044;
    public static final int abc_text_size_small_material=0x7f070045;
    public static final int abc_text_size_subhead_material=0x7f070046;
    /**
     * Use the default subtitle sizes on tablets.
     * Default text size for action bar subtitle.
     */
    public static final int abc_text_size_subtitle_material_toolbar=0x7f070047;
    public static final int abc_text_size_title_material=0x7f070048;
    /**
     * Use the default title sizes on tablets.
     * Default text size for action bar title.
     */
    public static final int abc_text_size_title_material_toolbar=0x7f070049;
    public static final int accessibility_button_preference_padding_top_bottom=0x7f07004a;
    /**
     * Accessibility Settings
     */
    public static final int accessibility_layout_margin_start_end=0x7f07004b;
    public static final int action_bar_switch_padding=0x7f07004c;
    /**
     * ActionBar contentInsetStart
     * ActionBar contentInsetStart
     * ActionBar contentInsetStart
     * ActionBar contentInsetStart
     */
    public static final int actionbar_contentInsetStart=0x7f07004d;
    /**
     * ActionBar height
     * ActionBar height
     * ActionBar height
     */
    public static final int actionbar_size=0x7f07004e;
    public static final int actionbar_subsettings_contentInsetStart=0x7f07004f;
    public static final int admin_details_dialog_icon_size=0x7f070050;
    public static final int admin_details_dialog_link_padding_top=0x7f070051;
    /**
     * Admin support contact details dialog.
     */
    public static final int admin_details_dialog_padding=0x7f070052;
    public static final int app_icon_size=0x7f070053;
    /**
     * The y translation to apply at the start in appear animations.
     */
    public static final int appear_y_translation_start=0x7f070054;
    public static final int appwidget_height=0x7f070055;
    public static final int appwidget_min_height=0x7f070056;
    public static final int appwidget_min_width=0x7f070057;
    public static final int appwidget_preview_height=0x7f070058;
    public static final int appwidget_preview_width=0x7f070059;
    public static final int appwidget_width=0x7f07005a;
    public static final int badge_size=0x7f07005b;
    public static final int battery_height=0x7f07005c;
    public static final int battery_history_chart_height=0x7f07005d;
    public static final int battery_meter_height=0x7f07005e;
    /**
     * Battery meter view size
     */
    public static final int battery_meter_width=0x7f07005f;
    public static final int battery_width=0x7f070060;
    public static final int bind_app_widget_dialog_checkbox_bottom_padding=0x7f070061;
    public static final int bluetooth_checkbox_padding=0x7f070062;
    /**
     * Bluetooth Preferences
     */
    public static final int bluetooth_dialog_padding=0x7f070063;
    public static final int bluetooth_dialog_padding_top=0x7f070064;
    public static final int bluetooth_pairing_edittext_padding=0x7f070065;
    public static final int bluetooth_pairing_padding=0x7f070066;
    public static final int bt_battery_padding=0x7f070067;
    /**
     * Default text size for caption preview samples. Uses dp rather than sp because captions are not scaled.
     */
    public static final int caption_preview_text_size=0x7f070068;
    public static final int captioning_preview_height=0x7f070069;
    /**
     * Inset shadow for RoundRectDrawableWithShadow. It is used to avoid gaps between the card
     * and the shadow.
     */
    public static final int cardview_compat_inset_shadow=0x7f07006a;
    /**
     * Elevation value to use for CardViews. Pre-L, it is equal to shadow size.
     */
    public static final int cardview_default_elevation=0x7f07006b;
    /**
     * Default radius for CardView corners.
     */
    public static final int cardview_default_radius=0x7f07006c;
    public static final int checkbox_layout_padding=0x7f07006d;
    /**
     * CheckBoxPreference
     */
    public static final int checkbox_widget_min_width=0x7f07006e;
    public static final int circle_avatar_size=0x7f07006f;
    /**
     * Color picker
     */
    public static final int color_swatch_size=0x7f070070;
    public static final int color_swatch_stroke_width=0x7f070071;
    public static final int confirm_credentials_layout_width=0x7f070072;
    public static final int confirm_credentials_security_method_margin=0x7f070073;
    public static final int confirm_credentials_side_margin=0x7f070074;
    public static final int confirm_credentials_top_margin=0x7f070075;
    public static final int confirm_credentials_top_padding=0x7f070076;
    public static final int content_margin_left=0x7f070077;
    public static final int conversation_bubble_width_snap=0x7f070078;
    public static final int conversation_message_contact_icon_text_size=0x7f070079;
    public static final int conversation_message_list_padding=0x7f07007a;
    public static final int conversation_message_text_size=0x7f07007b;
    public static final int conversation_status_text_size=0x7f07007c;
    public static final int crypt_clock_size=0x7f07007d;
    /**
     * CryptKeeper edit text ime icon padding
     */
    public static final int crypt_keeper_edit_text_ime_padding=0x7f07007e;
    /**
     * CryptKeeper emergency call button dimensions
     */
    public static final int crypt_keeper_emergency_call_space_above=0x7f07007f;
    /**
     * CryptKeeper top margin for password/pin screen
     * CryptKeeper top margin for password/pin screen
     * CryptKeeper top margin for password/pin screen
     */
    public static final int crypt_keeper_password_top_margin=0x7f070080;
    /**
     * CryptKeeper password/pin width
     * CryptKeeper password/pin width
     */
    public static final int crypt_keeper_password_width=0x7f070081;
    /**
     * CryptKeeper pattern margin on phone
     */
    public static final int crypt_keeper_pattern_margin=0x7f070082;
    /**
     * CryptKeeper separation between status and pattern
     */
    public static final int crypt_keeper_pattern_separator=0x7f070083;
    /**
     * CryptKeeper pattern size for tablet
     */
    public static final int crypt_keeper_pattern_size=0x7f070084;
    /**
     * CryptKeeper top margin for pattern screen
     * CryptKeeper top margin for pattern screen
     * CryptKeeper top margin for pattern screen
     */
    public static final int crypt_keeper_pattern_top_margin=0x7f070085;
    /**
     * Dashboard category panel elevation
     */
    public static final int dashboard_category_elevation=0x7f070086;
    public static final int dashboard_category_padding_end=0x7f070087;
    /**
     * Dashboard category padding start / end
     * Dashboard category padding start / end
     */
    public static final int dashboard_category_padding_start=0x7f070088;
    /**
     * Dashboard margins between each tiles within the layout
     */
    public static final int dashboard_cell_gap_x=0x7f070089;
    public static final int dashboard_cell_gap_y=0x7f07008a;
    public static final int dashboard_padding_bottom=0x7f07008b;
    public static final int dashboard_padding_end=0x7f07008c;
    /**
     * Dashboard padding in its container
     * Dashboard padding in its container
     * Dashboard padding in its container
     */
    public static final int dashboard_padding_start=0x7f07008d;
    public static final int dashboard_padding_top=0x7f07008e;
    /**
     * Dashboard tile image margin start / end
     */
    public static final int dashboard_tile_image_margin=0x7f07008f;
    /**
     * Dashboard image tile size
     */
    public static final int dashboard_tile_image_size=0x7f070090;
    /**
     * Dashboard tile minimum height
     */
    public static final int dashboard_tile_minimum_height=0x7f070091;
    public static final int data_usage_chart_height=0x7f070092;
    public static final int data_usage_chart_optimalWidth=0x7f070093;
    public static final int datetime_margin_bottom=0x7f070094;
    public static final int datetime_margin_top=0x7f070095;
    public static final int delete_profile_dialog_padding_left_right=0x7f070096;
    /**
     * Delete managed profile dialog
     */
    public static final int delete_profile_dialog_padding_top=0x7f070097;
    public static final int description_margin_sides=0x7f070098;
    public static final int description_margin_top=0x7f070099;
    public static final int device_memory_usage_button_height=0x7f07009a;
    public static final int device_memory_usage_button_width=0x7f07009b;
    public static final int disabled_alpha_material_dark=0x7f07009c;
    public static final int disabled_alpha_material_light=0x7f07009d;
    /**
     * The translation for disappearing security views after having solved them.
     */
    public static final int disappear_y_translation=0x7f07009e;
    public static final int divider_height=0x7f07009f;
    public static final int divider_margin_bottom=0x7f0700a0;
    public static final int divider_margin_top=0x7f0700a1;
    public static final int fastscroll_default_thickness=0x7f0700a2;
    public static final int fastscroll_margin=0x7f0700a3;
    public static final int fastscroll_minimum_range=0x7f0700a4;
    public static final int fingerprint_animation_size=0x7f0700a5;
    public static final int fingerprint_decor_padding_top=0x7f0700a6;
    /**
     * Fingerprint
     */
    public static final int fingerprint_dot_radius=0x7f0700a7;
    public static final int fingerprint_enrolling_content_margin_vertical=0x7f0700a8;
    public static final int fingerprint_error_text_appear_distance=0x7f0700a9;
    public static final int fingerprint_error_text_disappear_distance=0x7f0700aa;
    public static final int fingerprint_find_sensor_graphic_size=0x7f0700ab;
    /**
     * To be the same size as fingerprint progress bar:
     * fingerprint_finish_max_size = fingerprint_progress_bar_max_size
     * + (fingerprint_enrolling_content_margin_vertical x 2)
     */
    public static final int fingerprint_finish_max_size=0x7f0700ac;
    /**
     * Fingerprint
     */
    public static final int fingerprint_illustration_aspect_ratio=0x7f0700ad;
    public static final int fingerprint_progress_bar_max_size=0x7f0700ae;
    public static final int fingerprint_progress_bar_min_size=0x7f0700af;
    public static final int fingerprint_pulse_radius=0x7f0700b0;
    /**
     * Gestures
     */
    public static final int gesture_animation_padding=0x7f0700b1;
    public static final int gestures_play_button_size=0x7f0700b2;
    /**
     * Padding for Gestures settings screen
     */
    public static final int gestures_settings_padding_top_bottom=0x7f0700b3;
    /**
     * Size of icons in the top-level of settings
     */
    public static final int header_icon_width=0x7f0700b4;
    public static final int highlight_alpha_material_colored=0x7f0700b5;
    public static final int highlight_alpha_material_dark=0x7f0700b6;
    public static final int highlight_alpha_material_light=0x7f0700b7;
    public static final int hint_alpha_material_dark=0x7f0700b8;
    public static final int hint_alpha_material_light=0x7f0700b9;
    public static final int hint_pressed_alpha_material_dark=0x7f0700ba;
    public static final int hint_pressed_alpha_material_light=0x7f0700bb;
    public static final int installed_app_details_bullet_offset=0x7f0700bc;
    /**
     * The max amount of scroll ItemTouchHelper will trigger if dragged view is out of
     * RecyclerView's bounds.
     */
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f0700bd;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f0700be;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f0700bf;
    public static final int keyguard_appwidget_picker_margin_left=0x7f0700c0;
    public static final int keyguard_appwidget_picker_margin_right=0x7f0700c1;
    public static final int keyguard_appwidget_picker_width=0x7f0700c2;
    public static final int match_parent=0x7f0700c3;
    public static final int mdm_app_icon_width_height=0x7f0700c4;
    public static final int mdm_app_info_height=0x7f0700c5;
    public static final int mdm_app_info_padding_top_bottom=0x7f0700c6;
    public static final int mdm_app_name_padding_left=0x7f0700c7;
    public static final int message_bubble_arrow_width=0x7f0700c8;
    public static final int message_metadata_top_padding=0x7f0700c9;
    public static final int message_padding_default=0x7f0700ca;
    public static final int message_text_bottom_padding=0x7f0700cb;
    public static final int message_text_left_right_padding=0x7f0700cc;
    public static final int message_text_top_padding=0x7f0700cd;
    public static final int min_tap_target_size=0x7f0700ce;
    public static final int notification_app_icon_badge_margin=0x7f0700cf;
    public static final int notification_app_icon_badge_size=0x7f0700d0;
    public static final int notification_app_icon_size=0x7f0700d1;
    public static final int pager_tabs_padding=0x7f0700d2;
    public static final int pager_tabs_selected_indicator_height=0x7f0700d3;
    public static final int pager_tabs_title_padding=0x7f0700d4;
    public static final int password_requirement_textsize=0x7f0700d5;
    /**
     * Minimum space to allocate to the left of a preference item for an icon.
     * This helps in aligning titles when some items have icons and some don't. When space is
     * at a premium, we don't pre-allocate any space.
     */
    public static final int preference_icon_minWidth=0x7f0700d6;
    public static final int preference_no_icon_padding_start=0x7f0700d7;
    /**
     * The padding to the right of the seekbar view within a SeekBarPreference
     */
    public static final int preference_seekbar_padding_end=0x7f0700d8;
    /**
     * The padding to the left of the seekbar view within a SeekBarPreference
     */
    public static final int preference_seekbar_padding_start=0x7f0700d9;
    /**
     * The width of the TextView indicating the current value of the SeekBarPreference
     */
    public static final int preference_seekbar_value_width=0x7f0700da;
    /**
     * Display Size and Font Size preview screen
     */
    public static final int preview_pager_padding=0x7f0700db;
    /**
     * Padding between the radio buttons/checkbox and text on the redaction interstitial
     */
    public static final int redaction_padding_start=0x7f0700dc;
    /**
     * RedactionInterstitial
     * RedactionInterstitial
     */
    public static final int redaction_vertical_margins=0x7f0700dd;
    /**
     * Restricted icon in switch bar
     */
    public static final int restricted_icon_margin_end=0x7f0700de;
    public static final int restricted_icon_padding=0x7f0700df;
    /**
     * Lock icon for preferences locked by admin
     */
    public static final int restricted_icon_size=0x7f0700e0;
    public static final int ring_progress_bar_thickness=0x7f0700e1;
    public static final int screen_magnification_video_background_height=0x7f0700e2;
    /**
     * Accessibility, Screen magnification. These values are meant to be relative values and the actual layout value will be set programmatically.
     */
    public static final int screen_magnification_video_background_width=0x7f0700e3;
    public static final int screen_magnification_video_height=0x7f0700e4;
    public static final int screen_magnification_video_margin_top=0x7f0700e5;
    public static final int screen_magnification_video_width=0x7f0700e6;
    public static final int screen_margin_bottom=0x7f0700e7;
    public static final int screen_margin_sides=0x7f0700e8;
    public static final int screen_margin_top=0x7f0700e9;
    /**
     * Screen pinning textview paddings
     */
    public static final int screen_pinning_textview_padding=0x7f0700ea;
    /**
     * Display, Screen zoom
     */
    public static final int screen_zoom_preview_app_icon_width=0x7f0700eb;
    /**
     * Display, Screen zoom
     */
    public static final int screen_zoom_preview_height=0x7f0700ec;
    public static final int search_bar_height=0x7f0700ed;
    /**
     * The following two margins need to match, with the caveat that
     * the second should be negative. The second one ensures that the icons and text
     * align despite the additional padding caused by the search bar's card background.
     */
    public static final int search_bar_margin=0x7f0700ee;
    public static final int search_bar_negative_margin=0x7f0700ef;
    public static final int search_bar_text_size=0x7f0700f0;
    public static final int settings_side_margin=0x7f0700f1;
    public static final int shortcut_icon_size=0x7f0700f2;
    public static final int shortcut_size=0x7f0700f3;
    /**
     * Launcher Icons
     */
    public static final int shortcut_size_maskable=0x7f0700f4;
    public static final int sim_content_padding=0x7f0700f5;
    /**
     * SIM Dialog Margin bottom
     */
    public static final int sim_dialog_margin_bottom=0x7f0700f6;
    /**
     * SIM Dialog Margin top
     */
    public static final int sim_dialog_margin_top=0x7f0700f7;
    /**
     * SIM Dialog padding
     */
    public static final int sim_dialog_padding=0x7f0700f8;
    public static final int sim_label_padding=0x7f0700f9;
    /**
     * The width of the storage summary donut
     */
    public static final int storage_donut_thickness=0x7f0700fa;
    /**
     * Text size of the label text in the donut.
     */
    public static final int storage_donut_view_label_text_size=0x7f0700fb;
    /**
     * Text size of the big number in the donut.
     */
    public static final int storage_donut_view_percent_text_size=0x7f0700fc;
    /**
     * Text size of the label text in the donut if the label text is long.
     */
    public static final int storage_donut_view_shrunken_label_text_size=0x7f0700fd;
    /**
     * Padding between the donut and the storage summary.
     */
    public static final int storage_summary_padding_end=0x7f0700fe;
    /**
     * Suggestion/condition header padding
     */
    public static final int suggestion_condition_header_padding_collapsed=0x7f0700ff;
    public static final int suggestion_condition_header_padding_expanded=0x7f070100;
    public static final int support_escalation_card_padding_end=0x7f070101;
    /**
     * Padding for the escalation card in normal dimens
     */
    public static final int support_escalation_card_padding_start=0x7f070102;
    /**
     * support spacer layout height
     */
    public static final int support_spacer_height=0x7f070103;
    /**
     * Support tile minimum height
     */
    public static final int support_tile_min_height=0x7f070104;
    /**
     * Card layout (for tablets)
     */
    public static final int suw_card_corner_radius=0x7f070105;
    public static final int suw_card_elevation=0x7f070106;
    public static final int suw_card_land_header_text_margin_top=0x7f070107;
    public static final int suw_card_port_margin_sides=0x7f070108;
    public static final int suw_card_title_padding_bottom=0x7f070109;
    /**
     * Card layout (for tablets)
     */
    public static final int suw_card_title_padding_end=0x7f07010a;
    public static final int suw_card_title_padding_start=0x7f07010b;
    public static final int suw_card_title_padding_top=0x7f07010c;
    /**
     * Content styles
     */
    public static final int suw_check_box_line_spacing_extra=0x7f07010d;
    public static final int suw_check_box_margin_bottom=0x7f07010e;
    public static final int suw_check_box_margin_start=0x7f07010f;
    public static final int suw_check_box_margin_top=0x7f070110;
    public static final int suw_check_box_padding_start=0x7f070111;
    public static final int suw_content_frame_padding_bottom=0x7f070112;
    public static final int suw_content_frame_padding_top=0x7f070113;
    public static final int suw_content_illustration_max_height=0x7f070114;
    public static final int suw_content_illustration_max_width=0x7f070115;
    public static final int suw_content_illustration_min_height=0x7f070116;
    public static final int suw_content_illustration_min_width=0x7f070117;
    public static final int suw_content_illustration_padding_vertical=0x7f070118;
    /**
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     * Decor view (illustration or the header without illustration)
     */
    public static final int suw_decor_padding_top=0x7f070119;
    public static final int suw_description_glif_margin_bottom_lists=0x7f07011a;
    public static final int suw_description_glif_margin_top=0x7f07011b;
    public static final int suw_description_line_spacing_extra=0x7f07011c;
    public static final int suw_description_margin_bottom=0x7f07011d;
    public static final int suw_description_margin_bottom_lists=0x7f07011e;
    public static final int suw_description_margin_top=0x7f07011f;
    public static final int suw_description_text_size=0x7f070120;
    /**
     * ExpandableSwithItem
     */
    public static final int suw_expand_arrow_drawable_padding=0x7f070121;
    /**
     * Calculated by (suw_glif_margin_sides - 4dp internal padding of button)
     * Calculated by (suw_glif_margin_sides - 4dp internal padding of button)
     */
    public static final int suw_glif_button_margin_end=0x7f070122;
    /**
     * Calculated by (suw_glif_margin_sides - suw_glif_button_padding)
     * Calculated by (suw_glif_margin_sides - suw_glif_button_padding)
     */
    public static final int suw_glif_button_margin_start=0x7f070123;
    public static final int suw_glif_button_padding=0x7f070124;
    /**
     * GLIF card layout (for tablets)
     */
    public static final int suw_glif_card_elevation=0x7f070125;
    public static final int suw_glif_card_height=0x7f070126;
    /**
     * GLIF card layout (for tablets)
     */
    public static final int suw_glif_card_width=0x7f070127;
    public static final int suw_glif_footer_min_height=0x7f070128;
    public static final int suw_glif_footer_padding_vertical=0x7f070129;
    public static final int suw_glif_header_title_margin_bottom=0x7f07012a;
    public static final int suw_glif_header_title_margin_top=0x7f07012b;
    public static final int suw_glif_icon_max_height=0x7f07012c;
    public static final int suw_glif_margin_sides=0x7f07012d;
    public static final int suw_glif_margin_top=0x7f07012e;
    public static final int suw_glif_progress_bar_margin_vertical=0x7f07012f;
    /**
     * Hack to force the header (and its shadow) to be drawn on top of the list contents
     */
    public static final int suw_header_elevation_hack=0x7f070130;
    /**
     * This is the extra spacing required to make the leading exactly 32sp
     */
    public static final int suw_header_title_line_spacing_extra=0x7f070131;
    public static final int suw_header_title_margin_bottom=0x7f070132;
    public static final int suw_header_title_padding_bottom=0x7f070133;
    public static final int suw_header_title_padding_top=0x7f070134;
    public static final int suw_header_title_size=0x7f070135;
    /**
     * Illustration
     * Illustration
     * Illustration
     */
    public static final int suw_illustration_aspect_ratio=0x7f070136;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_items_glif_icon_divider_inset=0x7f070137;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_items_glif_text_divider_inset=0x7f070138;
    /**
     * Items
     */
    public static final int suw_items_icon_container_width=0x7f070139;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_items_icon_divider_inset=0x7f07013a;
    /**
     * Extra padding in the bottom to compensate for difference between descent and (top) internal leading
     */
    public static final int suw_items_padding_bottom_extra=0x7f07013b;
    public static final int suw_items_padding_vertical=0x7f07013c;
    public static final int suw_items_preferred_height=0x7f07013d;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_items_text_divider_inset=0x7f07013e;
    public static final int suw_items_verbose_padding_bottom_extra=0x7f07013f;
    public static final int suw_items_verbose_padding_vertical=0x7f070140;
    /**
     * General
     */
    public static final int suw_layout_margin_sides=0x7f070141;
    /**
     * TODO: Move this dimen to gingerbread, or see if it should be in platform style as well
     */
    public static final int suw_navbar_button_drawable_padding=0x7f070142;
    public static final int suw_navbar_button_padding_sides=0x7f070143;
    public static final int suw_navbar_height=0x7f070144;
    public static final int suw_navbar_ic_intrinsic_size=0x7f070145;
    public static final int suw_navbar_padding_sides=0x7f070146;
    public static final int suw_navbar_text_size=0x7f070147;
    /**
     * The margin to compensate for the padding built-in to the widget itself
     */
    public static final int suw_progress_bar_margin_vertical=0x7f070148;
    public static final int suw_radio_button_line_spacing_extra=0x7f070149;
    public static final int suw_radio_button_margin_bottom=0x7f07014a;
    /**
     * Margin on the start to offset for margin in the drawable
     */
    public static final int suw_radio_button_margin_start=0x7f07014b;
    public static final int suw_radio_button_margin_top=0x7f07014c;
    public static final int suw_radio_button_padding_start=0x7f07014d;
    public static final int suw_switch_content_padding_end=0x7f07014e;
    public static final int suw_switch_divider_height=0x7f07014f;
    public static final int suw_switch_divider_padding_top=0x7f070150;
    public static final int suw_switch_padding_end=0x7f070151;
    /**
     * SwitchItem
     */
    public static final int suw_switch_padding_start=0x7f070152;
    public static final int suw_switch_padding_top=0x7f070153;
    /**
     * Header layout (for phones)
     */
    public static final int suw_title_area_elevation=0x7f070154;
    public static final int switchbar_margin_end=0x7f070155;
    /**
     * SwitchBar margin start / end
     * SwitchBar margin start / end
     */
    public static final int switchbar_margin_start=0x7f070156;
    public static final int switchbar_subsettings_margin_end=0x7f070157;
    /**
     * SwitchBar sub settings margin start / end
     * SwitchBar sub settings margin start / end
     * SwitchBar sub settings margin start / end
     */
    public static final int switchbar_subsettings_margin_start=0x7f070158;
    /**
     * Border corner radius of the tooltip window.
     */
    public static final int tooltip_corner_radius=0x7f070159;
    /**
     * Left/right padding of the tooltip text.
     */
    public static final int tooltip_horizontal_padding=0x7f07015a;
    /**
     * The tooltip does not get closer than this to the window edge
     */
    public static final int tooltip_margin=0x7f07015b;
    /**
     * Extra tooltip offset used when anchoring to the mouse/touch position
     */
    public static final int tooltip_precise_anchor_extra_offset=0x7f07015c;
    /**
     * View with the height equal or above this threshold will have a tooltip anchored
     * to the mouse/touch position
     */
    public static final int tooltip_precise_anchor_threshold=0x7f07015d;
    /**
     * Top/bottom padding of the tooltip text.
     */
    public static final int tooltip_vertical_padding=0x7f07015e;
    /**
     * Vertical offset from the edge of the anchor view for a non-touch-triggered tooltip.
     */
    public static final int tooltip_y_offset_non_touch=0x7f07015f;
    /**
     * Vertical offset from the edge of the anchor view for a touch-triggered tooltip.
     */
    public static final int tooltip_y_offset_touch=0x7f070160;
    /**
     * Button bar padding for unmount button.
     */
    public static final int unmount_button_padding=0x7f070161;
    /**
     * Minimum width for the popup for updating a user's photo.
     */
    public static final int update_user_photo_popup_min_width=0x7f070162;
    /**
     * Usage graph dimens
     */
    public static final int usage_graph_area_height=0x7f070163;
    public static final int usage_graph_divider_size=0x7f070164;
    public static final int usage_graph_dot_interval=0x7f070165;
    public static final int usage_graph_dot_size=0x7f070166;
    public static final int usage_graph_labels_padding=0x7f070167;
    public static final int usage_graph_labels_width=0x7f070168;
    public static final int usage_graph_line_corner_radius=0x7f070169;
    public static final int usage_graph_line_width=0x7f07016a;
    public static final int usage_graph_margin_top_bottom=0x7f07016b;
    /**
     * Height of a user icon view
     */
    public static final int user_icon_view_height=0x7f07016c;
    /**
     * User spinner
     */
    public static final int user_spinner_height=0x7f07016d;
    public static final int user_spinner_item_height=0x7f07016e;
    public static final int user_spinner_padding=0x7f07016f;
    public static final int user_spinner_padding_sides=0x7f070170;
    public static final int volume_seekbar_side_margin=0x7f070171;
    public static final int wifi_assistant_height=0x7f070172;
    public static final int wifi_assistant_image_start=0x7f070173;
    public static final int wifi_assistant_image_top=0x7f070174;
    public static final int wifi_assistant_padding=0x7f070175;
    public static final int wifi_assistant_padding_start_end=0x7f070176;
    /**
     * Dimensions for Wifi Assistant Card
     * Dimensions for Wifi Assistant Card
     * Dimensions for Wifi Assistant Card
     * Dimensions for Wifi Assistant Card
     */
    public static final int wifi_assistant_padding_top_bottom=0x7f070177;
    public static final int wifi_assistant_text_padding=0x7f070178;
    /**
     * WiFi Preferences
     */
    public static final int wifi_divider_height=0x7f070179;
    public static final int wifi_preference_badge_padding=0x7f07017a;
    public static final int zen_schedule_day_margin=0x7f07017b;
    public static final int zen_schedule_rule_checkbox_padding=0x7f07017c;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f080000;
    public static final int abc_action_bar_item_background_material=0x7f080001;
    public static final int abc_btn_borderless_material=0x7f080002;
    public static final int abc_btn_check_material=0x7f080003;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f080004;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f080005;
    public static final int abc_btn_colored_material=0x7f080006;
    public static final int abc_btn_default_mtrl_shape=0x7f080007;
    public static final int abc_btn_radio_material=0x7f080008;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f080009;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f08000a;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f08000b;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f08000c;
    public static final int abc_cab_background_internal_bg=0x7f08000d;
    public static final int abc_cab_background_top_material=0x7f08000e;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f08000f;
    public static final int abc_control_background_material=0x7f080010;
    public static final int abc_dialog_material_background=0x7f080011;
    public static final int abc_edit_text_material=0x7f080012;
    public static final int abc_ic_ab_back_material=0x7f080013;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f080014;
    public static final int abc_ic_clear_material=0x7f080015;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f080016;
    public static final int abc_ic_go_search_api_material=0x7f080017;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f080018;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f080019;
    public static final int abc_ic_menu_overflow_material=0x7f08001a;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f08001b;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f08001c;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f08001d;
    public static final int abc_ic_search_api_material=0x7f08001e;
    public static final int abc_ic_star_black_16dp=0x7f08001f;
    public static final int abc_ic_star_black_36dp=0x7f080020;
    public static final int abc_ic_star_black_48dp=0x7f080021;
    public static final int abc_ic_star_half_black_16dp=0x7f080022;
    public static final int abc_ic_star_half_black_36dp=0x7f080023;
    public static final int abc_ic_star_half_black_48dp=0x7f080024;
    public static final int abc_ic_voice_search_api_material=0x7f080025;
    public static final int abc_item_background_holo_dark=0x7f080026;
    public static final int abc_item_background_holo_light=0x7f080027;
    public static final int abc_list_divider_mtrl_alpha=0x7f080028;
    public static final int abc_list_focused_holo=0x7f080029;
    public static final int abc_list_longpressed_holo=0x7f08002a;
    public static final int abc_list_pressed_holo_dark=0x7f08002b;
    public static final int abc_list_pressed_holo_light=0x7f08002c;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f08002d;
    public static final int abc_list_selector_background_transition_holo_light=0x7f08002e;
    public static final int abc_list_selector_disabled_holo_dark=0x7f08002f;
    public static final int abc_list_selector_disabled_holo_light=0x7f080030;
    public static final int abc_list_selector_holo_dark=0x7f080031;
    public static final int abc_list_selector_holo_light=0x7f080032;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f080033;
    public static final int abc_popup_background_mtrl_mult=0x7f080034;
    public static final int abc_ratingbar_indicator_material=0x7f080035;
    public static final int abc_ratingbar_material=0x7f080036;
    public static final int abc_ratingbar_small_material=0x7f080037;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f080038;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f080039;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f08003a;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f08003b;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f08003c;
    public static final int abc_seekbar_thumb_material=0x7f08003d;
    public static final int abc_seekbar_tick_mark_material=0x7f08003e;
    public static final int abc_seekbar_track_material=0x7f08003f;
    public static final int abc_spinner_mtrl_am_alpha=0x7f080040;
    public static final int abc_spinner_textfield_background_material=0x7f080041;
    public static final int abc_switch_thumb_material=0x7f080042;
    public static final int abc_switch_track_mtrl_alpha=0x7f080043;
    public static final int abc_tab_indicator_material=0x7f080044;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f080045;
    public static final int abc_text_cursor_material=0x7f080046;
    public static final int abc_text_select_handle_left_mtrl_dark=0x7f080047;
    public static final int abc_text_select_handle_left_mtrl_light=0x7f080048;
    public static final int abc_text_select_handle_middle_mtrl_dark=0x7f080049;
    public static final int abc_text_select_handle_middle_mtrl_light=0x7f08004a;
    public static final int abc_text_select_handle_right_mtrl_dark=0x7f08004b;
    public static final int abc_text_select_handle_right_mtrl_light=0x7f08004c;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f08004d;
    public static final int abc_textfield_default_mtrl_alpha=0x7f08004e;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f08004f;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f080050;
    public static final int abc_textfield_search_material=0x7f080051;
    public static final int abc_vector_test=0x7f080052;
    public static final int accessibility_screen_magnification_background=0x7f080053;
    public static final int action_bar_dropshadow=0x7f080054;
    public static final int app_filter_spinner_background=0x7f080055;
    public static final int appwidget_bg_holo=0x7f080056;
    public static final int appwidget_button_center=0x7f080057;
    public static final int appwidget_button_left=0x7f080058;
    public static final int appwidget_button_right=0x7f080059;
    public static final int appwidget_inner_focused_c_holo=0x7f08005a;
    public static final int appwidget_inner_focused_l_holo=0x7f08005b;
    public static final int appwidget_inner_focused_r_holo=0x7f08005c;
    public static final int appwidget_inner_pressed_c_holo=0x7f08005d;
    public static final int appwidget_inner_pressed_l_holo=0x7f08005e;
    public static final int appwidget_inner_pressed_r_holo=0x7f08005f;
    public static final int appwidget_item_bg=0x7f080060;
    public static final int appwidget_item_bg_normal=0x7f080061;
    public static final int appwidget_item_bg_pressed=0x7f080062;
    public static final int appwidget_settings_divider_holo=0x7f080063;
    public static final int appwidget_settings_ind_mid_c_holo=0x7f080064;
    public static final int appwidget_settings_ind_mid_l_holo=0x7f080065;
    public static final int appwidget_settings_ind_mid_r_holo=0x7f080066;
    public static final int appwidget_settings_ind_off_c_holo=0x7f080067;
    public static final int appwidget_settings_ind_off_l_holo=0x7f080068;
    public static final int appwidget_settings_ind_off_r_holo=0x7f080069;
    public static final int appwidget_settings_ind_on_c_holo=0x7f08006a;
    public static final int appwidget_settings_ind_on_l_holo=0x7f08006b;
    public static final int appwidget_settings_ind_on_r_holo=0x7f08006c;
    public static final int bg_header_horizontal_tile=0x7f08006d;
    public static final int bg_internal_storage_header=0x7f08006e;
    public static final int bg_portable_storage_header=0x7f08006f;
    public static final int bg_setup_header=0x7f080070;
    public static final int bg_tile_teal=0x7f080071;
    public static final int caption_background=0x7f080072;
    public static final int conversation_message_icon=0x7f080073;
    public static final int data_grid_border=0x7f080074;
    public static final int data_sweep_limit=0x7f080075;
    public static final int data_sweep_warning=0x7f080076;
    public static final int data_usage_sweep_background=0x7f080077;
    public static final int default_preference_background=0x7f080078;
    public static final int dotted_line_480px=0x7f080079;
    public static final int drag_handle=0x7f08007a;
    public static final int empty_icon=0x7f08007b;
    public static final int empty_search_results=0x7f08007c;
    public static final int encroid_progress=0x7f08007d;
    public static final int encroid_resignin=0x7f08007e;
    public static final int encroid_waiting=0x7f08007f;
    public static final int enrollment_fingerprint_isolated=0x7f080080;
    public static final int enrollment_fingerprint_isolated_animation=0x7f080081;
    public static final int fallback_home_unprovisioned_background=0x7f080082;
    public static final int fingerprint_enroll_introduction=0x7f080083;
    public static final int fingerprint_sensor_location=0x7f080084;
    public static final int fp_app_indicator=0x7f080085;
    public static final int fp_enrollment_header=0x7f080086;
    public static final int fp_enrollment_header_landscape=0x7f080087;
    public static final int fp_illustration=0x7f080088;
    public static final int fp_illustration_enrollment=0x7f080089;
    public static final int gesture_ambient_lift=0x7f08008a;
    public static final int gesture_ambient_tap=0x7f08008b;
    public static final int gesture_assist=0x7f08008c;
    public static final int gesture_double_tap=0x7f08008d;
    public static final int gesture_fingerprint_swipe=0x7f08008e;
    public static final int gesture_twist=0x7f08008f;
    public static final int home=0x7f080090;
    public static final int ic_accessibility_suggestion=0x7f080091;
    public static final int ic_add=0x7f080092;
    public static final int ic_add_24dp=0x7f080093;
    public static final int ic_airplane=0x7f080094;
    public static final int ic_airplanemode_active=0x7f080095;
    public static final int ic_android=0x7f080096;
    public static final int ic_apps=0x7f080097;
    public static final int ic_appwidget_settings_bluetooth_off_holo=0x7f080098;
    public static final int ic_appwidget_settings_bluetooth_on_holo=0x7f080099;
    public static final int ic_appwidget_settings_brightness_auto_holo=0x7f08009a;
    public static final int ic_appwidget_settings_brightness_full_holo=0x7f08009b;
    public static final int ic_appwidget_settings_brightness_half_holo=0x7f08009c;
    public static final int ic_appwidget_settings_brightness_off_holo=0x7f08009d;
    public static final int ic_appwidget_settings_location_off_holo=0x7f08009e;
    public static final int ic_appwidget_settings_location_on_holo=0x7f08009f;
    public static final int ic_appwidget_settings_location_saving_holo=0x7f0800a0;
    public static final int ic_appwidget_settings_sync_off_holo=0x7f0800a1;
    public static final int ic_appwidget_settings_sync_on_holo=0x7f0800a2;
    public static final int ic_appwidget_settings_wifi_off_holo=0x7f0800a3;
    public static final int ic_appwidget_settings_wifi_on_holo=0x7f0800a4;
    public static final int ic_arrow_down_24dp=0x7f0800a5;
    public static final int ic_auto_wifi=0x7f0800a6;
    public static final int ic_battery_alert_24dp=0x7f0800a7;
    public static final int ic_battery_circle=0x7f0800a8;
    public static final int ic_bt_cellphone=0x7f0800a9;
    public static final int ic_bt_headphones_a2dp=0x7f0800aa;
    public static final int ic_bt_headset_hfp=0x7f0800ab;
    public static final int ic_bt_laptop=0x7f0800ac;
    public static final int ic_bt_misc_hid=0x7f0800ad;
    public static final int ic_bt_network_pan=0x7f0800ae;
    public static final int ic_bt_pointing_hid=0x7f0800af;
    public static final int ic_btn_next=0x7f0800b0;
    public static final int ic_call_24dp=0x7f0800b1;
    public static final int ic_cancel=0x7f0800b2;
    public static final int ic_cast_24dp=0x7f0800b3;
    public static final int ic_cellular_off=0x7f0800b4;
    public static final int ic_check_green_24dp=0x7f0800b5;
    public static final int ic_chevron_right_24dp=0x7f0800b6;
    public static final int ic_data_saver=0x7f0800b7;
    public static final int ic_delete=0x7f0800b8;
    public static final int ic_devices_other=0x7f0800b9;
    public static final int ic_eject_24dp=0x7f0800ba;
    public static final int ic_expand=0x7f0800bb;
    public static final int ic_expand_less=0x7f0800bc;
    public static final int ic_expand_more=0x7f0800bd;
    public static final int ic_expand_more_inverse=0x7f0800be;
    public static final int ic_find_device_disabled=0x7f0800bf;
    public static final int ic_find_device_enabled=0x7f0800c0;
    public static final int ic_fingerprint=0x7f0800c1;
    public static final int ic_fingerprint_24dp=0x7f0800c2;
    public static final int ic_fingerprint_error=0x7f0800c3;
    public static final int ic_fingerprint_header=0x7f0800c4;
    public static final int ic_fingerprint_list_icon=0x7f0800c5;
    public static final int ic_fingerprint_success=0x7f0800c6;
    public static final int ic_folder_vd_theme_24=0x7f0800c7;
    public static final int ic_font_size_16dp=0x7f0800c8;
    public static final int ic_font_size_24dp=0x7f0800c9;
    public static final int ic_frequency_antenna=0x7f0800ca;
    public static final int ic_friction_lock_closed=0x7f0800cb;
    public static final int ic_friction_money=0x7f0800cc;
    public static final int ic_gesture_play_button=0x7f0800cd;
    public static final int ic_grayedout_printer=0x7f0800ce;
    public static final int ic_headset_24dp=0x7f0800cf;
    public static final int ic_help=0x7f0800d0;
    public static final int ic_help_24dp=0x7f0800d1;
    public static final int ic_help_actionbar=0x7f0800d2;
    public static final int ic_hotspot=0x7f0800d3;
    public static final int ic_info=0x7f0800d4;
    public static final int ic_info_outline_24dp=0x7f0800d5;
    public static final int ic_label=0x7f0800d6;
    public static final int ic_landscape_from_auto_rotate=0x7f0800d7;
    public static final int ic_launcher_settings=0x7f0800d8;
    public static final int ic_lightbulb_outline_24=0x7f0800d9;
    public static final int ic_list_sync_anim=0x7f0800da;
    public static final int ic_live_help=0x7f0800db;
    public static final int ic_local_movies=0x7f0800dc;
    public static final int ic_lock=0x7f0800dd;
    public static final int ic_lock_list_icon=0x7f0800de;
    public static final int ic_lockscreen_ime=0x7f0800df;
    public static final int ic_media_stream=0x7f0800e0;
    public static final int ic_menu=0x7f0800e1;
    public static final int ic_menu_3d_globe=0x7f0800e2;
    public static final int ic_menu_add=0x7f0800e3;
    public static final int ic_menu_add_inset=0x7f0800e4;
    public static final int ic_menu_add_white=0x7f0800e5;
    public static final int ic_menu_delete=0x7f0800e6;
    public static final int ic_menu_refresh_holo_dark=0x7f0800e7;
    public static final int ic_mode_edit=0x7f0800e8;
    public static final int ic_network_cell=0x7f0800e9;
    public static final int ic_network_signal_0=0x7f0800ea;
    public static final int ic_network_signal_1=0x7f0800eb;
    public static final int ic_network_signal_2=0x7f0800ec;
    public static final int ic_network_signal_3=0x7f0800ed;
    public static final int ic_network_signal_4=0x7f0800ee;
    public static final int ic_new_device_suggestion_24dp=0x7f0800ef;
    public static final int ic_nfc=0x7f0800f0;
    public static final int ic_notifications=0x7f0800f1;
    public static final int ic_open_wifi_autoconnect=0x7f0800f2;
    public static final int ic_open_wifi_notifications=0x7f0800f3;
    public static final int ic_ota_update_available=0x7f0800f4;
    public static final int ic_ota_update_current=0x7f0800f5;
    public static final int ic_ota_update_none=0x7f0800f6;
    public static final int ic_ota_update_stale=0x7f0800f7;
    public static final int ic_package_verifier_disabled=0x7f0800f8;
    public static final int ic_package_verifier_enabled=0x7f0800f9;
    public static final int ic_password=0x7f0800fa;
    public static final int ic_pattern=0x7f0800fb;
    public static final int ic_photo_library=0x7f0800fc;
    public static final int ic_pin=0x7f0800fd;
    public static final int ic_power_system=0x7f0800fe;
    public static final int ic_print=0x7f0800ff;
    public static final int ic_print_error=0x7f080100;
    public static final int ic_qs_night_display_on=0x7f080101;
    public static final int ic_remove_24dp=0x7f080102;
    public static final int ic_remove_circle=0x7f080103;
    public static final int ic_restore=0x7f080104;
    public static final int ic_search_24dp=0x7f080105;
    public static final int ic_security_lock_24dp=0x7f080106;
    public static final int ic_settings=0x7f080107;
    public static final int ic_settings_24dp=0x7f080108;
    public static final int ic_settings_24dp_inverse=0x7f080109;
    public static final int ic_settings_about=0x7f08010a;
    public static final int ic_settings_accessibility=0x7f08010b;
    public static final int ic_settings_accounts=0x7f08010c;
    public static final int ic_settings_applications=0x7f08010d;
    public static final int ic_settings_backup=0x7f08010e;
    public static final int ic_settings_backup_restore=0x7f08010f;
    public static final int ic_settings_battery=0x7f080110;
    public static final int ic_settings_bluetooth=0x7f080111;
    public static final int ic_settings_camera=0x7f080112;
    public static final int ic_settings_cell_standby=0x7f080113;
    public static final int ic_settings_data_usage=0x7f080114;
    public static final int ic_settings_date_time=0x7f080115;
    public static final int ic_settings_development=0x7f080116;
    public static final int ic_settings_development_alpha=0x7f080117;
    public static final int ic_settings_display=0x7f080118;
    public static final int ic_settings_gestures=0x7f080119;
    public static final int ic_settings_home=0x7f08011a;
    public static final int ic_settings_language=0x7f08011b;
    public static final int ic_settings_location=0x7f08011c;
    public static final int ic_settings_memory=0x7f08011d;
    public static final int ic_settings_multiuser=0x7f08011e;
    public static final int ic_settings_nfc_payment=0x7f08011f;
    public static final int ic_settings_nfc_payment_am_alpha=0x7f080120;
    public static final int ic_settings_night_display=0x7f080121;
    public static final int ic_settings_notifications=0x7f080122;
    public static final int ic_settings_phone_idle=0x7f080123;
    public static final int ic_settings_print=0x7f080124;
    public static final int ic_settings_security=0x7f080125;
    public static final int ic_settings_sim=0x7f080126;
    public static final int ic_settings_sound=0x7f080127;
    public static final int ic_settings_storage=0x7f080128;
    public static final int ic_settings_sync=0x7f080129;
    public static final int ic_settings_voice_calls=0x7f08012a;
    public static final int ic_settings_widget_background=0x7f08012b;
    public static final int ic_settings_wireless=0x7f08012c;
    public static final int ic_shortcut_battery=0x7f08012d;
    public static final int ic_shortcut_data_usage=0x7f08012e;
    public static final int ic_shortcut_wireless=0x7f08012f;
    public static final int ic_signal_location=0x7f080130;
    public static final int ic_signal_workmode_enable=0x7f080131;
    public static final int ic_sim_card_alert_white_48dp=0x7f080132;
    public static final int ic_sim_sd=0x7f080133;
    public static final int ic_skip=0x7f080134;
    public static final int ic_sms_mirroring_24dp=0x7f080135;
    public static final int ic_storage=0x7f080136;
    public static final int ic_storage_apps=0x7f080137;
    public static final int ic_suggested_notifications=0x7f080138;
    public static final int ic_suggestion_fingerprint=0x7f080139;
    public static final int ic_support_24dp=0x7f08013a;
    public static final int ic_sync=0x7f08013b;
    public static final int ic_sync_anim_holo=0x7f08013c;
    public static final int ic_sync_error_holo=0x7f08013d;
    public static final int ic_sync_grey=0x7f08013e;
    public static final int ic_sync_grey_holo=0x7f08013f;
    public static final int ic_sync_red=0x7f080140;
    public static final int ic_sync_red_holo=0x7f080141;
    public static final int ic_system_update=0x7f080142;
    public static final int ic_system_update_vd_theme_24=0x7f080143;
    public static final int ic_tab_selected_all=0x7f080144;
    public static final int ic_tab_selected_download=0x7f080145;
    public static final int ic_tab_selected_running=0x7f080146;
    public static final int ic_tab_selected_sdcard=0x7f080147;
    public static final int ic_tab_unselected_all=0x7f080148;
    public static final int ic_tab_unselected_download=0x7f080149;
    public static final int ic_tab_unselected_running=0x7f08014a;
    public static final int ic_tab_unselected_sdcard=0x7f08014b;
    public static final int ic_translate_24dp=0x7f08014c;
    public static final int ic_usb=0x7f08014d;
    public static final int ic_videogame_vd_theme_24=0x7f08014e;
    public static final int ic_vpn_key=0x7f08014f;
    public static final int ic_wallpaper=0x7f080150;
    public static final int ic_warning_24dp=0x7f080151;
    public static final int ic_wifi_lock_signal_1_dark=0x7f080152;
    public static final int ic_wifi_lock_signal_2_dark=0x7f080153;
    public static final int ic_wifi_lock_signal_3_dark=0x7f080154;
    public static final int ic_wifi_lock_signal_4_dark=0x7f080155;
    public static final int ic_wifi_signal_0=0x7f080156;
    public static final int ic_wifi_signal_1=0x7f080157;
    public static final int ic_wifi_signal_1_dark=0x7f080158;
    public static final int ic_wifi_signal_2=0x7f080159;
    public static final int ic_wifi_signal_2_dark=0x7f08015a;
    public static final int ic_wifi_signal_3=0x7f08015b;
    public static final int ic_wifi_signal_3_dark=0x7f08015c;
    public static final int ic_wifi_signal_4=0x7f08015d;
    public static final int ic_wifi_signal_4_dark=0x7f08015e;
    public static final int ic_wifi_signal_lock=0x7f08015f;
    public static final int ic_wifi_tethering=0x7f080160;
    public static final int ic_wps_dark=0x7f080161;
    public static final int ic_wps_light=0x7f080162;
    public static final int ic_zen=0x7f080163;
    public static final int illustration_horizontal=0x7f080164;
    public static final int illustration_tile=0x7f080165;
    public static final int list_divider_dark=0x7f080166;
    public static final int lock_anim=0x7f080167;
    public static final int lock_anim_0=0x7f080168;
    public static final int lock_anim_1=0x7f080169;
    public static final int lock_anim_10=0x7f08016a;
    public static final int lock_anim_11=0x7f08016b;
    public static final int lock_anim_12=0x7f08016c;
    public static final int lock_anim_13=0x7f08016d;
    public static final int lock_anim_14=0x7f08016e;
    public static final int lock_anim_2=0x7f08016f;
    public static final int lock_anim_3=0x7f080170;
    public static final int lock_anim_4=0x7f080171;
    public static final int lock_anim_5=0x7f080172;
    public static final int lock_anim_6=0x7f080173;
    public static final int lock_anim_7=0x7f080174;
    public static final int lock_anim_8=0x7f080175;
    public static final int lock_anim_9=0x7f080176;
    public static final int msg_bubble_incoming=0x7f080177;
    public static final int msg_bubble_outgoing=0x7f080178;
    public static final int nav_divider=0x7f080179;
    public static final int nfc_how_it_works=0x7f08017a;
    public static final int nfc_payment_empty_state=0x7f08017b;
    public static final int notification_auto_importance=0x7f08017c;
    public static final int preference_background=0x7f08017d;
    public static final int preference_highlight=0x7f08017e;
    public static final int preference_list_divider_material=0x7f08017f;
    public static final int preview=0x7f080180;
    public static final int preview_seek_bar_outline=0x7f080181;
    public static final int progress_indeterminate_horizontal_material_trimmed=0x7f080182;
    public static final int regulatory_info=0x7f080183;
    public static final int ring_progress=0x7f080184;
    public static final int selectable_card=0x7f080185;
    public static final int selectable_card_grey=0x7f080186;
    public static final int shortcut_base=0x7f080187;
    public static final int signal=0x7f080188;
    public static final int spinner_default_holo_dark_am_no_underline=0x7f080189;
    public static final int suw_card_bg=0x7f08018a;
    public static final int suw_card_bg_dark=0x7f08018b;
    public static final int suw_card_bg_light=0x7f08018c;
    public static final int suw_ic_expand=0x7f08018d;
    public static final int suw_ic_expand_less=0x7f08018e;
    public static final int suw_ic_expand_more=0x7f08018f;
    public static final int suw_layout_background=0x7f080190;
    public static final int suw_navbar_btn_bg=0x7f080191;
    public static final int suw_navbar_btn_bg_dark=0x7f080192;
    public static final int suw_navbar_btn_bg_light=0x7f080193;
    public static final int suw_navbar_ic_back=0x7f080194;
    public static final int suw_navbar_ic_down_arrow=0x7f080195;
    public static final int suw_navbar_ic_left_arrow=0x7f080196;
    public static final int suw_navbar_ic_more=0x7f080197;
    public static final int suw_navbar_ic_next=0x7f080198;
    public static final int suw_navbar_ic_right_arrow=0x7f080199;
    public static final int switchbar_background=0x7f08019a;
    public static final int tapandpay_emptystate=0x7f08019b;
    public static final int tile_icon_animation_speed=0x7f08019c;
    public static final int tile_icon_force_rtl=0x7f08019d;
    public static final int tile_icon_graphics=0x7f08019e;
    public static final int tile_icon_show_layout=0x7f08019f;
    public static final int tooltip_frame_dark=0x7f0801a0;
    public static final int tooltip_frame_light=0x7f0801a1;
    public static final int transparency=0x7f0801a2;
    public static final int transparency_tileable=0x7f0801a3;
    public static final int vector_drawable_progress_indeterminate_horizontal_trimmed=0x7f0801a4;
    public static final int wifi_friction=0x7f0801a5;
    public static final int wifi_signal=0x7f0801a6;
    public static final int wifi_signal_dark=0x7f0801a7;
    public static final int wifi_signal_lock_dark=0x7f0801a8;
    public static final int wifi_signal_open_dark=0x7f0801a9;
    public static final int work_challenge_background=0x7f0801aa;
  }
  public static final class fraction {
    /**
     * Margin on the right side of the system icon group on Keyguard.
     */
    public static final int battery_button_height_fraction=0x7f090000;
    /**
     * Fraction value to smooth the edges of the battery icon. The path will be inset by this
     * fraction of a pixel.
     */
    public static final int battery_subpixel_smoothing_left=0x7f090001;
    public static final int battery_subpixel_smoothing_right=0x7f090002;
    /**
     * Ratio between height of button part and height of total
     */
    public static final int bt_battery_button_height_fraction=0x7f090003;
    /**
     * Ratio between width and height
     */
    public static final int bt_battery_ratio_fraction=0x7f090004;
    /**
     * Ratio of height between battery icon and bluetooth icon
     */
    public static final int bt_battery_scale_fraction=0x7f090005;
    public static final int fingerprint_sensor_location_fraction_x=0x7f090006;
    public static final int fingerprint_sensor_location_fraction_y=0x7f090007;
  }
  public static final class id {
    public static final int ALT=0x7f0a0000;
    public static final int CTRL=0x7f0a0001;
    public static final int FUNCTION=0x7f0a0002;
    public static final int META=0x7f0a0003;
    public static final int SHIFT=0x7f0a0004;
    public static final int SYM=0x7f0a0005;
    public static final int account=0x7f0a0006;
    public static final int account_request_prefix=0x7f0a0007;
    public static final int account_settings_menu_auto_sync=0x7f0a0008;
    public static final int account_settings_menu_auto_sync_personal=0x7f0a0009;
    public static final int account_settings_menu_auto_sync_work=0x7f0a000a;
    public static final int account_spinner=0x7f0a000b;
    public static final int accounts=0x7f0a000c;
    public static final int accounts_label=0x7f0a000d;
    public static final int action=0x7f0a000e;
    public static final int action_bar=0x7f0a000f;
    public static final int action_bar_activity_content=0x7f0a0010;
    public static final int action_bar_container=0x7f0a0011;
    public static final int action_bar_root=0x7f0a0012;
    public static final int action_bar_spinner=0x7f0a0013;
    public static final int action_bar_subtitle=0x7f0a0014;
    public static final int action_bar_title=0x7f0a0015;
    public static final int action_button=0x7f0a0016;
    public static final int action_context_bar=0x7f0a0017;
    public static final int action_delete=0x7f0a0018;
    public static final int action_drag_move_bottom=0x7f0a0019;
    public static final int action_drag_move_down=0x7f0a001a;
    public static final int action_drag_move_top=0x7f0a001b;
    /**
     * Used for custom accessibility actions in the Drag-and-Drop locale list
     */
    public static final int action_drag_move_up=0x7f0a001c;
    public static final int action_drag_remove=0x7f0a001d;
    public static final int action_menu_divider=0x7f0a001e;
    public static final int action_menu_presenter=0x7f0a001f;
    public static final int action_mode_bar=0x7f0a0020;
    public static final int action_mode_bar_stub=0x7f0a0021;
    public static final int action_mode_close_button=0x7f0a0022;
    public static final int action_select_all=0x7f0a0023;
    public static final int active_layout=0x7f0a0024;
    public static final int activity_chooser_view_content=0x7f0a0025;
    public static final int add=0x7f0a0026;
    public static final int add_another_button=0x7f0a0027;
    public static final int add_language=0x7f0a0028;
    public static final int add_msg=0x7f0a0029;
    public static final int add_msg_expander=0x7f0a002a;
    public static final int add_new_service=0x7f0a002b;
    public static final int additional_icons=0x7f0a002c;
    public static final int additional_summary=0x7f0a002d;
    public static final int admin_description=0x7f0a002e;
    public static final int admin_disabled_other_options=0x7f0a002f;
    public static final int admin_icon=0x7f0a0030;
    public static final int admin_more_details_link=0x7f0a0031;
    public static final int admin_name=0x7f0a0032;
    public static final int admin_policies=0x7f0a0033;
    public static final int admin_support_details=0x7f0a0034;
    public static final int admin_support_dialog_title=0x7f0a0035;
    public static final int admin_support_icon=0x7f0a0036;
    public static final int admin_support_message=0x7f0a0037;
    public static final int admin_support_msg=0x7f0a0038;
    public static final int admin_warning=0x7f0a0039;
    public static final int admins_policies_list=0x7f0a003a;
    public static final int advanced=0x7f0a003b;
    public static final int alertTitle=0x7f0a003c;
    public static final int alias=0x7f0a003d;
    public static final int all_details=0x7f0a003e;
    public static final int alphanumeric_pin=0x7f0a003f;
    public static final int also_erases_esim=0x7f0a0040;
    public static final int also_erases_external=0x7f0a0041;
    public static final int always=0x7f0a0042;
    public static final int always_on_invalid_reason=0x7f0a0043;
    public static final int always_on_vpn=0x7f0a0044;
    public static final int android_beam_explained=0x7f0a0045;
    public static final int android_beam_image=0x7f0a0046;
    public static final int anonymous=0x7f0a0047;
    public static final int apn_radiobutton=0x7f0a0048;
    public static final int app_background=0x7f0a0049;
    public static final int app_detail=0x7f0a004a;
    public static final int app_foreground=0x7f0a004b;
    public static final int app_icon=0x7f0a004c;
    public static final int app_name=0x7f0a004d;
    public static final int app_restrictions_pref=0x7f0a004e;
    public static final int app_restrictions_settings=0x7f0a004f;
    public static final int app_settings=0x7f0a0050;
    public static final int app_snippet=0x7f0a0051;
    public static final int app_switches=0x7f0a0052;
    public static final int app_title=0x7f0a0053;
    public static final int app_titles=0x7f0a0054;
    public static final int appops_content=0x7f0a0055;
    public static final int appsSize=0x7f0a0056;
    public static final int appsSizePrefix=0x7f0a0057;
    public static final int auto_importance=0x7f0a0058;
    public static final int auto_launch=0x7f0a0059;
    public static final int back_button=0x7f0a005a;
    public static final int background_image=0x7f0a005b;
    public static final int backup_list=0x7f0a005c;
    public static final int backup_pw_cancel_button=0x7f0a005d;
    public static final int backup_pw_set_button=0x7f0a005e;
    public static final int band=0x7f0a005f;
    public static final int banner=0x7f0a0060;
    public static final int battery_active=0x7f0a0061;
    public static final int battery_entity_header=0x7f0a0062;
    public static final int battery_header_icon=0x7f0a0063;
    public static final int battery_history_chart=0x7f0a0064;
    public static final int battery_percent=0x7f0a0065;
    public static final int battery_usage=0x7f0a0066;
    public static final int beginning=0x7f0a0067;
    public static final int bluetooth_fragment_settings=0x7f0a0068;
    public static final int body=0x7f0a0069;
    public static final int both=0x7f0a006a;
    public static final int bottom=0x7f0a006b;
    public static final int bottom_buttons=0x7f0a006c;
    public static final int bottom_divider=0x7f0a006d;
    public static final int bottom_label_group=0x7f0a006e;
    public static final int bottom_label_space=0x7f0a006f;
    public static final int bottom_padding=0x7f0a0070;
    public static final int bottom_padding_layout=0x7f0a0071;
    public static final int bottom_summary=0x7f0a0072;
    public static final int breadcrumb=0x7f0a0073;
    public static final int bssid=0x7f0a0074;
    public static final int btn_bluetooth=0x7f0a0075;
    public static final int btn_brightness=0x7f0a0076;
    public static final int btn_location=0x7f0a0077;
    public static final int btn_sync=0x7f0a0078;
    public static final int btn_wifi=0x7f0a0079;
    public static final int bugreport_option_full_summary=0x7f0a007a;
    public static final int bugreport_option_full_title=0x7f0a007b;
    public static final int bugreport_option_interactive_summary=0x7f0a007c;
    public static final int bugreport_option_interactive_title=0x7f0a007d;
    public static final int button=0x7f0a007e;
    public static final int buttonBar=0x7f0a007f;
    public static final int buttonContainer=0x7f0a0080;
    public static final int buttonPanel=0x7f0a0081;
    public static final int button_bar=0x7f0a0082;
    public static final int button_confirm_convert_fbe=0x7f0a0083;
    public static final int button_convert_fbe=0x7f0a0084;
    public static final int buttons_spacer_left=0x7f0a0085;
    public static final int bytes=0x7f0a0086;
    public static final int ca_cert=0x7f0a0087;
    public static final int call=0x7f0a0088;
    public static final int camera_group=0x7f0a0089;
    public static final int cancel=0x7f0a008a;
    public static final int cancelButton=0x7f0a008b;
    public static final int cancel_button=0x7f0a008c;
    public static final int capabilities=0x7f0a008d;
    public static final int capabilities_header=0x7f0a008e;
    public static final int carrier=0x7f0a008f;
    public static final int carrier_provisioning=0x7f0a0090;
    public static final int cell_info_rate_select=0x7f0a0091;
    public static final int cell_network_group=0x7f0a0092;
    public static final int cellinfo=0x7f0a0093;
    public static final int center_horizontal=0x7f0a0094;
    public static final int cert_list=0x7f0a0095;
    public static final int cert_remove_button=0x7f0a0096;
    public static final int cfi=0x7f0a0097;
    public static final int charge=0x7f0a0098;
    public static final int charging_group=0x7f0a0099;
    public static final int chart=0x7f0a009a;
    public static final int checkbox=0x7f0a009b;
    public static final int choose_channel=0x7f0a009c;
    public static final int clear=0x7f0a009d;
    public static final int clear_activities_button=0x7f0a009e;
    public static final int clear_button=0x7f0a009f;
    public static final int clear_data=0x7f0a00a0;
    public static final int clickable=0x7f0a00a1;
    public static final int collapseActionView=0x7f0a00a2;
    public static final int collapse_button=0x7f0a00a3;
    public static final int color_bar=0x7f0a00a4;
    public static final int color_icon=0x7f0a00a5;
    public static final int color_preview=0x7f0a00a6;
    public static final int color_swatch=0x7f0a00a7;
    public static final int color_text=0x7f0a00a8;
    public static final int comp_description=0x7f0a00a9;
    public static final int config_list=0x7f0a00aa;
    public static final int confirm=0x7f0a00ab;
    public static final int confirm_new_backup_pw=0x7f0a00ac;
    public static final int connecting_status=0x7f0a00ad;
    public static final int connecting_status_layout=0x7f0a00ae;
    public static final int container=0x7f0a00af;
    public static final int container_material=0x7f0a00b0;
    public static final int content=0x7f0a00b1;
    public static final int contentPanel=0x7f0a00b2;
    public static final int content_frame=0x7f0a00b3;
    public static final int content_header_container=0x7f0a00b4;
    public static final int content_padding=0x7f0a00b5;
    public static final int content_parent=0x7f0a00b6;
    public static final int contents=0x7f0a00b7;
    public static final int contents_cacrt=0x7f0a00b8;
    public static final int contents_title=0x7f0a00b9;
    public static final int contents_usercrt=0x7f0a00ba;
    public static final int contents_userkey=0x7f0a00bb;
    public static final int control_buttons_panel=0x7f0a00bc;
    public static final int conversation_icon=0x7f0a00bd;
    public static final int cpu_group=0x7f0a00be;
    public static final int credential_container=0x7f0a00bf;
    public static final int credential_list=0x7f0a00c0;
    public static final int current_backup_pw=0x7f0a00c1;
    public static final int current_label=0x7f0a00c2;
    public static final int custom=0x7f0a00c3;
    public static final int customPanel=0x7f0a00c4;
    public static final int cycle_day=0x7f0a00c5;
    public static final int cycles_spinner=0x7f0a00c6;
    public static final int dashboard_container=0x7f0a00c7;
    public static final int dashboard_tile=0x7f0a00c8;
    public static final int data=0x7f0a00c9;
    public static final int data_network=0x7f0a00ca;
    public static final int data_plan_row=0x7f0a00cb;
    public static final int data_usage=0x7f0a00cc;
    public static final int data_usage_menu_cellular_networks=0x7f0a00cd;
    public static final int dbm=0x7f0a00ce;
    public static final int dcrtinfo=0x7f0a00cf;
    public static final int decor_content_parent=0x7f0a00d0;
    public static final int defaultView=0x7f0a00d1;
    public static final int default_activity_button=0x7f0a00d2;
    public static final int default_label=0x7f0a00d3;
    public static final int delete=0x7f0a00d4;
    public static final int delete_button=0x7f0a00d5;
    public static final int delete_managed_profile_closing_paragraph=0x7f0a00d6;
    public static final int delete_managed_profile_device_manager_name=0x7f0a00d7;
    public static final int delete_managed_profile_mdm_icon_view=0x7f0a00d8;
    public static final int delete_managed_profile_opening_paragraph=0x7f0a00d9;
    public static final int delete_zen_rule=0x7f0a00da;
    public static final int deletion_helper_button=0x7f0a00db;
    public static final int description=0x7f0a00dc;
    public static final int description_text=0x7f0a00dd;
    public static final int detail_series=0x7f0a00de;
    public static final int detailsText=0x7f0a00df;
    public static final int deviceDetails=0x7f0a00e0;
    public static final int disableHome=0x7f0a00e1;
    public static final int divider=0x7f0a00e2;
    public static final int divider_delete=0x7f0a00e3;
    public static final int divider_manage=0x7f0a00e4;
    public static final int dns1=0x7f0a00e5;
    public static final int dns2=0x7f0a00e6;
    public static final int dnsCheckState=0x7f0a00e7;
    public static final int dns_check_toggle=0x7f0a00e8;
    public static final int dns_servers=0x7f0a00e9;
    public static final int dock_audio_media_enable_cb=0x7f0a00ea;
    public static final int domain=0x7f0a00eb;
    public static final int domain_name=0x7f0a00ec;
    public static final int donut=0x7f0a00ed;
    public static final int dragHandle=0x7f0a00ee;
    public static final int dragList=0x7f0a00ef;
    public static final int drawer_layout=0x7f0a00f0;
    public static final int dream_start_now_button=0x7f0a00f1;
    public static final int dummy_for_left_edge=0x7f0a00f2;
    public static final int eab_provisioned_switch=0x7f0a00f3;
    public static final int eap=0x7f0a00f4;
    public static final int edit_query=0x7f0a00f5;
    public static final int editor=0x7f0a00f6;
    public static final int edittext=0x7f0a00f7;
    public static final int eight=0x7f0a00f8;
    public static final int either=0x7f0a00f9;
    public static final int emergencyCallButton=0x7f0a00fa;
    public static final int empty_print_state=0x7f0a00fb;
    public static final int empty_printers_list_service_enabled=0x7f0a00fc;
    public static final int encroid=0x7f0a00fd;
    public static final int encrypt_dont_require_password=0x7f0a00fe;
    public static final int encrypt_require_password=0x7f0a00ff;
    public static final int encryption_message=0x7f0a0100;
    public static final int encryption_warning=0x7f0a0101;
    public static final int end=0x7f0a0102;
    public static final int entity_header=0x7f0a0103;
    public static final int entity_header_content=0x7f0a0104;
    public static final int entity_header_icon=0x7f0a0105;
    public static final int entity_header_links=0x7f0a0106;
    public static final int entity_header_summary=0x7f0a0107;
    public static final int entity_header_title=0x7f0a0108;
    public static final int erase_external=0x7f0a0109;
    public static final int erase_external_container=0x7f0a010a;
    public static final int erase_external_option_text=0x7f0a010b;
    public static final int error=0x7f0a010c;
    public static final int errorText=0x7f0a010d;
    public static final int error_text=0x7f0a010e;
    public static final int estimation=0x7f0a010f;
    public static final int exclusionlist=0x7f0a0110;
    public static final int execute_encrypt=0x7f0a0111;
    public static final int execute_master_clear=0x7f0a0112;
    public static final int execute_reset_network=0x7f0a0113;
    public static final int expand_activities_button=0x7f0a0114;
    public static final int expand_indicator=0x7f0a0115;
    public static final int expanded_menu=0x7f0a0116;
    public static final int extra=0x7f0a0117;
    public static final int factory_reset=0x7f0a0118;
    public static final int feedback_popup=0x7f0a0119;
    public static final int fields=0x7f0a011a;
    public static final int fill_horizontal=0x7f0a011b;
    public static final int filter_settings=0x7f0a011c;
    public static final int filter_spinner=0x7f0a011d;
    public static final int fingerprintIcon=0x7f0a011e;
    public static final int fingerprint_animation=0x7f0a011f;
    public static final int fingerprint_background=0x7f0a0120;
    public static final int fingerprint_cancel_button=0x7f0a0121;
    public static final int fingerprint_header_description=0x7f0a0122;
    public static final int fingerprint_in_app_indicator=0x7f0a0123;
    public static final int fingerprint_next_button=0x7f0a0124;
    public static final int fingerprint_progress_bar=0x7f0a0125;
    public static final int fingerprint_rename_field=0x7f0a0126;
    public static final int fingerprint_sensor_location=0x7f0a0127;
    public static final int fingerprint_sensor_location_animation=0x7f0a0128;
    public static final int finish_button=0x7f0a0129;
    public static final int finish_button_area=0x7f0a012a;
    public static final int first_action=0x7f0a012b;
    public static final int five=0x7f0a012c;
    public static final int flashlight_group=0x7f0a012d;
    public static final int footerLeftButton=0x7f0a012e;
    public static final int footerRightButton=0x7f0a012f;
    public static final int footerText=0x7f0a0130;
    public static final int forget_button=0x7f0a0131;
    public static final int four=0x7f0a0132;
    public static final int frame=0x7f0a0133;
    public static final int freeSize=0x7f0a0134;
    public static final int freeSizePrefix=0x7f0a0135;
    public static final int friction_icon=0x7f0a0136;
    public static final int gateway=0x7f0a0137;
    public static final int gesture_animation_view=0x7f0a0138;
    public static final int gesture_image=0x7f0a0139;
    public static final int gesture_play_button=0x7f0a013a;
    public static final int gesture_video=0x7f0a013b;
    public static final int gprs=0x7f0a013c;
    public static final int gps_group=0x7f0a013d;
    public static final int graph_label_group=0x7f0a013e;
    public static final int grid=0x7f0a013f;
    public static final int group_indicator=0x7f0a0140;
    public static final int gsm=0x7f0a0141;
    public static final int hardware_rev_label=0x7f0a0142;
    public static final int hardware_rev_value=0x7f0a0143;
    public static final int headerText=0x7f0a0144;
    public static final int header_content_container=0x7f0a0145;
    public static final int header_divider=0x7f0a0146;
    public static final int header_view=0x7f0a0147;
    public static final int hidden_ssid=0x7f0a0148;
    public static final int hide_all=0x7f0a0149;
    public static final int hide_system=0x7f0a014a;
    public static final int hint=0x7f0a014b;
    public static final int home=0x7f0a014c;
    public static final int homeAsUp=0x7f0a014d;
    public static final int horizontal=0x7f0a014e;
    public static final int hostname=0x7f0a014f;
    public static final int httpClientTest=0x7f0a0150;
    public static final int icon=0x7f0a0151;
    public static final int icon_container=0x7f0a0152;
    public static final int icon_frame=0x7f0a0153;
    public static final int identity=0x7f0a0154;
    public static final int ifRoom=0x7f0a0155;
    public static final int ignore_off=0x7f0a0156;
    public static final int ignore_on=0x7f0a0157;
    public static final int image=0x7f0a0158;
    public static final int imei=0x7f0a0159;
    public static final int img_bluetooth=0x7f0a015a;
    public static final int img_brightness=0x7f0a015b;
    public static final int img_location=0x7f0a015c;
    public static final int img_sync=0x7f0a015d;
    public static final int img_wifi=0x7f0a015e;
    public static final int imsi=0x7f0a015f;
    public static final int ind_bluetooth=0x7f0a0160;
    public static final int ind_brightness=0x7f0a0161;
    public static final int ind_location=0x7f0a0162;
    public static final int ind_sync=0x7f0a0163;
    public static final int ind_wifi=0x7f0a0164;
    public static final int info=0x7f0a0165;
    public static final int initiate_encrypt=0x7f0a0166;
    public static final int initiate_master_clear=0x7f0a0167;
    public static final int initiate_reset_network=0x7f0a0168;
    public static final int install=0x7f0a0169;
    public static final int install_type=0x7f0a016a;
    public static final int instant_app_button_container=0x7f0a016b;
    public static final int instructions_area=0x7f0a016c;
    public static final int intent=0x7f0a016d;
    public static final int ip_fields=0x7f0a016e;
    public static final int ip_settings=0x7f0a016f;
    public static final int ipaddr=0x7f0a0170;
    public static final int ipaddress=0x7f0a0171;
    public static final int ipsec_ca_cert=0x7f0a0172;
    public static final int ipsec_identifier=0x7f0a0173;
    public static final int ipsec_peer=0x7f0a0174;
    public static final int ipsec_psk=0x7f0a0175;
    public static final int ipsec_secret=0x7f0a0176;
    public static final int ipsec_server_cert=0x7f0a0177;
    public static final int ipsec_user=0x7f0a0178;
    public static final int ipsec_user_cert=0x7f0a0179;
    /**
     * ItemTouchHelper uses this id to save a View's original elevation.
     */
    public static final int item_touch_helper_previous_elevation=0x7f0a017a;
    public static final int l10nWarn=0x7f0a017b;
    public static final int l2tp=0x7f0a017c;
    public static final int l2tp_secret=0x7f0a017d;
    public static final int l_anonymous=0x7f0a017e;
    public static final int l_ca_cert=0x7f0a017f;
    public static final int l_domain=0x7f0a0180;
    public static final int l_identity=0x7f0a0181;
    public static final int l_method=0x7f0a0182;
    public static final int l_phase2=0x7f0a0183;
    public static final int l_user_cert=0x7f0a0184;
    public static final int label=0x7f0a0185;
    public static final int label_bar=0x7f0a0186;
    public static final int label_bottom=0x7f0a0187;
    public static final int label_end=0x7f0a0188;
    public static final int label_group=0x7f0a0189;
    public static final int label_middle=0x7f0a018a;
    public static final int label_start=0x7f0a018b;
    public static final int label_top=0x7f0a018c;
    public static final int larger=0x7f0a018d;
    public static final int last_time_used=0x7f0a018e;
    public static final int layout_results=0x7f0a018f;
    public static final int layout_root=0x7f0a0190;
    public static final int left=0x7f0a0191;
    public static final int leftSpacer=0x7f0a0192;
    public static final int left_button=0x7f0a0193;
    public static final int link_speed=0x7f0a0194;
    public static final int list=0x7f0a0195;
    public static final int listContainer=0x7f0a0196;
    public static final int listHeader=0x7f0a0197;
    public static final int listMode=0x7f0a0198;
    public static final int list_container=0x7f0a0199;
    public static final int list_item=0x7f0a019a;
    public static final int list_results=0x7f0a019b;
    public static final int loading_container=0x7f0a019c;
    public static final int locale_picker_fragment=0x7f0a019d;
    public static final int location=0x7f0a019e;
    public static final int lockPattern=0x7f0a019f;
    public static final int lock_none=0x7f0a01a0;
    public static final int lock_password=0x7f0a01a1;
    public static final int lock_pin=0x7f0a01a2;
    public static final int lockscreen_remote_input=0x7f0a01a3;
    public static final int login=0x7f0a01a4;
    public static final int macaddr=0x7f0a01a5;
    public static final int main=0x7f0a01a6;
    public static final int main_content=0x7f0a01a7;
    public static final int manage_data_plans=0x7f0a01a8;
    public static final int manage_user=0x7f0a01a9;
    public static final int master_clear_confirm=0x7f0a01aa;
    public static final int master_clear_container=0x7f0a01ab;
    public static final int master_clear_scrollview=0x7f0a01ac;
    public static final int mem_state=0x7f0a01ad;
    public static final int mem_use=0x7f0a01ae;
    public static final int message=0x7f0a01af;
    public static final int message_below_pin=0x7f0a01b0;
    public static final int message_content=0x7f0a01b1;
    public static final int message_status=0x7f0a01b2;
    public static final int message_text=0x7f0a01b3;
    public static final int message_text_and_info=0x7f0a01b4;
    public static final int method=0x7f0a01b5;
    public static final int middle=0x7f0a01b6;
    public static final int miniLabel=0x7f0a01b7;
    public static final int model_label=0x7f0a01b8;
    public static final int model_value=0x7f0a01b9;
    public static final int more_info=0x7f0a01ba;
    public static final int mppe=0x7f0a01bb;
    public static final int multiply=0x7f0a01bc;
    public static final int mwi=0x7f0a01bd;
    public static final int name=0x7f0a01be;
    public static final int neighboring=0x7f0a01bf;
    public static final int network_prefix_length=0x7f0a01c0;
    public static final int network_state=0x7f0a01c1;
    public static final int networkid=0x7f0a01c2;
    public static final int never=0x7f0a01c3;
    public static final int new_backup_pw=0x7f0a01c4;
    public static final int next_button=0x7f0a01c5;
    public static final int nfc_how_it_works_button=0x7f0a01c6;
    public static final int nfc_how_it_works_content=0x7f0a01c7;
    public static final int nfc_how_it_works_image=0x7f0a01c8;
    public static final int nfc_how_it_works_image_text=0x7f0a01c9;
    public static final int nfc_how_it_works_title=0x7f0a01ca;
    public static final int nfc_payment_empty_text=0x7f0a01cb;
    public static final int nfc_payment_pref=0x7f0a01cc;
    public static final int nfc_payment_tap_image=0x7f0a01cd;
    public static final int nine=0x7f0a01ce;
    public static final int no_ca_cert_warning=0x7f0a01cf;
    public static final int no_cancel_mobile_plan=0x7f0a01d0;
    public static final int no_domain_warning=0x7f0a01d1;
    public static final int no_results_layout=0x7f0a01d2;
    public static final int none=0x7f0a01d3;
    public static final int normal=0x7f0a01d4;
    public static final int number=0x7f0a01d5;
    public static final int oem_info=0x7f0a01d6;
    public static final int ok=0x7f0a01d7;
    public static final int old_password=0x7f0a01d8;
    public static final int old_password_prompt=0x7f0a01d9;
    public static final int one=0x7f0a01da;
    public static final int op_icon=0x7f0a01db;
    public static final int op_name=0x7f0a01dc;
    public static final int op_switch=0x7f0a01dd;
    public static final int op_time=0x7f0a01de;
    public static final int operations_section=0x7f0a01df;
    public static final int operator=0x7f0a01e0;
    public static final int options=0x7f0a01e1;
    public static final int other_users_present=0x7f0a01e2;
    public static final int owner_info=0x7f0a01e3;
    public static final int owner_info_edit_text=0x7f0a01e4;
    public static final int package_name=0x7f0a01e5;
    public static final int page_indicator=0x7f0a01e6;
    public static final int pager=0x7f0a01e7;
    public static final int pairing_caption=0x7f0a01e8;
    public static final int pairing_code_message=0x7f0a01e9;
    public static final int pairing_subhead=0x7f0a01ea;
    public static final int parentPanel=0x7f0a01eb;
    public static final int password=0x7f0a01ec;
    public static final int passwordEntry=0x7f0a01ed;
    public static final int password_container=0x7f0a01ee;
    public static final int password_entry=0x7f0a01ef;
    public static final int password_label=0x7f0a01f0;
    public static final int password_layout=0x7f0a01f1;
    public static final int password_requirements_view=0x7f0a01f2;
    public static final int permissions_section=0x7f0a01f3;
    public static final int phase2=0x7f0a01f4;
    public static final int phone_number=0x7f0a01f5;
    public static final int phone_number_container=0x7f0a01f6;
    public static final int phonebook_sharing_message_confirm_pin=0x7f0a01f7;
    public static final int phonebook_sharing_message_entry_pin=0x7f0a01f8;
    public static final int pin_values_hint=0x7f0a01f9;
    public static final int pingHostname=0x7f0a01fa;
    public static final int pingHostnameV4=0x7f0a01fb;
    public static final int pingHostnameV6=0x7f0a01fc;
    public static final int ping_test=0x7f0a01fd;
    public static final int pinned_header=0x7f0a01fe;
    public static final int pkg_list=0x7f0a01ff;
    public static final int pkgicon=0x7f0a0200;
    public static final int pkgname=0x7f0a0201;
    public static final int port=0x7f0a0202;
    public static final int preference_highlight_key=0x7f0a0203;
    public static final int preferredNetworkType=0x7f0a0204;
    public static final int prefs_container=0x7f0a0205;
    public static final int preview=0x7f0a0206;
    public static final int preview_pager=0x7f0a0207;
    public static final int preview_text=0x7f0a0208;
    public static final int preview_viewport=0x7f0a0209;
    public static final int preview_window=0x7f0a020a;
    public static final int print_menu_item_add_printer=0x7f0a020b;
    public static final int print_menu_item_search=0x7f0a020c;
    public static final int print_menu_item_settings=0x7f0a020d;
    public static final int profile_owner_warning=0x7f0a020e;
    public static final int profile_spinner=0x7f0a020f;
    public static final int profiles_label=0x7f0a0210;
    public static final int profiles_section=0x7f0a0211;
    public static final int progress_bar=0x7f0a0212;
    public static final int progress_bar_animation=0x7f0a0213;
    public static final int progress_bar_background=0x7f0a0214;
    public static final int progress_circular=0x7f0a0215;
    public static final int progress_horizontal=0x7f0a0216;
    public static final int prompt1=0x7f0a0217;
    public static final int prompt2=0x7f0a0218;
    public static final int prompt3=0x7f0a0219;
    public static final int properties_fragment=0x7f0a021a;
    public static final int provider_icon=0x7f0a021b;
    public static final int provider_id=0x7f0a021c;
    public static final int proxy_exclusionlist=0x7f0a021d;
    public static final int proxy_fields=0x7f0a021e;
    public static final int proxy_hostname=0x7f0a021f;
    public static final int proxy_pac=0x7f0a0220;
    public static final int proxy_pac_field=0x7f0a0221;
    public static final int proxy_port=0x7f0a0222;
    public static final int proxy_settings=0x7f0a0223;
    public static final int proxy_settings_fields=0x7f0a0224;
    public static final int proxy_settings_title=0x7f0a0225;
    public static final int proxy_warning_limited_support=0x7f0a0226;
    public static final int purpose=0x7f0a0227;
    public static final int radio=0x7f0a0228;
    public static final int radio_group=0x7f0a0229;
    public static final int radio_power=0x7f0a022a;
    public static final int received=0x7f0a022b;
    public static final int redact_sensitive=0x7f0a022c;
    public static final int redaction_done_button=0x7f0a022d;
    public static final int refresh_smsc=0x7f0a022e;
    public static final int regulatoryInfo=0x7f0a022f;
    public static final int remember=0x7f0a0230;
    public static final int repeat_message=0x7f0a0231;
    public static final int reset_app_preferences=0x7f0a0232;
    public static final int reset_network_subscription=0x7f0a0233;
    public static final int resource=0x7f0a0234;
    public static final int restricted_action=0x7f0a0235;
    public static final int restricted_icon=0x7f0a0236;
    public static final int restricted_lock_icon=0x7f0a0237;
    public static final int restricted_lock_icon_remote_input=0x7f0a0238;
    public static final int right=0x7f0a0239;
    public static final int rightSpacer=0x7f0a023a;
    public static final int right_button=0x7f0a023b;
    public static final int roaming=0x7f0a023c;
    public static final int routes=0x7f0a023d;
    public static final int row_divider=0x7f0a023e;
    public static final int rssi=0x7f0a023f;
    public static final int rule_container=0x7f0a0240;
    public static final int rule_name=0x7f0a0241;
    public static final int rule_name_warning=0x7f0a0242;
    public static final int running_processes=0x7f0a0243;
    public static final int save_login=0x7f0a0244;
    public static final int scan_list=0x7f0a0245;
    public static final int scanning_progress=0x7f0a0246;
    public static final int scanning_progress_bar=0x7f0a0247;
    public static final int screen=0x7f0a0248;
    public static final int screen_lock_options=0x7f0a0249;
    public static final int screen_on_group=0x7f0a024a;
    public static final int screen_pinning_description=0x7f0a024b;
    public static final int scrollIndicatorDown=0x7f0a024c;
    public static final int scrollIndicatorUp=0x7f0a024d;
    public static final int scrollView=0x7f0a024e;
    public static final int scroll_layout_title_header=0x7f0a024f;
    public static final int search_action_bar=0x7f0a0250;
    public static final int search_badge=0x7f0a0251;
    public static final int search_bar=0x7f0a0252;
    public static final int search_bar_container=0x7f0a0253;
    public static final int search_button=0x7f0a0254;
    public static final int search_close_btn=0x7f0a0255;
    public static final int search_domains=0x7f0a0256;
    public static final int search_edit_frame=0x7f0a0257;
    public static final int search_go_btn=0x7f0a0258;
    public static final int search_mag_icon=0x7f0a0259;
    public static final int search_panel=0x7f0a025a;
    public static final int search_plate=0x7f0a025b;
    public static final int search_src_text=0x7f0a025c;
    public static final int search_toolbar=0x7f0a025d;
    public static final int search_view=0x7f0a025e;
    public static final int search_voice_btn=0x7f0a025f;
    public static final int second_action=0x7f0a0260;
    public static final int security=0x7f0a0261;
    public static final int security_fields=0x7f0a0262;
    public static final int security_settings_billing_desc=0x7f0a0263;
    public static final int security_settings_billing_list=0x7f0a0264;
    public static final int security_settings_desc=0x7f0a0265;
    public static final int security_settings_list=0x7f0a0266;
    public static final int security_settings_premium_sms_list=0x7f0a0267;
    public static final int seek_bar=0x7f0a0268;
    public static final int seekbar=0x7f0a0269;
    public static final int seekbar_value=0x7f0a026a;
    public static final int select_dialog_listview=0x7f0a026b;
    public static final int sendbroadcast=0x7f0a026c;
    public static final int sent=0x7f0a026d;
    public static final int sentSinceReceived=0x7f0a026e;
    public static final int series=0x7f0a026f;
    public static final int server=0x7f0a0270;
    public static final int service=0x7f0a0271;
    public static final int settings_button=0x7f0a0272;
    public static final int settings_divider=0x7f0a0273;
    public static final int setup_wizard_layout=0x7f0a0274;
    public static final int seven=0x7f0a0275;
    public static final int shared=0x7f0a0276;
    public static final int shortcut=0x7f0a0277;
    public static final int showCustom=0x7f0a0278;
    public static final int showHome=0x7f0a0279;
    public static final int showTitle=0x7f0a027a;
    public static final int show_all=0x7f0a027b;
    public static final int show_options=0x7f0a027c;
    public static final int show_password=0x7f0a027d;
    public static final int show_password_layout=0x7f0a027e;
    public static final int show_system=0x7f0a027f;
    public static final int signal=0x7f0a0280;
    public static final int signin_button=0x7f0a0281;
    public static final int sim_name=0x7f0a0282;
    public static final int six=0x7f0a0283;
    public static final int size=0x7f0a0284;
    public static final int size_spinner=0x7f0a0285;
    public static final int skip_button=0x7f0a0286;
    public static final int sliding_tab_selected_indicator=0x7f0a0287;
    public static final int smaller=0x7f0a0288;
    public static final int smsc=0x7f0a0289;
    public static final int smsc_label=0x7f0a028a;
    public static final int snippet=0x7f0a028b;
    public static final int sort_order_alpha=0x7f0a028c;
    public static final int sort_order_size=0x7f0a028d;
    public static final int space1=0x7f0a028e;
    public static final int space2=0x7f0a028f;
    public static final int spacer=0x7f0a0290;
    public static final int spinner=0x7f0a0291;
    public static final int split_action_bar=0x7f0a0292;
    public static final int src_atop=0x7f0a0293;
    public static final int src_in=0x7f0a0294;
    public static final int src_over=0x7f0a0295;
    public static final int ssid=0x7f0a0296;
    public static final int ssid_too_long_warning=0x7f0a0297;
    public static final int start=0x7f0a0298;
    public static final int start_message=0x7f0a0299;
    public static final int startactivity=0x7f0a029a;
    public static final int staticip=0x7f0a029b;
    public static final int status=0x7f0a029c;
    public static final int storage_format=0x7f0a029d;
    public static final int storage_free=0x7f0a029e;
    public static final int storage_migrate=0x7f0a029f;
    public static final int storage_mount=0x7f0a02a0;
    public static final int storage_rename=0x7f0a02a1;
    public static final int storage_unmount=0x7f0a02a2;
    public static final int storage_wizard_body=0x7f0a02a3;
    public static final int storage_wizard_init_external_summary=0x7f0a02a4;
    public static final int storage_wizard_init_external_title=0x7f0a02a5;
    public static final int storage_wizard_init_internal_summary=0x7f0a02a6;
    public static final int storage_wizard_init_internal_title=0x7f0a02a7;
    public static final int storage_wizard_migrate_later=0x7f0a02a8;
    public static final int storage_wizard_migrate_now=0x7f0a02a9;
    public static final int storage_wizard_progress=0x7f0a02aa;
    public static final int storage_wizard_progress_summary=0x7f0a02ab;
    public static final int storage_wizard_ready_body=0x7f0a02ac;
    public static final int storage_wizard_second_body=0x7f0a02ad;
    public static final int submenuarrow=0x7f0a02ae;
    public static final int submit_area=0x7f0a02af;
    public static final int subtitle=0x7f0a02b0;
    public static final int summary=0x7f0a02b1;
    public static final int summary1=0x7f0a02b2;
    public static final int summary2=0x7f0a02b3;
    public static final int supplicant_state=0x7f0a02b4;
    public static final int support_disclaimer_do_not_show_again=0x7f0a02b5;
    public static final int support_disclaimer_text=0x7f0a02b6;
    public static final int support_items=0x7f0a02b7;
    public static final int support_text=0x7f0a02b8;
    public static final int suppression_text=0x7f0a02b9;
    public static final int suw_bottom_scroll_view=0x7f0a02ba;
    public static final int suw_footer_button_bar=0x7f0a02bb;
    public static final int suw_items_expandable_switch_content=0x7f0a02bc;
    public static final int suw_items_icon=0x7f0a02bd;
    public static final int suw_items_icon_container=0x7f0a02be;
    public static final int suw_items_summary=0x7f0a02bf;
    public static final int suw_items_switch=0x7f0a02c0;
    public static final int suw_items_switch_divider=0x7f0a02c1;
    public static final int suw_items_title=0x7f0a02c2;
    public static final int suw_layout_content=0x7f0a02c3;
    public static final int suw_layout_decor=0x7f0a02c4;
    public static final int suw_layout_footer=0x7f0a02c5;
    public static final int suw_layout_header=0x7f0a02c6;
    public static final int suw_layout_icon=0x7f0a02c7;
    public static final int suw_layout_navigation_bar=0x7f0a02c8;
    public static final int suw_layout_progress=0x7f0a02c9;
    public static final int suw_layout_progress_stub=0x7f0a02ca;
    public static final int suw_layout_title=0x7f0a02cb;
    public static final int suw_navbar_back=0x7f0a02cc;
    public static final int suw_navbar_more=0x7f0a02cd;
    public static final int suw_navbar_next=0x7f0a02ce;
    /**
     * ID used with setTag(int, Object) to store the original weight of a view inside
     * ButtonBarLayout
     */
    public static final int suw_original_weight=0x7f0a02cf;
    public static final int suw_pattern_bg=0x7f0a02d0;
    public static final int suw_recycler_view=0x7f0a02d1;
    public static final int suw_scroll_view=0x7f0a02d2;
    public static final int sweep_limit=0x7f0a02d3;
    public static final int sweep_warning=0x7f0a02d4;
    public static final int switchView=0x7f0a02d5;
    public static final int switchWidget=0x7f0a02d6;
    public static final int switch_bar=0x7f0a02d7;
    public static final int switch_ime_button=0x7f0a02d8;
    public static final int switch_text=0x7f0a02d9;
    public static final int switch_widget=0x7f0a02da;
    public static final int sync_active=0x7f0a02db;
    public static final int sync_failed=0x7f0a02dc;
    public static final int sync_settings_error_info=0x7f0a02dd;
    public static final int systemSize=0x7f0a02de;
    public static final int systemSizePrefix=0x7f0a02df;
    public static final int system_content=0x7f0a02e0;
    public static final int system_default_label=0x7f0a02e1;
    public static final int system_label=0x7f0a02e2;
    public static final int system_progress=0x7f0a02e3;
    public static final int system_tab=0x7f0a02e4;
    public static final int tabMode=0x7f0a02e5;
    public static final int tabs=0x7f0a02e6;
    public static final int tabs_container=0x7f0a02e7;
    public static final int text=0x7f0a02e8;
    public static final int text1=0x7f0a02e9;
    public static final int textSpacerNoButtons=0x7f0a02ea;
    public static final int textSpacerNoTitle=0x7f0a02eb;
    public static final int text_layout=0x7f0a02ec;
    public static final int three=0x7f0a02ed;
    public static final int tile_summary=0x7f0a02ee;
    public static final int tile_title=0x7f0a02ef;
    public static final int timestamp=0x7f0a02f0;
    public static final int title=0x7f0a02f1;
    public static final int titleDivider=0x7f0a02f2;
    public static final int titleDividerNoCustom=0x7f0a02f3;
    public static final int title_area=0x7f0a02f4;
    public static final int title_template=0x7f0a02f5;
    public static final int top=0x7f0a02f6;
    public static final int topLayout=0x7f0a02f7;
    public static final int topPanel=0x7f0a02f8;
    public static final int top_divider=0x7f0a02f9;
    public static final int top_divider_no_progress=0x7f0a02fa;
    public static final int top_padding=0x7f0a02fb;
    public static final int top_padding_layout=0x7f0a02fc;
    public static final int trash_user=0x7f0a02fd;
    public static final int trigger_carrier_provisioning=0x7f0a02fe;
    public static final int trusted_credential_status=0x7f0a02ff;
    public static final int trusted_credential_subject_primary=0x7f0a0300;
    public static final int trusted_credential_subject_secondary=0x7f0a0301;
    public static final int trusted_devices_prompt_layout=0x7f0a0302;
    public static final int tts_engine_radiobutton=0x7f0a0303;
    public static final int tts_play_button=0x7f0a0304;
    public static final int tts_reset_button=0x7f0a0305;
    public static final int two=0x7f0a0306;
    public static final int two_target_divider=0x7f0a0307;
    public static final int type=0x7f0a0308;
    public static final int typeSpinner=0x7f0a0309;
    public static final int uniform=0x7f0a030a;
    public static final int uninstall_button=0x7f0a030b;
    public static final int unmount=0x7f0a030c;
    public static final int up=0x7f0a030d;
    public static final int update=0x7f0a030e;
    public static final int update_smsc=0x7f0a030f;
    public static final int uptime=0x7f0a0310;
    public static final int usage_graph=0x7f0a0311;
    public static final int usage_time=0x7f0a0312;
    public static final int useLogo=0x7f0a0313;
    public static final int user_cert=0x7f0a0314;
    public static final int user_content=0x7f0a0315;
    public static final int user_delete_widget=0x7f0a0316;
    public static final int user_dict_settings_add_dialog_top=0x7f0a0317;
    public static final int user_dictionary_add_shortcut=0x7f0a0318;
    public static final int user_dictionary_add_shortcut_label=0x7f0a0319;
    public static final int user_dictionary_add_word_grid=0x7f0a031a;
    public static final int user_dictionary_add_word_text=0x7f0a031b;
    public static final int user_id=0x7f0a031c;
    public static final int user_limits_fragment=0x7f0a031d;
    public static final int user_name=0x7f0a031e;
    public static final int user_photo=0x7f0a031f;
    public static final int user_progress=0x7f0a0320;
    public static final int user_tab=0x7f0a0321;
    public static final int username=0x7f0a0322;
    public static final int value=0x7f0a0323;
    public static final int vertical=0x7f0a0324;
    public static final int video=0x7f0a0325;
    public static final int video_background=0x7f0a0326;
    public static final int video_play_button=0x7f0a0327;
    public static final int video_preview_image=0x7f0a0328;
    public static final int video_texture_view=0x7f0a0329;
    public static final int voice_network=0x7f0a032a;
    public static final int volte_provisioned_switch=0x7f0a032b;
    public static final int vpn_create=0x7f0a032c;
    public static final int vt_provisioned_switch=0x7f0a032d;
    public static final int warning_low_charge=0x7f0a032e;
    public static final int warning_unplugged=0x7f0a032f;
    public static final int wfc_provisioned_switch=0x7f0a0330;
    public static final int widget_list=0x7f0a0331;
    public static final int widget_summary=0x7f0a0332;
    public static final int widget_text1=0x7f0a0333;
    public static final int widget_text2=0x7f0a0334;
    public static final int wifi_advanced_fields=0x7f0a0335;
    public static final int wifi_advanced_toggle=0x7f0a0336;
    public static final int wifi_advanced_togglebox=0x7f0a0337;
    public static final int wifi_config_ui=0x7f0a0338;
    public static final int wifi_group=0x7f0a0339;
    public static final int wifi_settings_fragment_layout=0x7f0a033a;
    public static final int wifi_setup_add_network=0x7f0a033b;
    public static final int wifi_setup_cancel=0x7f0a033c;
    public static final int wifi_setup_connect=0x7f0a033d;
    public static final int wifi_setup_fragment=0x7f0a033e;
    public static final int wifi_setup_refresh_list=0x7f0a033f;
    public static final int wifi_setup_skip_or_next=0x7f0a0340;
    public static final int wifi_setup_title=0x7f0a0341;
    public static final int wifi_state=0x7f0a0342;
    public static final int wifi_wps=0x7f0a0343;
    public static final int withText=0x7f0a0344;
    public static final int wps_dialog_btn=0x7f0a0345;
    public static final int wps_dialog_txt=0x7f0a0346;
    public static final int wps_progress_bar=0x7f0a0347;
    public static final int wps_timeout_bar=0x7f0a0348;
    public static final int wrap_content=0x7f0a0349;
    public static final int zero=0x7f0a034a;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f0b0000;
    /**
     * The duration (in milliseconds) of the activity open/close and fragment open/close animations.
     */
    public static final int abc_config_activityShortDur=0x7f0b0001;
    public static final int bluetooth_name_length=0x7f0b0002;
    public static final int cancel_button_image_alpha=0x7f0b0003;
    /**
     * The duration (in milliseconds) of the tooltip show/hide animations.
     */
    public static final int config_tooltipAnimTime=0x7f0b0004;
    /**
     * Dashboard number of columns
     * Dashboard number of columns
     * Dashboard number of columns
     */
    public static final int dashboard_num_columns=0x7f0b0005;
    public static final int keyguard_appwidget_picker_cols=0x7f0b0006;
    /**
     * TODO: This is purely enforced by the interface, and does not affect what
     * strings may be inserted into the actual content provider.
     * With the addition of shortcuts, it seems more likely that users will
     * find this limiting; it would be good to have the interface work with
     * very long strings too.
     */
    public static final int maximum_user_dictionary_word_length=0x7f0b0007;
    /**
     * Scrollbar style OUTSIDE_OVERLAY
     */
    public static final int preference_scrollbar_style=0x7f0b0008;
    /**
     * Weight of the left pane in a multi-pane preference layout.
     * Weight of the left pane in a multi-pane preference layout.
     */
    public static final int preferences_left_pane_weight=0x7f0b0009;
    /**
     * Weight of the right pane in a multi-pane preference layout. So the split is 40:60
     * Weight of the right pane in a multi-pane preference layout. So the split is 1:2
     */
    public static final int preferences_right_pane_weight=0x7f0b000a;
    /**
     * Sim Card Name length
     */
    public static final int sim_name_length=0x7f0b000b;
    /**
     * The duration (in milliseconds) of activity transitions
     */
    public static final int suwTransitionDuration=0x7f0b000c;
  }
  public static final class interpolator {
    public static final int enrollment_fingerprint_isolated_animation_interpolator_0=0x7f0c0000;
    public static final int enrollment_fingerprint_isolated_animation_interpolator_1=0x7f0c0001;
    public static final int enrollment_fingerprint_isolated_animation_interpolator_2=0x7f0c0002;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0d0000;
    public static final int abc_action_bar_up_container=0x7f0d0001;
    public static final int abc_action_menu_item_layout=0x7f0d0002;
    public static final int abc_action_menu_layout=0x7f0d0003;
    public static final int abc_action_mode_bar=0x7f0d0004;
    public static final int abc_action_mode_close_item_material=0x7f0d0005;
    public static final int abc_activity_chooser_view=0x7f0d0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0d0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0d0008;
    public static final int abc_alert_dialog_material=0x7f0d0009;
    public static final int abc_alert_dialog_title_material=0x7f0d000a;
    public static final int abc_dialog_title_material=0x7f0d000b;
    public static final int abc_expanded_menu_layout=0x7f0d000c;
    public static final int abc_list_menu_item_checkbox=0x7f0d000d;
    public static final int abc_list_menu_item_icon=0x7f0d000e;
    public static final int abc_list_menu_item_layout=0x7f0d000f;
    public static final int abc_list_menu_item_radio=0x7f0d0010;
    public static final int abc_popup_menu_header_item_layout=0x7f0d0011;
    public static final int abc_popup_menu_item_layout=0x7f0d0012;
    public static final int abc_screen_content_include=0x7f0d0013;
    public static final int abc_screen_simple=0x7f0d0014;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0d0015;
    public static final int abc_screen_toolbar=0x7f0d0016;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0d0017;
    public static final int abc_search_view=0x7f0d0018;
    public static final int abc_select_dialog_material=0x7f0d0019;
    public static final int access_point_friction_widget=0x7f0d001a;
    public static final int account_sync_screen=0x7f0d001b;
    public static final int activity_list=0x7f0d001c;
    public static final int admin_disabled_other_options_footer=0x7f0d001d;
    public static final int admin_support_details_content=0x7f0d001e;
    public static final int admin_support_details_dialog=0x7f0d001f;
    public static final int admin_support_details_empty_view=0x7f0d0020;
    public static final int android_beam=0x7f0d0021;
    public static final int apn_preference_layout=0x7f0d0022;
    public static final int app_action_buttons=0x7f0d0023;
    public static final int app_domains_dialog=0x7f0d0024;
    public static final int app_domains_item=0x7f0d0025;
    public static final int app_header=0x7f0d0026;
    public static final int app_item=0x7f0d0027;
    public static final int app_ops_details=0x7f0d0028;
    public static final int app_ops_details_item=0x7f0d0029;
    public static final int app_ops_item=0x7f0d002a;
    public static final int app_ops_summary=0x7f0d002b;
    public static final int app_preference_item=0x7f0d002c;
    public static final int app_preferred_settings=0x7f0d002d;
    public static final int apps_filter_spinner=0x7f0d002e;
    public static final int background_check_summary=0x7f0d002f;
    public static final int band_mode=0x7f0d0030;
    public static final int battery_active_view=0x7f0d0031;
    public static final int battery_header=0x7f0d0032;
    public static final int battery_history_chart=0x7f0d0033;
    public static final int battery_history_detail=0x7f0d0034;
    public static final int battery_usage_graph=0x7f0d0035;
    public static final int bluetooth_access=0x7f0d0036;
    public static final int bluetooth_device_picker=0x7f0d0037;
    public static final int bluetooth_pin_confirm=0x7f0d0038;
    public static final int bluetooth_pin_entry=0x7f0d0039;
    public static final int bugreport_options_dialog=0x7f0d003a;
    public static final int cancel_pref_widget=0x7f0d003b;
    public static final int captioning_preview=0x7f0d003c;
    public static final int choose_lock_dialog_item=0x7f0d003d;
    public static final int choose_lock_generic_fingerprint_header=0x7f0d003e;
    public static final int choose_lock_password=0x7f0d003f;
    public static final int choose_lock_password_footer=0x7f0d0040;
    public static final int choose_lock_pattern=0x7f0d0041;
    public static final int choose_lock_pattern_common=0x7f0d0042;
    public static final int choose_lock_pattern_common_footer=0x7f0d0043;
    public static final int color_picker_item=0x7f0d0044;
    public static final int condition_header_icon=0x7f0d0045;
    public static final int condition_tile=0x7f0d0046;
    public static final int confirm_convert_fbe=0x7f0d0047;
    public static final int confirm_lock_background_base=0x7f0d0048;
    public static final int confirm_lock_password=0x7f0d0049;
    public static final int confirm_lock_password_base=0x7f0d004a;
    public static final int confirm_lock_password_internal=0x7f0d004b;
    public static final int confirm_lock_pattern=0x7f0d004c;
    public static final int confirm_lock_pattern_base=0x7f0d004d;
    public static final int confirm_lock_pattern_internal=0x7f0d004e;
    public static final int confirm_lock_pattern_internal_base=0x7f0d004f;
    public static final int conversation_message_content=0x7f0d0050;
    public static final int conversation_message_icon=0x7f0d0051;
    public static final int convert_fbe=0x7f0d0052;
    public static final int credentials_dialog=0x7f0d0053;
    public static final int crypt_keeper_blank=0x7f0d0054;
    public static final int crypt_keeper_confirm=0x7f0d0055;
    public static final int crypt_keeper_emergency_button=0x7f0d0056;
    public static final int crypt_keeper_password_entry=0x7f0d0057;
    public static final int crypt_keeper_password_field=0x7f0d0058;
    public static final int crypt_keeper_pattern_entry=0x7f0d0059;
    public static final int crypt_keeper_pattern_field=0x7f0d005a;
    public static final int crypt_keeper_pin_entry=0x7f0d005b;
    public static final int crypt_keeper_pin_field=0x7f0d005c;
    public static final int crypt_keeper_progress=0x7f0d005d;
    public static final int crypt_keeper_settings=0x7f0d005e;
    public static final int crypt_keeper_status=0x7f0d005f;
    public static final int crypt_keeper_switch_input_method=0x7f0d0060;
    public static final int dashboard=0x7f0d0061;
    public static final int dashboard_spacer=0x7f0d0062;
    public static final int dashboard_tile=0x7f0d0063;
    public static final int data_plans_sync_time_preference=0x7f0d0064;
    public static final int data_usage_bytes_editor=0x7f0d0065;
    public static final int data_usage_chart=0x7f0d0066;
    public static final int data_usage_cycle_editor=0x7f0d0067;
    public static final int data_usage_cycle_item=0x7f0d0068;
    public static final int data_usage_cycles=0x7f0d0069;
    public static final int data_usage_detail=0x7f0d006a;
    public static final int data_usage_graph=0x7f0d006b;
    public static final int data_usage_item=0x7f0d006c;
    public static final int data_usage_spinner_item=0x7f0d006d;
    public static final int data_usage_summary=0x7f0d006e;
    public static final int date_time_custom_list_item_2=0x7f0d006f;
    public static final int delete_managed_profile_dialog=0x7f0d0070;
    public static final int device_admin_add=0x7f0d0071;
    public static final int device_admin_item=0x7f0d0072;
    public static final int device_admin_settings=0x7f0d0073;
    public static final int device_profiles_settings=0x7f0d0074;
    public static final int dialog_edittext=0x7f0d0075;
    public static final int dialog_hardware_info=0x7f0d0076;
    public static final int dock_audio_media_enable_dialog=0x7f0d0077;
    public static final int dream_start_button=0x7f0d0078;
    public static final int edit_user_info_dialog_content=0x7f0d0079;
    public static final int empty_print_state=0x7f0d007a;
    public static final int empty_printers_list_service_enabled=0x7f0d007b;
    public static final int enable_accessibility_service_dialog_content=0x7f0d007c;
    public static final int encryption_interstitial=0x7f0d007d;
    public static final int encryption_interstitial_footer=0x7f0d007e;
    public static final int expand_preference=0x7f0d007f;
    public static final int fallback_home_finishing_boot=0x7f0d0080;
    public static final int filter_spinner_item=0x7f0d0081;
    public static final int fingerprint_enroll_enrolling=0x7f0d0082;
    public static final int fingerprint_enroll_enrolling_base=0x7f0d0083;
    public static final int fingerprint_enroll_enrolling_base_footer=0x7f0d0084;
    public static final int fingerprint_enroll_enrolling_content=0x7f0d0085;
    public static final int fingerprint_enroll_find_sensor=0x7f0d0086;
    public static final int fingerprint_enroll_find_sensor_base=0x7f0d0087;
    public static final int fingerprint_enroll_find_sensor_base_footer=0x7f0d0088;
    public static final int fingerprint_enroll_find_sensor_graphic=0x7f0d0089;
    public static final int fingerprint_enroll_finish=0x7f0d008a;
    public static final int fingerprint_enroll_finish_base=0x7f0d008b;
    public static final int fingerprint_enroll_finish_base_footer=0x7f0d008c;
    public static final int fingerprint_enroll_introduction=0x7f0d008d;
    public static final int fingerprint_enroll_introduction_footer=0x7f0d008e;
    public static final int fingerprint_rename_dialog=0x7f0d008f;
    public static final int font_size_activity=0x7f0d0090;
    public static final int font_size_preview=0x7f0d0091;
    public static final int gesture_preference=0x7f0d0092;
    public static final int grid_picker_dialog=0x7f0d0093;
    public static final int headerless_preference_category=0x7f0d0094;
    public static final int horizontal_divider=0x7f0d0095;
    public static final int horizontal_preference=0x7f0d0096;
    public static final int icc_lock_tabs=0x7f0d0097;
    public static final int ignore_optimizations_content=0x7f0d0098;
    public static final int instant_app_buttons=0x7f0d0099;
    public static final int intent_sender=0x7f0d009a;
    public static final int keyboard_layout_dialog_switch_hint=0x7f0d009b;
    public static final int keyguard_appwidget_item=0x7f0d009c;
    public static final int keyguard_appwidget_picker_layout=0x7f0d009d;
    public static final int layout_preference_frame=0x7f0d009e;
    public static final int loading_container=0x7f0d009f;
    public static final int locale_drag_cell=0x7f0d00a0;
    public static final int locale_order_list=0x7f0d00a1;
    public static final int locale_picker=0x7f0d00a2;
    public static final int location_list_no_item=0x7f0d00a3;
    public static final int lockscreen_remote_input=0x7f0d00a4;
    public static final int magnification_video_preference=0x7f0d00a5;
    public static final int manage_accounts_screen=0x7f0d00a6;
    public static final int manage_applications_apps=0x7f0d00a7;
    public static final int manage_applications_running=0x7f0d00a8;
    public static final int manage_data_plans_preference=0x7f0d00a9;
    public static final int master_clear=0x7f0d00aa;
    public static final int master_clear_account=0x7f0d00ab;
    public static final int master_clear_confirm=0x7f0d00ac;
    public static final int master_clear_disallowed_screen=0x7f0d00ad;
    public static final int multi_sim_dialog=0x7f0d00ae;
    public static final int network_reset_disallowed_screen=0x7f0d00af;
    public static final int nfc_payment=0x7f0d00b0;
    public static final int nfc_payment_empty=0x7f0d00b1;
    public static final int nfc_payment_how_it_works=0x7f0d00b2;
    public static final int nfc_payment_option=0x7f0d00b3;
    public static final int notification_app=0x7f0d00b4;
    public static final int notification_app_section=0x7f0d00b5;
    public static final int notification_log_row=0x7f0d00b6;
    public static final int ownerinfo=0x7f0d00b7;
    public static final int password_requirement_item=0x7f0d00b8;
    public static final int permission_settings=0x7f0d00b9;
    public static final int pick_item=0x7f0d00ba;
    public static final int preference=0x7f0d00bb;
    public static final int preference_app=0x7f0d00bc;
    public static final int preference_app_restrictions=0x7f0d00bd;
    public static final int preference_category=0x7f0d00be;
    public static final int preference_category_divider=0x7f0d00bf;
    public static final int preference_category_material=0x7f0d00c0;
    public static final int preference_category_material_settings=0x7f0d00c1;
    public static final int preference_category_material_settings_with_divider=0x7f0d00c2;
    public static final int preference_category_no_label=0x7f0d00c3;
    public static final int preference_color=0x7f0d00c4;
    public static final int preference_dialog_edittext=0x7f0d00c5;
    public static final int preference_dialog_seekbar_material=0x7f0d00c6;
    public static final int preference_dropdown=0x7f0d00c7;
    public static final int preference_dropdown_material=0x7f0d00c8;
    public static final int preference_dropdown_material_settings=0x7f0d00c9;
    public static final int preference_empty_list=0x7f0d00ca;
    public static final int preference_footer=0x7f0d00cb;
    public static final int preference_icon=0x7f0d00cc;
    public static final int preference_importance_slider=0x7f0d00cd;
    public static final int preference_information=0x7f0d00ce;
    public static final int preference_information_material=0x7f0d00cf;
    public static final int preference_list_fragment=0x7f0d00d0;
    public static final int preference_material=0x7f0d00d1;
    public static final int preference_multiline_title=0x7f0d00d2;
    public static final int preference_progress_category=0x7f0d00d3;
    public static final int preference_recyclerview=0x7f0d00d4;
    public static final int preference_small_icon=0x7f0d00d5;
    public static final int preference_storage_action=0x7f0d00d6;
    public static final int preference_tts_engine=0x7f0d00d7;
    public static final int preference_two_target=0x7f0d00d8;
    public static final int preference_two_target_divider=0x7f0d00d9;
    public static final int preference_volume_slider=0x7f0d00da;
    public static final int preference_widget_checkbox=0x7f0d00db;
    public static final int preference_widget_delete=0x7f0d00dc;
    public static final int preference_widget_gear=0x7f0d00dd;
    public static final int preference_widget_master_switch=0x7f0d00de;
    public static final int preference_widget_radiobutton=0x7f0d00df;
    public static final int preference_widget_seekbar=0x7f0d00e0;
    public static final int preference_widget_seekbar_material=0x7f0d00e1;
    public static final int preference_widget_seekbar_settings=0x7f0d00e2;
    public static final int preference_widget_summary=0x7f0d00e3;
    public static final int preference_widget_switch=0x7f0d00e4;
    public static final int preference_widget_switch_compat=0x7f0d00e5;
    public static final int preference_widget_sync_toggle=0x7f0d00e6;
    public static final int preference_widget_wifi_signal=0x7f0d00e7;
    public static final int preset_picker_item=0x7f0d00e8;
    public static final int preview_seek_bar_view_pager=0x7f0d00e9;
    public static final int print_job_summary=0x7f0d00ea;
    public static final int printer_dropdown_item=0x7f0d00eb;
    public static final int process_stats_mem_details=0x7f0d00ec;
    public static final int proxy=0x7f0d00ed;
    public static final int radio_info=0x7f0d00ee;
    public static final int radio_list_container=0x7f0d00ef;
    public static final int radio_with_summary=0x7f0d00f0;
    public static final int redaction_interstitial=0x7f0d00f1;
    public static final int redaction_interstitial_footer=0x7f0d00f2;
    public static final int regulatory_info=0x7f0d00f3;
    public static final int remember_dock_setting=0x7f0d00f4;
    public static final int remove_account_button=0x7f0d00f5;
    public static final int reset_network=0x7f0d00f6;
    public static final int reset_network_confirm=0x7f0d00f7;
    public static final int restricted_dialog_singlechoice=0x7f0d00f8;
    public static final int restricted_icon=0x7f0d00f9;
    public static final int restricted_popup_menu_item=0x7f0d00fa;
    public static final int restricted_preference_dropdown=0x7f0d00fb;
    public static final int restricted_preference_user_delete_widget=0x7f0d00fc;
    public static final int restricted_radio_with_summary=0x7f0d00fd;
    public static final int restricted_switch_preference=0x7f0d00fe;
    public static final int restricted_switch_widget=0x7f0d00ff;
    public static final int running_processes_header=0x7f0d0100;
    public static final int running_processes_item=0x7f0d0101;
    public static final int running_processes_view=0x7f0d0102;
    public static final int running_service_details=0x7f0d0103;
    public static final int running_service_details_process=0x7f0d0104;
    public static final int running_service_details_service=0x7f0d0105;
    public static final int screen_pinning_instructions=0x7f0d0106;
    public static final int screen_zoom_activity=0x7f0d0107;
    public static final int screen_zoom_preview_1=0x7f0d0108;
    public static final int screen_zoom_preview_2=0x7f0d0109;
    public static final int screen_zoom_preview_app_icon=0x7f0d010a;
    public static final int screen_zoom_preview_settings=0x7f0d010b;
    public static final int search_breadcrumb_view=0x7f0d010c;
    public static final int search_feedback=0x7f0d010d;
    public static final int search_icon_view=0x7f0d010e;
    public static final int search_inline_switch_item=0x7f0d010f;
    public static final int search_intent_item=0x7f0d0110;
    public static final int search_main=0x7f0d0111;
    public static final int search_panel=0x7f0d0112;
    public static final int search_saved_query_item=0x7f0d0113;
    public static final int select_account_list_item=0x7f0d0114;
    public static final int select_dialog_item_material=0x7f0d0115;
    public static final int select_dialog_multichoice_material=0x7f0d0116;
    public static final int select_dialog_singlechoice_material=0x7f0d0117;
    public static final int separator_label=0x7f0d0118;
    public static final int set_backup_pw=0x7f0d0119;
    public static final int settings_color_picker_item=0x7f0d011a;
    public static final int settings_data_plan_summary_preference=0x7f0d011b;
    public static final int settings_entity_header=0x7f0d011c;
    public static final int settings_main_dashboard=0x7f0d011d;
    public static final int settings_main_prefs=0x7f0d011e;
    public static final int settings_summary_preference=0x7f0d011f;
    public static final int settings_with_drawer=0x7f0d0120;
    public static final int setup_choose_lock_generic_fingerprint_header=0x7f0d0121;
    public static final int setup_choose_lock_generic_header=0x7f0d0122;
    public static final int setup_preference=0x7f0d0123;
    public static final int setup_screen_lock_fingerprint_details=0x7f0d0124;
    public static final int shortcut_badge=0x7f0d0125;
    public static final int shortcut_badge_maskable=0x7f0d0126;
    public static final int single_button_panel=0x7f0d0127;
    public static final int sliding_tab_indicator_view=0x7f0d0128;
    public static final int sliding_tab_title_view=0x7f0d0129;
    public static final int space_preference=0x7f0d012a;
    public static final int spinner_dropdown_restricted_item=0x7f0d012b;
    public static final int spinner_view=0x7f0d012c;
    public static final int storage_internal_forget=0x7f0d012d;
    public static final int storage_internal_format=0x7f0d012e;
    public static final int storage_internal_unmount=0x7f0d012f;
    public static final int storage_item=0x7f0d0130;
    public static final int storage_summary=0x7f0d0131;
    public static final int storage_summary_donut=0x7f0d0132;
    public static final int storage_volume=0x7f0d0133;
    public static final int storage_wizard_generic=0x7f0d0134;
    public static final int storage_wizard_init=0x7f0d0135;
    public static final int storage_wizard_migrate=0x7f0d0136;
    public static final int storage_wizard_navigation=0x7f0d0137;
    public static final int storage_wizard_progress=0x7f0d0138;
    public static final int storage_wizard_ready=0x7f0d0139;
    public static final int styled_switch_bar=0x7f0d013a;
    public static final int suggestion_condition_container=0x7f0d013b;
    public static final int suggestion_condition_footer=0x7f0d013c;
    public static final int suggestion_condition_header=0x7f0d013d;
    public static final int suggestion_tile=0x7f0d013e;
    public static final int suggestion_tile_remote_container=0x7f0d013f;
    public static final int support_account_spinner_item=0x7f0d0140;
    public static final int support_disclaimer_content=0x7f0d0141;
    public static final int support_escalation_options=0x7f0d0142;
    public static final int support_fragment=0x7f0d0143;
    public static final int support_offline_escalation_options=0x7f0d0144;
    public static final int support_phone_dialog_content=0x7f0d0145;
    public static final int support_sign_in_button=0x7f0d0146;
    public static final int support_simple_spinner_dropdown_item=0x7f0d0147;
    public static final int support_tile=0x7f0d0148;
    public static final int support_tile_spacer=0x7f0d0149;
    public static final int suw_button=0x7f0d014a;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_glif_blank_template=0x7f0d014b;
    public static final int suw_glif_blank_template_card=0x7f0d014c;
    public static final int suw_glif_blank_template_compact=0x7f0d014d;
    public static final int suw_glif_blank_template_content=0x7f0d014e;
    public static final int suw_glif_footer_button_bar=0x7f0d014f;
    public static final int suw_glif_header=0x7f0d0150;
    public static final int suw_glif_list_template=0x7f0d0151;
    public static final int suw_glif_list_template_card=0x7f0d0152;
    public static final int suw_glif_list_template_compact=0x7f0d0153;
    public static final int suw_glif_list_template_content=0x7f0d0154;
    public static final int suw_glif_preference_recycler_view=0x7f0d0155;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_glif_preference_template=0x7f0d0156;
    public static final int suw_glif_preference_template_header=0x7f0d0157;
    public static final int suw_glif_recycler_template=0x7f0d0158;
    public static final int suw_glif_recycler_template_card=0x7f0d0159;
    public static final int suw_glif_recycler_template_compact=0x7f0d015a;
    public static final int suw_glif_recycler_template_content=0x7f0d015b;
    public static final int suw_glif_template=0x7f0d015c;
    public static final int suw_glif_template_card=0x7f0d015d;
    public static final int suw_glif_template_compact=0x7f0d015e;
    public static final int suw_glif_template_content=0x7f0d015f;
    public static final int suw_items_button_bar=0x7f0d0160;
    public static final int suw_items_default=0x7f0d0161;
    public static final int suw_items_description=0x7f0d0162;
    public static final int suw_items_expandable_switch=0x7f0d0163;
    public static final int suw_items_switch=0x7f0d0164;
    public static final int suw_items_verbose=0x7f0d0165;
    public static final int suw_list_header=0x7f0d0166;
    public static final int suw_list_template=0x7f0d0167;
    public static final int suw_list_template_card=0x7f0d0168;
    public static final int suw_list_template_card_wide=0x7f0d0169;
    public static final int suw_list_template_header=0x7f0d016a;
    public static final int suw_list_template_header_collapsed=0x7f0d016b;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_list_template_short=0x7f0d016c;
    public static final int suw_navbar_view=0x7f0d016d;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_no_scroll_template=0x7f0d016e;
    public static final int suw_no_scroll_template_card=0x7f0d016f;
    public static final int suw_no_scroll_template_card_wide=0x7f0d0170;
    public static final int suw_no_scroll_template_header=0x7f0d0171;
    public static final int suw_no_scroll_template_header_collapsed=0x7f0d0172;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_no_scroll_template_short=0x7f0d0173;
    public static final int suw_preference_recycler_view=0x7f0d0174;
    public static final int suw_preference_recycler_view_header=0x7f0d0175;
    public static final int suw_preference_recycler_view_normal=0x7f0d0176;
    public static final int suw_preference_template=0x7f0d0177;
    public static final int suw_preference_template_header=0x7f0d0178;
    public static final int suw_progress_bar=0x7f0d0179;
    public static final int suw_progress_bar_stub=0x7f0d017a;
    public static final int suw_recycler_template=0x7f0d017b;
    public static final int suw_recycler_template_card=0x7f0d017c;
    public static final int suw_recycler_template_card_wide=0x7f0d017d;
    public static final int suw_recycler_template_header=0x7f0d017e;
    public static final int suw_recycler_template_header_collapsed=0x7f0d017f;
    public static final int suw_recycler_template_short=0x7f0d0180;
    public static final int suw_template=0x7f0d0181;
    public static final int suw_template_card=0x7f0d0182;
    public static final int suw_template_card_wide=0x7f0d0183;
    public static final int suw_template_header=0x7f0d0184;
    public static final int suw_template_header_collapsed=0x7f0d0185;
    /**
     * Ignore UnusedResources: can be used by clients
     */
    public static final int suw_template_short=0x7f0d0186;
    public static final int switch_bar=0x7f0d0187;
    public static final int system_info_list_item=0x7f0d0188;
    public static final int tab_widget=0x7f0d0189;
    public static final int tall_preference_category=0x7f0d018a;
    public static final int text_description_preference=0x7f0d018b;
    public static final int title=0x7f0d018c;
    public static final int tooltip=0x7f0d018d;
    public static final int trust_agent_item=0x7f0d018e;
    public static final int trusted_credential=0x7f0d018f;
    public static final int trusted_credential_details=0x7f0d0190;
    public static final int trusted_credential_list_container=0x7f0d0191;
    public static final int trusted_credentials=0x7f0d0192;
    public static final int tts_action_buttons=0x7f0d0193;
    public static final int twelve_key_entry=0x7f0d0194;
    public static final int two_buttons_panel=0x7f0d0195;
    public static final int two_line_list_item=0x7f0d0196;
    public static final int usage_bottom_label=0x7f0d0197;
    public static final int usage_side_label=0x7f0d0198;
    public static final int usage_stats=0x7f0d0199;
    public static final int usage_stats_item=0x7f0d019a;
    public static final int usage_view=0x7f0d019b;
    public static final int usb_dialog_container=0x7f0d019c;
    public static final int user_credential=0x7f0d019d;
    public static final int user_credential_dialog=0x7f0d019e;
    public static final int user_credential_preference=0x7f0d019f;
    public static final int user_credentials=0x7f0d01a0;
    public static final int user_dictionary_add_word=0x7f0d01a1;
    public static final int user_dictionary_add_word_fullscreen=0x7f0d01a2;
    public static final int user_dictionary_item=0x7f0d01a3;
    public static final int user_info_header=0x7f0d01a4;
    public static final int user_limits=0x7f0d01a5;
    public static final int user_preference=0x7f0d01a6;
    public static final int video_preference=0x7f0d01a7;
    public static final int vpn_dialog=0x7f0d01a8;
    public static final int vpn_lockdown_editor=0x7f0d01a9;
    public static final int widget=0x7f0d01aa;
    public static final int widget_progress_bar=0x7f0d01ab;
    public static final int widget_text_views=0x7f0d01ac;
    public static final int wifi_ap_dialog=0x7f0d01ad;
    public static final int wifi_api_test=0x7f0d01ae;
    public static final int wifi_config_info=0x7f0d01af;
    public static final int wifi_dialog=0x7f0d01b0;
    public static final int wifi_dialog_row=0x7f0d01b1;
    public static final int wifi_display_options=0x7f0d01b2;
    public static final int wifi_display_preference=0x7f0d01b3;
    public static final int wifi_network_details_two_buttons_panel=0x7f0d01b4;
    public static final int wifi_notify_scan_mode=0x7f0d01b5;
    public static final int wifi_progress_header=0x7f0d01b6;
    public static final int wifi_settings_for_setup_wizard_xl=0x7f0d01b7;
    public static final int wifi_setup_custom_list_item_1=0x7f0d01b8;
    public static final int wifi_status_test=0x7f0d01b9;
    public static final int wifi_wps_dialog=0x7f0d01ba;
    public static final int write_wifi_config_to_nfc=0x7f0d01bb;
    public static final int zen_rule_name=0x7f0d01bc;
    public static final int zen_rule_type=0x7f0d01bd;
    public static final int zen_rule_type_selection=0x7f0d01be;
    public static final int zen_rule_widget=0x7f0d01bf;
    public static final int zen_schedule_rule_day=0x7f0d01c0;
  }
  public static final class menu {
    public static final int account_settings=0x7f0e0000;
    public static final int data_usage=0x7f0e0001;
    public static final int manage_apps=0x7f0e0002;
    public static final int misc_files_menu=0x7f0e0003;
    public static final int print_service_settings=0x7f0e0004;
    public static final int storage_volume=0x7f0e0005;
    public static final int vpn=0x7f0e0006;
    public static final int wifi_setup=0x7f0e0007;
    public static final int zen_mode_rule=0x7f0e0008;
  }
  public static final class mipmap {
    public static final int ic_accessibility_generic=0x7f0f0000;
    public static final int ic_accessibility_magnification=0x7f0f0001;
    public static final int ic_launcher_settings=0x7f0f0002;
  }
  public static final class plurals {
    /**
     * Subtitle for the accessibility preference to configure feature that performs click action soon after mouse/trackpad pointer stops moving, in case delay before click is extremely short. Placeholder will be set to the number of milliseconds to which the delay amounts. [CHAR LIMIT=NONE]
     */
    public static final int accessibilty_autoclick_preference_subtitle_extremely_short_delay=0x7f100000;
    /**
     * Subtitle for the accessibility preference to configure feature that performs click action soon after mouse/trackpad pointer stops moving, in case delay before click is extremely short. Placeholder will be set to the number of milliseconds to which the delay amounts. [CHAR LIMIT=NONE]
     */
    public static final int accessibilty_autoclick_preference_subtitle_long_delay=0x7f100001;
    /**
     * Subtitle for the accessibility preference to configure feature that performs click action soon after mouse/trackpad pointer stops moving, in case delay before click is extremely short. Placeholder will be set to the number of milliseconds to which the delay amounts. [CHAR LIMIT=NONE]
     */
    public static final int accessibilty_autoclick_preference_subtitle_short_delay=0x7f100002;
    /**
     * Subtitle for the accessibility preference to configure feature that performs click action soon after mouse/trackpad pointer stops moving, in case delay before click is extremely short. Placeholder will be set to the number of milliseconds to which the delay amounts. [CHAR LIMIT=NONE]
     */
    public static final int accessibilty_autoclick_preference_subtitle_very_long_delay=0x7f100003;
    /**
     * Subtitle for the accessibility preference to configure feature that performs click action soon after mouse/trackpad pointer stops moving, in case delay before click is extremely short. Placeholder will be set to the number of milliseconds to which the delay amounts. [CHAR LIMIT=NONE]
     */
    public static final int accessibilty_autoclick_preference_subtitle_very_short_delay=0x7f100004;
    /**
     * [CHAR LIMIT=45] App notification listing summary, blocked apps
     */
    public static final int app_notification_listing_summary_others=0x7f100005;
    /**
     * Description of number of apps allowed to ignore Data Saver [CHAR LIMIT=NONE]
     */
    public static final int data_saver_unrestricted_summary=0x7f100006;
    /**
     * Title for the apps that have been set as default handlers of camera-related intents. [CHAR LIMIT=30]
     */
    public static final int default_camera_app_title=0x7f100007;
    /**
     * Title for the apps that have been set as default handlers of new email intents. [CHAR LIMIT=30]
     */
    public static final int default_email_app_title=0x7f100008;
    /**
     * Title for the apps that have been set as default handlers of call-related intents. [CHAR LIMIT=30]
     */
    public static final int default_phone_app_title=0x7f100009;
    /**
     * [CHAR LIMIT=NONE] Footer listing a count of deleted channels.
     */
    public static final int deleted_channels=0x7f10000a;
    /**
     * The title of the confirmation dialog shown when the user selects one / several languages and tries to remove them [CHAR LIMIT=60]
     */
    public static final int dlg_remove_locales_title=0x7f10000b;
    /**
     * Summary of open web links settings when at least one app can open supported links [CHAR LIMIT=NONE]
     */
    public static final int domain_urls_apps_summary_on=0x7f10000c;
    /**
     * Summary indicating the number of trusted CA certificates installed by the admin. The number shown is a minimum as there may be additional CA certificates we do not know about. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_number_ca_certs=0x7f10000d;
    /**
     * Summary indicating the number of mistyped passwords after which the device or work profile wipes itself. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_number_failed_password_wipe=0x7f10000e;
    /**
     * Summary indicating the number of apps that a label (e.g. installed apps or apps granted a particular permission) refers to. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_number_packages=0x7f10000f;
    /**
     * Summary indicating the number of apps that a label (e.g. installed apps or apps granted a particular permission) refers to. The number shown is a minimum as there may be additional apps we do not know about. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_number_packages_lower_bound=0x7f100010;
    /**
     * Time in hours
     */
    public static final int hours=0x7f100011;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of letters
     */
    public static final int lockpassword_password_requires_letters=0x7f100012;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of lowercase letters
     */
    public static final int lockpassword_password_requires_lowercase=0x7f100013;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of non-letter characters
     */
    public static final int lockpassword_password_requires_nonletter=0x7f100014;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of numerical digits
     */
    public static final int lockpassword_password_requires_numeric=0x7f100015;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of special symbols
     */
    public static final int lockpassword_password_requires_symbols=0x7f100016;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain the required number of uppercase letters
     */
    public static final int lockpassword_password_requires_uppercase=0x7f100017;
    /**
     * Summary of preference to manage notification listeners, when one or more are enabled
     * and are therefore able to read the user's notifications
     */
    public static final int manage_notification_access_summary_nonzero=0x7f100018;
    /**
     * Summary of preference to manage device policies when there is trust agent
     */
    public static final int manage_trust_agents_summary_on=0x7f100019;
    /**
     * Description of number of apps using memory [CHAR LIMIT=NONE]
     */
    public static final int memory_usage_apps_summary=0x7f10001a;
    /**
     * Time in minutes
     */
    public static final int minutes=0x7f10001b;
    /**
     * Summary showing how many networks restrictions [CHAR LIMIT=NONE]
     */
    public static final int network_restrictions_summary=0x7f10001c;
    /**
     * Summary of notifications [CHAR LIMIT=NONE]
     */
    public static final int notification_summary=0x7f10001d;
    /**
     * Summary of preference to manage device admin apps, informing the user how many device admin apps are installed and active
     */
    public static final int number_of_device_admins=0x7f10001e;
    /**
     * Permissions preference summary [CHAR LIMIT=40]
     */
    public static final int permissions_summary=0x7f10001f;
    /**
     * Summary for high usage item, showing app/apps are behaving abnormally [CHAR LIMIT=80]
     */
    public static final int power_high_usage_summary=0x7f100020;
    /**
     * Title for high usage item, showing app/apps are draining battery [CHAR LIMIT=80]
     */
    public static final int power_high_usage_title=0x7f100021;
    /**
     * Print setting summary in settings screenm indicating how many print jobs are active [CHAR LIMIT=None]
     */
    public static final int print_jobs_summary=0x7f100022;
    /**
     * Print setting summary in settings screen [CHAR LIMIT=50]
     */
    public static final int print_settings_summary=0x7f100023;
    /**
     * Runtime permissions preference summary.  Number of additional permissions granted. [CHAR LIMIT=40]
     */
    public static final int runtime_permissions_additional_count=0x7f100024;
    /**
     * Runtime permissions preference summary [CHAR LIMIT=40]
     */
    public static final int runtime_permissions_summary=0x7f100025;
    /**
     * Time in seconds
     */
    public static final int seconds=0x7f100026;
    /**
     * Message showing the current number of fingerprints set up. Shown for a menu item that launches fingerprint settings or enrollment.
     */
    public static final int security_settings_fingerprint_preference_summary=0x7f100027;
    /**
     * Text to describe the items to be expanded as suggested settings [CHAR LIMIT=none]
     */
    public static final int settings_suggestion_header_summary_hidden_items=0x7f100028;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Countdown for user taps to enable development settings
     */
    public static final int show_dev_countdown=0x7f100029;
    /**
     * Summary for special access settings [CHAR_LIMIT=NONE]
     */
    public static final int special_access_summary=0x7f10002a;
    /**
     * Title of Dialog warning users of SSL monitoring. [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_dialog_title=0x7f10002b;
    /**
     * Text of message to show to work profile users whose administrator has installed a SSL CA Cert.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_info_message=0x7f10002c;
    /**
     * Text of message to show to device owner user whose administrator has installed a SSL CA Cert.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_info_message_device_owner=0x7f10002d;
    /**
     * Label on button that will take the user to the Trusted Credentials settings page.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_settings_button=0x7f10002e;
    /**
     * Summary for the collapsed suggestions section on the dashboard, representing number of suggestions. [CHAR LIMIT=30]
     */
    public static final int suggestions_collapsed_summary=0x7f10002f;
    /**
     * Title for the collapsed suggestions section on the dashboard, representing number of suggestions. [CHAR LIMIT=30]
     */
    public static final int suggestions_collapsed_title=0x7f100030;
    /**
     * Manage applications, individual application info storage screen. Describes the number of URIs (directories or files) an app has been granted access (by another apps)
     */
    public static final int uri_permissions_text=0x7f100031;
    /**
     * Wi-Fi settings screen, Saved networks summary.  This shows below the "Saved networks" item and indicates the number of networks a user has saved.
     */
    public static final int wifi_saved_access_points_summary=0x7f100032;
    /**
     * Instructions telling the user that they entered the wrong SIM PIN while trying to unlock the keyguard.  Displayed in a dialog box.  [CHAR LIMIT=100]
     */
    public static final int wrong_pin_code=0x7f100033;
    /**
     * Sound: Summary for the Do not Disturb option when at least one automatic rules turned on. [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_settings_summary_on=0x7f100034;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only for N hours.
     */
    public static final int zen_mode_summary_alarms_only_by_hour=0x7f100035;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only for < 60 minutes.
     */
    public static final int zen_mode_summary_alarms_only_by_minute=0x7f100036;
  }
  public static final class raw {
    public static final int accessibility_screen_magnification=0x7f110000;
    public static final int fingerprint_location_animation=0x7f110001;
    public static final int gesture_ambient_lift=0x7f110002;
    public static final int gesture_ambient_tap=0x7f110003;
    public static final int gesture_assist=0x7f110004;
    public static final int gesture_double_tap=0x7f110005;
    public static final int gesture_fingerprint_swipe=0x7f110006;
    public static final int gesture_twist=0x7f110007;
    public static final int media_volume=0x7f110008;
  }
  public static final class string {
    /**
     * Main Settings screen setting option title for the item to take you to the Accounts screen [CHAR LIMIT=22]
     */
    public static final int Accounts_settings_title=0x7f120000;
    /**
     * Content description for the action bar "home" affordance. [CHAR LIMIT=NONE]
     */
    public static final int abc_action_bar_home_description=0x7f120001;
    /**
     * Content description for the action bar "up" affordance. [CHAR LIMIT=NONE]
     */
    public static final int abc_action_bar_up_description=0x7f120002;
    /**
     * Content description for the action menu overflow button. [CHAR LIMIT=NONE]
     */
    public static final int abc_action_menu_overflow_description=0x7f120003;
    /**
     * Label for the "Done" button on the far left of action mode toolbars.
     */
    public static final int abc_action_mode_done=0x7f120004;
    /**
     * Title for a button to expand the list of activities in ActivityChooserView [CHAR LIMIT=25]
     */
    public static final int abc_activity_chooser_view_see_all=0x7f120005;
    /**
     * Description of the shwoing of a popup window with activities to choose from. [CHAR LIMIT=NONE]
     */
    public static final int abc_activitychooserview_choose_application=0x7f120006;
    /**
     * Default text for a button that can be toggled on and off.
     */
    public static final int abc_capital_off=0x7f120007;
    /**
     * Default text for a button that can be toggled on and off.
     */
    public static final int abc_capital_on=0x7f120008;
    public static final int abc_font_family_body_1_material=0x7f120009;
    public static final int abc_font_family_body_2_material=0x7f12000a;
    public static final int abc_font_family_button_material=0x7f12000b;
    public static final int abc_font_family_caption_material=0x7f12000c;
    public static final int abc_font_family_display_1_material=0x7f12000d;
    public static final int abc_font_family_display_2_material=0x7f12000e;
    public static final int abc_font_family_display_3_material=0x7f12000f;
    public static final int abc_font_family_display_4_material=0x7f120010;
    public static final int abc_font_family_headline_material=0x7f120011;
    public static final int abc_font_family_menu_material=0x7f120012;
    public static final int abc_font_family_subhead_material=0x7f120013;
    public static final int abc_font_family_title_material=0x7f120014;
    /**
     * Default hint text for the system-wide search UI's text field. [CHAR LIMIT=30]
     */
    public static final int abc_search_hint=0x7f120015;
    /**
     * SearchView accessibility description for clear button [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_clear=0x7f120016;
    /**
     * SearchView accessibility description for search text field [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_query=0x7f120017;
    /**
     * SearchView accessibility description for search button [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_search=0x7f120018;
    /**
     * SearchView accessibility description for submit button [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_submit=0x7f120019;
    /**
     * SearchView accessibility description for voice button [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_voice=0x7f12001a;
    /**
     * Description of the choose target button in a ShareActionProvider (share UI). [CHAR LIMIT=NONE]
     */
    public static final int abc_shareactionprovider_share_with=0x7f12001b;
    /**
     * Description of a share target (both in the list of such or the default share button) in a ShareActionProvider (share UI). [CHAR LIMIT=NONE]
     */
    public static final int abc_shareactionprovider_share_with_application=0x7f12001c;
    /**
     * Content description for the Toolbar icon used to collapse an expanded action mode. [CHAR LIMIT=NONE]
     */
    public static final int abc_toolbar_collapse_description=0x7f12001d;
    /**
     * Main settings screen, setting title for the user to go into the About phone screen
     */
    public static final int about_settings=0x7f12001e;
    /**
     * Main settings screen, setting summary for the user to go into the About phone screen
     */
    public static final int about_settings_summary=0x7f12001f;
    /**
     * Summary of device info page [CHAR LIMIT=NONE]
     */
    public static final int about_summary=0x7f120020;
    /**
     * Sound & display settings screen, accelerometer-based rotation summary text when check box is clear
     */
    public static final int accelerometer_summary_off=0x7f120021;
    /**
     * Sound & display settings screen, accelerometer-based rotation summary text when check box is selected
     */
    public static final int accelerometer_summary_on=0x7f120022;
    /**
     * Sound & display settings screen, accelerometer-based rotation check box label
     */
    public static final int accelerometer_title=0x7f120023;
    /**
     * Access point names title.  [CHAR LIMIT=50]
     */
    public static final int access_point_names=0x7f120024;
    /**
     * Title for accessibility preference for configuring amount of time that has to pass after pointer stops moving before click action can be performed (if automatic click after pointer stops moving feature is enabled). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_autoclick_delay_preference_title=0x7f120025;
    /**
     * Title for accessibility preference for configuring feature that performs click action soon after mouse/trackpad pointer stops moving. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_autoclick_preference_title=0x7f120026;
    /**
     * Title for the accessibility preference screen to enable video captioning. [CHAR LIMIT=35]
     */
    public static final int accessibility_captioning_title=0x7f120027;
    /**
     * Content description for personal profile accounts group [CHAR LIMIT=NONE]
     */
    public static final int accessibility_category_personal=0x7f120028;
    /**
     * Content description for work profile accounts group [CHAR LIMIT=NONE]
     */
    public static final int accessibility_category_work=0x7f120029;
    /**
     * Subtitle for the accessibility preference to configure display color space correction. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_daltonizer_preference_subtitle=0x7f12002a;
    /**
     * Title for the accessibility preference to configure display color space correction. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_daltonizer_preference_title=0x7f12002b;
    /**
     * Subtitle for the accessibility preference to configure display color inversion. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_inversion_preference_subtitle=0x7f12002c;
    /**
     * Title for the accessibility preference to configure display color inversion. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_display_inversion_preference_title=0x7f12002d;
    /**
     * Summary for the disabled state of an accessibility feature. [CHAR LIMIT=10]
     */
    public static final int accessibility_feature_state_off=0x7f12002e;
    /**
     * Summary for the enabled state of an accessibility feature. [CHAR LIMIT=10]
     */
    public static final int accessibility_feature_state_on=0x7f12002f;
    /**
     * Title for the preference to configure the accessibility shortcut, which uses the volume keys. [CHAR LIMIT=35]
     */
    public static final int accessibility_global_gesture_preference_title=0x7f120030;
    /**
     * Number of characters used for lock screen text [CHAR LIMIT=NONE]
     */
    public static final int accessibility_lock_screen_progress=0x7f120031;
    /**
     * Title for accessibility preference to choose long-press delay i.e. timeout before it is detected. [CHAR LIMIT=35]
     */
    public static final int accessibility_long_press_timeout_preference_title=0x7f120032;
    /**
     * Title for accessibility menu item to lauch a settings activity. [CHAR LIMIT=15]
     */
    public static final int accessibility_menu_item_settings=0x7f120033;
    /**
     * Title for the acccessibility shortcut's summary if no service is selected for use with the shortcut. [CHAR LIMIT=50]
     */
    public static final int accessibility_no_service_selected=0x7f120034;
    /**
     * Title for the prompt shown as a placeholder if no accessibility services are installed. [CHAR LIMIT=50]
     */
    public static final int accessibility_no_services_installed=0x7f120035;
    /**
     * Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_no_wifi=0x7f120036;
    /**
     * Content description for personal profile details page title [CHAR LIMIT=NONE]
     */
    public static final int accessibility_personal_account_title=0x7f120037;
    /**
     * Title for the accessibility preference to power button to end a call. [CHAR LIMIT=35]
     */
    public static final int accessibility_power_button_ends_call_prerefence_title=0x7f120038;
    /**
     * Summary for the accessibility preference to enable screen magnification. [CHAR LIMIT=25]
     */
    public static final int accessibility_preference_magnification_summary=0x7f120039;
    /**
     * Title for the accessibility preference screen to enable triple-tap gesture screen magnification. [CHAR LIMIT=35]
     */
    public static final int accessibility_screen_magnification_gestures_title=0x7f12003a;
    /**
     * Summary text appearing on the accessibility preference screen to enable screen magnification from the nav bar when the feature is enabled, but the accessibility button is not configured correctly for the feature to be used [CHAR LIMIT=none]
     */
    public static final int accessibility_screen_magnification_navbar_configuration_warning=0x7f12003b;
    /**
     * Short summary for nav bar Magnification. Tells the user that this feature allows the user to magnify the screen using a button in the nav bar
     */
    public static final int accessibility_screen_magnification_navbar_short_summary=0x7f12003c;
    /**
     * Summary for the accessibility preference screen to enable screen magnification via the nav bar. [CHAR LIMIT=none]
     */
    public static final int accessibility_screen_magnification_navbar_summary=0x7f12003d;
    /**
     * Title for the accessibility preference screen to enable navigation bar screen magnification. [CHAR LIMIT=35]
     */
    public static final int accessibility_screen_magnification_navbar_title=0x7f12003e;
    /**
     * Short summary for Magnification gesture. Tells the user that this feature allows the user to magnify the screen by tapping 3 times. Appears in accessibility portion of setup wizard
     */
    public static final int accessibility_screen_magnification_short_summary=0x7f12003f;
    /**
     * Summary for the accessibility magnification setting indicating both "Magnify with button" and "Magnify with triple-tap" are enabled [CHAR LIMIT=50]
     */
    public static final int accessibility_screen_magnification_state_navbar_gesture=0x7f120040;
    /**
     * Summary for the accessibility preference screen to enable screen magnification gestures. [CHAR LIMIT=none]
     */
    public static final int accessibility_screen_magnification_summary=0x7f120041;
    /**
     * Title for the accessibility preference screen to enable screen magnification. [CHAR LIMIT=35]
     */
    public static final int accessibility_screen_magnification_title=0x7f120042;
    /**
     * Default description for an accessibility service if the latter doesn't provide one. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_service_default_description=0x7f120043;
    /**
     * Settings title in main settings screen for accessibility settings
     */
    public static final int accessibility_settings=0x7f120044;
    /**
     * Summary for Accessibility settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int accessibility_settings_summary=0x7f120045;
    /**
     * Settings title for accessibility settings screen
     */
    public static final int accessibility_settings_title=0x7f120046;
    /**
     * Description of accessibility shortcut. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_shortcut_description=0x7f120047;
    /**
     * Title for the switch preference that controls whether or not the accessibility shortcut works on the lock screen. [CHAR LIMIT=35]
     */
    public static final int accessibility_shortcut_service_on_lock_screen_title=0x7f120048;
    /**
     * Title for the preference to choose the service that is turned on and off by the accessibility shortcut. [CHAR LIMIT=35]
     */
    public static final int accessibility_shortcut_service_title=0x7f120049;
    /**
     * Preference's state when disabled. Note: UPPERCASE
     */
    public static final int accessibility_summary_state_disabled=0x7f12004a;
    /**
     * Preference's state when enabled. Note: UPPERCASE
     */
    public static final int accessibility_summary_state_enabled=0x7f12004b;
    /**
     * Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_sync_disabled=0x7f12004c;
    /**
     * Content description of the enabled sync icon for accessibility. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_sync_enabled=0x7f12004d;
    /**
     * Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_sync_error=0x7f12004e;
    /**
     * Content description of the in progress sync icon for accessibility. [CHAR LIMIT=NONE]
     */
    public static final int accessibility_sync_in_progress=0x7f12004f;
    /**
     * Title for the accessibility preference to high contrast text. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_high_text_contrast_preference_title=0x7f120050;
    /**
     * Title for the accessibility preference for enabling/disabling large icons for mouse/trackpad pointers. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_large_pointer_icon_title=0x7f120051;
    /**
     * Summary for the accessibility preference for master mono. [CHAR LIMIT=50]
     */
    public static final int accessibility_toggle_master_mono_summary=0x7f120052;
    /**
     * Title for the accessibility preference for master mono. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_master_mono_title=0x7f120053;
    /**
     * Summary for the accessibility preference to auto update screen magnification. [CHAR LIMIT=50]
     */
    public static final int accessibility_toggle_screen_magnification_auto_update_preference_summary=0x7f120054;
    /**
     * Title for the accessibility preference to auto update screen magnification. [CHAR LIMIT=35]
     */
    public static final int accessibility_toggle_screen_magnification_auto_update_preference_title=0x7f120055;
    /**
     * Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_off=0x7f120056;
    /**
     * Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_one_bar=0x7f120057;
    /**
     * Content description of the Wi-Fi security type. This message indicates this is an open Wi-Fi (no password needed) [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_security_type_none=0x7f120058;
    /**
     * Content description of the Wi-Fi security type. This message indicates this is a secured Wi-Fi (password needed) [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_security_type_secured=0x7f120059;
    /**
     * Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_signal_full=0x7f12005a;
    /**
     * Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_three_bars=0x7f12005b;
    /**
     * Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE]
     */
    public static final int accessibility_wifi_two_bars=0x7f12005c;
    /**
     * Content description for work profile details page title [CHAR LIMIT=NONE]
     */
    public static final int accessibility_work_account_title=0x7f12005d;
    /**
     * Title for setting tile leading to User and accounts settings [CHAR LIMIT=40]
     */
    public static final int account_dashboard_title=0x7f12005e;
    /**
     * Accounts for section header [CHAR LIMIT=30]
     */
    public static final int account_for_section_header=0x7f12005f;
    /**
     * Account settings header. [CHAR LIMIT=30]
     */
    public static final int account_settings=0x7f120060;
    /**
     * Title for menu option to enable global auto-sync of personal account data [CHAR LIMIT=30]
     */
    public static final int account_settings_menu_auto_sync=0x7f120061;
    /**
     * Title for menu option to enable global auto-sync of personal account data [CHAR LIMIT=30]
     */
    public static final int account_settings_menu_auto_sync_personal=0x7f120062;
    /**
     * Title for menu option to enable global auto-sync of work account data [CHAR LIMIT=30]
     */
    public static final int account_settings_menu_auto_sync_work=0x7f120063;
    /**
     * Main Settings screen setting option title for the item to take you to the accounts screen [CHAR LIMIT=22]
     */
    public static final int account_settings_title=0x7f120064;
    /**
     * Account specific sync settings title [CHAR LIMIT=35]
     */
    public static final int account_sync_settings_title=0x7f120065;
    /**
     * Preference summary for account sync when syncing is off for everything [CHAR LIMIT=NONE]
     */
    public static final int account_sync_summary_all_off=0x7f120066;
    /**
     * Preference summary for account sync when syncing is on for everything [CHAR LIMIT=NONE]
     */
    public static final int account_sync_summary_all_on=0x7f120067;
    /**
     * Preference summary for account sync when syncing is on for some items [CHAR LIMIT=NONE]
     */
    public static final int account_sync_summary_some_on=0x7f120068;
    /**
     * Preference label to sync account [CHAR LIMIT=60]
     */
    public static final int account_sync_title=0x7f120069;
    /**
     * Label for an accessibility action that moves a language to the bottom of the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_move_bottom=0x7f12006a;
    /**
     * Label for an accessibility action that moves a language down in the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_move_down=0x7f12006b;
    /**
     * Label for an accessibility action that moves a language to the top of the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_move_top=0x7f12006c;
    /**
     * Label for an accessibility action that moves a language up in the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_move_up=0x7f12006d;
    /**
     * Label for an accessibility action that removes the currently selected language from the the ordered language list [CHAR LIMIT=20]
     */
    public static final int action_drag_label_remove=0x7f12006e;
    /**
     * Label for screen showing the active device admin apps
     */
    public static final int active_device_admin_msg=0x7f12006f;
    /**
     * Title for settings of active input methods in each IME [CHAR LIMIT=35]
     */
    public static final int active_input_method_subtypes=0x7f120070;
    /**
     * Shown in create shortcut activity when there is no shortcut that can be created. [CHAR_LIMIT=None]
     */
    public static final int activity_list_empty=0x7f120071;
    /**
     * Displayed when user launches a widget configuration activity that was uninstalled
     */
    public static final int activity_not_found=0x7f120072;
    /**
     * The title of the dialog to pick an activity.  This is shown when there are multiple activities that can do a particular action.  For example, suppose you click on the "Share" menu item in the Browser.  Since you can share the webpage URL via many communication methods, this dialog would come up with choices like "Email", "IM", etc.  This is a generic message, and the previous example is a single possible scenario (so please don't assume it's for the browser or anything :) ).
     */
    public static final int activity_picker_label=0x7f120073;
    /**
     * Message of dialog confirming that user wants to revoke access to adb from all computers they have authorized
     */
    public static final int adb_keys_warning_message=0x7f120074;
    /**
     * Warning text to user about the implications of enabling USB debugging
     */
    public static final int adb_warning_message=0x7f120075;
    /**
     * Title of warning dialog about the implications of enabling USB debugging
     */
    public static final int adb_warning_title=0x7f120076;
    /**
     * "Button" that opens a language picker. The selected language gets added to the language list. [CHAR LIMIT=30]
     */
    public static final int add_a_language=0x7f120077;
    /**
     * Button label to add an account [CHAR LIMIT=20]
     */
    public static final int add_account_label=0x7f120078;
    /**
     * Label for button to set the active device admin [CHAR_LIMIT=80]
     */
    public static final int add_device_admin=0x7f120079;
    /**
     * Title for screen to add a device admin app [CHAR LIMIT=40]
     */
    public static final int add_device_admin_msg=0x7f12007a;
    /**
     * Title for the button to trigger the 'Manage keyboards' preference sub-screen, where the user can turn on/off installed virtual keyboards.[CHAR LIMIT=35]
     */
    public static final int add_virtual_keyboard=0x7f12007b;
    /**
     * Warning when trying to add a profile owner admin after setup has completed. [CHAR LIMIT=none]
     */
    public static final int adding_profile_owner_warning=0x7f12007c;
    /**
     * Label for menu to launch a screen showing usage alerts for battery [CHAR LIMIT=30]
     */
    public static final int additional_battery_info=0x7f12007d;
    /**
     * Label for button that leads to more permissions [CHAR LIMIT=40]
     */
    public static final int additional_permissions=0x7f12007e;
    /**
     * Description of how many more permissions to view on next page [CHAR LIMIT=30]
     */
    public static final int additional_permissions_more=0x7f12007f;
    public static final int additional_system_update=0x7f120080;
    public static final int additional_system_update_menu=0x7f120081;
    /**
     * A menu item in "About phone" that allows the user to update the phone with settings
     * from their cell phone carrier. The use of the string is similar to the string
     * "system_update_settings_list_item_title" in this project. [CHAR LIMIT=25]
     */
    public static final int additional_system_update_settings_list_item_title=0x7f120082;
    /**
     * Shown in admin details page to warn user about policies the admin can set on a device. [CHAR LIMIT=NONE]
     */
    public static final int admin_device_owner_message=0x7f120083;
    /**
     * Message displayed to let the user know that some of the options are disabled by admin. [CHAR LIMIT=NONE]
     */
    public static final int admin_disabled_other_options=0x7f120084;
    public static final int admin_more_details=0x7f120085;
    /**
     * Shown in admin details page to warn user about policies the admin can set in a work profile. [CHAR LIMIT=NONE]
     */
    public static final int admin_profile_owner_message=0x7f120086;
    /**
     * Shown in admin details page to warn user about policies the admin can set on a user. [CHAR LIMIT=NONE]
     */
    public static final int admin_profile_owner_user_message=0x7f120087;
    /**
     * Shown in dialog to allow user to see more information about the device admin [CHAR LIMIT=30]
     */
    public static final int admin_support_more_info=0x7f120088;
    /**
     * Title for advanced application management settings [CHAR LIMIT=30]
     */
    public static final int advanced_apps=0x7f120089;
    /**
     * Activity title for advanced battery usage page [CHAR LIMIT=60]
     */
    public static final int advanced_battery_title=0x7f12008a;
    /**
     * Configure Notifications: Advanced section header [CHAR LIMIT=30]
     */
    public static final int advanced_section_header=0x7f12008b;
    /**
     * Title of preference group for advance security settings [CHAR LIMIT=30]
     */
    public static final int advanced_security_title=0x7f12008c;
    /**
     * Applications settings screen, setting check box title. If checked, applications show more settings options.
     */
    public static final int advanced_settings=0x7f12008d;
    /**
     * Applications settings screen, setting check box summary.  This is the summary for "Advanced settings" checkbox
     */
    public static final int advanced_settings_summary=0x7f12008e;
    /**
     * Wireless controls settings screen, setting check box label
     */
    public static final int airplane_mode=0x7f12008f;
    /**
     * Sound: Title for the option defining the default alarm sound. [CHAR LIMIT=30]
     */
    public static final int alarm_ringtone_title=0x7f120090;
    /**
     * Sound: Title for the option managing alarm volume. [CHAR LIMIT=30]
     */
    public static final int alarm_volume_option_title=0x7f120091;
    /**
     * Sound settings screen, alarm volume slider title
     */
    public static final int alarm_volume_title=0x7f120092;
    /**
     * Sound settings screen, volume title
     */
    public static final int all_volume_title=0x7f120093;
    /**
     * Strings for Dialog allow button
     */
    public static final int allow=0x7f120094;
    /**
     * Message in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE]
     */
    public static final int allow_bind_app_widget_activity_allow_bind=0x7f120095;
    /**
     * Title in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE]
     */
    public static final int allow_bind_app_widget_activity_allow_bind_title=0x7f120096;
    /**
     * Text for checkbox that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE]
     */
    public static final int allow_bind_app_widget_activity_always_allow_bind=0x7f120097;
    /**
     * check box to allow data usage when roaming [CHAR LIMIT=41]
     */
    public static final int allow_data_usage_title=0x7f120098;
    /**
     * [CHAR LIMIT=40] Notification importance title. This setting controls how notifications in older apps may alert the user (eg, sound, visual, vibrate).
     */
    public static final int allow_interruption=0x7f120099;
    /**
     * [CHAR LIMIT=180] Notification importance description. More details from allow_interruption string - specifics of how notifications may interrupt.
     */
    public static final int allow_interruption_summary=0x7f12009a;
    /**
     * Setting Checkbox title whether to allow mock locations
     */
    public static final int allow_mock_location=0x7f12009b;
    /**
     * setting Checkbox summary whether to allow mock locations
     */
    public static final int allow_mock_location_summary=0x7f12009c;
    /**
     * Description of allowing overlay setting [CHAR LIMIT=NONE]
     */
    public static final int allow_overlay_description=0x7f12009d;
    /**
     * Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app was given user permission to create widgets.
     */
    public static final int always_allow_bind_appwidgets_text=0x7f12009e;
    /**
     * Description of app always running [CHAR LIMIT=45]
     */
    public static final int always_running=0x7f12009f;
    /**
     * Amber alerts summary.  [CHAR LIMIT=60]
     */
    public static final int amber_alerts_summary=0x7f1200a0;
    /**
     * Amber alerts title.  [CHAR LIMIT=30]
     */
    public static final int amber_alerts_title=0x7f1200a1;
    /**
     * [CHAR LIMIT=30] Category title for the settings that control when Ambient display shows.
     */
    public static final int ambient_display_category_triggers=0x7f1200a2;
    /**
     * Summary for settings suggestion for ambient display pick up [CHAR LIMIT=60]
     */
    public static final int ambient_display_pickup_suggestion_summary=0x7f1200a3;
    /**
     * Summary text for ambient display (phone) [CHAR LIMIT=NONE]
     */
    public static final int ambient_display_pickup_summary=0x7f1200a4;
    /**
     * Preference and settings suggestion title text for ambient display pick up (phone) [CHAR LIMIT=60]
     */
    public static final int ambient_display_pickup_title=0x7f1200a5;
    /**
     * [CHAR LIMIT=50] Summary of the preference that opens the Ambient display settings screen, when Ambient display is set to be always on
     */
    public static final int ambient_display_screen_summary_always_on=0x7f1200a6;
    /**
     * [CHAR LIMIT=30] Summary of the preference that opens the Ambient display settings screen, when Ambient display is set to show when new notifications come in.
     */
    public static final int ambient_display_screen_summary_notifications=0x7f1200a7;
    /**
     * [CHAR LIMIT=30] Title of the preference that opens the Ambient display settings screen.
     */
    public static final int ambient_display_screen_title=0x7f1200a8;
    /**
     * Summary for settings suggestion for double tap power for camera [CHAR LIMIT=60]
     */
    public static final int ambient_display_suggestion_summary=0x7f1200a9;
    /**
     * Summary text for ambient display double tap [CHAR LIMIT=NONE]
     */
    public static final int ambient_display_summary=0x7f1200aa;
    /**
     * Preference and settings suggestion title text for ambient display double tap (phone) [CHAR LIMIT=60]
     */
    public static final int ambient_display_title=0x7f1200ab;
    /**
     * Used to describe the enabled state of the Android Beam feature when NFC, which it relies on, is turned off [CHAR LIMIT=NONE]
     */
    public static final int android_beam_disabled_summary=0x7f1200ac;
    /**
     * Explanation of the Android Beam feature in the Android Beam settings panel. The use of "beam" here is as a verb and not considered trademarked. [CHAR LIMIT=NONE]
     */
    public static final int android_beam_explained=0x7f1200ad;
    /**
     * Used in the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32]
     */
    public static final int android_beam_label=0x7f1200ae;
    /**
     * Used to describe the off state of the Android Beam feature [CHAR LIMIT=NONE]
     */
    public static final int android_beam_off_summary=0x7f1200af;
    /**
     * Used to describe the on state of the Android Beam feature [CHAR LIMIT=NONE]
     */
    public static final int android_beam_on_summary=0x7f1200b0;
    /**
     * Used to enter the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32]
     */
    public static final int android_beam_settings_title=0x7f1200b1;
    /**
     * UI debug setting: scaling factor for all Animator-based animations [CHAR LIMIT=25]
     */
    public static final int animator_duration_scale_title=0x7f1200b2;
    /**
     * Text of pop up message if the request for a "migrate primary storage" operation
     * (see storage_menu_migrate) is denied as another is already in progress. [CHAR LIMIT=75]
     */
    public static final int another_migration_already_in_progress=0x7f1200b3;
    /**
     * Edit access point labels: The actual access point name
     */
    public static final int apn_apn=0x7f1200b4;
    /**
     * Edit acces  point labels: Authenticaton type
     */
    public static final int apn_auth_type=0x7f1200b5;
    /**
     * Authentication Typs: CHAP
     */
    public static final int apn_auth_type_chap=0x7f1200b6;
    /**
     * Authentication Typs: None
     */
    public static final int apn_auth_type_none=0x7f1200b7;
    /**
     * Authentication Typs: PAP
     */
    public static final int apn_auth_type_pap=0x7f1200b8;
    /**
     * Authentication Typs: PAP or CHAP
     */
    public static final int apn_auth_type_pap_chap=0x7f1200b9;
    /**
     * Screen title after user selects APNs setting option
     */
    public static final int apn_edit=0x7f1200ba;
    /**
     * Edit access point labels: The port number of the proxy to use for this APN
     */
    public static final int apn_http_port=0x7f1200bb;
    /**
     * Edit access point labels: The addess of the proxy to use for this APN
     */
    public static final int apn_http_proxy=0x7f1200bc;
    /**
     * Edit access point labels:
     */
    public static final int apn_mcc=0x7f1200bd;
    /**
     * Edit access point labels: The port on the proxy used for MMS
     */
    public static final int apn_mms_port=0x7f1200be;
    /**
     * Edit access point labels: The proxy to use for MMS (multimedia messages)
     */
    public static final int apn_mms_proxy=0x7f1200bf;
    /**
     * Edit access point labels:
     */
    public static final int apn_mmsc=0x7f1200c0;
    /**
     * Edit access point labels:
     */
    public static final int apn_mnc=0x7f1200c1;
    /**
     * Edit access point labels: A label the user can give to the APN to allow him to differentiate it from the others
     */
    public static final int apn_name=0x7f1200c2;
    /**
     * Edit access point label summary text when no value has been set
     * unknown quoting pattern: original -1, translation 1
     */
    public static final int apn_not_set=0x7f1200c3;
    /**
     * Edit access point labels: The password that will be used when connecting to this APN
     */
    public static final int apn_password=0x7f1200c4;
    /**
     * Edit access point labels: The protocol of the APN, e.g., "IPv4", "IPv6", or "IPv4/IPv6".
     */
    public static final int apn_protocol=0x7f1200c5;
    /**
     * Edit access point labels: The protocol of the APN when roaming, e.g., "IPv4", "IPv6", or "IPv4/IPv6".
     */
    public static final int apn_roaming_protocol=0x7f1200c6;
    /**
     * Edit access point labels: The server address to conenct to for this APN
     */
    public static final int apn_server=0x7f1200c7;
    /**
     * APN settings screen title
     */
    public static final int apn_settings=0x7f1200c8;
    /**
     * Error message for users that aren't allowed to modify Access Point Names settings [CHAR LIMIT=none]
     */
    public static final int apn_settings_not_available=0x7f1200c9;
    /**
     * Edit access point labels: The type of APN
     */
    public static final int apn_type=0x7f1200ca;
    /**
     * Edit access point labels: The username that will be used when conencting to this APN
     */
    public static final int apn_user=0x7f1200cb;
    /**
     * Summary for Apps & Notification settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int app_and_notification_dashboard_summary=0x7f1200cc;
    /**
     * Title for setting tile leading to Apps & Notification settings [CHAR LIMIT=40]
     */
    public static final int app_and_notification_dashboard_title=0x7f1200cd;
    /**
     * Title for data usage screen when entered from app info [CHAR LIMIT=30]
     */
    public static final int app_data_usage=0x7f1200ce;
    /**
     * Title for setting tile leading to setting UI which allows user set default app to
     * handle actions such as open web page, making phone calls, default SMS apps [CHAR  LIMIT=40]
     */
    public static final int app_default_dashboard_title=0x7f1200cf;
    /**
     * [CHAR LIMIT=30] Manage applications, label for option to disable app
     */
    public static final int app_disable_dlg_positive=0x7f1200d0;
    /**
     * [CHAR LIMIT=200] Manage applications, text for dialog when disabling apps
     */
    public static final int app_disable_dlg_text=0x7f1200d1;
    /**
     * [CHAR LIMIT=30] Manage applications, title for dialog when disabling apps
     */
    public static final int app_disable_dlg_title=0x7f1200d2;
    /**
     * [CHAR LIMIT=200] Manage applications, text for dialog when disabling notifications for an app
     */
    public static final int app_disable_notifications_dlg_text=0x7f1200d3;
    /**
     * [CHAR LIMIT=30] Manage applications, title for dialog when disabling notifications for an app
     */
    public static final int app_disable_notifications_dlg_title=0x7f1200d4;
    /**
     * Manage applications, restore updated system application to factory version
     */
    public static final int app_factory_reset=0x7f1200d5;
    public static final int app_forward_locked=0x7f1200d6;
    /**
     * Title for the installed app info storage page. The total storage space taken up by this app. [CHAR LIMIT=40]
     */
    public static final int app_info_storage_title=0x7f1200d7;
    /**
     * Manage applications, individual application info screen, section heading for information about the app installer [CHAR_LIMIT=25]
     */
    public static final int app_install_details_group_title=0x7f1200d8;
    /**
     * Manage applications, individual application info screen, summary for the option which will trigger application info in it's installer [CHAR_LIMIT=50]
     */
    public static final int app_install_details_summary=0x7f1200d9;
    /**
     * Manage applications, individual application info screen, title for the option which will trigger application info in it's installer [CHAR_LIMIT=25]
     */
    public static final int app_install_details_title=0x7f1200da;
    /**
     * Manage applications. application installation location summary
     */
    public static final int app_install_location_summary=0x7f1200db;
    /**
     * Manage applications, application installation location title
     */
    public static final int app_install_location_title=0x7f1200dc;
    /**
     * Category name for App Launch
     */
    public static final int app_launch_domain_links_title=0x7f1200dd;
    public static final int app_launch_open_domain_urls_summary=0x7f1200de;
    public static final int app_launch_open_domain_urls_title=0x7f1200df;
    public static final int app_launch_other_defaults_title=0x7f1200e0;
    public static final int app_launch_supported_domain_urls_title=0x7f1200e1;
    /**
     * Explanation that the app that will ALWAYS be launched to open web links to domains that it understands
     */
    public static final int app_link_open_always=0x7f1200e2;
    /**
     * Explanation that the user will be asked whether to launch the app to open web links to domains that it understands
     */
    public static final int app_link_open_ask=0x7f1200e3;
    /**
     * Explanation that the app that will NEVER be launched to open web links to domains that it understands
     */
    public static final int app_link_open_never=0x7f1200e4;
    /**
     * Label for app list of memory use [CHAR LIMIT=30]
     */
    public static final int app_list_memory_use=0x7f1200e5;
    /**
     * Label for None item in AppListPreference [CHAR LIMIT=40]
     */
    public static final int app_list_preference_none=0x7f1200e6;
    /**
     * [CHAR LIMIT=NONE] Label for amount of memory use
     */
    public static final int app_memory_use=0x7f1200e7;
    /**
     * label for application name
     */
    public static final int app_name_label=0x7f1200e8;
    /**
     * Template for concatenating two app names
     */
    public static final int app_names_concatenation_template_2=0x7f1200e9;
    /**
     * Template for concatenating three app names
     */
    public static final int app_names_concatenation_template_3=0x7f1200ea;
    /**
     * Manage applications, individual application dialog box message. Shown when the user somehow got into a state where it wants to manage some app that isn't found.
     */
    public static final int app_not_found_dlg_text=0x7f1200eb;
    /**
     * Manage applications, individual application dialog box title. Shown when the user somehow got into a state where it wants to manage some app that isn't found.
     */
    public static final int app_not_found_dlg_title=0x7f1200ec;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Block option description
     */
    public static final int app_notification_block_summary=0x7f1200ed;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Block option title
     */
    public static final int app_notification_block_title=0x7f1200ee;
    /**
     * [CHAR LIMIT=150] App notification settings: App notifications Importance title
     */
    public static final int app_notification_importance_title=0x7f1200ef;
    /**
     * [CHAR LIMIT=45] App notification listing summary, blocked apps
     */
    public static final int app_notification_listing_summary_zero=0x7f1200f0;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Override DND option description
     */
    public static final int app_notification_override_dnd_summary=0x7f1200f1;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Override DND option title
     */
    public static final int app_notification_override_dnd_title=0x7f1200f2;
    /**
     * Link to an apps notification settings [CHAR LIMIT=50]
     */
    public static final int app_notification_preferences=0x7f1200f3;
    /**
     * [CHAR LIMIT=20] Notification settings: App notifications row summary when allowed
     */
    public static final int app_notification_row_banned=0x7f1200f4;
    /**
     * [CHAR LIMIT=40] Notification settings: App notifications row summary when high priority
     */
    public static final int app_notification_row_priority=0x7f1200f5;
    /**
     * [CHAR LIMIT=20] Notification settings: App notifications row summary when sensitive
     */
    public static final int app_notification_row_sensitive=0x7f1200f6;
    /**
     * [CHAR LIMIT=NONE] App notification settings: Visibility override option title
     */
    public static final int app_notification_visibility_override_title=0x7f1200f7;
    /**
     * [CHAR LIMIT=20] Notification settings: App notifications dialog dismiss button caption
     */
    public static final int app_notifications_dialog_done=0x7f1200f8;
    /**
     * [CHAR LIMIT=NONE] Text appearing when app notifications are off
     */
    public static final int app_notifications_off_desc=0x7f1200f9;
    /**
     * Label for are-notifications-enabled checkbox in app details [CHAR LIMIT=20]
     */
    public static final int app_notifications_switch_label=0x7f1200fa;
    /**
     * Notification Settings: Title for the option managing notifications per application. [CHAR LIMIT=30]
     */
    public static final int app_notifications_title=0x7f1200fb;
    /**
     * [CHAR LIMIT=NONE] Time label for an operation that has never executed.
     */
    public static final int app_ops_never_used=0x7f1200fc;
    /**
     * [CHAR LIMIT=NONE] Time label for an operation that is currently running.
     */
    public static final int app_ops_running=0x7f1200fd;
    /**
     * [CHAR LIMIT=NONE] App ops settings title, on main settings screen. If clicked, the user is taken to a settings screen for app operations
     */
    public static final int app_ops_settings=0x7f1200fe;
    /**
     * Link to the apps page for SYSTEM_ALERT_WINDOW settings [CHAR LIMIT=45]
     */
    public static final int app_overlay_permission_preference=0x7f1200ff;
    /**
     * Preference summary text for an app when it is allowed for a permission. [CHAR LIMIT=45]
     */
    public static final int app_permission_summary_allowed=0x7f120100;
    /**
     * Preference summary text for an app when it is disallowed for a permission. [CHAR LIMIT=45]
     */
    public static final int app_permission_summary_not_allowed=0x7f120101;
    /**
     * Label for list that shows all permissions
     */
    public static final int app_permissions=0x7f120102;
    /**
     * Summary of permissions currently granted to apps [CHAR LIMIT=60]
     */
    public static final int app_permissions_summary=0x7f120103;
    /**
     * UI debug setting: limit number of running background processes [CHAR LIMIT=25]
     */
    public static final int app_process_limit_title=0x7f120104;
    /**
     * Preference label for custom restrictions [CHAR LIMIT=35]
     */
    public static final int app_restrictions_custom_label=0x7f120105;
    /**
     * Summary text for apps that are allowed to access accounts from the primary user [CHAR LIMIT=none]
     */
    public static final int app_sees_restricted_accounts=0x7f120106;
    /**
     * Summary for a case when app entries that are controlled by another entry and app can access user accounts [CHAR LIMIT=none]
     */
    public static final int app_sees_restricted_accounts_and_controlled_by=0x7f120107;
    /**
     * [CHAR LIMIT=NONE] App notification settings: link to app notification settings
     */
    public static final int app_settings_link=0x7f120108;
    /**
     * [CHAR LIMIT=NONE] Manage applications, text for dialog when disabling update apps
     */
    public static final int app_special_disable_dlg_text=0x7f120109;
    /**
     * [CHAR LIMIT=NONE] Manage applications, title for dialog when disabling updated apps
     */
    public static final int app_special_disable_dlg_title=0x7f12010a;
    /**
     * Link to the apps page for app usage settings [CHAR LIMIT=45]
     */
    public static final int app_usage_preference=0x7f12010b;
    /**
     * Manage applications, individual application info screen title. For example, if they click on "Browser" in "Manage applications", the title of the next screen will be this
     */
    public static final int application_info_label=0x7f12010c;
    /**
     * Application Restrictions screen title [CHAR LIMIT=45]
     */
    public static final int application_restrictions=0x7f12010d;
    /**
     * Manage applications, individual application info screen, label under Storage heading. The amount of space taken up by the application itself (for example, the java compield files and things like that)
     */
    public static final int application_size_label=0x7f12010e;
    /**
     * Applications settings title, on main settings screen. If clicked, the user is taken to a settings screen full of application settings
     */
    public static final int applications_settings=0x7f12010f;
    /**
     * Applications settings screen heading. The header for the Application settings screen.
     */
    public static final int applications_settings_header=0x7f120110;
    /**
     * Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen.
     * Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen. This is the string to use for devices without a keyboard (so for example, there is no "Quick launch" settings here since that feature requires a keyboard)
     */
    public static final int applications_settings_summary=0x7f120111;
    /**
     * Title of app storage screen [CHAR LIMIT=30]
     */
    public static final int apps_storage=0x7f120112;
    /**
     * Summary of apps [CHAR LIMIT=NONE]
     */
    public static final int apps_summary=0x7f120113;
    /**
     * Example summary of apps used in Setup Wizard preview screen [CHAR LIMIT=NONE]
     */
    public static final int apps_summary_example=0x7f120114;
    /**
     * Applications with restrictions header [CHAR LIMIT=45]
     */
    public static final int apps_with_restrictions_header=0x7f120115;
    /**
     * Applicaitons with restrictions - settings button [CHAR LIMIT=30]
     */
    public static final int apps_with_restrictions_settings_button=0x7f120116;
    /**
     * Manage applications, individual application screen, checkbox to control asking for compatibility mode.
     */
    public static final int ask_compatibility=0x7f120117;
    /**
     * Summary for the "context" preference to determine whether assist can access the data currently displayed on-screen [CHAR LIMIT=NONE]
     */
    public static final int assist_access_context_summary=0x7f120118;
    /**
     * Title for the "context" preference to determine whether assist can access the data currently displayed on-screen [CHAR LIMIT=40]
     */
    public static final int assist_access_context_title=0x7f120119;
    /**
     * Summary for the "screenshot" preference to determine whether assist can access the screenshot of your screen [CHAR LIMIT=NONE]
     */
    public static final int assist_access_screenshot_summary=0x7f12011a;
    /**
     * Title for the "screenshot" preference to determine whether assist can access the screenshot of your screen [CHAR LIMIT=40]
     */
    public static final int assist_access_screenshot_title=0x7f12011b;
    /**
     * Title for Assist and voice input settings [CHAR LIMIT=30]
     */
    public static final int assist_and_voice_input_title=0x7f12011c;
    /**
     * Summary for the "flash" preference to determine whether a flash is shown on screen when an assistant accesses the contents of the screeen. [CHAR LIMIT=NONE]
     */
    public static final int assist_flash_summary=0x7f12011d;
    /**
     * Title for the "flash" preference to determine whether a flash is shown on screen when an assistant accesses the contents of the screeen. [CHAR LIMIT=40]
     */
    public static final int assist_flash_title=0x7f12011e;
    /**
     * Footer text in the manage assist screen. [CHAR LIMIT=NONE]
     */
    public static final int assist_footer=0x7f12011f;
    /**
     * Title text for the assist gesture [CHAR LIMIT=60] DO NOT TRANSLATE
     */
    public static final int assist_gesture_title=0x7f120120;
    /**
     * [CHAR_LIMIT=NONE] Warning message about security implications of setting an assistant,
     * displayed as a dialog message when the user selects an assistant.
     */
    public static final int assistant_security_warning=0x7f120121;
    /**
     * Label for the button to acknowledge assistant security implications. [CHAR LIMIT=30]
     */
    public static final int assistant_security_warning_agree=0x7f120122;
    /**
     * Label for the button to bail out assistant security implications. [CHAR LIMIT=30]
     */
    public static final int assistant_security_warning_disagree=0x7f120123;
    /**
     * [CHAR_LIMIT=45] Title of the security warning dialog for setting an assitant
     */
    public static final int assistant_security_warning_title=0x7f120124;
    /**
     * Security & location settings screen, setting check box label if Assisted GPS should be enabled
     */
    public static final int assisted_gps=0x7f120125;
    /**
     * Security & location settings screen, setting summary when Assisted GPS check box is clear
     */
    public static final int assisted_gps_disabled=0x7f120126;
    /**
     * Security & location settings screen, setting summary when Assisted GPS check box is selected
     */
    public static final int assisted_gps_enabled=0x7f120127;
    /**
     * Title for the accessibility preference category of audio services and settings. [CHAR LIMIT=50]
     */
    public static final int audio_and_captions_category_title=0x7f120128;
    /**
     * Title for audio files preference. [CHAR LIMIT=50]
     */
    public static final int audio_files_title=0x7f120129;
    /**
     * Sound settings screen, setting option name checkbox to enable/disable audio recording features that improve audio recording in noisy environments
     */
    public static final int audio_record_proc_title=0x7f12012a;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers default brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_default_title=0x7f12012b;
    /**
     * Adaptive brightness settings screen, disclaimer that explains in more detail about how adaptive brightness works [CHAR LIMIT=150]
     */
    public static final int auto_brightness_disclaimer=0x7f12012c;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers high brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_high_title=0x7f12012d;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers low brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_low_title=0x7f12012e;
    /**
     * Adaptive brightness settings screen, setting option summary to disable adaptive brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_off_summary=0x7f12012f;
    /**
     * Adaptive brightness settings screen, setting option to disable adaptive brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_off_title=0x7f120130;
    /**
     * Adaptive brightness settings screen, subtitle [CHAR LIMIT=100]
     */
    public static final int auto_brightness_subtitle=0x7f120131;
    /**
     * Sound & display settings screen, setting option summary to enable adaptive brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary=0x7f120132;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is the default [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_default=0x7f120133;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is high [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_high=0x7f120134;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is low [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_low=0x7f120135;
    /**
     * Sound & display settings screen, setting option summary when adaptive brightness is off [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_off=0x7f120136;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is very high [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_very_high=0x7f120137;
    /**
     * Sound & display settings screen, setting option summary when preferred adaptive brightness is very low [CHAR LIMIT=100]
     */
    public static final int auto_brightness_summary_very_low=0x7f120138;
    /**
     * Sound & display settings screen, setting option name to enable adaptive brightness [CHAR LIMIT=30]
     */
    public static final int auto_brightness_title=0x7f120139;
    /**
     * Adaptive brightness settings screen, setting option summary to enable adaptive brightness when user prefers very high brightness.
     * Meant to make it clear that preferring very high brightness uses more battery. [CHAR LIMIT=100]
     */
    public static final int auto_brightness_very_high_summary=0x7f12013a;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers very high brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_very_high_title=0x7f12013b;
    /**
     * Adaptive brightness settings screen, setting option to enable adaptive brightness when user prefers very low brightness [CHAR LIMIT=100]
     */
    public static final int auto_brightness_very_low_title=0x7f12013c;
    /**
     * On Text & language settings screen, setting option name.  title of the setting to enable autocapitalization of entered text.  for example, after the user finishes a sentence, the next letter he types will automatically be capitalizated. [CHAR LIMIT=25]
     */
    public static final int auto_caps=0x7f12013d;
    /**
     * On Text & language settings screen, setting summary. Summary for the Auto-cap setting. [CHAR LIMIT=100]
     */
    public static final int auto_caps_summary=0x7f12013e;
    /**
     * Manage applications, individual application screen, text under Launch by default heading if the app is NOT a default for actions
     */
    public static final int auto_launch_disable_text=0x7f12013f;
    /**
     * Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app is set as a default for some actions.
     */
    public static final int auto_launch_enable_text=0x7f120140;
    /**
     * Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions
     */
    public static final int auto_launch_label=0x7f120141;
    /**
     * Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions *and* whether the app was given permission by the user to create widgets
     */
    public static final int auto_launch_label_generic=0x7f120142;
    /**
     * On Text & language settings screen, setting option name. title of the setting to enable automatic punctuation of entered text.  for example, it will change an entered "youre" to "you're".
     */
    public static final int auto_punctuate=0x7f120143;
    /**
     * On Text & language settings screen, setting summary for the Auto-punctuate setting.
     */
    public static final int auto_punctuate_summary=0x7f120144;
    /**
     * On Text & language settings screen, setting option name. title of the setting to enable autoreplace of entered text. auto replace is a feature that will automatically correct mistyped words.
     */
    public static final int auto_replace=0x7f120145;
    /**
     * On Text & language settings screen, setting summary.  This is the summary for the "Auto-replace" setting.
     */
    public static final int auto_replace_summary=0x7f120146;
    /**
     * Summary text of the "automatic restore" setting
     */
    public static final int auto_restore_summary=0x7f120147;
    /**
     * Auto-restore menu title
     */
    public static final int auto_restore_title=0x7f120148;
    /**
     * Switch summary to enable auto sync account [CHAR LIMIT=NONE]
     */
    public static final int auto_sync_account_summary=0x7f120149;
    /**
     * Switch label to enable auto sync account [CHAR LIMIT=60]
     */
    public static final int auto_sync_account_title=0x7f12014a;
    /**
     * Switch label to enable auto sync personal account [CHAR LIMIT=60]
     */
    public static final int auto_sync_personal_account_title=0x7f12014b;
    /**
     * Switch label to enable auto sync work account [CHAR LIMIT=60]
     */
    public static final int auto_sync_work_account_title=0x7f12014c;
    /**
     * Preference label for choosing auto-fill service. [CHAR LIMIT=60]
     */
    public static final int autofill_app=0x7f12014d;
    /**
     * Message of the warning dialog for setting the auto-fill app. [CHAR_LIMIT=NONE]
     */
    public static final int autofill_confirmation_message=0x7f12014e;
    /**
     * Keywords for the auto-fill feature. [CHAR LIMIT=NONE]
     */
    public static final int autofill_keywords=0x7f12014f;
    /**
     * Sound & display settings screen, setting option name to change whether the screen adjusts automatically based on lighting conditions
     */
    public static final int automatic_brightness=0x7f120150;
    /**
     * Warning when activating the automatic storage manager on legacy devices. [CHAR LIMIT=NONE]
     */
    public static final int automatic_storage_manager_activation_warning=0x7f120151;
    /**
     * Dropdown preference title for dropdown describing how many days of data to retain.
     */
    public static final int automatic_storage_manager_days_title=0x7f120152;
    /**
     * Warning for when the automatic storage manager is turned off. [CHAR LIMIT=NONE]
     */
    public static final int automatic_storage_manager_deactivation_warning=0x7f120153;
    public static final int automatic_storage_manager_freed_bytes=0x7f120154;
    /**
     * Preference title for the automatic storage manager toggle. [CHAR LIMIT=60]
     */
    public static final int automatic_storage_manager_preference_title=0x7f120155;
    /**
     * Used as title on the automatic storage manager settings. [CHAR LIMIT=60]
     */
    public static final int automatic_storage_manager_settings=0x7f120156;
    /**
     * Used as wall of text to describe the feature. [CHAR LIMIT=NONE]
     */
    public static final int automatic_storage_manager_text=0x7f120157;
    /**
     * Status message of Wi-Fi when an available network is a carrier network. [CHAR LIMIT=NONE]
     */
    public static final int available_via_carrier=0x7f120158;
    /**
     * Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE]
     */
    public static final int available_via_passpoint=0x7f120159;
    /**
     * Title for the 'available virtual keyboard' preference sub-screen. [CHAR LIMIT=35]
     */
    public static final int available_virtual_keyboard_category=0x7f12015a;
    /**
     * Label for average memory use section [CHAR LIMIT=30]
     */
    public static final int average_memory_use=0x7f12015b;
    /**
     * Label for average memory usage of device [CHAR LIMIT=25]
     */
    public static final int average_used=0x7f12015c;
    /**
     * CPU awake time title
     */
    public static final int awake=0x7f12015d;
    /**
     * Summary for the background activity [CHAR_LIMIT=120]
     */
    public static final int background_activity_summary=0x7f12015e;
    /**
     * Summary for the background activity when it is disabled [CHAR_LIMIT=120]
     */
    public static final int background_activity_summary_disabled=0x7f12015f;
    /**
     * Summary for the background activity when it is off [CHAR_LIMIT=120]
     */
    public static final int background_activity_summary_off=0x7f120160;
    /**
     * Summary for the background activity when it is on [CHAR_LIMIT=120]
     */
    public static final int background_activity_summary_on=0x7f120161;
    /**
     * Title for the background activity setting, which allows a user to control whether an app can run in the background [CHAR_LIMIT=40]
     */
    public static final int background_activity_title=0x7f120162;
    /**
     * Settings item title for background check prefs [CHAR LIMIT=35]
     */
    public static final int background_check_pref=0x7f120163;
    /**
     * Settings screen title for background check prefs [CHAR LIMIT=35]
     */
    public static final int background_check_title=0x7f120164;
    /**
     * Data synchronization settings screen, title of setting that controls whether background data should be used [CHAR LIMIT=30]
     */
    public static final int background_data=0x7f120165;
    /**
     * Data synchronization settings screen, message of dialog that confirms the user's unchecking of background data [CHAR LIMIT=200]
     */
    public static final int background_data_dialog_message=0x7f120166;
    /**
     * Data synchronization settings screen, title of dialog that confirms the user's unchecking of background data [CHAR LIMIT=20]
     */
    public static final int background_data_dialog_title=0x7f120167;
    /**
     * Data synchronization settings screen, summary of setting that controls whether background data should be used [CHAR LIMIT=60]
     */
    public static final int background_data_summary=0x7f120168;
    /**
     * Running service details, description for background process.
     */
    public static final int background_process_stop_description=0x7f120169;
    /**
     * Default summary text of the "Configure backup account" setting [CHAR LIMIT=80]
     */
    public static final int backup_configure_account_default_summary=0x7f12016a;
    /**
     * Configure backup account options menu title [CHAR LIMIT=25]
     */
    public static final int backup_configure_account_title=0x7f12016b;
    /**
     * Summary text of the "back up data" setting
     */
    public static final int backup_data_summary=0x7f12016c;
    /**
     * Backup data menu title
     */
    public static final int backup_data_title=0x7f12016d;
    /**
     * Backup disabled summary [CHAR LIMIT=NONE]
     */
    public static final int backup_disabled=0x7f12016e;
    /**
     * Dialog title for confirmation to erase backup data from server
     */
    public static final int backup_erase_dialog_message=0x7f12016f;
    /**
     * Dialog title for confirmation to erase backup data from server
     */
    public static final int backup_erase_dialog_title=0x7f120170;
    /**
     * Title of the preference informing the user about the backup service being inactive [CHAR LIMIT=50]
     */
    public static final int backup_inactive_title=0x7f120171;
    /**
     * Button label for cancelling the new-password operation and retaining the user's previous full-backup password
     */
    public static final int backup_pw_cancel_button_text=0x7f120172;
    /**
     * Button label for setting the user's new full-backup password
     */
    public static final int backup_pw_set_button_text=0x7f120173;
    /**
     * Backup section title
     */
    public static final int backup_section_title=0x7f120174;
    /**
     * Band mode screen. Status message when unsuccessful.
     */
    public static final int band_mode_failed=0x7f120175;
    /**
     * Band mode screen.  Loading message.
     */
    public static final int band_mode_loading=0x7f120176;
    /**
     * Band mode screen. Button caption to set the bandmode.
     */
    public static final int band_mode_set=0x7f120177;
    /**
     * Band mode screen. Statusm essage when successful.
     */
    public static final int band_mode_succeeded=0x7f120178;
    /**
     * Band mode screen.  Title of activity.
     */
    public static final int band_mode_title=0x7f120179;
    /**
     * About phone screen,  setting option name  [CHAR LIMIT=40]
     */
    public static final int baseband_version=0x7f12017a;
    /**
     * Summary for anomalies, meaning some apps behaving abnormally  [CHAR LIMIT=80]
     */
    public static final int battery_abnormal_apps_summary=0x7f12017b;
    /**
     * Activity title for battery abnormal details page [CHAR LIMIT=60]
     */
    public static final int battery_abnormal_details_title=0x7f12017c;
    /**
     * Summary for location anomaly, meaning device is requesting location too frequently [CHAR LIMIT=60]
     */
    public static final int battery_abnormal_location_summary=0x7f12017d;
    /**
     * Summary for wakelock anomaly, means device been kept awake [CHAR LIMIT=60]
     */
    public static final int battery_abnormal_wakelock_summary=0x7f12017e;
    /**
     * Summary for wakeup alarm anomaly, meaning device been wakeup in the background [CHAR LIMIT=60]
     */
    public static final int battery_abnormal_wakeup_alarm_summary=0x7f12017f;
    /**
     * Label for app details action
     */
    public static final int battery_action_app_details=0x7f120180;
    /**
     * Label for app settings action
     */
    public static final int battery_action_app_settings=0x7f120181;
    /**
     * Label for bluetooth settings
     */
    public static final int battery_action_bluetooth=0x7f120182;
    /**
     * Label for display settings
     */
    public static final int battery_action_display=0x7f120183;
    /**
     * Label for force stop action
     */
    public static final int battery_action_stop=0x7f120184;
    /**
     * Label for wifi settings
     */
    public static final int battery_action_wifi=0x7f120185;
    /**
     * Description for battery usage background time for an app, i.e. Active for 30min. Note: ^1 should be used in all translations [CHAR LIMIT=60]
     */
    public static final int battery_active_for=0x7f120186;
    /**
     * [CHAR LIMIT=50] Description for power consumed by applications
     */
    public static final int battery_desc_apps=0x7f120187;
    /**
     * Description for bluetooth power consumption detail
     */
    public static final int battery_desc_bluetooth=0x7f120188;
    /**
     * [CHAR_LIMIT=NONE] Description for power consumed by the camera
     */
    public static final int battery_desc_camera=0x7f120189;
    /**
     * Description for power consumed by display
     */
    public static final int battery_desc_display=0x7f12018a;
    /**
     * [CHAR_LIMIT=NONE] Description for power consumed by the flashlight
     */
    public static final int battery_desc_flashlight=0x7f12018b;
    /**
     * [CHAR LIMIT=50] Description for over-counted power use
     */
    public static final int battery_desc_overcounted=0x7f12018c;
    /**
     * Description for cell radio detail
     */
    public static final int battery_desc_radio=0x7f12018d;
    /**
     * Description for standby detail
     */
    public static final int battery_desc_standby=0x7f12018e;
    /**
     * [CHAR LIMIT=50] Description for unaccounted power use
     */
    public static final int battery_desc_unaccounted=0x7f12018f;
    /**
     * [CHAR LIMIT=50] Description for power consumed by users
     */
    public static final int battery_desc_users=0x7f120190;
    /**
     * Description for voice call detail
     */
    public static final int battery_desc_voice=0x7f120191;
    /**
     * Description for wifi connectivity
     */
    public static final int battery_desc_wifi=0x7f120192;
    /**
     * Title for text that shows the amount of time an app has been running while in the background. [CHAR LIMIT=80]
     */
    public static final int battery_detail_background=0x7f120193;
    /**
     * Title for text that shows the amount of time an app has been running while in the foreground. [CHAR LIMIT=80]
     */
    public static final int battery_detail_foreground=0x7f120194;
    /**
     * Title for the battery usage group, which means all the battery data are calculated 'since full charge' [CHAR LIMIT=40]
     */
    public static final int battery_detail_info_title=0x7f120195;
    /**
     * Title for the battery management group [CHAR LIMIT=40]
     */
    public static final int battery_detail_manage_title=0x7f120196;
    /**
     * Description for battery usage amount, i.e. 16% of overall app usage(340 mAh). [CHAR LIMIT=120]
     */
    public static final int battery_detail_power_percentage=0x7f120197;
    /**
     * Title for battery usage amount by this app. [CHAR LIMIT=80]
     */
    public static final int battery_detail_power_usage=0x7f120198;
    /**
     * Description for battery usage detail information since last full charge. [CHAR LIMIT=120]
     */
    public static final int battery_detail_since_full_charge=0x7f120199;
    /**
     * Activity title for battery usage details for an app. or power consumer
     */
    public static final int battery_details_title=0x7f12019a;
    /**
     * Description for text in battery footer. [CHAR LIMIT=NONE]
     */
    public static final int battery_footer_summary=0x7f12019b;
    /**
     * [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging from an unknown source.
     */
    public static final int battery_info_status_charging=0x7f12019c;
    /**
     * [CHAR_LIMIT=20] Battery use screen with lower case.  Battery status shown in chart label when charging from an unknown source.
     */
    public static final int battery_info_status_charging_lower=0x7f12019d;
    /**
     * Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int battery_info_status_discharging=0x7f12019e;
    /**
     * Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int battery_info_status_full=0x7f12019f;
    /**
     * Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int battery_info_status_not_charging=0x7f1201a0;
    /**
     * Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int battery_info_status_unknown=0x7f1201a1;
    /**
     * Title for usage time since last full charge. [CHAR LIMIT=60]
     */
    public static final int battery_last_full_charge=0x7f1201a2;
    /**
     * Phone info screen, section titles:
     */
    public static final int battery_level_title=0x7f1201a3;
    /**
     * Glyph to be overlaid atop the battery when the level is extremely low. Do not translate.
     */
    public static final int battery_meter_very_low_overlay_symbol=0x7f1201a4;
    /**
     * [CHAR LIMIT=NONE] Description for unaccounted power use
     */
    public static final int battery_msg_unaccounted=0x7f1201a5;
    /**
     * Description for percentage of battery usage for an app, i.e. Screen: 30% of overall battery. [CHAR LIMIT=60]
     */
    public static final int battery_overall_usage=0x7f1201a6;
    /**
     * [CHAR_LIMIT=40] Battery percentage: Title
     */
    public static final int battery_percentage=0x7f1201a7;
    /**
     * [CHAR_LIMIT=NONE] Battery percentage: Description for preference
     */
    public static final int battery_percentage_description=0x7f1201a8;
    /**
     * Title of a group of settings that let you manage settings that affect battery life [CHAR LIMIT=60]
     */
    public static final int battery_power_management=0x7f1201a9;
    /**
     * [CHAR_LIMIT=40] Battery saver: Label for feature, title + menu item
     */
    public static final int battery_saver=0x7f1201aa;
    /**
     * [CHAR_LIMIT=NONE] Battery saver: Description for automatic entry option: Never
     */
    public static final int battery_saver_desc_turn_on_auto_never=0x7f1201ab;
    /**
     * [CHAR_LIMIT=NONE] Battery saver: Description for automatic entry option: pct% battery
     */
    public static final int battery_saver_desc_turn_on_auto_pct=0x7f1201ac;
    /**
     * Summary of battery saver when off [CHAR LIMIT=NONE]
     */
    public static final int battery_saver_off_summary=0x7f1201ad;
    /**
     * Summary of battery saver when on [CHAR LIMIT=NONE]
     */
    public static final int battery_saver_on_summary=0x7f1201ae;
    /**
     * [CHAR_LIMIT=40] Battery saver: Value for automatic entry option: Never
     */
    public static final int battery_saver_turn_on_automatically_never=0x7f1201af;
    /**
     * [CHAR_LIMIT=40] Battery saver: Value for automatic entry option: pct% battery
     */
    public static final int battery_saver_turn_on_automatically_pct=0x7f1201b0;
    /**
     * [CHAR_LIMIT=40] Battery saver: Title for automatic entry option
     */
    public static final int battery_saver_turn_on_automatically_title=0x7f1201b1;
    /**
     * Description for battery screen usage time for an app, i.e. Screen usage 30min. Note: ^1 should be used in all translations [CHAR LIMIT=60]
     */
    public static final int battery_screen_usage=0x7f1201b2;
    /**
     * Battery usage since user reset the stats
     */
    public static final int battery_since_reset=0x7f1201b3;
    /**
     * Battery usage since unplugged
     */
    public static final int battery_since_unplugged=0x7f1201b4;
    /**
     * [CHAR LIMIT=25] Label for battery stats camera on state graph
     */
    public static final int battery_stats_camera_on_label=0x7f1201b5;
    /**
     * [CHAR LIMIT=25] Label for battery stats charging state graph
     */
    public static final int battery_stats_charging_label=0x7f1201b6;
    /**
     * Battery usage duration
     */
    public static final int battery_stats_duration=0x7f1201b7;
    /**
     * [CHAR LIMIT=25] Label for battery stats flashlight on state graph
     */
    public static final int battery_stats_flashlight_on_label=0x7f1201b8;
    /**
     * [CHAR LIMIT=25] Label for battery stats gps on state graph
     */
    public static final int battery_stats_gps_on_label=0x7f1201b9;
    /**
     * Battery usage during last unplugged period
     */
    public static final int battery_stats_last_duration=0x7f1201ba;
    /**
     * Battery usage on battery duration
     */
    public static final int battery_stats_on_battery=0x7f1201bb;
    /**
     * [CHAR LIMIT=25] Label for battery stats phone signal strength graph
     */
    public static final int battery_stats_phone_signal_label=0x7f1201bc;
    /**
     * [CHAR LIMIT=25] Label for battery stats screen on state graph
     */
    public static final int battery_stats_screen_on_label=0x7f1201bd;
    /**
     * [CHAR LIMIT=25] Label for battery stats wake lock state graph
     */
    public static final int battery_stats_wake_lock_label=0x7f1201be;
    /**
     * [CHAR LIMIT=25] Label for battery stats wifi running state graph
     */
    public static final int battery_stats_wifi_running_label=0x7f1201bf;
    /**
     * Phone info screen, section titles:
     */
    public static final int battery_status_title=0x7f1201c0;
    /**
     * [CHAR LIMIT=100] Suggestion for getting apps to consume less power due to GPS
     */
    public static final int battery_sugg_apps_gps=0x7f1201c1;
    /**
     * Suggestion for exploring application info to stop or uninstall
     */
    public static final int battery_sugg_apps_info=0x7f1201c2;
    /**
     * Suggestion for getting apps to consume less power
     */
    public static final int battery_sugg_apps_settings=0x7f1201c3;
    /**
     * Suggestion for bluetooth
     */
    public static final int battery_sugg_bluetooth_basic=0x7f1201c4;
    /**
     * Suggestion for bluetooth headset
     */
    public static final int battery_sugg_bluetooth_headset=0x7f1201c5;
    /**
     * Suggestion for reducing display power
     */
    public static final int battery_sugg_display=0x7f1201c6;
    /**
     * Suggestion to switch to airplane mode to save power
     */
    public static final int battery_sugg_radio=0x7f1201c7;
    /**
     * Suggestion for wifi connectivity power drain
     */
    public static final int battery_sugg_wifi=0x7f1201c8;
    /**
     * Summary of power usage for an app [CHAR LIMIT=NONE]
     */
    public static final int battery_summary=0x7f1201c9;
    /**
     * Description for battery usage info for an app, i.e. 60% used by facebook. [CHAR LIMIT=60]
     */
    public static final int battery_used_by=0x7f1201ca;
    /**
     * Description for battery usage time for an app, i.e. Used for 30min. Note: ^1 should be used in all translations [CHAR LIMIT=60]
     */
    public static final int battery_used_for=0x7f1201cb;
    /**
     * Edit Beaerer Info of APN
     */
    public static final int bearer=0x7f1201cc;
    /**
     * Title of button and screen for billing cycle preferences [CHAR LIMIT=30
     */
    public static final int billing_cycle=0x7f1201cd;
    /**
     * Summary describing when the billing cycle for their phone carrier starts [CHAR LIMIT=NONE]
     */
    public static final int billing_cycle_fragment_summary=0x7f1201ce;
    /**
     * Message to describe "BLE scan always available feature" when Bluetooth is off. The
     * place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They mark a link to bring
     * the user to "scanning settings" screen.
     */
    public static final int ble_scan_notify_text=0x7f1201cf;
    /**
     * Used as setting title (for checkbox) on second screen after selecting Bluetooth settings
     */
    public static final int bluetooth=0x7f1201d0;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected.
     */
    public static final int bluetooth_a2dp_profile_summary_connected=0x7f1201d1;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred.
     */
    public static final int bluetooth_a2dp_profile_summary_use_for=0x7f1201d2;
    /**
     * Bluetooth settings. Title of the advanced bluetooth settings screen [CHAR LIMIT=30]
     */
    public static final int bluetooth_advanced_titlebar=0x7f1201d3;
    /**
     * This string asks the user whether or not to allow an app to disable bluetooth. [CHAR LIMIT=100]
     */
    public static final int bluetooth_ask_disablement=0x7f1201d4;
    /**
     * This string asks the user whether or not to allow an app to disable bluetooth. [CHAR LIMIT=100]
     */
    public static final int bluetooth_ask_disablement_no_name=0x7f1201d5;
    /**
     * Strings for asking to the user whether to allow an app to enable discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_discovery=0x7f1201d6;
    /**
     * Strings for asking to the user whether to allow an app to enable discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_discovery_no_name=0x7f1201d7;
    /**
     * This string asks the user whether or not to allow an app to enable bluetooth. [CHAR LIMIT=100]
     */
    public static final int bluetooth_ask_enablement=0x7f1201d8;
    /**
     * Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_enablement_and_discovery=0x7f1201d9;
    /**
     * Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_enablement_and_discovery_no_name=0x7f1201da;
    /**
     * Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_enablement_and_lasting_discovery=0x7f1201db;
    /**
     * Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_enablement_and_lasting_discovery_no_name=0x7f1201dc;
    /**
     * This string asks the user whether or not to allow an app to enable bluetooth. [CHAR LIMIT=100]
     */
    public static final int bluetooth_ask_enablement_no_name=0x7f1201dd;
    /**
     * Strings for asking to the user whether to allow an app to enable lasting discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_lasting_discovery=0x7f1201de;
    /**
     * Strings for asking to the user whether to allow an app to enable lasting discovery mode. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_ask_lasting_discovery_no_name=0x7f1201df;
    /**
     * Strings for device profile auto connect setting
     */
    public static final int bluetooth_auto_connect=0x7f1201e0;
    /**
     * Bluetooth broadcasting settings, option to enable/disable broadcasting
     */
    public static final int bluetooth_broadcasting=0x7f1201e1;
    /**
     * Message for confirmation of passkey to complete pairing. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_confirm_passkey_msg=0x7f1201e2;
    /**
     * Bluetooth connecting error message [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connect_failed=0x7f1201e3;
    /**
     * Bluetooth settings.  The title of the screen to pick which profiles to connect to on the device.  For example, headphones may have both A2DP and headset, this allows the user to choose which one he wants to connect to.
     */
    public static final int bluetooth_connect_specific_profiles_title=0x7f1201e4;
    /**
     * Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected=0x7f1201e5;
    /**
     * Bluetooth settings.  Message when connected to a device, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_battery_level=0x7f1201e6;
    /**
     * Summary for Bluetooth when connected to multiple devices. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_multiple_devices_summary=0x7f1201e7;
    /**
     * Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected_no_a2dp=0x7f1201e8;
    /**
     * Bluetooth settings.  Message when connected to a device, except for media audio, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_no_a2dp_battery_level=0x7f1201e9;
    /**
     * Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected_no_headset=0x7f1201ea;
    /**
     * Bluetooth settings.  Message when connected to a device, except for phone audio, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_no_headset_battery_level=0x7f1201eb;
    /**
     * Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected_no_headset_no_a2dp=0x7f1201ec;
    /**
     * Bluetooth settings.  Message when connected to a device, except for phone/media audio, showing remote device battery level. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_no_headset_no_a2dp_battery_level=0x7f1201ed;
    /**
     * Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40]
     */
    public static final int bluetooth_connected_no_map=0x7f1201ee;
    /**
     * Summary for Bluetooth when connected to one device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_connected_summary=0x7f1201ef;
    /**
     * Bluetooth settings.  Message when connecting to a device
     */
    public static final int bluetooth_connecting=0x7f1201f0;
    /**
     * Message for the error dialog when BT connecting operation fails generically.
     */
    public static final int bluetooth_connecting_error_message=0x7f1201f1;
    /**
     * Bluetooth connection permission Alert Activity text [CHAR LIMIT=none]
     */
    public static final int bluetooth_connection_dialog_text=0x7f1201f2;
    /**
     * Notification message when a remote Bluetooth device wants to connect to a Bluetooth profile [CHAR LIMIT=none]
     */
    public static final int bluetooth_connection_notif_message=0x7f1201f3;
    /**
     * Activity label of BluetoothPermissionActivity [CHAR LIMIT=none]
     */
    public static final int bluetooth_connection_permission_request=0x7f1201f4;
    /**
     * Bluetooth settings screen, summary text for Bluetooth device with no name
     */
    public static final int bluetooth_device=0x7f1201f5;
    /**
     * Bluetooth settings. Connection options screen. Title for checkbox to enable incoming file transfers [CHAR LIMIT=30]
     */
    public static final int bluetooth_device_advanced_enable_opp_title=0x7f1201f6;
    /**
     * Bluetooth settings.  Connection options screen.  The summary of the online mode checkbox.  This describes what the setting does in the context of the screen.
     */
    public static final int bluetooth_device_advanced_online_mode_summary=0x7f1201f7;
    /**
     * Bluetooth settings.  Connection options screen.  The title of the checkbox that controls whether the device is in "online" mode or "offline" mode.  This essentially is the checkbox that controls whether any checks / unchecks on a profile should be applied immediately, or next time the device is connected.
     */
    public static final int bluetooth_device_advanced_online_mode_title=0x7f1201f8;
    /**
     * Bluetooth settings.  Connection options screen.  The title of the header that is above all of the profiles.
     * When a user decides what Bluetooth capabilities to use with the device.
     */
    public static final int bluetooth_device_advanced_profile_header_title=0x7f1201f9;
    /**
     * Bluetooth settings. Connection options screen. Title for option to rename the device. [CHAR LIMIT=30]
     */
    public static final int bluetooth_device_advanced_rename_device=0x7f1201fa;
    /**
     * Bluetooth settings.  Connection options screen.  The title of the screen. [CHAR LIMIT=40]
     */
    public static final int bluetooth_device_advanced_title=0x7f1201fb;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will connect to all profiles on the device.
     */
    public static final int bluetooth_device_context_connect=0x7f1201fc;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will take the user to another screen where they can choose exactly which profiles to connect to.
     */
    public static final int bluetooth_device_context_connect_advanced=0x7f1201fd;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will disconnect from all profiles on the device.
     */
    public static final int bluetooth_device_context_disconnect=0x7f1201fe;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will disconnect and remove pairing with the device.
     */
    public static final int bluetooth_device_context_disconnect_unpair=0x7f1201ff;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will first pair, and then connect to all profiles on the device.
     */
    public static final int bluetooth_device_context_pair_connect=0x7f120200;
    /**
     * Bluetooth settings.  Context menu item for a device.  Action will remove pairing with the device.
     */
    public static final int bluetooth_device_context_unpair=0x7f120201;
    /**
     * Bluetooth settings screen, image description for device details button. This opens the screen to rename, unpair, etc. a single device.
     */
    public static final int bluetooth_device_details=0x7f120202;
    /**
     * Title of the item to show device MAC address
     */
    public static final int bluetooth_device_mac_address=0x7f120203;
    /**
     * Bluetooth settings screen, title for the current bluetooth name setting
     */
    public static final int bluetooth_device_name=0x7f120204;
    /**
     * Description for bluetooth device name summary [CHAR LIMIT=none]
     */
    public static final int bluetooth_device_name_summary=0x7f120205;
    /**
     * Bluetooth settings screen, heading above the list of nearby bluetooth devices
     */
    public static final int bluetooth_devices=0x7f120206;
    /**
     * Setting Checkbox title for disabling Bluetooth absolute volume
     */
    public static final int bluetooth_disable_absolute_volume=0x7f120207;
    /**
     * Summary of checkbox for disabling Bluetooth absolute volume
     */
    public static final int bluetooth_disable_absolute_volume_summary=0x7f120208;
    /**
     * Bluetooth settings.  Message for disabling a profile of a bluetooth device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_disable_profile_message=0x7f120209;
    /**
     * Bluetooth settings.  Dialog title to disable a single profile of a device. [CHAR LIMIT=40]
     */
    public static final int bluetooth_disable_profile_title=0x7f12020a;
    /**
     * Summary for Bluetooth when disabled. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_disabled=0x7f12020b;
    /**
     * Bluetooth settings.  Message for disconnecting from the A2DP profile. [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_a2dp_profile=0x7f12020c;
    /**
     * Bluetooth settings.  Message for disconnecting from all profiles of a bluetooth device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_disconnect_all_profiles=0x7f12020d;
    /**
     * dialog ok button for disconnect dialog [CHAR LIMIT=20]
     */
    public static final int bluetooth_disconnect_dialog_ok=0x7f12020e;
    /**
     * Bluetooth settings.  Message for disconnecting from the headset profile. [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_headset_profile=0x7f12020f;
    /**
     * Bluetooth settings.  Message for disconnecting from the HID profile. [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_hid_profile=0x7f120210;
    /**
     * Bluetooth settings.  Message for disconnecting from the PAN profile (NAP role). [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_pan_nap_profile=0x7f120211;
    /**
     * Bluetooth settings.  Message for disconnecting from the PAN profile (user role). [CHAR LIMIT=80]
     */
    public static final int bluetooth_disconnect_pan_user_profile=0x7f120212;
    /**
     * Bluetooth settings.  Dialog title to confirm disconnecting from all profiles of a device. [CHAR LIMIT=30]
     */
    public static final int bluetooth_disconnect_title=0x7f120213;
    /**
     * Bluetooth settings.  Message when a device is disconnected
     */
    public static final int bluetooth_disconnected=0x7f120214;
    /**
     * Bluetooth settings.  Message when disconnecting from a device
     */
    public static final int bluetooth_disconnecting=0x7f120215;
    /**
     * Message when bluetooth dialog when passkey or pin needs to be displayed.
     */
    public static final int bluetooth_display_passkey_pin_msg=0x7f120216;
    /**
     * Bluetooth settings.  Dock Setting Title
     */
    public static final int bluetooth_dock_settings=0x7f120217;
    /**
     * Bluetooth settings.  Dock Setting Dialog - Checkbox selection 2: Use dock for media audio
     */
    public static final int bluetooth_dock_settings_a2dp=0x7f120218;
    /**
     * Bluetooth settings.  Dock Setting Dialog - Checkbox selection 1: Use dock as speaker phone
     */
    public static final int bluetooth_dock_settings_headset=0x7f120219;
    /**
     * Bluetooth settings.  Dock Setting Dialog - Remember setting and don't ask user again
     */
    public static final int bluetooth_dock_settings_remember=0x7f12021a;
    /**
     * Bluetooth settings.  Dock Setting Dialog Title
     */
    public static final int bluetooth_dock_settings_title=0x7f12021b;
    /**
     * Bluetooth settings. Text displayed when Bluetooth is off and device list is empty [CHAR LIMIT=50]
     */
    public static final int bluetooth_empty_list_bluetooth_off=0x7f12021c;
    /**
     * Bluetooth Settings. text displayed when user has restriction DISALLOW_CONFIG_BLUETOOTH [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_empty_list_user_restricted=0x7f12021d;
    /**
     * Checkbox label for alphanumeric PIN entry (default is numeric PIN). [CHAR LIMIT=50]
     */
    public static final int bluetooth_enable_alphanumeric_pin=0x7f12021e;
    /**
     * Setting Checkbox title for enabling Bluetooth inband ringing
     */
    public static final int bluetooth_enable_inband_ringing=0x7f12021f;
    /**
     * Summary of checkbox for enabling Bluetooth inband ringing
     */
    public static final int bluetooth_enable_inband_ringing_summary=0x7f120220;
    /**
     * Message when bluetooth dialog for passkey entry is showing. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_enter_passkey_msg=0x7f120221;
    /**
     * Pairing dialog text to remind user to enter the passkey on the other device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_enter_passkey_other_device=0x7f120222;
    /**
     * Pairing dialog text to remind user to enter the PIN on the other device. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_enter_pin_other_device=0x7f120223;
    /**
     * Title for BT error dialogs.
     */
    public static final int bluetooth_error_title=0x7f120224;
    /**
     * Bluetooth mac address message.  This message shows the bluetooth mac address for this device.  [CHAR LIMIT=120]
     */
    public static final int bluetooth_footer_mac_message=0x7f120225;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected.
     */
    public static final int bluetooth_headset_profile_summary_connected=0x7f120226;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred.
     */
    public static final int bluetooth_headset_profile_summary_use_for=0x7f120227;
    /**
     * Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected.
     */
    public static final int bluetooth_hid_profile_summary_connected=0x7f120228;
    /**
     * Bluetooth settings. Connection options screen. The summary
     * for the HID checkbox preference that describes how checking it
     * will set the HID profile as preferred.
     */
    public static final int bluetooth_hid_profile_summary_use_for=0x7f120229;
    /**
     * Message when bluetooth incoming pairing request for (2.1 devices) dialog is showing
     * syntax error in translation for bluetooth_confirm_passkey_msg (3708312912841950052) org.xmlpull.v1.XmlPullParserException: name expected (position:START_TAG <null>@1:240 in     <string name="bluetooth_confirm_passkey_msg" msgid="3708312912841950052">"Zur Kopplung mit:&gt;&lt;b&gt;<xliff:g id="DEVICE_NAME">%1$s</xliff:g>&lt;/b&gt;&lt;br&gt;&lt;br&gt;Vergewissere dich, dass folgender Zugangscode angezeigt wird:<&lt;br&gt;&lt;b&gt;P<xliff:g id="PASSKEY">%2$s</xliff:g>&lt;/b&gt;."</string>
     * )
     */
    public static final int bluetooth_incoming_pairing_msg=0x7f12022a;
    /**
     * Bluetooth Visibility disconnect question.  Asks the user if they wish to disconnect a paired bluetooth device.  [CHAR LIMIT=50]
     */
    public static final int bluetooth_is_disconnect_question=0x7f12022b;
    /**
     * Bluetooth settings screen, summary after selecting Discoverable check box [CHAR LIMIT=50]
     */
    public static final int bluetooth_is_discoverable=0x7f12022c;
    /**
     * Bluetooth settings screen, summary when Discoverable duration is set to "forever" [CHAR LIMIT=50]
     */
    public static final int bluetooth_is_discoverable_always=0x7f12022d;
    /**
     * Bluetooth Visibility message.  This message informs the user that their device is now visible to other bluetooth devices.  [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_is_visible_message=0x7f12022e;
    /**
     * Bluetooth settings screen, check box label whether or not to allow
     * bluetooth voice dialing when lock screen is up
     */
    public static final int bluetooth_lock_voice_dialing=0x7f12022f;
    /**
     * Bluetooth settings screen, lock voice dialing checkbox summary text
     */
    public static final int bluetooth_lock_voice_dialing_summary=0x7f120230;
    /**
     * Bluetooth message permission Alert Activity text [CHAR LIMIT=none]
     */
    public static final int bluetooth_map_acceptance_dialog_text=0x7f120231;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected.
     */
    public static final int bluetooth_map_profile_summary_connected=0x7f120232;
    /**
     * Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred.
     */
    public static final int bluetooth_map_profile_summary_use_for=0x7f120233;
    /**
     * Activity label of BluetoothMessagePermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none]
     */
    public static final int bluetooth_map_request=0x7f120234;
    /**
     * Bluetooth settings.  Menu option to Bluetooth advanced settings [CHAR LIMIT=20]
     */
    public static final int bluetooth_menu_advanced=0x7f120235;
    /**
     * Bluetooth settings screen, summary text when there isn't a name set (for the name setting)
     */
    public static final int bluetooth_name_not_set=0x7f120236;
    /**
     * Bluetooth settings screen, text that appears when scanning for devices is finished and no nearby bluetooth device was found [CHAR LIMIT=40]
     */
    public static final int bluetooth_no_devices_found=0x7f120237;
    /**
     * Bluetooth settings screen, summary text when not discoverable and no paired devices [CHAR LIMIT=50]
     */
    public static final int bluetooth_not_visible_to_other_devices=0x7f120238;
    /**
     * Notification message when a Bluetooth device wants to pair with us
     */
    public static final int bluetooth_notif_message=0x7f120239;
    /**
     * Notification ticker text (shown in the status bar) when a Bluetooth device wants to pair with us
     */
    public static final int bluetooth_notif_ticker=0x7f12023a;
    /**
     * Notification title when a Bluetooth device wants to pair with us
     */
    public static final int bluetooth_notif_title=0x7f12023b;
    /**
     * Bluetooth on time
     */
    public static final int bluetooth_on_time=0x7f12023c;
    /**
     * Bluetooth settings screen, summary text when not discoverable with paired devices [CHAR LIMIT=50]
     */
    public static final int bluetooth_only_visible_to_paired_devices=0x7f12023d;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected.
     */
    public static final int bluetooth_opp_profile_summary_connected=0x7f12023e;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected.
     */
    public static final int bluetooth_opp_profile_summary_not_connected=0x7f12023f;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred.
     */
    public static final int bluetooth_opp_profile_summary_use_for=0x7f120240;
    /**
     * Title for paired device group [CHAR LIMIT=none]
     */
    public static final int bluetooth_paired_device_title=0x7f120241;
    /**
     * Bluetooth settings screen, summary text under individual Bluetooth devices when pairing
     */
    public static final int bluetooth_pairing=0x7f120242;
    /**
     * Button text for accepting an incoming pairing request. [CHAR LIMIT=20]
     */
    public static final int bluetooth_pairing_accept=0x7f120243;
    /**
     * Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20]
     */
    public static final int bluetooth_pairing_accept_all_caps=0x7f120244;
    /**
     * Button text for declining an incoming pairing request. [CHAR LIMIT=20]
     */
    public static final int bluetooth_pairing_decline=0x7f120245;
    /**
     * Message for the error dialog when BT pairing fails because the other device is down.
     */
    public static final int bluetooth_pairing_device_down_error_message=0x7f120246;
    /**
     * Bluetooth settings: Message informing user that a bluetooth wants to access contant and call history.  [CHAR LIMIT=100]
     */
    public static final int bluetooth_pairing_dialog_contants_request=0x7f120247;
    /**
     * Bluetooth settings: paring permission message.  [CHAR LIMIT=100]
     */
    public static final int bluetooth_pairing_dialog_paring_request=0x7f120248;
    /**
     * Bluetooth settings: share phone book title.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_pairing_dialog_sharing_phonebook_title=0x7f120249;
    /**
     * Bluetooth settings: pairing dialog title.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_pairing_dialog_title=0x7f12024a;
    /**
     * Message for the error dialog when BT pairing fails generically.
     */
    public static final int bluetooth_pairing_error_message=0x7f12024b;
    /**
     * Message when bluetooth is informing the user of the pairing key. [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_pairing_key_msg=0x7f12024c;
    /**
     * Title for pairing bluetooth device page [CHAR LIMIT=none]
     */
    public static final int bluetooth_pairing_page_title=0x7f12024d;
    /**
     * Message for the error dialog when BT pairing fails because the PIN /
     * Passkey entered is incorrect.
     */
    public static final int bluetooth_pairing_pin_error_message=0x7f12024e;
    /**
     * Title for bluetooth pairing item [CHAR LIMIT=60]
     */
    public static final int bluetooth_pairing_pref_title=0x7f12024f;
    /**
     * Message for the error dialog when BT pairing fails because the other device rejected the pairing.
     */
    public static final int bluetooth_pairing_rejected_error_message=0x7f120250;
    /**
     * Title for the dialog to enter PIN. [CHAR LIMIT=40]
     */
    public static final int bluetooth_pairing_request=0x7f120251;
    /**
     * Checkbox message in pairing dialogs.  [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_pairing_shares_phonebook=0x7f120252;
    /**
     * Message in pairing dialogs.  [CHAR LIMIT=NONE]
     */
    public static final int bluetooth_pairing_will_share_phonebook=0x7f120253;
    /**
     * Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
     */
    public static final int bluetooth_pan_nap_profile_summary_connected=0x7f120254;
    /**
     * Bluetooth settings. Connection options screen. The summary
     * for the PAN checkbox preference that describes how checking it
     * will set the PAN profile as preferred.
     */
    public static final int bluetooth_pan_profile_summary_use_for=0x7f120255;
    /**
     * Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
     */
    public static final int bluetooth_pan_user_profile_summary_connected=0x7f120256;
    /**
     * Bluetooth phone book permission Alert Activity text [CHAR LIMIT=none]
     */
    public static final int bluetooth_pb_acceptance_dialog_text=0x7f120257;
    /**
     * FIXME SHOULD BE REMOVED AND ALL LANG VERSIONS FIXED TO ABOVE NAME
     */
    public static final int bluetooth_pb_remember_choice=0x7f120258;
    /**
     * Activity label of BluetoothPbPermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none]
     */
    public static final int bluetooth_phonebook_request=0x7f120259;
    /**
     * Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30]
     */
    public static final int bluetooth_pin_values_hint=0x7f12025a;
    /**
     * Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30]
     */
    public static final int bluetooth_pin_values_hint_16_digits=0x7f12025b;
    /**
     * Bluetooth settings: The sub heading for device settings. [CHAR LIMIT=30]
     */
    public static final int bluetooth_preference_device_settings=0x7f12025c;
    /**
     * Bluetooth settings: The sub heading for available devices during and after scanning. [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_found_devices=0x7f12025d;
    /**
     * Bluetooth settings: The message displayed if no Bluetooth devices were found. [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_no_found_devices=0x7f12025e;
    /**
     * Bluetooth settings: The sub heading for devices which have already been paired with this device. [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_devices=0x7f12025f;
    /**
     * Bluetooth settings: Checkbox label for enable/disable contacts connection.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_contacts_option=0x7f120260;
    /**
     * Bluetooth settings: Checkbox label for enable/disable internet connection.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_internet_option=0x7f120261;
    /**
     * Bluetooth settings: Checkbox label for enable/disable keyboard connection.  [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_keyboard_option=0x7f120262;
    /**
     * Bluetooth settings: Name label [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_name_label=0x7f120263;
    /**
     * Bluetooth settings: Paired dialog title [CHAR LIMIT=40]
     */
    public static final int bluetooth_preference_paired_dialog_title=0x7f120264;
    /**
     * Bluetooth settings: The title of the preference (list item) that initiates a scan for devices
     */
    public static final int bluetooth_preference_scan_title=0x7f120265;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile.
     */
    public static final int bluetooth_profile_a2dp=0x7f120266;
    /**
     * Bluetooth settings. The user-visible string for the setting controlling whether to use a high-quality codec if the device supports it, along with the name of the codec (eg AAC, LDAC, aptX)
     */
    public static final int bluetooth_profile_a2dp_high_quality=0x7f120267;
    /**
     * Bluetooth settings. Similar to bluetooth_profile_a2dp_high_quality, but used when the device supports high quality audio but we don't know which codec that will be used.
     */
    public static final int bluetooth_profile_a2dp_high_quality_unknown_codec=0x7f120268;
    /**
     * Bluetooth settings screen, image description for profile of a device details button.
     */
    public static final int bluetooth_profile_details=0x7f120269;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile.
     */
    public static final int bluetooth_profile_headset=0x7f12026a;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the HID profile.
     */
    public static final int bluetooth_profile_hid=0x7f12026b;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the map profile.
     */
    public static final int bluetooth_profile_map=0x7f12026c;
    /**
     * Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile.
     */
    public static final int bluetooth_profile_opp=0x7f12026d;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40]
     */
    public static final int bluetooth_profile_pan=0x7f12026e;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40]
     */
    public static final int bluetooth_profile_pan_nap=0x7f12026f;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40]
     */
    public static final int bluetooth_profile_pbap=0x7f120270;
    /**
     * Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60]
     */
    public static final int bluetooth_profile_pbap_summary=0x7f120271;
    /**
     * Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card).
     */
    public static final int bluetooth_profile_sap=0x7f120272;
    /**
     * Bluetooth settings check box summary for turning on bluetooth
     */
    public static final int bluetooth_quick_toggle_summary=0x7f120273;
    /**
     * Bluetooth settings check box title on Main Settings screen
     */
    public static final int bluetooth_quick_toggle_title=0x7f120274;
    /**
     * Bluetooth phone book permission Alert Activity checkbox text [CHAR LIMIT=none]
     */
    public static final int bluetooth_remember_choice=0x7f120275;
    /**
     * Bluetooth settings screen, confirmation button for rename device dialog. [CHAR LIMIT=20]
     */
    public static final int bluetooth_rename_button=0x7f120276;
    /**
     * Bluetooth settings screen, menu item to change this device's Bluetooth name. [CHAR LIMIT=30]
     */
    public static final int bluetooth_rename_device=0x7f120277;
    /**
     * Bluetooth SIM access permission Alert Activity text [CHAR LIMIT=none]
     */
    public static final int bluetooth_sap_acceptance_dialog_text=0x7f120278;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected.
     */
    public static final int bluetooth_sap_profile_summary_connected=0x7f120279;
    /**
     * Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred.
     */
    public static final int bluetooth_sap_profile_summary_use_for=0x7f12027a;
    /**
     * Activity label of BluetoothMessagePermissionActivity for SIM access profile. Also used as Strings in the permission dialog [CHAR LIMIT=none]
     */
    public static final int bluetooth_sap_request=0x7f12027b;
    /**
     * Bluetooth settings screen, menu item to scan for nearby bluetooth devices
     */
    public static final int bluetooth_scan_for_devices=0x7f12027c;
    /**
     * Bluetooth settings: The title of the action button that initiates a search for nearby devices [CHAR LIMIT=20]
     */
    public static final int bluetooth_search_for_devices=0x7f12027d;
    /**
     * Bluetooth settings: The title of the action button while a search for nearby devices is in progress [CHAR LIMIT=20]
     */
    public static final int bluetooth_searching_for_devices=0x7f12027e;
    /**
     * UI debug setting: Select Bluetooth Audio Bits Per Sample
     */
    public static final int bluetooth_select_a2dp_codec_bits_per_sample=0x7f12027f;
    /**
     * UI debug setting: Select Bluetooth Audio Codec: Bits Per Sample
     */
    public static final int bluetooth_select_a2dp_codec_bits_per_sample_dialog_title=0x7f120280;
    /**
     * UI debug setting: Select Bluetooth Audio Channel Mode
     */
    public static final int bluetooth_select_a2dp_codec_channel_mode=0x7f120281;
    /**
     * UI debug setting: Select Bluetooth Audio Codec: Channel Mode
     */
    public static final int bluetooth_select_a2dp_codec_channel_mode_dialog_title=0x7f120282;
    /**
     * UI debug setting: Select Bluetooth Audio LDAC Playback Quality
     */
    public static final int bluetooth_select_a2dp_codec_ldac_playback_quality=0x7f120283;
    /**
     * UI debug setting: Select Bluetooth Audio LDAC Codec: LDAC Playback Quality
     */
    public static final int bluetooth_select_a2dp_codec_ldac_playback_quality_dialog_title=0x7f120284;
    /**
     * UI debug setting: Select Bluetooth Audio Sample Rate
     */
    public static final int bluetooth_select_a2dp_codec_sample_rate=0x7f120285;
    /**
     * UI debug setting: Select Bluetooth Audio Codec: Sample Rate
     */
    public static final int bluetooth_select_a2dp_codec_sample_rate_dialog_title=0x7f120286;
    /**
     * [CHAR LIMIT=NONE] Label for displaying Bluetooth Audio Codec Parameters while streaming
     */
    public static final int bluetooth_select_a2dp_codec_streaming_label=0x7f120287;
    /**
     * UI debug setting: Select Bluetooth Audio Codec
     */
    public static final int bluetooth_select_a2dp_codec_type=0x7f120288;
    /**
     * UI debug setting: Select Bluetooth Audio Codec
     */
    public static final int bluetooth_select_a2dp_codec_type_dialog_title=0x7f120289;
    /**
     * UI debug setting: Select Bluetooth AVRCP Version
     */
    public static final int bluetooth_select_avrcp_version_dialog_title=0x7f12028a;
    /**
     * UI debug setting: Select Bluetooth AVRCP Version
     */
    public static final int bluetooth_select_avrcp_version_string=0x7f12028b;
    /**
     * Used as title on second screen after selecting Bluetooth settings
     */
    public static final int bluetooth_settings=0x7f12028c;
    /**
     * Wireless controls screen, settings summary for the item tot ake you to the bluetooth settings screen
     */
    public static final int bluetooth_settings_summary=0x7f12028d;
    /**
     * Wireless controls screen, settings title for the item to take you to the bluetooth settings screen
     */
    public static final int bluetooth_settings_title=0x7f12028e;
    /**
     * Setting Checkbox title for showing Bluetooth devices without names
     */
    public static final int bluetooth_show_devices_without_names=0x7f12028f;
    /**
     * Summary of checkbox for showing Bluetooth devices without names
     */
    public static final int bluetooth_show_devices_without_names_summary=0x7f120290;
    /**
     * Item in bluetooth settings screen, used to show the list of received files [CHAR LIMIT=30]
     */
    public static final int bluetooth_show_received_files=0x7f120291;
    /**
     * Message for telling the user the kind of BT device being displayed in list.
     */
    public static final int bluetooth_talkback_bluetooth=0x7f120292;
    /**
     * Message for telling the user the kind of BT device being displayed in list.
     */
    public static final int bluetooth_talkback_computer=0x7f120293;
    /**
     * Message for telling the user the kind of BT device being displayed in list.
     */
    public static final int bluetooth_talkback_headphone=0x7f120294;
    /**
     * Message for telling the user the kind of BT device being displayed in list.
     */
    public static final int bluetooth_talkback_headset=0x7f120295;
    /**
     * Message for telling the user the kind of BT device being displayed in list.
     */
    public static final int bluetooth_talkback_imaging=0x7f120296;
    /**
     * Message for telling the user the kind of BT device being displayed in list.
     */
    public static final int bluetooth_talkback_input_peripheral=0x7f120297;
    /**
     * Message for telling the user the kind of BT device being displayed in list.
     */
    public static final int bluetooth_talkback_phone=0x7f120298;
    /**
     * Label for bluetooth tether checkbox [CHAR LIMIT=25]
     */
    public static final int bluetooth_tether_checkbox_text=0x7f120299;
    /**
     * Bluetooth tethering off subtext - shown when Bluetooth Tethering is turned off [CHAR LIMIT=80]
     */
    public static final int bluetooth_tethering_off_subtext_config=0x7f12029a;
    /**
     * Bluetooth Tethering settings. Error message shown when trying to connect an 8th device [CHAR LIMIT=50]
     */
    public static final int bluetooth_tethering_overflow_error=0x7f12029b;
    /**
     * Bluetooth Tethering subtext [CHAR LIMIT=70]
     */
    public static final int bluetooth_tethering_subtext=0x7f12029c;
    /**
     * Strings for msg to display to user while bluetooth is turning off [CHAR LIMIT=60]
     */
    public static final int bluetooth_turning_off=0x7f12029d;
    /**
     * Strings for msg to display to user while bluetooth is turning on [CHAR LIMIT=60]
     */
    public static final int bluetooth_turning_on=0x7f12029e;
    /**
     * Bluetooth settings.  Message when the device state is unknown
     */
    public static final int bluetooth_unknown=0x7f12029f;
    /**
     * Bluetooth device details. The body of a confirmation dialog for unpairing a paired device.
     */
    public static final int bluetooth_unpair_dialog_body=0x7f1202a0;
    /**
     * Bluetooth device details. In the confirmation dialog for unpairing a paired device, this is the label on the button that will complete the unpairing action.
     */
    public static final int bluetooth_unpair_dialog_forget_confirm_button=0x7f1202a1;
    /**
     * Bluetooth device details. The title of a confirmation dialog for unpairing a paired device. [CHAR LIMIT=60]
     */
    public static final int bluetooth_unpair_dialog_title=0x7f1202a2;
    /**
     * Bluetooth Tethering settings.  Message for untethering from a bluetooth device [CHAR LIMIT=50]
     */
    public static final int bluetooth_untether_blank=0x7f1202a3;
    /**
     * Bluetooth settings screen, option name to pick discoverability timeout duration (a list dialog comes up)
     */
    public static final int bluetooth_visibility_timeout=0x7f1202a4;
    /**
     * Sound: Other sounds: Title for the option enabling boot sounds. [CHAR LIMIT=30]
     */
    public static final int boot_sounds_title=0x7f1202a5;
    /**
     * Sound & display settings screen, setting option name to change brightness level
     */
    public static final int brightness=0x7f1202a6;
    /**
     * Sound & display settings screen, setting option summary to change brightness level
     */
    public static final int brightness_summary=0x7f1202a7;
    /**
     * Sound & display settings screen, setting option name to change brightness level [CHAR LIMIT=30]
     */
    public static final int brightness_title=0x7f1202a8;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int bssid_label=0x7f1202a9;
    /**
     * Setting Checkbox title whether to enable bluetooth HCI snoop log
     */
    public static final int bt_hci_snoop_log=0x7f1202aa;
    /**
     * setting Checkbox summary whether to capture all bluetooth HCI packets in a file
     */
    public static final int bt_hci_snoop_log_summary=0x7f1202ab;
    /**
     * [CHAR LIMIT=NONE] Setting checkbox title for Whether to include bug report item in power menu.
     */
    public static final int bugreport_in_power=0x7f1202ac;
    /**
     * [CHAR LIMIT=NONE] Setting checkbox summary for Whether to include bug report item in power
     */
    public static final int bugreport_in_power_summary=0x7f1202ad;
    /**
     * About phone screen,  setting option name  [CHAR LIMIT=40]
     */
    public static final int build_number=0x7f1202ae;
    /**
     * Summary for built-in keyboard settings
     */
    public static final int builtin_keyboard_settings_summary=0x7f1202af;
    /**
     * Title for built-in keyboard settings
     */
    public static final int builtin_keyboard_settings_title=0x7f1202b0;
    /**
     * Developer option to convert to file encryption - final button
     */
    public static final int button_confirm_convert_fbe=0x7f1202b1;
    /**
     * Button on dialog that triggers convertion to file encryption
     */
    public static final int button_convert_fbe=0x7f1202b2;
    /**
     * Manage applications, Header name used for cache information
     */
    public static final int cache_header_label=0x7f1202b3;
    /**
     * Manage applications, label that appears next to the cache size
     */
    public static final int cache_size_label=0x7f1202b4;
    /**
     * Label for a process item representing a background process
     */
    public static final int cached=0x7f1202b5;
    /**
     * Call Manager enable settings summary.  [CHAR LIMIT=80]
     */
    public static final int call_manager_enable_summary=0x7f1202b6;
    /**
     * Call Manager enable settings title.  [CHAR LIMIT=50]
     */
    public static final int call_manager_enable_title=0x7f1202b7;
    /**
     * Call Manager settings summary.  [CHAR LIMIT=50]
     */
    public static final int call_manager_summary=0x7f1202b8;
    /**
     * Call Manager settings title.  [CHAR LIMIT=50]
     */
    public static final int call_manager_title=0x7f1202b9;
    /**
     * Main settings screen, Call settings summary for item to go into call settings
     */
    public static final int call_settings_summary=0x7f1202ba;
    /**
     * Main settings screen, Call settings title for item to go into the call settings
     */
    public static final int call_settings_title=0x7f1202bb;
    /**
     * check box Calls title [CHAR LIMIT=30]
     */
    public static final int calls_title=0x7f1202bc;
    /**
     * Description of setting that controls gesture to open camera by double tapping the power button [CHAR LIMIT=NONE]
     */
    public static final int camera_double_tap_power_gesture_desc=0x7f1202bd;
    /**
     * Title of setting that controls gesture to open camera by double tapping the power button [CHAR LIMIT=40]
     */
    public static final int camera_double_tap_power_gesture_title=0x7f1202be;
    /**
     * Description of setting that controls gesture to open camera [CHAR LIMIT=NONE]
     */
    public static final int camera_gesture_desc=0x7f1202bf;
    /**
     * Title of setting that controls gesture to open camera [CHAR LIMIT=40]
     */
    public static final int camera_gesture_title=0x7f1202c0;
    /**
     * Title for Camera HAL HDR+ switch [CHAR LIMIT=50]
     */
    public static final int camera_hal_hdrplus_switch=0x7f1202c1;
    /**
     * Toast message letting the user know how to enable Camera HAL HDR+
     */
    public static final int camera_hal_hdrplus_toast=0x7f1202c2;
    /**
     * Title for Camera laser sensor switch [CHAR LIMIT=NONE]
     */
    public static final int camera_laser_sensor_switch=0x7f1202c3;
    /**
     * Button label for generic cancel action [CHAR LIMIT=20]
     */
    public static final int cancel=0x7f1202c4;
    /**
     * Messaage shown in dialog when you can't manually sync
     */
    public static final int cant_sync_dialog_message=0x7f1202c5;
    /**
     * Title of dialog shown when you can't manually sync an item because it's disabled
     */
    public static final int cant_sync_dialog_title=0x7f1202c6;
    /**
     * Title for the list of capabilities of an accessibility service.
     */
    public static final int capabilities_list_title=0x7f1202c7;
    /**
     * Description for the capability of an accessibility service to receive events and keys.
     */
    public static final int capability_desc_receiveAccessibilityEvents=0x7f1202c8;
    /**
     * Title for the capability of an accessibility service to receive events and keys.
     */
    public static final int capability_title_receiveAccessibilityEvents=0x7f1202c9;
    /**
     * Title for the preference to change video caption background color. [CHAR LIMIT=35]
     */
    public static final int captioning_background_color=0x7f1202ca;
    /**
     * Title for the preference to change video caption background opacity. [CHAR LIMIT=35]
     */
    public static final int captioning_background_opacity=0x7f1202cb;
    /**
     * Title for the preference catgeory containing custom video caption properties. [CHAR LIMIT=35]
     */
    public static final int captioning_custom_options_title=0x7f1202cc;
    /**
     * Title for the preference to change video caption edge color. [CHAR LIMIT=35]
     */
    public static final int captioning_edge_color=0x7f1202cd;
    /**
     * Title for the preference to change video caption edge type. [CHAR LIMIT=35]
     */
    public static final int captioning_edge_type=0x7f1202ce;
    /**
     * Title for the preference to change video caption text color. [CHAR LIMIT=35]
     */
    public static final int captioning_foreground_color=0x7f1202cf;
    /**
     * Title for the preference to change video caption text opacity. [CHAR LIMIT=35]
     */
    public static final int captioning_foreground_opacity=0x7f1202d0;
    /**
     * Title for the preference to change video caption locale. [CHAR LIMIT=35]
     */
    public static final int captioning_locale=0x7f1202d1;
    /**
     * Title for the preference category containing video caption property presets. [CHAR LIMIT=35]
     */
    public static final int captioning_preset=0x7f1202d2;
    /**
     * Sample characters for previewing video caption preferences. [CHAR LIMIT=2]
     */
    public static final int captioning_preview_characters=0x7f1202d3;
    /**
     * Sample text for previewing video caption preferences. [CHAR LIMIT=NONE]
     */
    public static final int captioning_preview_text=0x7f1202d4;
    /**
     * Title for the preference category containing the video caption preview. [CHAR LIMIT=35]
     */
    public static final int captioning_preview_title=0x7f1202d5;
    /**
     * Title for the preference catgeory containing standard video caption options. [CHAR LIMIT=35]
     */
    public static final int captioning_standard_options_title=0x7f1202d6;
    /**
     * Title for the preference to change video caption text size. [CHAR LIMIT=35]
     */
    public static final int captioning_text_size=0x7f1202d7;
    /**
     * Title for the preference to change video caption font family (ex. monospace, sans-serif). [CHAR LIMIT=35]
     */
    public static final int captioning_typeface=0x7f1202d8;
    /**
     * Title for the preference to change video caption window color. [CHAR LIMIT=35]
     */
    public static final int captioning_window_color=0x7f1202d9;
    /**
     * Title for the preference to change video caption window opacity. [CHAR LIMIT=35]
     */
    public static final int captioning_window_opacity=0x7f1202da;
    /**
     * Edit enable/disable of APN
     */
    public static final int carrier_enabled=0x7f1202db;
    public static final int carrier_enabled_summaryOff=0x7f1202dc;
    public static final int carrier_enabled_summaryOn=0x7f1202dd;
    /**
     * Carrier Provisioning Info [CHAR LIMIT=NONE]
     */
    public static final int carrier_provisioning=0x7f1202de;
    public static final int category_key_device=0x7f1202df;
    public static final int category_key_personal=0x7f1202e0;
    public static final int category_key_system=0x7f1202e1;
    public static final int category_key_wireless=0x7f1202e2;
    /**
     * Header for items under the personal user [CHAR LIMIT=30]
     */
    public static final int category_personal=0x7f1202e3;
    /**
     * Header for items under the work user [CHAR LIMIT=30]
     */
    public static final int category_work=0x7f1202e4;
    /**
     * Main Settings screen setting option summary text for the item to take you to the CDMA security and location screen
     */
    public static final int cdma_security_settings_summary=0x7f1202e5;
    /**
     * Cell Broadcast settings title.  [CHAR LIMIT=50]
     */
    public static final int cell_broadcast_settings=0x7f1202e6;
    /**
     * Format string for amount of cellular data used [CHAR LIMIT=30]
     */
    public static final int cell_data_template=0x7f1202e7;
    /**
     * Format for a summary describing the amount of data before the user is warned or limited [CHAR LIMIT=NONE]
     */
    public static final int cell_warning_and_limit=0x7f1202e8;
    /**
     * Format for a summary describing the amount of data before the user is warned [CHAR LIMIT=NONE]
     */
    public static final int cell_warning_only=0x7f1202e9;
    /**
     * check box cellular data summary [CHAR LIMIT=85]
     */
    public static final int cellular_data_summary=0x7f1202ea;
    /**
     * check box cellular data title [CHAR LIMIT=30]
     */
    public static final int cellular_data_title=0x7f1202eb;
    /**
     * Label for cellular data usage in data usage screen [CHAR LIMIT=60]
     */
    public static final int cellular_data_usage=0x7f1202ec;
    /**
     * Package name for Certinstaller app
     */
    public static final int certinstaller_package=0x7f1202ed;
    /**
     * Title of button to change storage [CHAR LIMIT=25]
     */
    public static final int change=0x7f1202ee;
    /**
     * Title of dialog to change storage [CHAR LIMIT=25]
     */
    public static final int change_storage=0x7f1202ef;
    /**
     * Temporary reboot string, will be removed
     */
    public static final int change_theme_reboot=0x7f1202f0;
    /**
     * [CHAR LIMIT=NONE] Text appearing when channel notifications are off
     */
    public static final int channel_notifications_off_desc=0x7f1202f1;
    /**
     * Label for length of time since the battery graph started [CHAR LIMIT=20]
     */
    public static final int charge_length_format=0x7f1202f2;
    /**
     * Sound: Other sounds: Title for the option enabling charging sounds. [CHAR LIMIT=30]
     */
    public static final int charging_sounds_title=0x7f1202f3;
    /**
     * Sound settings screen, the caption of the checkbox for having the notification volume be
     * the same as the incoming call volume.
     */
    public static final int checkbox_notification_same_as_incoming_call=0x7f1202f4;
    /**
     * Shown when a password has been entered, and we're checking it
     */
    public static final int checking_decryption=0x7f1202f5;
    /**
     * Title for profile selection dialog [CHAR LIMIT=30]
     */
    public static final int choose_profile=0x7f1202f6;
    /**
     * [CHAR LIMIT=30] Title for dialog for setting to control the default spell checker
     */
    public static final int choose_spell_checker=0x7f1202f7;
    /**
     * The title of the activity to pick a time zone.
     */
    public static final int choose_timezone=0x7f1202f8;
    /**
     * Title for Choose voice input dialog [CHAR LIMIT=30]
     */
    public static final int choose_voice_input_title=0x7f1202f9;
    /**
     * Manage applications, individual application screen, button label under Launch by default heading.  This is used to clear any default actions that may be assigned to this app.
     */
    public static final int clear_activities=0x7f1202fa;
    /**
     * Setting title to revoke secure USB debugging authorizations
     */
    public static final int clear_adb_keys=0x7f1202fb;
    /**
     * Manage applications, text label for button
     */
    public static final int clear_cache_btn_text=0x7f1202fc;
    /**
     * Manage applications, individual application screen, confirmation dialog message. Displays when user selects to "Clear data". It warns the user of the consequences of clearing the data for an app.
     */
    public static final int clear_data_dlg_text=0x7f1202fd;
    /**
     * Manage applications, individual application screen, confirmation dialog title. Displays when user selects to "Clear data".
     */
    public static final int clear_data_dlg_title=0x7f1202fe;
    /**
     * Manage applications, individual application dialog box message. Shown when there was an error trying to clear the data.
     */
    public static final int clear_data_failed=0x7f1202ff;
    /**
     * Manage applications, text for dialog if clear data fails
     */
    public static final int clear_failed_dlg_text=0x7f120300;
    /**
     * Manage applications, title for dialog if clear data fails
     */
    public static final int clear_failed_dlg_title=0x7f120301;
    /**
     * Confirmation message displayed when the user taps Clear app, to ensure they want to remove
     * the instant app from the device.
     */
    public static final int clear_instant_app_confirmation=0x7f120302;
    /**
     * Label for button allow user to remove the instant app from the device.
     */
    public static final int clear_instant_app_data=0x7f120303;
    /**
     * Manage applications, individual application info storage screen. Button below list of URIs.
     */
    public static final int clear_uri_btn_text=0x7f120304;
    /**
     * Manage applications, individual application info screen, button label under Storage heading. Button to clear all data associated with tis app (for exampel, remove all cached emails for an Email app)
     */
    public static final int clear_user_data_text=0x7f120305;
    /**
     * Label for the color black. [CHAR LIMIT=35]
     */
    public static final int color_black=0x7f120306;
    /**
     * Label for the color blue. [CHAR LIMIT=35]
     */
    public static final int color_blue=0x7f120307;
    /**
     * Label for custom colors, formats as a HTML color.
     */
    public static final int color_custom=0x7f120308;
    /**
     * Label for the color cyan. [CHAR LIMIT=35]
     */
    public static final int color_cyan=0x7f120309;
    /**
     * Label for the color gray. [CHAR LIMIT=35]
     */
    public static final int color_gray=0x7f12030a;
    /**
     * Label for the color green. [CHAR LIMIT=35]
     */
    public static final int color_green=0x7f12030b;
    /**
     * Label for the color magenta. [CHAR LIMIT=35]
     */
    public static final int color_magenta=0x7f12030c;
    /**
     * Display settings screen, Color mode option for "Boosted(sRGB + 10%) color"  [CHAR LIMIT=45]
     */
    public static final int color_mode_option_boosted=0x7f12030d;
    /**
     * Display settings screen, Color mode option for "natural(sRGB) color"  [CHAR LIMIT=45]
     */
    public static final int color_mode_option_natural=0x7f12030e;
    /**
     * Display settings screen, Color mode option for "Saturated color"  [CHAR LIMIT=45]
     */
    public static final int color_mode_option_saturated=0x7f12030f;
    /**
     * Display settings screen, Color mode settings title [CHAR LIMIT=30]
     */
    public static final int color_mode_title=0x7f120310;
    /**
     * Label for no color (transparent). [CHAR LIMIT=35]
     */
    public static final int color_none=0x7f120311;
    /**
     * Orange label.  [CHAR LIMIT=40]
     */
    public static final int color_orange=0x7f120312;
    /**
     * Purple label.  [CHAR LIMIT=40]
     */
    public static final int color_purple=0x7f120313;
    /**
     * Label for the color red. [CHAR LIMIT=35]
     */
    public static final int color_red=0x7f120314;
    /**
     * Name of the setting to change the display's color temperature
     */
    public static final int color_temperature=0x7f120315;
    /**
     * Description of the setting to change the display's color temperature
     */
    public static final int color_temperature_desc=0x7f120316;
    /**
     * Toast message letting the user know the color temperature setting is not immediate
     */
    public static final int color_temperature_toast=0x7f120317;
    /**
     * Label for color selection title in sim settings [CHAR LIMIT=35]
     */
    public static final int color_title=0x7f120318;
    /**
     * Label for default color. This lets the app pick the color. [CHAR LIMIT=35]
     */
    public static final int color_unspecified=0x7f120319;
    /**
     * Label for the color white. [CHAR LIMIT=35]
     */
    public static final int color_white=0x7f12031a;
    /**
     * Label for the color yellow. [CHAR LIMIT=35]
     */
    public static final int color_yellow=0x7f12031b;
    public static final int computing_size=0x7f12031c;
    /**
     * Summary of condition that airplane mode is on [CHAR LIMIT=NONE]
     */
    public static final int condition_airplane_summary=0x7f12031d;
    /**
     * Title of condition that airplane mode is on [CHAR LIMIT=30]
     */
    public static final int condition_airplane_title=0x7f12031e;
    /**
     * Summary of condition that battery saver is on [CHAR LIMIT=NONE]
     */
    public static final int condition_battery_summary=0x7f12031f;
    /**
     * Title of condition that battery saver is on [CHAR LIMIT=30]
     */
    public static final int condition_battery_title=0x7f120320;
    /**
     * Summary of condition that background data is off [CHAR LIMIT=NONE]
     */
    public static final int condition_bg_data_summary=0x7f120321;
    /**
     * Title of condition that background data is off [CHAR LIMIT=30]
     */
    public static final int condition_bg_data_title=0x7f120322;
    /**
     * Summary of condition that cellular data is off [CHAR LIMIT=NONE]
     */
    public static final int condition_cellular_summary=0x7f120323;
    /**
     * Title of condition that cellular data is off [CHAR LIMIT=50]
     */
    public static final int condition_cellular_title=0x7f120324;
    /**
     * Content description used when collapsing a condition item to see less details
     */
    public static final int condition_expand_hide=0x7f120325;
    /**
     * Content description used when expanding a condition item to see more details
     */
    public static final int condition_expand_show=0x7f120326;
    /**
     * Summary of condition that hotspot is on [CHAR LIMIT=NONE]
     */
    public static final int condition_hotspot_summary=0x7f120327;
    /**
     * Title of condition that hotspot is on [CHAR LIMIT=30]
     */
    public static final int condition_hotspot_title=0x7f120328;
    /**
     * Summary of condition that night display is on (renamed "Night Light" with title caps). [CHAR LIMIT=NONE]
     */
    public static final int condition_night_display_summary=0x7f120329;
    /**
     * Title of condition that night display is on (renamed "Night Light" with title caps). [CHAR LIMIT=30]
     */
    public static final int condition_night_display_title=0x7f12032a;
    /**
     * Summary for the condition section on the dashboard, representing number of conditions. [CHAR LIMIT=10]
     */
    public static final int condition_summary=0x7f12032b;
    /**
     * Turn off a conditional state of the device (e.g. airplane mode, or hotspot) [CHAR LIMIT=30]
     */
    public static final int condition_turn_off=0x7f12032c;
    /**
     * Turn on a conditional state of the device (e.g. cellular data) [CHAR LIMIT=30]
     */
    public static final int condition_turn_on=0x7f12032d;
    /**
     * Summary of condition that work mode is off [CHAR LIMIT=NONE]
     */
    public static final int condition_work_summary=0x7f12032e;
    /**
     * Title of condition that work mode is off [CHAR LIMIT=30]
     */
    public static final int condition_work_title=0x7f12032f;
    /**
     * Title of condition that do not disturb is on [CHAR LIMIT=30]
     */
    public static final int condition_zen_title=0x7f120330;
    /**
     * Manufacturer backup settings to launch
     */
    public static final int config_backup_settings_intent=0x7f120331;
    /**
     * Manufacturer backup settings label
     */
    public static final int config_backup_settings_label=0x7f120332;
    /**
     * Class name for the storage manager's deletion helper class.
     */
    public static final int config_deletion_helper_class=0x7f120333;
    /**
     * Package name for the storage manager to use from Settings search.
     */
    public static final int config_deletion_helper_package=0x7f120334;
    /**
     * Fully-qualified class name for the implementation of the FeatureFactory to be instantiated.
     */
    public static final int config_featureFactory=0x7f120335;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Configuration screen
     */
    public static final int config_list_label=0x7f120336;
    public static final int config_wallpaper_picker_class=0x7f120337;
    /**
     * Package name and fully-qualified class name for the wallpaper picker activity.
     */
    public static final int config_wallpaper_picker_package=0x7f120338;
    /**
     * Accessibility label for button that leads to screen with more configuration options [CHAR LIMIT=NONE]
     */
    public static final int configure=0x7f120339;
    /**
     * Title for application configuration settings [CHAR LIMIT=30]
     */
    public static final int configure_apps=0x7f12033a;
    /**
     * Title for configuring input method settings [CHAR LIMIT=35]
     */
    public static final int configure_input_method=0x7f12033b;
    /**
     * Configure Notifications Settings title. [CHAR LIMIT=30]
     */
    public static final int configure_notification_settings=0x7f12033c;
    /**
     * Configure section header [CHAR LIMIT=30]
     */
    public static final int configure_section_header=0x7f12033d;
    /**
     * Developer option to convert to file encryption - final warning
     */
    public static final int confirm_convert_to_fbe_warning=0x7f12033e;
    /**
     * Warning dialog message to confirm user wishes to enable OEM unlock and disable theft protection features
     */
    public static final int confirm_enable_oem_unlock_text=0x7f12033f;
    /**
     * Confirmation dialog title to ensure user wishes to enable OEM unlock and disable theft protection features
     */
    public static final int confirm_enable_oem_unlock_title=0x7f120340;
    /**
     * Content description for the fingerprint icon when the user is prompted to enter his credentials. Not shown on the screen. [CHAR LIMIT=NONE]
     */
    public static final int confirm_fingerprint_icon_content_description=0x7f120341;
    /**
     * Prompt for the user to confirm the new full-backup password by re-entering it
     */
    public static final int confirm_new_backup_pw_prompt=0x7f120342;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_no_nfc_summary=0x7f120343;
    /**
     * Summary for Connected devices settings, explaning a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int connected_devices_dashboard_summary=0x7f120344;
    /**
     * Title for setting tile leading to Connected devices settings [CHAR LIMIT=40]
     */
    public static final int connected_devices_dashboard_title=0x7f120345;
    /**
     * Status message of Wi-Fi when it is connected to a Carrier Network. [CHAR LIMIT=NONE]
     */
    public static final int connected_via_carrier=0x7f120346;
    /**
     * Status message of Wi-Fi when it is automatically connected by a network recommendation provider. [CHAR LIMIT=NONE]
     */
    public static final int connected_via_network_scorer=0x7f120347;
    /**
     * Status message of Wi-Fi when it is automatically connected by a default network recommendation provider. [CHAR LIMIT=NONE]
     */
    public static final int connected_via_network_scorer_default=0x7f120348;
    /**
     * Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE]
     */
    public static final int connected_via_passpoint=0x7f120349;
    /**
     * Content description for drawer menu button [CHAR_LIMIT=30]
     */
    public static final int content_description_menu_button=0x7f12034a;
    /**
     * About phone settings screen, setting option name to see a list of contributors
     */
    public static final int contributors_title=0x7f12034b;
    /**
     * Manage applications, Header name used for other controls
     */
    public static final int controls_label=0x7f12034c;
    /**
     * Subtitle for possible options
     */
    public static final int controls_subtitle=0x7f12034d;
    /**
     * Warning displayed on dialog with final prompt for converting to file encryption
     */
    public static final int convert_to_fbe_warning=0x7f12034e;
    /**
     * Developer settings screen, convert userdata to file encryption option name
     */
    public static final int convert_to_file_encryption=0x7f12034f;
    /**
     * Developer settings screen, convert userdata to file encryption summary when option is already done
     */
    public static final int convert_to_file_encryption_done=0x7f120350;
    /**
     * Developer settings screen, convert userdata to file encryption summary when option is available
     */
    public static final int convert_to_file_encryption_enabled=0x7f120351;
    /**
     * About phone settings screen, setting option name to see copyright-related info
     */
    public static final int copyright_title=0x7f120352;
    /**
     * Strings for Dialog create button
     */
    public static final int create=0x7f120353;
    /**
     * Header for a list of items that a credential entry contains. For example, one private key and one certificate. [CHAR LIMIT=NONE]
     */
    public static final int credential_contains=0x7f120354;
    /**
     * Sub-heading for a user credential installed to be used by apps and as part of VPN configurations. [CHAR LIMIT=NONE]
     */
    public static final int credential_for_vpn_and_apps=0x7f120355;
    /**
     * Sub-heading for a user credential installed to be used as part of a Wi-Fi configuration. [CHAR LIMIT=NONE].
     */
    public static final int credential_for_wifi=0x7f120356;
    /**
     * Title of preference of what type of credential storage this device has: hardware or software [CHAR LIMIT=30]
     */
    public static final int credential_storage_type=0x7f120357;
    /**
     * Summary text for preference showing what type of credential storage this device has when it is stored in a hardware-backed storage (as opposed to "software only") [CHAR LIMIT=NONE]
     */
    public static final int credential_storage_type_hardware=0x7f120358;
    /**
     * Summary text for preference showing what type of credential storage this device has when it is stored in software only (as opposed to "hardware-backed") [CHAR LIMIT=NONE]
     */
    public static final int credential_storage_type_software=0x7f120359;
    /**
     * Description of dialog to explain that a lock screen password is required to use credential storage [CHAR LIMIT=NONE]
     */
    public static final int credentials_configure_lock_screen_hint=0x7f12035a;
    /**
     * Toast message [CHAR LIMIT=30]
     */
    public static final int credentials_enabled=0x7f12035b;
    /**
     * Toast message [CHAR LIMIT=30]
     */
    public static final int credentials_erased=0x7f12035c;
    /**
     * Title of preference to install certificates from SD card [CHAR LIMIT=30]
     */
    public static final int credentials_install=0x7f12035d;
    /**
     * Summary of preference to install certificates from SD card [CHAR LIMIT=NONE]
     */
    public static final int credentials_install_summary=0x7f12035e;
    /**
     * Toast message [CHAR LIMIT=30] when credential storage containing private keys and certificates could not be erased (opposite of string credentials_erased)
     */
    public static final int credentials_not_erased=0x7f12035f;
    /**
     * Description of the input box for the old password [CHAR LIMIT=30]
     */
    public static final int credentials_old_password=0x7f120360;
    public static final int credentials_password_too_short=0x7f120361;
    /**
     * Title of preference to reset credential storage [CHAR LIMIT=30]
     */
    public static final int credentials_reset=0x7f120362;
    /**
     * Description of dialog to reset credential storage [CHAR LIMIT=NONE]
     */
    public static final int credentials_reset_hint=0x7f120363;
    /**
     * Summary of preference to reset credential storage [CHAR LIMIT=NONE]
     */
    public static final int credentials_reset_summary=0x7f120364;
    /**
     * Error message [CHAR LIMIT=NONE]
     */
    public static final int credentials_reset_warning=0x7f120365;
    /**
     * Error message [CHAR LIMIT=NONE]
     */
    public static final int credentials_reset_warning_plural=0x7f120366;
    /**
     * Error message for users that aren't allowed to see or modify credentials [CHAR LIMIT=none]
     */
    public static final int credentials_settings_not_available=0x7f120367;
    /**
     * Title of preference group for credential storage settings [CHAR LIMIT=30]
     */
    public static final int credentials_title=0x7f120368;
    /**
     * Title of dialog to enable credential storage [CHAR LIMIT=30]
     */
    public static final int credentials_unlock=0x7f120369;
    /**
     * Description of dialog to enable credential storage [CHAR LIMIT=NONE]
     */
    public static final int credentials_unlock_hint=0x7f12036a;
    /**
     * Error message [CHAR LIMIT=NONE]
     */
    public static final int credentials_wrong_password=0x7f12036b;
    /**
     * Button text to start encryption process
     */
    public static final int crypt_keeper_button_text=0x7f12036c;
    /**
     * Title of the final confirmation screen before starting device encryption
     */
    public static final int crypt_keeper_confirm_title=0x7f12036d;
    /**
     * Informational text when encryption fails
     */
    public static final int crypt_keeper_data_corrupt_summary=0x7f12036e;
    /**
     * Title of the encryption screen when decrypting the device failed
     */
    public static final int crypt_keeper_data_corrupt_title=0x7f12036f;
    /**
     * Informational text in the first confirmation screen before starting device encryption
     */
    public static final int crypt_keeper_desc=0x7f120370;
    /**
     * Dialog message, shown when encryption cannot proceed because a PIN/Password is needed
     */
    public static final int crypt_keeper_dialog_need_password_message=0x7f120371;
    /**
     * Dialog title, shown when encryption cannot proceed because a PIN/Password is needed
     */
    public static final int crypt_keeper_dialog_need_password_title=0x7f120372;
    /**
     * Title of the preferences item to control encryption
     */
    public static final int crypt_keeper_encrypt_title=0x7f120373;
    /**
     * Summary of the preferences item to control encryption, when encryption is active
     */
    public static final int crypt_keeper_encrypted_summary=0x7f120374;
    /**
     * Informational text on the password entry screen prompting the user for their password
     */
    public static final int crypt_keeper_enter_password=0x7f120375;
    /**
     * Informational text when encryption fails
     */
    public static final int crypt_keeper_failed_summary=0x7f120376;
    /**
     * Title of the encryption screen when encrypting the device failed
     */
    public static final int crypt_keeper_failed_title=0x7f120377;
    /**
     * Warning text in the final confirmation screen before starting device encryption
     */
    public static final int crypt_keeper_final_desc=0x7f120378;
    public static final int crypt_keeper_force_power_cycle=0x7f120379;
    /**
     * Warning string that will be displayed when encryption cannot be started
     */
    public static final int crypt_keeper_low_charge_text=0x7f12037a;
    /**
     * Title of the preferences category for preference items to control encryption
     */
    public static final int crypt_keeper_settings_title=0x7f12037b;
    /**
     * Informational text on the progress screen while encrypting the device
     */
    public static final int crypt_keeper_setup_description=0x7f12037c;
    public static final int crypt_keeper_setup_time_remaining=0x7f12037d;
    /**
     * Title of the progress screen while encrypting the device
     */
    public static final int crypt_keeper_setup_title=0x7f12037e;
    /**
     * Image button description to switch input method
     */
    public static final int crypt_keeper_switch_input_method=0x7f12037f;
    /**
     * Warning string that will be displayed when encryption cannot be started
     */
    public static final int crypt_keeper_unplugged_text=0x7f120380;
    /**
     * Warn user their device will be wiped if they make x more failed attempts
     */
    public static final int crypt_keeper_warn_wipe=0x7f120381;
    /**
     * Button at the bottom of the CryptKeeper screen to make an emergency call.
     */
    public static final int cryptkeeper_emergency_call=0x7f120382;
    /**
     * Button at the bottom of the CryptKeeper screen that lets the user return to a call
     */
    public static final int cryptkeeper_return_to_call=0x7f120383;
    /**
     * Message shown when user enters wrong password
     */
    public static final int cryptkeeper_wrong_password=0x7f120384;
    /**
     * Message shown when user enters wrong pattern
     */
    public static final int cryptkeeper_wrong_pattern=0x7f120385;
    /**
     * Message shown when user enters wrong PIN
     */
    public static final int cryptkeeper_wrong_pin=0x7f120386;
    /**
     * Prompt for the user to enter their current full-backup password
     */
    public static final int current_backup_pw_prompt=0x7f120387;
    /**
     * Title for the option to press to choose the current keyboard, also known as input method [CHAR LIMIT=35]
     */
    public static final int current_input_method=0x7f120388;
    /**
     * Summary specifying that this is the current screen lock setting [CHAR LIMIT=45]
     */
    public static final int current_screen_lock=0x7f120389;
    /**
     * Label for deuteranomaly (red-green color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_deuteranomaly=0x7f12038a;
    /**
     * Label for disabling color space adjustment [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_disabled=0x7f12038b;
    /**
     * Label for converting display colors to grayscale, which simulates monochromacy (complete color blindness). [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_monochromacy=0x7f12038c;
    /**
     * Label for protanomaly (red-green color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_protanomaly=0x7f12038d;
    /**
     * Label for tritanomaly (blue-yellow color blindness) [CHAR LIMIT=45]
     */
    public static final int daltonizer_mode_tritanomaly=0x7f12038e;
    /**
     * Title for the preference to configure the type of color space correction to apply. [CHAR LIMIT=NONE]
     */
    public static final int daltonizer_type=0x7f12038f;
    /**
     * Summary shown for color space correction preference when its value is overridden by another preference [CHAR LIMIT=35]
     */
    public static final int daltonizer_type_overridden=0x7f120390;
    /**
     * Text to describe the dashboard fragment title [CHAR LIMIT=16]
     */
    public static final int dashboard_title=0x7f120391;
    /**
     * Label for button to set the amount of data before user is limited [CHAR LIMIT=30]
     */
    public static final int data_limit=0x7f120392;
    /**
     * A button that gets displayed in data plan usage preference in settings page to manage data plans [CHAR LIMIT=25]
     */
    public static final int data_plan_usage_manage_plans_button_text=0x7f120393;
    /**
     * Summary for the Data Saver feature being off [CHAR LIMIT=NONE]
     */
    public static final int data_saver_off=0x7f120394;
    /**
     * Summary for the Data Saver feature being on [CHAR LIMIT=NONE]
     */
    public static final int data_saver_on=0x7f120395;
    /**
     * Name of Data Saver screens [CHAR LIMIT=30]
     */
    public static final int data_saver_title=0x7f120396;
    /**
     * Manage applications, individual application info screen, label under Storage heading.  The amount of sapce taken up by the app's data (for example, downloaded emails or something like that)
     */
    public static final int data_size_label=0x7f120397;
    /**
     * Summary for data usage preference [CHAR LIMIT=15]
     */
    public static final int data_summary_format=0x7f120398;
    /**
     * Message for switching data SIM; switching takes a while
     */
    public static final int data_switch_started=0x7f120399;
    /**
     * Message about carrier data accounting.  [CHAR LIMIT=100]
     */
    public static final int data_usage_accounting=0x7f12039a;
    /**
     * Title for app usage. [CHAR LIMIT=40]
     */
    public static final int data_usage_app=0x7f12039b;
    /**
     * Title for app usage. [CHAR LIMIT=40]
     */
    public static final int data_usage_app_info_label=0x7f12039c;
    /**
     * Title for application data usage separator in data usage list. [CHAR LIMIT=25]
     */
    public static final int data_usage_app_items_header_text=0x7f12039d;
    /**
     * Checkbox label that restricts background data usage of a specific application. [CHAR LIMIT=40]
     */
    public static final int data_usage_app_restrict_background=0x7f12039e;
    /**
     * Summary message for checkbox that restricts background data usage of a specific application. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_app_restrict_background_summary=0x7f12039f;
    /**
     * Summary message for checkbox that restricts background data usage of a specific application when no networks have been limited. [CHAR LIMIT=84]
     */
    public static final int data_usage_app_restrict_background_summary_disabled=0x7f1203a0;
    /**
     * Body of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_app_restrict_dialog=0x7f1203a1;
    /**
     * Title of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=48]
     */
    public static final int data_usage_app_restrict_dialog_title=0x7f1203a2;
    /**
     * Label for application which has its data usage restricted. [CHAR LIMIT=16]
     */
    public static final int data_usage_app_restricted=0x7f1203a3;
    /**
     * Button title for launching application-specific data usage settings. [CHAR LIMIT=32]
     */
    public static final int data_usage_app_settings=0x7f1203a4;
    /**
     * Activity title for Appk data usage summary. [CHAR LIMIT=25]
     */
    public static final int data_usage_app_summary_title=0x7f1203a5;
    /**
     * Body of dialog shown when user disables global auto sync [CHAR LIMIT=none]
     */
    public static final int data_usage_auto_sync_off_dialog=0x7f1203a6;
    /**
     * Title of dialog shown when user disables global auto sync [CHAR LIMIT=32]
     */
    public static final int data_usage_auto_sync_off_dialog_title=0x7f1203a7;
    /**
     * Body of dialog shown when user enables global auto sync [CHAR LIMIT=none]
     */
    public static final int data_usage_auto_sync_on_dialog=0x7f1203a8;
    /**
     * Title of dialog shown when user enables global auto sync [CHAR LIMIT=32]
     */
    public static final int data_usage_auto_sync_on_dialog_title=0x7f1203a9;
    /**
     * Data Usage Background label.  [CHAR LIMIT=40]
     */
    public static final int data_usage_background_label=0x7f1203aa;
    /**
     * Title for cellular data usage. [CHAR LIMIT=40]
     */
    public static final int data_usage_cellular_data=0x7f1203ab;
    /**
     * Summary String for Cellular data enable toggle. [CHAR LIMIT=33]
     */
    public static final int data_usage_cellular_data_summary=0x7f1203ac;
    /**
     * Title for option to change data usage cycle day. [CHAR LIMIT=32]
     */
    public static final int data_usage_change_cycle=0x7f1203ad;
    /**
     * Title for option to pick visible time range from a list available usage periods. [CHAR LIMIT=25]
     */
    public static final int data_usage_cycle=0x7f1203ae;
    /**
     * Positive button title for data usage cycle editor, confirming that changes should be saved. [CHAR LIMIT=32]
     */
    public static final int data_usage_cycle_editor_positive=0x7f1203af;
    /**
     * Subtitle of dialog for editing data usage cycle reset date. [CHAR LIMIT=32]
     */
    public static final int data_usage_cycle_editor_subtitle=0x7f1203b0;
    /**
     * Title of dialog for editing data usage cycle reset date. [CHAR LIMIT=48]
     */
    public static final int data_usage_cycle_editor_title=0x7f1203b1;
    /**
     * Title for setting data limit. [CHAR LIMIT=40]
     */
    public static final int data_usage_data_limit=0x7f1203b2;
    /**
     * Checkbox label that will disable 2G-3G network data connection when user-defined limit is reached. [CHAR LIMIT=26]
     */
    public static final int data_usage_disable_3g_limit=0x7f1203b3;
    /**
     * Checkbox label that will disable 4G network data connection when user-defined limit is reached. [CHAR LIMIT=26]
     */
    public static final int data_usage_disable_4g_limit=0x7f1203b4;
    /**
     * Body of dialog shown to request confirmation that mobile data will be disabled. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_disable_mobile=0x7f1203b5;
    /**
     * Checkbox label that will disable mobile network data connection when user-defined limit is reached. [CHAR LIMIT=26]
     */
    public static final int data_usage_disable_mobile_limit=0x7f1203b6;
    /**
     * Checkbox label that will disable Wi-Fi network data connection when user-defined limit is reached. [CHAR LIMIT=26]
     */
    public static final int data_usage_disable_wifi_limit=0x7f1203b7;
    /**
     * Disclaimer string for data usage measured by device. [CHAR LIMIT=80]
     */
    public static final int data_usage_disclaimer=0x7f1203b8;
    /**
     * Label shown when no applications used data during selected time period. [CHAR LIMIT=48]
     */
    public static final int data_usage_empty=0x7f1203b9;
    /**
     * Toggle switch title for enabling 2G and 3G data network connections. [CHAR LIMIT=32]
     */
    public static final int data_usage_enable_3g=0x7f1203ba;
    /**
     * Toggle switch title for enabling 4G data network connection. [CHAR LIMIT=32]
     */
    public static final int data_usage_enable_4g=0x7f1203bb;
    /**
     * Toggle switch title for enabling all mobile data network connections. [CHAR LIMIT=32]
     */
    public static final int data_usage_enable_mobile=0x7f1203bc;
    /**
     * Data Usage Foreground label.  [CHAR LIMIT=40]
     */
    public static final int data_usage_forground_label=0x7f1203bd;
    /**
     * Label for data usage occuring while application in background. [CHAR LIMIT=48]
     */
    public static final int data_usage_label_background=0x7f1203be;
    /**
     * Label for data usage occuring while application in foreground. [CHAR LIMIT=48]
     */
    public static final int data_usage_label_foreground=0x7f1203bf;
    /**
     * Body of dialog shown before user limits mobile data usage. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_limit_dialog_mobile=0x7f1203c0;
    /**
     * Title of dialog shown before user limits data usage. [CHAR LIMIT=48]
     */
    public static final int data_usage_limit_dialog_title=0x7f1203c1;
    /**
     * Title of dialog for editing data usage limit in bytes. [CHAR LIMIT=48]
     */
    public static final int data_usage_limit_editor_title=0x7f1203c2;
    /**
     * Title shown when current operation applies to mobile networks. [CHAR LIMIT=20]
     */
    public static final int data_usage_list_mobile=0x7f1203c3;
    /**
     * Title shown when current operation applies to no networks. [CHAR LIMIT=20]
     */
    public static final int data_usage_list_none=0x7f1203c4;
    /**
     * Title for menu option to allow background data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_allow_background=0x7f1203c5;
    /**
     * Title for menu option to enable global auto-sync of account data
     */
    public static final int data_usage_menu_auto_sync=0x7f1203c6;
    /**
     * Title for menu option to show details for all cellular networks. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_cellular_networks=0x7f1203c7;
    /**
     * Title for menu option to hide Ethernet data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_hide_ethernet=0x7f1203c8;
    /**
     * Title for menu option to hide Wi-Fi data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_hide_wifi=0x7f1203c9;
    /**
     * Title for menu option to configure metered networks. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_metered=0x7f1203ca;
    /**
     * Title for menu option to restrict background data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_restrict_background=0x7f1203cb;
    /**
     * Title for menu option to enable mobile data when roaming. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_roaming=0x7f1203cc;
    /**
     * Title for menu option to show Ethernet data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_show_ethernet=0x7f1203cd;
    /**
     * Title for menu option to show Wi-Fi data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_show_wifi=0x7f1203ce;
    /**
     * Title for menu option to show details for all SIM cards. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_sim_cards=0x7f1203cf;
    /**
     * Title for menu option to show 4G mobile data usage separate from other mobile data usage. [CHAR LIMIT=26]
     */
    public static final int data_usage_menu_split_4g=0x7f1203d0;
    /**
     * Option for indicating that a network being metered (expensive) should be determined automatically. [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_auto=0x7f1203d1;
    /**
     * Dialog body for selecting paid networks. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_metered_body=0x7f1203d2;
    /**
     * Header for list of mobile networks. [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_mobile=0x7f1203d3;
    /**
     * Option for indicating that a network is not metered (inexpensive). [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_no=0x7f1203d4;
    /**
     * Dialog title for selecting metered networks. [CHAR LIMIT=25]
     */
    public static final int data_usage_metered_title=0x7f1203d5;
    /**
     * Header for list of Wi-Fi networks. [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_wifi=0x7f1203d6;
    /**
     * Body text prompting user to enable Wi-Fi to configure metered networks. [CHAR LIMIT=64]
     */
    public static final int data_usage_metered_wifi_disabled=0x7f1203d7;
    /**
     * Option for indicating that a network is metered (expensive). [CHAR LIMIT=32]
     */
    public static final int data_usage_metered_yes=0x7f1203d8;
    /**
     * List of app names included in data usage on app data usage screen
     * [CHAR LIMIT=50]
     */
    public static final int data_usage_other_apps=0x7f1203d9;
    /**
     * Body of dialog prompting user to change numerical day of month that data usage cycle should reset. [CHAR LIMIT=64]
     */
    public static final int data_usage_pick_cycle_day=0x7f1203da;
    /**
     * Combination of total network bytes sent and received by an application. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_received_sent=0x7f1203db;
    /**
     * Body of dialog shown before user restricts background data usage. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_restrict_background=0x7f1203dc;
    /**
     * Body of dialog shown before user restricts background data usage. This is for multiuser phones. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_restrict_background_multiuser=0x7f1203dd;
    /**
     * Title of dialog shown before user restricts background data usage. [CHAR LIMIT=48]
     */
    public static final int data_usage_restrict_background_title=0x7f1203de;
    /**
     * Body of dialog shown when user attempts to restrict background data before a network data limit has been set. [CHAR LIMIT=NONE]
     */
    public static final int data_usage_restrict_denied_dialog=0x7f1203df;
    /**
     * Summary of data usage [CHAR LIMIT=NONE]
     */
    public static final int data_usage_summary_format=0x7f1203e0;
    /**
     * Activity title for network data usage summary. [CHAR LIMIT=25]
     */
    public static final int data_usage_summary_title=0x7f1203e1;
    /**
     * Label displaying current network data usage limit threshold. [CHAR LIMIT=18]
     */
    public static final int data_usage_sweep_limit=0x7f1203e2;
    /**
     * Label displaying current network data usage warning threshold. [CHAR LIMIT=18]
     */
    public static final int data_usage_sweep_warning=0x7f1203e3;
    /**
     * Tab title for showing 2G and 3G data usage. [CHAR LIMIT=10]
     */
    public static final int data_usage_tab_3g=0x7f1203e4;
    /**
     * Tab title for showing 4G data usage. [CHAR LIMIT=10]
     */
    public static final int data_usage_tab_4g=0x7f1203e5;
    /**
     * Tab title for showing Ethernet data usage. [CHAR LIMIT=10]
     */
    public static final int data_usage_tab_ethernet=0x7f1203e6;
    /**
     * Tab title for showing combined mobile data usage. [CHAR LIMIT=20]
     */
    public static final int data_usage_tab_mobile=0x7f1203e7;
    /**
     * Tab title for showing Wi-Fi data usage. [CHAR LIMIT=10]
     */
    public static final int data_usage_tab_wifi=0x7f1203e8;
    /**
     * Summary about how much data has been used in a date range [CHAR LIMIT=NONE]
     */
    public static final int data_usage_template=0x7f1203e9;
    /**
     * Label displaying total network data transferred during a specific time period. [CHAR LIMIT=64]
     */
    public static final int data_usage_total_during_range=0x7f1203ea;
    /**
     * Label displaying total network data transferred during a specific time period, including a disclaimer that contrasts device versus carrier reporting. [CHAR LIMIT=80]
     */
    public static final int data_usage_total_during_range_mobile=0x7f1203eb;
    /**
     * Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48]
     */
    public static final int data_usage_uninstalled_apps=0x7f1203ec;
    /**
     * Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48]
     */
    public static final int data_usage_uninstalled_apps_users=0x7f1203ed;
    /**
     * Title of dialog for editing data usage warning in bytes. [CHAR LIMIT=48]
     */
    public static final int data_usage_warning_editor_title=0x7f1203ee;
    /**
     * Format string describing how much data has been used [CHAR LIMIT=20]
     */
    public static final int data_used_template=0x7f1203ef;
    /**
     * Label for button to set the amount of data before user is warned about usage [CHAR LIMIT=30]
     */
    public static final int data_warning=0x7f1203f0;
    /**
     * Date & time settings screen title
     */
    public static final int date_and_time=0x7f1203f1;
    /**
     * Main Settings screen setting option summary text for the item to go into the date and time settings.
     */
    public static final int date_and_time_settings_summary=0x7f1203f2;
    /**
     * Main Settings screen setting option name to go into the date and time settings
     */
    public static final int date_and_time_settings_title=0x7f1203f3;
    /**
     * Title for Date & Time settings screen in SetupWizard [CHAR LIMIT=40]
     */
    public static final int date_and_time_settings_title_setup_wizard=0x7f1203f4;
    /**
     * Title string shown above DatePicker, letting a user select system date
     * [CHAR LIMIT=20]
     */
    public static final int date_picker_title=0x7f1203f5;
    /**
     * Date & time setting screen setting check box title
     */
    public static final int date_time_24hour=0x7f1203f6;
    /**
     * Date & time setting screen setting check box title [CHAR LIMIT=30]
     */
    public static final int date_time_24hour_title=0x7f1203f7;
    /**
     * Date & time setting screen setting check box title if the date and time should be determined automatically [CHAR LIMIT=30]
     */
    public static final int date_time_auto=0x7f1203f8;
    /**
     * Date & time setting screen setting option summary text when Automatic check box is clear
     * [CHAR LIMIT=100]
     */
    public static final int date_time_auto_summaryOff=0x7f1203f9;
    /**
     * Date & time setting screen setting option summary text when Automatic check box is selected
     * (that is, when date and time should be determined automatically) [CHAR LIMIT=100]
     */
    public static final int date_time_auto_summaryOn=0x7f1203fa;
    /**
     * Date & time setting screen setting option title
     */
    public static final int date_time_set_date=0x7f1203fb;
    /**
     * Date & time setting screen setting option title [CHAR LIMIT=30]
     */
    public static final int date_time_set_date_title=0x7f1203fc;
    /**
     * Date & time setting screen setting option title
     */
    public static final int date_time_set_time=0x7f1203fd;
    /**
     * Date & time setting screen setting option title [CHAR LIMIT=30]
     */
    public static final int date_time_set_time_title=0x7f1203fe;
    /**
     * Date & time setting screen setting option title
     */
    public static final int date_time_set_timezone=0x7f1203ff;
    /**
     * Date & time setting screen setting option title [CHAR LIMIT=30]
     */
    public static final int date_time_set_timezone_title=0x7f120400;
    /**
     * UI debug setting: select current app to debug [CHAR LIMIT=50]
     */
    public static final int debug_app=0x7f120401;
    /**
     * UI debug setting: no debug app has been set [CHAR LIMIT=50]
     */
    public static final int debug_app_not_set=0x7f120402;
    /**
     * UI debug setting: debug app has been set [CHAR LIMIT=50]
     */
    public static final int debug_app_set=0x7f120403;
    /**
     * Preference category for application debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_applications_category=0x7f120404;
    /**
     * Preference category for app debugging development settings. [CHAR LIMIT=50]
     */
    public static final int debug_debugging_category=0x7f120405;
    /**
     * Preference category for drawing debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_drawing_category=0x7f120406;
    /**
     * Preference category for hardware accelerated drawing debugging development settings. [CHAR LIMIT=50]
     */
    public static final int debug_hw_drawing_category=0x7f120407;
    /**
     * UI debug setting: show the amount of overdraw in apps using the GPU [CHAR LIMIT=25]
     */
    public static final int debug_hw_overdraw=0x7f120408;
    /**
     * UI debug setting: select the renderer to use by RenderThread [CHAR LIMIT=25]
     */
    public static final int debug_hw_renderer=0x7f120409;
    /**
     * Preference category for input debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_input_category=0x7f12040a;
    /**
     * Do not translate.
     */
    public static final int debug_intent_sender_label=0x7f12040b;
    /**
     * UI debug setting: show layout bounds information [CHAR LIMIT=25]
     */
    public static final int debug_layout=0x7f12040c;
    /**
     * UI debug setting: show layout bounds information summary [CHAR LIMIT=50]
     */
    public static final int debug_layout_summary=0x7f12040d;
    /**
     * Preference category for monitoring debugging development settings. [CHAR LIMIT=25]
     */
    public static final int debug_monitoring_category=0x7f12040e;
    /**
     * Preference category for networking debugging development settings. [CHAR LIMIT=50]
     */
    public static final int debug_networking_category=0x7f12040f;
    /**
     * Setting Checkbox title whether to enable view attribute inspection
     */
    public static final int debug_view_attributes=0x7f120410;
    /**
     * Decline label of dialog shown to ask for user consent for sharing the remote bugreport.
     */
    public static final int decline_remote_bugreport_action=0x7f120411;
    /**
     * Shown when the user tries to change a settings locked by an admin [CHAR LIMIT=200]
     */
    public static final int default_admin_support_msg=0x7f120412;
    /**
     * Label of default app for current setting [CHAR LIMIT=40]
     */
    public static final int default_app=0x7f120413;
    /**
     * Title for Default Apps settings [CHAR LIMIT=30]
     */
    public static final int default_apps_title=0x7f120414;
    /**
     * Title for Default Assist settings [CHAR LIMIT=30]
     */
    public static final int default_assist_title=0x7f120415;
    /**
     * Title for Default Browser settings [CHAR LIMIT=30]
     */
    public static final int default_browser_title=0x7f120416;
    /**
     * Summary for No Default Browser settings [CHAR LIMIT=45]
     */
    public static final int default_browser_title_none=0x7f120417;
    /**
     * Title for the app that has been set as default handler of calendar-related intents. [CHAR LIMIT=30]
     */
    public static final int default_calendar_app_title=0x7f120418;
    /**
     * Title for the app that has been set as default handler of contacts-related intents. [CHAR LIMIT=30]
     */
    public static final int default_contacts_app_title=0x7f120419;
    /**
     * [CHAR LIMIT=NONE] Advanced applications screen, preference title.  Choose the emergency application.
     */
    public static final int default_emergency_app=0x7f12041a;
    /**
     * Title for Default Apps settings for work [CHAR LIMIT=30]
     */
    public static final int default_for_work=0x7f12041b;
    /**
     * Summary text for keyboards when no layout has been selected. [CHAR LIMIT=35]
     */
    public static final int default_keyboard_layout=0x7f12041c;
    /**
     * Title for the app that has been set as default handler of geo-related intents. [CHAR LIMIT=30]
     */
    public static final int default_map_app_title=0x7f12041d;
    /**
     * Default Apps > Default notification assistant
     */
    public static final int default_notification_assistant=0x7f12041e;
    /**
     * Title for Default Phone app settings [CHAR LIMIT=30]
     */
    public static final int default_phone_title=0x7f12041f;
    /**
     * Option title for the default sound, context based on screen
     */
    public static final int default_sound=0x7f120420;
    /**
     * [CHAR LIMIT=30] Label for setting to control the default spell checker
     */
    public static final int default_spell_checker=0x7f120421;
    /**
     * Name of default device theme [CHAR LIMIT=60]
     */
    public static final int default_theme=0x7f120422;
    /**
     * Menu item/button 'delete'
     */
    public static final int delete=0x7f120423;
    /**
     * Category title for the automatic settings in the storage manager settings. [CHAR LIMIT=40]
     */
    public static final int deletion_helper_automatic_title=0x7f120424;
    /**
     * Category title for the manual settings in the storage manager settings. [CHAR LIMIT=40]
     */
    public static final int deletion_helper_manual_title=0x7f120425;
    /**
     * Preference menu title for accessing the deletion helper from the storage manager settings. [CHAR LIMIT=30]
     */
    public static final int deletion_helper_preference_title=0x7f120426;
    /**
     * [CHAR LIMIT=60] Name of dev option called "System UI demo mode"
     */
    public static final int demo_mode=0x7f120427;
    /**
     * Summary of developer options to set the smallest width of the screen [CHAR LIMIT=60]
     */
    public static final int density_pixel_summary=0x7f120428;
    /**
     * Strings for Dialog deny button
     */
    public static final int deny=0x7f120429;
    /**
     * Subtitle for application/subsystem details
     */
    public static final int details_subtitle=0x7f12042a;
    /**
     * Warning text to user about the implications of enabling USB debugging
     */
    public static final int dev_logpersist_clear_warning_message=0x7f12042b;
    /**
     * UI debug setting: store logs persistently
     */
    public static final int dev_logpersist_clear_warning_title=0x7f12042c;
    /**
     * [CHAR LIMIT=NONE] Toast message when user attemps to launch developer otions before enabling it.
     */
    public static final int dev_settings_disabled_warning=0x7f12042d;
    /**
     * Warning text to user about the implications of enabling USB debugging
     */
    public static final int dev_settings_warning_message=0x7f12042e;
    /**
     * Title of warning dialog about the implications of enabling developer settings
     */
    public static final int dev_settings_warning_title=0x7f12042f;
    /**
     * Title of developer options to set the smallest width of the screen [CHAR LIMIT=60]
     */
    public static final int developer_smallest_width=0x7f120430;
    /**
     * Development settings enable title.
     */
    public static final int development_settings_enable=0x7f120431;
    /**
     * Error message for users that aren't allowed to modify developer options [CHAR LIMIT=none]
     */
    public static final int development_settings_not_available=0x7f120432;
    /**
     * Development Settings summary.  The summary of the item to take the user to Development settings.  Development settings are settings meant for application developers.
     */
    public static final int development_settings_summary=0x7f120433;
    /**
     * Development Settings.  the title for the item to take the user to Development settings.  Development settings are settings meant for application developers.
     */
    public static final int development_settings_title=0x7f120434;
    /**
     * Device admin add activity title
     */
    public static final int device_admin_add_title=0x7f120435;
    /**
     * Device admin app settings activity title
     */
    public static final int device_admin_settings_title=0x7f120436;
    /**
     * Device admin warning message about policies an admin can use
     */
    public static final int device_admin_status=0x7f120437;
    /**
     * Device admin warning message about policies an admin can use
     */
    public static final int device_admin_warning=0x7f120438;
    /**
     * Title for the cellular network in power use UI(i.e. Mobile network scanning: 30% of battery usage) [CHAR_LIMIT=40]
     */
    public static final int device_cellular_network=0x7f120439;
    /**
     * Title of device details screen [CHAR LIMIT=40]
     */
    public static final int device_details_title=0x7f12043a;
    /**
     * [CHAR LIMIT=35] Feedback on the device
     */
    public static final int device_feedback=0x7f12043b;
    /**
     * Device Info screen. Used for a status item's value when the proper value is not known
     */
    public static final int device_info_default=0x7f12043c;
    /**
     * The title of the activity to see random device info.
     */
    public static final int device_info_label=0x7f12043d;
    /**
     * About phone screen, show when a value of some status item is unavailable.
     */
    public static final int device_info_not_available=0x7f12043e;
    /**
     * Advanced (used for diagnostics) device info activity title [CHAR LIMIT=40]
     */
    public static final int device_info_settings=0x7f12043f;
    /**
     * Strings for BluetoothDevicePicker [CHAR LIMIT=40]
     */
    public static final int device_picker=0x7f120440;
    /**
     * Title for the screen consumption in power use UI(i.e. Screen consumption: 30% of battery usage) [CHAR_LIMIT=40]
     */
    public static final int device_screen_consumption=0x7f120441;
    /**
     * Title for the screen usage in power use UI [CHAR_LIMIT=60]
     */
    public static final int device_screen_usage=0x7f120442;
    /**
     * About phone screen, title of the item to go into the Phone status screen
     */
    public static final int device_status=0x7f120443;
    /**
     * About phone screen, phone status screen title
     */
    public static final int device_status_activity_title=0x7f120444;
    /**
     * About phone screen, summary of the item to go into the phone status screen
     */
    public static final int device_status_summary=0x7f120445;
    /**
     * Name of setting for switching device theme [CHAR LIMIT=60]
     */
    public static final int device_theme=0x7f120446;
    /**
     * Label for list of different types using battery in power use UI [CHAR_LIMIT=60]
     */
    public static final int device_usage_list_summary=0x7f120447;
    /**
     * Sound: Other sounds: Title for the option enabling touch sounds for dial pad tones. [CHAR LIMIT=30]
     */
    public static final int dial_pad_tones_title=0x7f120448;
    /**
     * Message body for background usage dialog [CHAR LIMIT=NONE]
     */
    public static final int dialog_background_check_message=0x7f120449;
    /**
     * Text for OK button in background usage dialog [CHAR LIMIT=30]
     */
    public static final int dialog_background_check_ok=0x7f12044a;
    /**
     * Title for background usage dialog [CHAR LIMIT=70]
     */
    public static final int dialog_background_check_title=0x7f12044b;
    /**
     * Message body for location dialog [CHAR LIMIT=NONE]
     */
    public static final int dialog_location_message=0x7f12044c;
    /**
     * Text for OK button in location dialog [CHAR LIMIT=30]
     */
    public static final int dialog_location_ok=0x7f12044d;
    /**
     * Title for location dialog [CHAR LIMIT=60]
     */
    public static final int dialog_location_title=0x7f12044e;
    /**
     * Message body for force stop dialog [CHAR LIMIT=NONE]
     */
    public static final int dialog_stop_message=0x7f12044f;
    /**
     * Message body for force stop dialog [CHAR LIMIT=NONE]
     */
    public static final int dialog_stop_message_wakeup_alarm=0x7f120450;
    /**
     * Text for OK button in force stop dialog [CHAR LIMIT=30]
     */
    public static final int dialog_stop_ok=0x7f120451;
    /**
     * Title for force stop dialog [CHAR LIMIT=30]
     */
    public static final int dialog_stop_title=0x7f120452;
    /**
     * [CHAR LIMIT=NONE] Dialog body explaining that the app just selected by the user will not work after a reboot until until after the user enters their credentials, such as a PIN or password.
     */
    public static final int direct_boot_unaware_dialog_message=0x7f120453;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager disableNetwork API
     */
    public static final int disableNetwork=0x7f120454;
    /**
     * UI debug setting: disable use of overlays? [CHAR LIMIT=25]
     */
    public static final int disable_overlays=0x7f120455;
    /**
     * UI debug setting: disable use of overlays summary [CHAR LIMIT=50]
     */
    public static final int disable_overlays_summary=0x7f120456;
    /**
     * Message for a warning about disabling accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int disable_service_message=0x7f120457;
    /**
     * Title for a warning about disabling an accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int disable_service_title=0x7f120458;
    /**
     * [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to disable an existing application.
     */
    public static final int disable_text=0x7f120459;
    /**
     * [CHAR LIMIT=25] Manage applications, text telling using an application is disabled.
     */
    public static final int disabled=0x7f12045a;
    /**
     * Summary shown when trust agent settings is disabled because the user hasn't set up primary security
     */
    public static final int disabled_because_no_backup_security=0x7f12045b;
    /**
     * Summary for switch preference to denote it is switched off [CHAR LIMIT=50]
     */
    public static final int disabled_by_admin=0x7f12045c;
    /**
     * Summary for settings preference disabled by administrator [CHAR LIMIT=50]
     */
    public static final int disabled_by_admin_summary_text=0x7f12045d;
    /**
     * Summary for settings preference disabled by administrator [CHAR LIMIT=50]
     */
    public static final int disabled_by_administrator_summary=0x7f12045e;
    /**
     * Title for dialog displayed when user clicks on a setting locked by an admin [CHAR LIMIT=30]
     */
    public static final int disabled_by_policy_title=0x7f12045f;
    /**
     * Title for dialog displayed to tell user that changing volume was disallowed by an admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_adjust_volume=0x7f120460;
    /**
     * Title for dialog displayed to tell user that the camera was disabled by an admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_camera=0x7f120461;
    /**
     * Title for dialog displayed to tell user that outgoing calls were disabled by an admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_outgoing_calls=0x7f120462;
    /**
     * Title for dialog displayed to tell user that screenshots are disabled by an admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_screen_capture=0x7f120463;
    /**
     * Title for dialog displayed to tell user that sending SMS were disabled by an admin [CHAR LIMIT=50]
     */
    public static final int disabled_by_policy_title_sms=0x7f120464;
    /**
     * Note displayed when certain features are not available on low ram devices. [CHAR LIMIT=NONE]
     */
    public static final int disabled_low_ram_device=0x7f120465;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager disconnect API
     */
    public static final int disconnect=0x7f120466;
    /**
     * Wi-Fi state - Disconnected [CHAR LIMIT=NONE]
     */
    public static final int disconnected=0x7f120467;
    /**
     * Title for the accessibility preference category of display services and settings. [CHAR LIMIT=50]
     */
    public static final int display_category_title=0x7f120468;
    /**
     * Summary for Display settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int display_dashboard_summary=0x7f120469;
    /**
     * The title of the activity to adjust display settings
     */
    public static final int display_label=0x7f12046a;
    /**
     * label for text to indicate sort options
     */
    public static final int display_order_text=0x7f12046b;
    /**
     * Sound & display settings screen, section header for settings related to display
     */
    public static final int display_settings=0x7f12046c;
    public static final int display_settings_title=0x7f12046d;
    /**
     * Summary of display with screen sleep timeout [CHAR LIMIT=NONE]
     */
    public static final int display_summary=0x7f12046e;
    /**
     * Example summary of display used in Setup Wizard preview screen [CHAR LIMIT=NONE]
     */
    public static final int display_summary_example=0x7f12046f;
    /**
     * [CHAR LIMIT=70] Put display into low-persistence mode, this decreases motion blur.
     */
    public static final int display_vr_pref_low_persistence=0x7f120470;
    /**
     * [CHAR LIMIT=70] Do not change default display settings, this may reduce perceived screen
     * flicker while in VR mode.
     */
    public static final int display_vr_pref_off=0x7f120471;
    /**
     * Title for what display preferences are applied when device is in VR mode
     */
    public static final int display_vr_pref_title=0x7f120472;
    /**
     * Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data".
     */
    public static final int dlg_cancel=0x7f120473;
    /**
     * Strings for Dialog close button [CHAR LIMIT=20]
     */
    public static final int dlg_close=0x7f120474;
    /**
     * SD card eject confirmation dialog
     */
    public static final int dlg_confirm_unmount_text=0x7f120475;
    /**
     * SD card eject confirmation dialog title
     */
    public static final int dlg_confirm_unmount_title=0x7f120476;
    /**
     * SD card eject error dialog text
     */
    public static final int dlg_error_unmount_text=0x7f120477;
    /**
     * SD card eject error dialog title
     */
    public static final int dlg_error_unmount_title=0x7f120478;
    /**
     * Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". Goes through with the clearing of the data.
     */
    public static final int dlg_ok=0x7f120479;
    /**
     * The text of the error dialog shown when the user selects all the languages and tries to remove them [CHAR LIMIT=NONE]
     */
    public static final int dlg_remove_locales_error_message=0x7f12047a;
    /**
     * The title of the error dialog shown when the user selects all the languages and tries to remove them [CHAR LIMIT=60]
     */
    public static final int dlg_remove_locales_error_title=0x7f12047b;
    /**
     * The text of the confirmation dialog shown when the user selects several languages and tries to remove them [CHAR LIMIT=NONE]
     */
    public static final int dlg_remove_locales_message=0x7f12047c;
    /**
     * Strings for Dialog switch button [CHAR LIMIT=20]
     */
    public static final int dlg_switch=0x7f12047d;
    /**
     * Message indicating that the device is enterprise-managed by a Device Owner [CHAR LIMIT=NONE]
     */
    public static final int do_disclosure_generic=0x7f12047e;
    /**
     * Message indicating that the device is enterprise-managed: Link to learn more about what a Device Owner app can do [CHAR LIMIT=NONE]
     */
    public static final int do_disclosure_learn_more=0x7f12047f;
    /**
     * Message indicating that the device is enterprise-managed: Space that separates the main text and the "learn more" link that follows it. [CHAR LIMIT=NONE]
     */
    public static final int do_disclosure_learn_more_separator=0x7f120480;
    /**
     * Message indicating that the device is enterprise-managed by a Device Owner [CHAR LIMIT=NONE]
     */
    public static final int do_disclosure_with_name=0x7f120481;
    /**
     * Sound: Other sounds: Value for the dock audio media with value 0: disabled. [CHAR LIMIT=30]
     */
    public static final int dock_audio_media_disabled=0x7f120482;
    /**
     * Sound: Other sounds: Value for the dock audio media with value 1: enabled. [CHAR LIMIT=30]
     */
    public static final int dock_audio_media_enabled=0x7f120483;
    /**
     * Sound: Other sounds: Title for the option enabling dock audio media. [CHAR LIMIT=50]
     */
    public static final int dock_audio_media_title=0x7f120484;
    /**
     * Dock audio settings
     */
    public static final int dock_audio_settings_title=0x7f120485;
    /**
     * Dock audio summary for docked to car dock
     */
    public static final int dock_audio_summary_car=0x7f120486;
    /**
     * Dock audio summary for docked to desk dock
     */
    public static final int dock_audio_summary_desk=0x7f120487;
    /**
     * Dock audio summary for undocked
     */
    public static final int dock_audio_summary_none=0x7f120488;
    /**
     * Dock audio summary for docked to unknown
     */
    public static final int dock_audio_summary_unknown=0x7f120489;
    /**
     * Dock not found dialog text
     */
    public static final int dock_not_found_text=0x7f12048a;
    /**
     * Dock not found dialog title
     */
    public static final int dock_not_found_title=0x7f12048b;
    /**
     * Dock settings title, top level
     */
    public static final int dock_settings=0x7f12048c;
    /**
     * Sound settings screen, dock settings summary
     */
    public static final int dock_settings_summary=0x7f12048d;
    /**
     * Dock settings title
     */
    public static final int dock_settings_title=0x7f12048e;
    /**
     * Sound settings screen, setting option summary text when check box is clear
     */
    public static final int dock_sounds_enable_summary_off=0x7f12048f;
    /**
     * Dock settings screen, setting option summary text when check box is selected
     */
    public static final int dock_sounds_enable_summary_on=0x7f120490;
    /**
     * Dock settings screen, dock events SFX setting check box label
     */
    public static final int dock_sounds_enable_title=0x7f120491;
    /**
     * Sound: Other sounds: Title for the option enabling docking sounds. [CHAR LIMIT=30]
     */
    public static final int docking_sounds_title=0x7f120492;
    public static final int does_not_exist=0x7f120493;
    /**
     * Section title for the Domain URL app preference list [CHAR LIMIT=60]
     */
    public static final int domain_url_section_title=0x7f120494;
    /**
     * Summary of open web links settings when no app can open supported links [CHAR LIMIT=NONE]
     */
    public static final int domain_urls_apps_summary_off=0x7f120495;
    /**
     * Summary for an app that doesn't open any domain URLs [CHAR LIMIT=45]
     */
    public static final int domain_urls_summary_none=0x7f120496;
    /**
     * Summary of an app that can open URLs for exactly one domain [CHAR LIMIT=45]
     */
    public static final int domain_urls_summary_one=0x7f120497;
    /**
     * Summary of an app that can open several domain's URLs [CHAR LIMIT=45]
     */
    public static final int domain_urls_summary_some=0x7f120498;
    /**
     * Title of a preference item that will show the user's preferences for this app's priority for opening links to websites that it claims to support [CHAR LIMIT=30]
     */
    public static final int domain_urls_title=0x7f120499;
    /**
     * Button label for generic done action [CHAR LIMIT=20]
     */
    public static final int done=0x7f12049a;
    /**
     * Button to close the SSL CA cert warning dialog box, meaning the user is done reading.  [CHAR LIMIT=NONE]
     */
    public static final int done_button=0x7f12049b;
    /**
     * Summary for settings suggestion for double tap power for camera [CHAR LIMIT=60]
     */
    public static final int double_tap_power_for_camera_suggestion_summary=0x7f12049c;
    /**
     * Title for settings suggestion for double tap power for camera [CHAR LIMIT=60]
     */
    public static final int double_tap_power_for_camera_suggestion_title=0x7f12049d;
    /**
     * Summary text for double tap power for camera [CHAR LIMIT=160]
     */
    public static final int double_tap_power_for_camera_summary=0x7f12049e;
    /**
     * Title text for double tap power for camera [CHAR LIMIT=60]
     */
    public static final int double_tap_power_for_camera_title=0x7f12049f;
    /**
     * Summary text for double twist for camera mode  [CHAR LIMIT=160]
     */
    public static final int double_twist_for_camera_mode_summary=0x7f1204a0;
    /**
     * Title text for double twist for camera mode [CHAR LIMIT=60]
     */
    public static final int double_twist_for_camera_mode_title=0x7f1204a1;
    /**
     * Summary for settings suggestion for double twist for camera (phone) [CHAR LIMIT=60]
     */
    public static final int double_twist_for_camera_suggestion_summary=0x7f1204a2;
    /**
     * Title for settings suggestion for double twist for camera [CHAR LIMIT=60]
     */
    public static final int double_twist_for_camera_suggestion_title=0x7f1204a3;
    /**
     * [CHAR LIMIT=NONE] Display settings screen, setting description for the always-on ambient display feature.
     */
    public static final int doze_always_on_summary=0x7f1204a4;
    /**
     * [CHAR LIMIT=30] Display settings screen, setting option name to change whether the always-on ambient display feature is enabled.
     */
    public static final int doze_always_on_title=0x7f1204a5;
    /**
     * [CHAR LIMIT=NONE] Ambient display screen, summary for setting to change whether the ambient display feature is triggered for new incoming notifications.
     */
    public static final int doze_summary=0x7f1204a6;
    /**
     * [CHAR LIMIT=30] Ambient display screen, title for setting to change whether the ambient display feature is triggered for new incoming notifications.
     */
    public static final int doze_title=0x7f1204a7;
    /**
     * Title of display overlay screen [CHAR LIMIT=30]
     */
    public static final int draw_overlay=0x7f1204a8;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int dtmf_tone_enable_title=0x7f1204a9;
    /**
     * EAB provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int eab_provisioned_switch_string=0x7f1204aa;
    /**
     * Summary of Update Emergency Address preference, explaining usage of emergency address [CHAR LIMIT=NONE]
     */
    public static final int emergency_address_summary=0x7f1204ab;
    /**
     * Title of a preference for updating emergency address [CHAR LIMIT=40]
     */
    public static final int emergency_address_title=0x7f1204ac;
    /**
     * Summary for the emergency info preference [CHAR LIMIT=40]
     */
    public static final int emergency_info_summary=0x7f1204ad;
    /**
     * Title for the emergency info preference [CHAR LIMIT=40]
     */
    public static final int emergency_info_title=0x7f1204ae;
    /**
     * Sound: Other sounds: Value for the emergency tone option with value 1: alert. [CHAR LIMIT=30]
     */
    public static final int emergency_tone_alert=0x7f1204af;
    /**
     * Sound: Other sounds: Value for the emergency tone option with value 0: silent. [CHAR LIMIT=30]
     */
    public static final int emergency_tone_silent=0x7f1204b0;
    /**
     * Sound settings screen, setting option summary text
     */
    public static final int emergency_tone_summary=0x7f1204b1;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int emergency_tone_title=0x7f1204b2;
    /**
     * Sound: Other sounds: Value for the emergency tone option with value 2: vibrate. [CHAR LIMIT=30]
     */
    public static final int emergency_tone_vibrate=0x7f1204b3;
    /**
     * String displayed when list is empty
     */
    public static final int empty_list_msg=0x7f1204b4;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager enableNetwork API
     */
    public static final int enableNetwork=0x7f1204b5;
    public static final int enable_adb=0x7f1204b6;
    /**
     * Setting checkbox summary for Whether to enable USB debugging support on the phone
     */
    public static final int enable_adb_summary=0x7f1204b7;
    /**
     * Manage applications, individual application screen, checkbox to control compatibility mode.
     */
    public static final int enable_compatibility=0x7f1204b8;
    /**
     * UI debug setting: enable freeform window support [CHAR LIMIT=50]
     */
    public static final int enable_freeform_support=0x7f1204b9;
    /**
     * UI debug setting: enable freeform window support summary [CHAR LIMIT=150]
     */
    public static final int enable_freeform_support_summary=0x7f1204ba;
    /**
     * UI debug setting: enable various types of OpenGL traces [CHAR LIMIT=25]
     */
    public static final int enable_opengl_traces_title=0x7f1204bb;
    /**
     * Title for the preference to show a tile for a particular feature in the Quick Settings pane. [CHAR LIMIT=NONE]
     */
    public static final int enable_quick_setting=0x7f1204bc;
    /**
     * Warning that the device data will not be encrypted with password or PIN if
     * enabling an accessibility service and there is a secure lock setup. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_encryption_warning=0x7f1204bd;
    /**
     * Message to the user to enter his password before enabling an accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_password_reason=0x7f1204be;
    /**
     * Message to the user to enter his pattern before enabling an accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_pattern_reason=0x7f1204bf;
    /**
     * Message to the user to enter his PIN before enabling an accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_pin_reason=0x7f1204c0;
    /**
     * Title for a warning about security implications of enabling an accessibility
     * service. [CHAR LIMIT=NONE]
     */
    public static final int enable_service_title=0x7f1204c1;
    /**
     * Summary of checkbox setting that enables the terminal app. [CHAR LIMIT=64]
     */
    public static final int enable_terminal_summary=0x7f1204c2;
    /**
     * Title of checkbox setting that enables the terminal app. [CHAR LIMIT=32]
     */
    public static final int enable_terminal_title=0x7f1204c3;
    /**
     * [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to re-enable an existing application.
     */
    public static final int enable_text=0x7f1204c4;
    /**
     * Summary for switch preference to denote it is switched on [CHAR LIMIT=50]
     */
    public static final int enabled_by_admin=0x7f1204c5;
    /**
     * Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled.
     */
    public static final int encrypt_talkback_dialog_message_password=0x7f1204c6;
    /**
     * Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled.
     */
    public static final int encrypt_talkback_dialog_message_pattern=0x7f1204c7;
    /**
     * Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled.
     */
    public static final int encrypt_talkback_dialog_message_pin=0x7f1204c8;
    /**
     * Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25]
     */
    public static final int encrypt_talkback_dialog_require_password=0x7f1204c9;
    /**
     * Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25]
     */
    public static final int encrypt_talkback_dialog_require_pattern=0x7f1204ca;
    /**
     * Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25]
     */
    public static final int encrypt_talkback_dialog_require_pin=0x7f1204cb;
    /**
     * Security Settings screen Encryption and crendential summary
     */
    public static final int encryption_and_credential_settings_summary=0x7f1204cc;
    /**
     * Security Settings screen setting option title for the item to take you to the encryption and credential screen
     */
    public static final int encryption_and_credential_settings_title=0x7f1204cd;
    /**
     * Encryption interstitial button to continue with the shown setting.  Appears on screen that asks the user to opt in/out of encrypting device with a pin/pattern/password. [CHAR LIMIT=NONE]
     */
    public static final int encryption_continue_button=0x7f1204ce;
    /**
     * Encryption interstitial title. This screen asks the user whether the device will ask for a PIN / pattern / password before the device starts up. [CHAR LIMIT=30]
     */
    public static final int encryption_interstitial_header=0x7f1204cf;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_password=0x7f1204d0;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_password_for_fingerprint=0x7f1204d1;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pattern=0x7f1204d2;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pattern_for_fingerprint=0x7f1204d3;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device. [CHAR LIMIT=NONE]
     */
    public static final int encryption_interstitial_message_pin=0x7f1204d4;
    /**
     * Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE]
     * unknown quoting pattern: original -1, translation 1
     */
    public static final int encryption_interstitial_message_pin_for_fingerprint=0x7f1204d5;
    /**
     * Button label to say no to the question of whether to require PIN/password/pattern to start your device. [CHAR LIMIT=20]
     */
    public static final int encryption_interstitial_no=0x7f1204d6;
    /**
     * Button label to say yes to the question of whether to require PIN/password/pattern to start your device. [CHAR LIMIT=20]
     */
    public static final int encryption_interstitial_yes=0x7f1204d7;
    /**
     * Enhaced 4G LTE Mode summary.  [CHAR LIMIT=100]
     */
    public static final int enhanced_4g_lte_mode_summary=0x7f1204d8;
    /**
     * Enhaced 4G LTE Mode title.  [CHAR LIMIT=50]
     */
    public static final int enhanced_4g_lte_mode_title=0x7f1204d9;
    /**
     * This is displayed to the user when the device needs to be decrypted
     */
    public static final int enter_password=0x7f1204da;
    /**
     * Informational text on the pattern entry screen prompting the user for their pattern
     */
    public static final int enter_pattern=0x7f1204db;
    /**
     * Informational text on the pin entry screen prompting the user for their pin
     */
    public static final int enter_pin=0x7f1204dc;
    /**
     * Label explaining that an always-on VPN was set by the admin for the entire device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_always_on_vpn_device=0x7f1204dd;
    /**
     * Label explaining that an always-on VPN was set by the admin in the personal profile. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_always_on_vpn_personal=0x7f1204de;
    /**
     * Label explaining that an always-on VPN was set by the admin in the work profile. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_always_on_vpn_work=0x7f1204df;
    /**
     * Label explaining that the the number of apps is an estimation. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_apps_count_estimation_info=0x7f1204e0;
    /**
     * Label explaining that the admin can request bug reports on the device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_bug_reports=0x7f1204e1;
    /**
     * Label explaining that the admin installed trusted CA certificates for the entire device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_ca_certs_device=0x7f1204e2;
    /**
     * Label explaining that the admin installed trusted CA certificates in personal profile. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_ca_certs_personal=0x7f1204e3;
    /**
     * Label explaining that the admin installed trusted CA certificates in work profile. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_ca_certs_work=0x7f1204e4;
    /**
     * Label indicating that the admin granted one or more apps access to the camera. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_camera_access=0x7f1204e5;
    /**
     * Title for the 'Your access to this device' preference category. [CHAR LIMIT=60]
     */
    public static final int enterprise_privacy_device_access_category=0x7f1204e6;
    /**
     * Label explaining that the admin can see data associated with his/her work account. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_enterprise_data=0x7f1204e7;
    /**
     * Label indicating that the admin installed one or more apps on the device.
     */
    public static final int enterprise_privacy_enterprise_installed_packages=0x7f1204e8;
    /**
     * Label indicating that the admin set one or more apps as defaults for common actions (e.g. open browser, send e-mail). [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_enterprise_set_default_apps=0x7f1204e9;
    /**
     * Title for the 'Types of information your organization can see' preference category. [CHAR LIMIT=60]
     */
    public static final int enterprise_privacy_exposure_category=0x7f1204ea;
    /**
     * Title for the 'Changes made by your organization’s admin' preference category. [CHAR LIMIT=60]
     */
    public static final int enterprise_privacy_exposure_changes_category=0x7f1204eb;
    /**
     * Label explaining that the admin configured the device to wipe itself when the password is mistyped too many times. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_failed_password_wipe_device=0x7f1204ec;
    /**
     * Label explaining that the admin configured the work profile to wipe itself when the password is mistyped too many times. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_failed_password_wipe_work=0x7f1204ed;
    /**
     * Label explaining that a global HTTP proxy was set by the admin. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_global_http_proxy=0x7f1204ee;
    /**
     * Enterprise Privacy settings activity header, summarizing the powers that the admin has. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_header=0x7f1204ef;
    /**
     * Label explaining that the current input method was set by the admin. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_input_method=0x7f1204f0;
    /**
     * Summary indicating the input method set by the admin. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_input_method_name=0x7f1204f1;
    /**
     * Label explaining that the admin can see apps installed on the device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_installed_packages=0x7f1204f2;
    /**
     * Label indicating that the admin granted one or more apps access to the device's location. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_location_access=0x7f1204f3;
    /**
     * Label explaining that the admin can lock the device and change the user's password. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_lock_device=0x7f1204f4;
    /**
     * Label indicating that the admin granted one or more apps access to the microphone. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_microphone_access=0x7f1204f5;
    /**
     * Label explaining that the admin can retrieve network logs on the device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_network_logs=0x7f1204f6;
    /**
     * Label indicating that the the admin never took a given action so far (e.g. did not retrieve security logs or request bug reports).
     */
    public static final int enterprise_privacy_none=0x7f1204f7;
    /**
     * Label explaining that the admin can retrieve security on from the device. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_security_logs=0x7f1204f8;
    /**
     * Title of setting on security settings screen. This will take the user to a screen with information about admin powers and their impact on the user's privacy on a managed device. Shown on enterprise-managed devices only. Note: "Device" is singular and refers to the device (e.g. phone or tablet) that the user is holding in their hand.
     */
    public static final int enterprise_privacy_settings=0x7f1204f9;
    /**
     * Summary for Enterprise Privacy settings, explaining what the user can expect to find under it [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_settings_summary_generic=0x7f1204fa;
    /**
     * Summary for Enterprise Privacy settings, explaining what the user can expect to find under it [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_settings_summary_with_name=0x7f1204fb;
    /**
     * Label explaining that the admin can see app usage statistics. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_usage_stats=0x7f1204fc;
    /**
     * Label explaining that the admin can wipe the device remotely. [CHAR LIMIT=NONE]
     */
    public static final int enterprise_privacy_wipe_device=0x7f1204fd;
    /**
     * SD card & phone storage settings screen, label for check box to erase all the carriers information on the embedded SIM card [CHAR LIMIT=30]
     */
    public static final int erase_esim_storage=0x7f1204fe;
    /**
     * SD card & phone storage settings screen, description for check box to erase eSIMs for default devices [CHAR LIMIT=NONE]
     */
    public static final int erase_esim_storage_description=0x7f1204ff;
    /**
     * SD card & phone storage settings screen, label for check box to erase SD card [CHAR LIMIT=30]
     */
    public static final int erase_external_storage=0x7f120500;
    /**
     * SD card & phone storage settings screen, description for check box to erase USB storage [CHAR LIMIT=NONE]
     */
    public static final int erase_external_storage_description=0x7f120501;
    /**
     * APN error dialog messages:
     */
    public static final int error_adding_apn_type=0x7f120502;
    /**
     * APN error dialog messages:
     */
    public static final int error_apn_empty=0x7f120503;
    /**
     * APN error dialog messages:
     */
    public static final int error_mcc_not3=0x7f120504;
    /**
     * APN error dialog messages:
     */
    public static final int error_mnc_not23=0x7f120505;
    /**
     * APN error dialog messages:
     */
    public static final int error_name_empty=0x7f120506;
    /**
     * APN error dialog title
     */
    public static final int error_title=0x7f120507;
    /**
     * Description for charging time left, i.e. 50min until fully charged [CHAR LIMIT=80]
     */
    public static final int estimated_charging_time_left=0x7f120508;
    /**
     * Description for estimated time. [CHAR LIMIT=80]
     */
    public static final int estimated_time_description=0x7f120509;
    /**
     * Description for battery time left, i.e. 50min Estimated time left. [CHAR LIMIT=80]
     */
    public static final int estimated_time_left=0x7f12050a;
    /**
     * Label for section about ethernet in data usage screen [CHAR LIMIT=60]
     */
    public static final int ethernet=0x7f12050b;
    /**
     * Format string for amount of ethernet data used [CHAR LIMIT=30]
     */
    public static final int ethernet_data_template=0x7f12050c;
    /**
     * Label for ethernet data usage in data usage screen [CHAR LIMIT=60]
     */
    public static final int ethernet_data_usage=0x7f12050d;
    /**
     * Title for the accessibility preference category of settings considered to be experimental, meaning they might be changed or removed in the future. [CHAR LIMIT=50]
     */
    public static final int experimental_category_title=0x7f12050e;
    /**
     * Summary Title for saying that the preference is experimental and will evolve over time due to User feedback. [CHAR LIMIT=NONE]
     */
    public static final int experimental_preference=0x7f12050f;
    /**
     * Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's code on USB storage [CHARSIZE=40]
     */
    public static final int external_code_size_label=0x7f120510;
    /**
     * Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's data on the SD card [CHARSIZE=40]
     */
    public static final int external_data_size_label=0x7f120511;
    /**
     * Title of switch preference that controls whether an external app source is trusted or not [CHAR LIMIT=50]
     */
    public static final int external_source_switch_title=0x7f120512;
    /**
     * Summary of app trusted to install apps [CHAR LIMIT=45]
     */
    public static final int external_source_trusted=0x7f120513;
    /**
     * Summary of app not trusted to install apps [CHAR LIMIT=45]
     */
    public static final int external_source_untrusted=0x7f120514;
    /**
     * Extreme threats summary.  [CHAR LIMIT=62]
     */
    public static final int extreme_threats_summary=0x7f120515;
    /**
     * Extreme threats title.  [CHAR LIMIT=30]
     */
    public static final int extreme_threats_title=0x7f120516;
    /**
     * Toast that settings for an application is failed to open.
     */
    public static final int failed_to_open_app_settings_toast=0x7f120517;
    /**
     * About phone screen, fcc equipment id label  [CHAR LIMIT=40]
     */
    public static final int fcc_equipment_id=0x7f120518;
    /**
     * Text for menu option in ManageApps screen to present various menu options
     */
    public static final int filter=0x7f120519;
    /**
     * Label for showing all apps in list [CHAR LIMIT=30]
     */
    public static final int filter_all_apps=0x7f12051a;
    /**
     * Text for filter option in ManageApps screen to display all installed
     * applications
     */
    public static final int filter_apps_all=0x7f12051b;
    /**
     * [CHAR LIMIT=NONE] Text for filter option in ManageApps screen to display disabled apps
     */
    public static final int filter_apps_disabled=0x7f12051c;
    /**
     * Text for filter option in ManageApps screen to display list of
     * packages installed on sdcard.
     */
    public static final int filter_apps_onsdcard=0x7f12051d;
    /**
     * Text for filter option in ManageApps screen to display list of running
     * packages only.
     */
    public static final int filter_apps_running=0x7f12051e;
    /**
     * Text for filter option in ManageApps screen to display third party
     * applications only
     */
    public static final int filter_apps_third_party=0x7f12051f;
    /**
     * Title of dialog for presenting filter options
     */
    public static final int filter_dlg_title=0x7f120520;
    /**
     * Label for showing enabled apps in list [CHAR LIMIT=30]
     */
    public static final int filter_enabled_apps=0x7f120521;
    /**
     * Label for showing apps that can install other apps [CHAR LIMIT=45]
     */
    public static final int filter_install_sources_apps=0x7f120522;
    /**
     * Label for showing instant apps in list [CHAR LIMIT=40]
     */
    public static final int filter_instant_apps=0x7f120523;
    /**
     * Label for showing apps with blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_all_apps=0x7f120524;
    /**
     * Label for showing apps with blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_blocked_apps=0x7f120525;
    /**
     * Label for showing categories with blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_blocked_channels=0x7f120526;
    /**
     * Label for showing categories with notifications that override dnd in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_dnd_channels=0x7f120527;
    /**
     * Label for showing categories with low importance notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_low_channels=0x7f120528;
    /**
     * Label for showing categories with urgent notifications in list [CHAR LIMIT=30]
     */
    public static final int filter_notif_urgent_channels=0x7f120529;
    /**
     * Label for showing apps that can display over other apps [CHAR LIMIT=45]
     */
    public static final int filter_overlay_apps=0x7f12052a;
    /**
     * Label for showing personal apps in list [CHAR LIMIT=30]
     */
    public static final int filter_personal_apps=0x7f12052b;
    /**
     * Label for showing work apps in list [CHAR LIMIT=30]
     */
    public static final int filter_work_apps=0x7f12052c;
    /**
     * Label for showing apps that can write system settings [CHAR LIMIT=45]
     */
    public static final int filter_write_settings_apps=0x7f12052d;
    /**
     * Text shown when "Add fingerprint" button is disabled
     */
    public static final int fingerprint_add_max=0x7f12052e;
    /**
     * Preference to add another fingerprint
     */
    public static final int fingerprint_add_title=0x7f12052f;
    /**
     * Message shown in a dialog which asks the user to confirm when a single fingerprint gets deleted. [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_delete_message=0x7f120530;
    /**
     * Title shown in a dialog which asks the user to confirm when a single fingerprint gets deleted. [CHAR LIMIT=50]
     */
    public static final int fingerprint_delete_title=0x7f120531;
    /**
     * switch for allowing fingerprint to be used for keyguard
     */
    public static final int fingerprint_enable_keyguard_toggle_title=0x7f120532;
    /**
     * Button text shown at the end of enrollment that allows the user to add another fingerprint
     */
    public static final int fingerprint_enroll_button_add=0x7f120533;
    /**
     * Button text shown at the end of enrollment that allows the user to move to the next step
     */
    public static final int fingerprint_enroll_button_next=0x7f120534;
    /**
     * Text shown when users has enrolled a maximum number of fingerprints [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_intro_error_max=0x7f120535;
    /**
     * Text shown when an unknown error caused the device to be unable to add fingerprints [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_intro_error_unknown=0x7f120536;
    /**
     * Button to confirm the last removing the last fingerprint. [CHAR LIMIT=20]
     */
    public static final int fingerprint_last_delete_confirm=0x7f120537;
    /**
     * Message shown in a dialog which asks the user to confirm when the last fingerprint gets deleted by him. [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_last_delete_message=0x7f120538;
    public static final int fingerprint_last_delete_message_profile_challenge=0x7f120539;
    /**
     * Title shown in a dialog which asks the user to confirm when the last fingerprint gets deleted by him. [CHAR LIMIT=50]
     */
    public static final int fingerprint_last_delete_title=0x7f12053a;
    /**
     * Fingerprint managment category title - configuration options for managing enrolled fingerprints [CHAR LIMIT=22]
     */
    public static final int fingerprint_manage_category_title=0x7f12053b;
    /**
     * Fingerprint hint message when finger was not recognized.
     */
    public static final int fingerprint_not_recognized=0x7f12053c;
    /**
     * Summary for settings suggestion for fingerprint swipe for notifications [CHAR LIMIT=60]
     */
    public static final int fingerprint_swipe_for_notifications_suggestion_summary=0x7f12053d;
    /**
     * Title for settings suggestion for fingerprint swipe for notifications [CHAR LIMIT=60]
     */
    public static final int fingerprint_swipe_for_notifications_suggestion_title=0x7f12053e;
    /**
     * Summary text for fingerprint swipe for notifications (phone) [CHAR LIMIT=160]
     */
    public static final int fingerprint_swipe_for_notifications_summary=0x7f12053f;
    /**
     * Title text for swiping downwards on fingerprint sensor for notifications [CHAR LIMIT=80]
     */
    public static final int fingerprint_swipe_for_notifications_title=0x7f120540;
    /**
     * Title for preference that guides the user through creating a backup unlock password for fingerprint [CHAR LIMIT=45]
     */
    public static final int fingerprint_unlock_set_unlock_password=0x7f120541;
    /**
     * Title for preference that guides the user through creating a backup unlock pattern for fingerprint [CHAR LIMIT=45]
     */
    public static final int fingerprint_unlock_set_unlock_pattern=0x7f120542;
    /**
     * Title for preference that guides the user through creating a backup unlock PIN for fingerprint [CHAR LIMIT=45]
     */
    public static final int fingerprint_unlock_set_unlock_pin=0x7f120543;
    /**
     * Title for preference that guides the user to skip fingerprint setup [CHAR LIMIT=60]
     */
    public static final int fingerprint_unlock_skip_fingerprint=0x7f120544;
    /**
     * Message shown in screen lock picker while setting up the new screen lock with fingerprint option. [CHAR LIMIT=NONE]
     */
    public static final int fingerprint_unlock_title=0x7f120545;
    /**
     * Fingerprint category title - configuration options for managing fingerprint enrollment [CHAR LIMIT=22]
     */
    public static final int fingerprint_usage_category_title=0x7f120546;
    /**
     * Button shown when this activity is run from SetupWizard
     */
    public static final int finish_button_label=0x7f120547;
    /**
     * About phone screen, status item label  [CHAR LIMIT=40]
     */
    public static final int firmware_version=0x7f120548;
    /**
     * Description for the button that makes interface elements larger. [CHAR_LIMIT=NONE]
     */
    public static final int font_size_make_larger_desc=0x7f120549;
    /**
     * Description for the button that makes interface elements smaller. [CHAR_LIMIT=NONE]
     */
    public static final int font_size_make_smaller_desc=0x7f12054a;
    /**
     * Sample text for font size preview.
     */
    public static final int font_size_preview_text=0x7f12054b;
    public static final int font_size_preview_text_body=0x7f12054c;
    public static final int font_size_preview_text_headline=0x7f12054d;
    public static final int font_size_preview_text_subtitle=0x7f12054e;
    public static final int font_size_preview_text_title=0x7f12054f;
    /**
     * Button. Chosen when they want to save the chosen text size.
     */
    public static final int font_size_save=0x7f120550;
    /**
     * Summary of font size setting screen. [CHAR LIMIT=NONE]
     */
    public static final int font_size_summary=0x7f120551;
    /**
     * UI debug setting: force allow apps on external storage [CHAR LIMIT=50]
     */
    public static final int force_allow_on_external=0x7f120552;
    /**
     * UI debug setting: force allow on external summary [CHAR LIMIT=150]
     */
    public static final int force_allow_on_external_summary=0x7f120553;
    /**
     * UI debug setting: force hardware acceleration to render apps [CHAR LIMIT=25]
     */
    public static final int force_hw_ui=0x7f120554;
    /**
     * UI debug setting: force hardware acceleration summary [CHAR LIMIT=50]
     */
    public static final int force_hw_ui_summary=0x7f120555;
    /**
     * UI debug setting: force anti-aliasing to render apps [CHAR LIMIT=25]
     */
    public static final int force_msaa=0x7f120556;
    /**
     * UI debug setting: force anti-aliasing summary [CHAR LIMIT=50]
     */
    public static final int force_msaa_summary=0x7f120557;
    /**
     * UI debug setting: force all activites to be resizable for multiwindow [CHAR LIMIT=50]
     */
    public static final int force_resizable_activities=0x7f120558;
    /**
     * UI debug setting: force allow on external summary [CHAR LIMIT=150]
     */
    public static final int force_resizable_activities_summary=0x7f120559;
    /**
     * UI debug setting: force right to left layout [CHAR LIMIT=37]
     */
    public static final int force_rtl_layout_all_locales=0x7f12055a;
    /**
     * UI debug setting: force right to left layout summary [CHAR LIMIT=100]
     */
    public static final int force_rtl_layout_all_locales_summary=0x7f12055b;
    /**
     * Manage applications, text label for button to kill / force stop an application
     */
    public static final int force_stop=0x7f12055c;
    /**
     * [CHAR LIMIT=200] Manage applications, text for dialog when killing persistent apps
     */
    public static final int force_stop_dlg_text=0x7f12055d;
    public static final int force_stop_dlg_title=0x7f12055e;
    /**
     * Button label for generic forget action [CHAR LIMIT=20]
     */
    public static final int forget=0x7f12055f;
    /**
     * Label for free memory of device [CHAR LIMIT=25]
     */
    public static final int free_memory=0x7f120560;
    /**
     * Summary for explanation of what full app data backup means. Manufacturers may wish to overlay this resource with their own text
     */
    public static final int fullbackup_data_summary=0x7f120561;
    /**
     * Dialog title for confirmation to erase full backup data from server
     */
    public static final int fullbackup_erase_dialog_message=0x7f120562;
    /**
     * Spoken description for the Bluetooth power control gadget.
     */
    public static final int gadget_bluetooth=0x7f120563;
    /**
     * Brightness gadget value used to describe automatic brightness state.
     */
    public static final int gadget_brightness_state_auto=0x7f120564;
    /**
     * Brightness gadget value used to describe maximum brightness state.
     */
    public static final int gadget_brightness_state_full=0x7f120565;
    /**
     * Brightness gadget value used to describe half brightness state.
     */
    public static final int gadget_brightness_state_half=0x7f120566;
    /**
     * Brightness gadget value used to describe minimum brightness state.
     */
    public static final int gadget_brightness_state_off=0x7f120567;
    /**
     * Template for brightness gadget toggle button description.
     */
    public static final int gadget_brightness_template=0x7f120568;
    /**
     * Spoken description for the Location power control gadget.
     */
    public static final int gadget_location=0x7f120569;
    /**
     * Title for the screen that lets the user choose a gadget to add to the home screen
     * (or other screens that can host gadgets).  Note to translators: we're still determining
     * the final name for Gadgets/Widgets, so please translate both for now.
     */
    public static final int gadget_picker_title=0x7f12056a;
    /**
     * Gadget value used to describe off state.
     */
    public static final int gadget_state_off=0x7f12056b;
    /**
     * Gadget value used to describe on state.
     */
    public static final int gadget_state_on=0x7f12056c;
    /**
     * Template for gadget toggle button description. Populated examples are "Wi-Fi off" or "Wi-Fi turning on".
     */
    public static final int gadget_state_template=0x7f12056d;
    /**
     * Gadget value used to describe turning off state.
     */
    public static final int gadget_state_turning_off=0x7f12056e;
    /**
     * Gadget value used to describe turning on state.
     */
    public static final int gadget_state_turning_on=0x7f12056f;
    /**
     * Spoken description for the data synchronization gadget.
     */
    public static final int gadget_sync=0x7f120570;
    /**
     * Power Control Widget
     */
    public static final int gadget_title=0x7f120571;
    public static final int gadget_toggle_bluetooth=0x7f120572;
    public static final int gadget_toggle_wifi=0x7f120573;
    /**
     * Spoken description for the Wi-Fi power control gadget.
     */
    public static final int gadget_wifi=0x7f120574;
    /**
     * On Languages & input settings screen, heading. Inside the "Languages & input settings" screen, this is the header for settings that relate to game controller devices. [CHAR LIMIT=40]
     */
    public static final int game_controller_settings_category=0x7f120575;
    /**
     * Title of games app storage screen [CHAR LIMIT=30]
     */
    public static final int game_storage_settings=0x7f120576;
    /**
     * Double twist sensor name and vendor used by gesture setting
     */
    public static final int gesture_double_twist_sensor_name=0x7f120577;
    public static final int gesture_double_twist_sensor_vendor=0x7f120578;
    /**
     * Preference summary for gesture settings (phone) [CHAR LIMIT=NONE]
     */
    public static final int gesture_preference_summary=0x7f120579;
    /**
     * Preference title for gesture settings [CHAR LIMIT=40 BACKUP_MESSAGE_ID:5280023307132819052]
     */
    public static final int gesture_preference_title=0x7f12057a;
    public static final int gesture_setting_off=0x7f12057b;
    /**
     * Switch text for each gesture setting state
     */
    public static final int gesture_setting_on=0x7f12057c;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager getConfiguredNetworks API
     */
    public static final int getConfiguredNetworks=0x7f12057d;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item for WifiManager getConnectionInfo API
     */
    public static final int getConnectionInfo=0x7f12057e;
    /**
     * Warning message when changing a global setting for a phone.[CHAR LIMIT=none]
     */
    public static final int global_change_warning=0x7f12057f;
    /**
     * Warning message title for global locale change [CHAR LIMIT=40]
     */
    public static final int global_locale_change_title=0x7f120580;
    /**
     * Button for going to the previous screen or step [CHAR LIMIT=20]
     */
    public static final int go_back_button_label=0x7f120581;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int haptic_feedback_enable_title=0x7f120582;
    /**
     * On Text & language settings screen, category for physical keyboard text entry options.
     */
    public static final int hardkeyboard_category=0x7f120583;
    /**
     * About phone screen, dialog title for showing hardware information such as model, serial number, etc.[CHAR LIMIT=60]
     */
    public static final int hardware_info=0x7f120584;
    /**
     * Label for device's hardware revision value [CHAR LIMIT=40]
     */
    public static final int hardware_revision=0x7f120585;
    /**
     * HDCP checking dialog title, used for debug purposes only. [CHAR LIMIT=25]
     */
    public static final int hdcp_checking_dialog_title=0x7f120586;
    /**
     * HDCP checking title, used for debug purposes only. [CHAR LIMIT=25]
     */
    public static final int hdcp_checking_title=0x7f120587;
    /**
     * Header that appears at the top of Account Settings screen
     */
    public static final int header_account_settings=0x7f120588;
    /**
     * Title shown in AddAccount
     */
    public static final int header_add_an_account=0x7f120589;
    /**
     * Header title for those settings relating to application syncing.
     */
    public static final int header_application_sync_settings=0x7f12058a;
    /**
     * Settings main menu category heading. Personal (Accounts, security, language, backup...). [CHAR LIMIT=40]
     */
    public static final int header_category_access=0x7f12058b;
    /**
     * Settings main menu category heading. Wireless and networks (Wi-Fi, Bluetooth, data usage...). [CHAR LIMIT=40]
     */
    public static final int header_category_connections=0x7f12058c;
    /**
     * Settings main menu category heading. Device (Sound, display, battery, applications...). [CHAR LIMIT=40]
     */
    public static final int header_category_device=0x7f12058d;
    /**
     * Settings main menu category heading. Personal (Accounts, security, language, backup...). [CHAR LIMIT=40]
     */
    public static final int header_category_personal=0x7f12058e;
    /**
     * Settings main menu category heading. System (Updates, data, accessibility, about phone). [CHAR LIMIT=40]
     */
    public static final int header_category_system=0x7f12058f;
    /**
     * Settings main menu category heading. Wireless and networks (Wi-Fi, Bluetooth, data usage...). [CHAR LIMIT=40]
     */
    public static final int header_category_wireless_networks=0x7f120590;
    /**
     * Header for data and synchronization
     */
    public static final int header_data_and_synchronization=0x7f120591;
    /**
     * Running service details, description for running heavy-weight process.
     */
    public static final int heavy_weight_stop_description=0x7f120592;
    /**
     * Label for Help and feedback menu item
     */
    public static final int help_feedback_label=0x7f120593;
    /**
     * Help menu label [CHAR LIMIT=20]
     */
    public static final int help_label=0x7f120594;
    /**
     * Help URI, About phone [DO NOT TRANSLATE]
     */
    public static final int help_uri_about=0x7f120595;
    /**
     * Help URI, Accessibility [DO NOT TRANSLATE]
     */
    public static final int help_uri_accessibility=0x7f120596;
    /**
     * Help URI, Apps [DO NOT TRANSLATE]
     */
    public static final int help_uri_apps=0x7f120597;
    /**
     * Help URI, Android beam [DO NOT TRANSLATE]
     */
    public static final int help_uri_beam=0x7f120598;
    /**
     * Help URI, Default [DO NOT TRANSLATE]
     */
    public static final int help_uri_default=0x7f120599;
    /**
     * Help URI, Display [DO NOT TRANSLATE]
     */
    public static final int help_uri_display=0x7f12059a;
    /**
     * Help URI, Interruptions [DO NOT TRANSLATE]
     */
    public static final int help_uri_interruptions=0x7f12059b;
    /**
     * Help URI, Notifications [DO NOT TRANSLATE]
     */
    public static final int help_uri_notifications=0x7f12059c;
    /**
     * Help URI, Other sounds [DO NOT TRANSLATE]
     */
    public static final int help_uri_other_sounds=0x7f12059d;
    /**
     * Help URI, Printing [DO NOT TRANSLATE]
     */
    public static final int help_uri_printing=0x7f12059e;
    public static final int help_uri_process_stats_apps=0x7f12059f;
    public static final int help_uri_process_stats_summary=0x7f1205a0;
    /**
     * Help URI, Storage [DO NOT TRANSLATE]
     */
    public static final int help_uri_storage=0x7f1205a1;
    /**
     * Help URI, Wallpaper [DO NOT TRANSLATE]
     */
    public static final int help_uri_wallpaper=0x7f1205a2;
    public static final int help_url_accessibility_shortcut=0x7f1205a3;
    public static final int help_url_account_detail=0x7f1205a4;
    /**
     * Help URL, Accounts [DO NOT TRANSLATE]
     */
    public static final int help_url_accounts=0x7f1205a5;
    public static final int help_url_apps_and_notifications=0x7f1205a6;
    /**
     * Help URI, USB Audio [DO NOT TRANSLATE]
     */
    public static final int help_url_audio_accessory_not_supported=0x7f1205a7;
    public static final int help_url_autoclick=0x7f1205a8;
    /**
     * Help URL, Backup & reset [DO NOT TRANSLATE]
     */
    public static final int help_url_backup_reset=0x7f1205a9;
    /**
     * Help URL, Battery [DO NOT TRANSLATE]
     */
    public static final int help_url_battery=0x7f1205aa;
    /**
     * Help URL, Bluetooth [DO NOT TRANSLATE]
     */
    public static final int help_url_bluetooth=0x7f1205ab;
    /**
     * Help URL, Choose lockscreen [DO NOT TRANSLATE]
     */
    public static final int help_url_choose_lockscreen=0x7f1205ac;
    public static final int help_url_color_correction=0x7f1205ad;
    public static final int help_url_connected_devices=0x7f1205ae;
    /**
     * Help URL, Data saver [DO NOT TRANSLATE]
     */
    public static final int help_url_data_saver=0x7f1205af;
    /**
     * Help URL, Data usage [DO NOT TRANSLATE]
     */
    public static final int help_url_data_usage=0x7f1205b0;
    /**
     * Help URL, Display size [DO NOT TRANSLATE]
     */
    public static final int help_url_display_size=0x7f1205b1;
    public static final int help_url_double_tap_screen=0x7f1205b2;
    /**
     * Help URL, Dreams [DO NOT TRANSLATE]
     */
    public static final int help_url_dreams=0x7f1205b3;
    /**
     * Help URL, Encryption settings [DO NOT TRANSLATE]
     */
    public static final int help_url_encryption=0x7f1205b4;
    /**
     * Help URL, Fingerprint [DO NOT TRANSLATE]
     */
    public static final int help_url_fingerprint=0x7f1205b5;
    /**
     * Help URL, Font size [DO NOT TRANSLATE]
     */
    public static final int help_url_font_size=0x7f1205b6;
    /**
     * Help URL, Gesture settings
     */
    public static final int help_url_gestures=0x7f1205b7;
    public static final int help_url_icc_lock=0x7f1205b8;
    /**
     * Help URL, Location access [DO NOT TRANSLATE]
     */
    public static final int help_url_location_access=0x7f1205b9;
    public static final int help_url_lockscreen=0x7f1205ba;
    public static final int help_url_magnification=0x7f1205bb;
    /**
     * Help URL, Manage Storage [DO NOT TRANSLATE]
     */
    public static final int help_url_manage_storage=0x7f1205bc;
    /**
     * Help URL, More [DO NOT TRANSLATE]
     */
    public static final int help_url_more_networks=0x7f1205bd;
    public static final int help_url_network_dashboard=0x7f1205be;
    /**
     * Help URL, Tap & pay [DO NOT TRANSLATE]
     */
    public static final int help_url_nfc_payment=0x7f1205bf;
    public static final int help_url_night_display=0x7f1205c0;
    public static final int help_url_pickup_gesture=0x7f1205c1;
    /**
     * Help URL, Remote display [DO NOT TRANSLATE]
     */
    public static final int help_url_remote_display=0x7f1205c2;
    public static final int help_url_screen_pinning=0x7f1205c3;
    public static final int help_url_screen_saver=0x7f1205c4;
    /**
     * Help URL, Security settings [DO NOT TRANSLATE]
     */
    public static final int help_url_security=0x7f1205c5;
    /**
     * Help URL, Sound [DO NOT TRANSLATE]
     */
    public static final int help_url_sound=0x7f1205c6;
    public static final int help_url_storage_dashboard=0x7f1205c7;
    public static final int help_url_system_dashboard=0x7f1205c8;
    /**
     * Help URL, Tethering [DO NOT TRANSLATE]
     */
    public static final int help_url_tether=0x7f1205c9;
    public static final int help_url_trust_agent=0x7f1205ca;
    /**
     * Help URL, Unrestricted data access [DO NOT TRANSLATE]
     */
    public static final int help_url_unrestricted_data_access=0x7f1205cb;
    /**
     * Help URL, Android is upgrading [DO NOT TRANSLATE]
     */
    public static final int help_url_upgrading=0x7f1205cc;
    public static final int help_url_usage_access=0x7f1205cd;
    public static final int help_url_user_and_account_dashboard=0x7f1205ce;
    /**
     * Help URL, User settings [DO NOT TRANSLATE]
     */
    public static final int help_url_users=0x7f1205cf;
    /**
     * Help URL, Vpn [DO NOT TRANSLATE]
     */
    public static final int help_url_vpn=0x7f1205d0;
    /**
     * Help URL, WiFi [DO NOT TRANSLATE]
     */
    public static final int help_url_wifi=0x7f1205d1;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int hidden_ssid_label=0x7f1205d2;
    /**
     * Label for menu to show app usage [CHAR LIMIT=30]
     */
    public static final int hide_extra_apps=0x7f1205d3;
    /**
     * Label for list to control apps that ignore battery saving restrictions [CHAR LIMIT=27]
     */
    public static final int high_power_apps=0x7f1205d4;
    /**
     * Description of high power switch [CHAR LIMIT=NONE]
     */
    public static final int high_power_desc=0x7f1205d5;
    /**
     * Filter for apps allowed to use a lot of power [CHAR LIMIT=25]
     */
    public static final int high_power_filter_on=0x7f1205d6;
    /**
     * Summary of app not allowed to use a lot of power [CHAR LIMIT=60]
     */
    public static final int high_power_off=0x7f1205d7;
    /**
     * Summary of app allowed to use a lot of power [CHAR LIMIT=60]
     */
    public static final int high_power_on=0x7f1205d8;
    /**
     * Body text of prompt dialog app can invoke to turn off optimization [CHAR LIMIT=NONE]
     */
    public static final int high_power_prompt_body=0x7f1205d9;
    /**
     * Title of prompt dialog app can invoke to turn off optimization [CHAR LIMIT=NONE]
     */
    public static final int high_power_prompt_title=0x7f1205da;
    /**
     * Summary of app which doesn't have a battery optimization setting [CHAR LIMIT=60]
     */
    public static final int high_power_system=0x7f1205db;
    /**
     * Activity title for battery usage history details [CHAR LIMIT=60]
     */
    public static final int history_details_title=0x7f1205dc;
    /**
     * Option in navigation drawer that leads to Settings main screen [CHAR LIMIT=30]
     */
    public static final int home=0x7f1205dd;
    /**
     * Button to switch the default home app [CHAR LIMIT=60]
     */
    public static final int home_app=0x7f1205de;
    /**
     * Home settings screen, text indicating that a launcher does not support work profiles [CHAR LIMIT=100]
     */
    public static final int home_work_profile_not_supported=0x7f1205df;
    /**
     * Ignore battery optimizations off label [CHAR LIMIT=30]
     */
    public static final int ignore_optimizations_off=0x7f1205e0;
    /**
     * Ignore battery optimizations off description [CHAR LIMIT=NONE]
     */
    public static final int ignore_optimizations_off_desc=0x7f1205e1;
    /**
     * Ignore battery optimizations on label [CHAR LIMIT=30]
     */
    public static final int ignore_optimizations_on=0x7f1205e2;
    /**
     * Ignore battery optimizations on description [CHAR LIMIT=NONE]
     */
    public static final int ignore_optimizations_on_desc=0x7f1205e3;
    /**
     * Ignore battery optimizations dialog title [CHAR LIMIT=NONE]
     */
    public static final int ignore_optimizations_title=0x7f1205e4;
    /**
     * Warning message about security implications of enabling an input method, displayed as a dialog
     * message when the user selects to enable an IME.
     */
    public static final int ime_security_warning=0x7f1205e5;
    public static final int imei_information_summary=0x7f1205e6;
    /**
     * Title and summary for SIM Status
     */
    public static final int imei_information_title=0x7f1205e7;
    /**
     * UI debug setting: immediately destroy activities? [CHAR LIMIT=25]
     */
    public static final int immediately_destroy_activities=0x7f1205e8;
    /**
     * UI debug setting: immediately destroy activities summary [CHAR LIMIT=50]
     */
    public static final int immediately_destroy_activities_summary=0x7f1205e9;
    /**
     * Settings item summary for active app [CHAR LIMIT=100]
     */
    public static final int inactive_app_active_summary=0x7f1205ea;
    /**
     * Settings item summary for inactive app [CHAR LIMIT=100]
     */
    public static final int inactive_app_inactive_summary=0x7f1205eb;
    /**
     * Settings item title for inactive apps [CHAR LIMIT=35]
     */
    public static final int inactive_apps_title=0x7f1205ec;
    /**
     * Auto-restore menu title [CHAR LIMIT=30]
     */
    public static final int include_app_data_title=0x7f1205ed;
    /**
     * Sound settings screen, the title of the volume bar to adjust the incoming call volume
     */
    public static final int incoming_call_volume_title=0x7f1205ee;
    /**
     * Title of preference category that lists all settings about helping user text input such as spell checker [CHAR LIMIT=60]
     */
    public static final int input_assistance=0x7f1205ef;
    /**
     * Setting name for Input Method chooser
     */
    public static final int input_method=0x7f1205f0;
    /**
     * Title for setting the visibility of input method selector [CHAR LIMIT=35]
     */
    public static final int input_method_selector=0x7f1205f1;
    /**
     * An option to always hide input method selector [CHAR LIMIT=25]
     */
    public static final int input_method_selector_always_hide_title=0x7f1205f2;
    public static final int input_method_selector_always_hide_value=0x7f1205f3;
    /**
     * An option to always show input method selector [CHAR LIMIT=25]
     */
    public static final int input_method_selector_always_show_title=0x7f1205f4;
    public static final int input_method_selector_always_show_value=0x7f1205f5;
    /**
     * An option to always show input method selector automatically when needed [CHAR LIMIT=25]
     */
    public static final int input_method_selector_show_automatically_title=0x7f1205f6;
    /**
     * values for input method selector should be corresponding to the array index of titles
     */
    public static final int input_method_selector_show_automatically_value=0x7f1205f7;
    public static final int input_method_selector_visibility_default_value=0x7f1205f8;
    /**
     * Title for settings of each IME [CHAR LIMIT=25]
     */
    public static final int input_method_settings=0x7f1205f9;
    /**
     * Spoken description for IME settings image button [CHAR LIMIT=NONE]
     */
    public static final int input_method_settings_button=0x7f1205fa;
    /**
     * Title for the settings of selecting active input methods of an IME [CHAR LIMIT=35]
     */
    public static final int input_methods_and_subtype_enabler_title=0x7f1205fb;
    /**
     * Input Methods Settings localized format string for generating the appropriate "Foo settings" menu label for the Input Method named "Foo" [CHAR LIMIT=35]
     */
    public static final int input_methods_settings_label_format=0x7f1205fc;
    /**
     * Input methods Settings
     */
    public static final int input_methods_settings_title=0x7f1205fd;
    /**
     * Warning that appears below the unknown sources switch in settings
     */
    public static final int install_all_warning=0x7f1205fe;
    /**
     * Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.
     */
    public static final int install_applications=0x7f1205ff;
    /**
     * Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.  [CHAR LIMIT=30]
     */
    public static final int install_applications_title=0x7f120600;
    /**
     * Title for settings screen for controlling apps that can install other apps on device [CHAR LIMIT=50]
     */
    public static final int install_other_apps=0x7f120601;
    /**
     * [CHAR LIMIT=NONE] Manage applications, individual application info screen, button label under Storage heading. Button to install an application for the user.
     */
    public static final int install_text=0x7f120602;
    /**
     * Added as the value of a header field indicating this is an instant app (as opposed to installed normally)
     */
    public static final int install_type_instant=0x7f120603;
    /**
     * [CHAR LIMIT=30] App details, text telling an application is installed.
     */
    public static final int installed=0x7f120604;
    /**
     * Manage applications, individual application info screen, summary for the option which will trigger instant app info in it's installer [CHAR_LIMIT=50]
     */
    public static final int instant_app_details_summary=0x7f120605;
    /**
     * Preference label for an tappable preference that will open the instant apps settings. [CHAR LIMIT=60]
     */
    public static final int instant_apps_settings=0x7f120606;
    /**
     * Manage applications, text for move error messages
     */
    public static final int insufficient_storage=0x7f120607;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_account_label=0x7f120608;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_action_label=0x7f120609;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_data_label=0x7f12060a;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_resource_label=0x7f12060b;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_sendbroadcast_text=0x7f12060c;
    /**
     * Used for diagnostic screens, precise translation is not necessary
     */
    public static final int intent_sender_startactivity_text=0x7f12060d;
    /**
     * Title for the accessibility preference category of interaction control services and settings. [CHAR LIMIT=50]
     */
    public static final int interaction_control_category_title=0x7f12060e;
    /**
     * SD card & phone storage settings screen heading. This is displayed above items that pertain to the phone's internal storage
     */
    public static final int internal_memory=0x7f12060f;
    /**
     * [CHAR LIMIT=15] Manage applications, label for chart showing internal storage use.
     */
    public static final int internal_storage=0x7f120610;
    /**
     * [CHAR LIMIT=30] Title for internal device storage that is capitalized for placement as a phrase into another sentence
     */
    public static final int internal_storage_sentence=0x7f120611;
    public static final int invalid_location=0x7f120612;
    public static final int invalid_size_value=0x7f120613;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int ipaddr_label=0x7f120614;
    /**
     * [CHAR_LIMIT=NONE] Format to put the first item at the start of a series of 3 or more items in a list
     */
    public static final int join_many_items_first=0x7f120615;
    /**
     * [CHAR_LIMIT=NONE] Format to put the last item at the end of a series of 3 or more items in a list
     */
    public static final int join_many_items_last=0x7f120616;
    /**
     * [CHAR_LIMIT=NONE] Format to put the middle items together in a series of 4 or more items in a list
     */
    public static final int join_many_items_middle=0x7f120617;
    /**
     * [CHAR_LIMIT=NONE] Format to put together two items in a list.
     */
    public static final int join_two_items=0x7f120618;
    /**
     * [CHAR_LIMIT=NONE] Format to put together two unrelated items in a list when "and" is not an appropriate conjunction for these 2 items
     */
    public static final int join_two_unrelated_items=0x7f120619;
    /**
     * Setting Checkbox title whether to keep the screen on when plugged in to a power source
     */
    public static final int keep_screen_on=0x7f12061a;
    /**
     * setting Checkbox summary whether to keep the screen on when plugged in
     */
    public static final int keep_screen_on_summary=0x7f12061b;
    /**
     * About phone screen,  setting option name  [CHAR LIMIT=40]
     */
    public static final int kernel_version=0x7f12061c;
    /**
     * Title for the 'keyboard and input methods' preference category. [CHAR LIMIT=45]
     */
    public static final int keyboard_and_input_methods_category=0x7f12061d;
    /**
     * Title for the 'keyboard assistance' preference category. [CHAR LIMIT=35]
     */
    public static final int keyboard_assistance_category=0x7f12061e;
    /**
     * Label of the default keyboard layout.  [CHAR LIMIT=35]
     */
    public static final int keyboard_layout_default_label=0x7f12061f;
    /**
     * Button to configure keyboard layouts.  [CHAR LIMIT=35]
     */
    public static final int keyboard_layout_dialog_setup_button=0x7f120620;
    /**
     * Hint describing how to switch keyboard layouts using the keyboard.  [CHAR LIMIT=48]
     */
    public static final int keyboard_layout_dialog_switch_hint=0x7f120621;
    /**
     * Title for the keyboard layout preference dialog. [CHAR LIMIT=35]
     */
    public static final int keyboard_layout_dialog_title=0x7f120622;
    /**
     * Title for the keyboard layout picker activity. [CHAR LIMIT=35]
     */
    public static final int keyboard_layout_picker_title=0x7f120623;
    /**
     * On Languages & input settings screen, heading. Inside the "Languages & input settings" screen, this is the header for settings that relate to keyboard (enable/disable each keyboard, settings for each keyboard).
     */
    public static final int keyboard_settings_category=0x7f120624;
    /**
     * Title of keyboard settings list item within voice input/output settings
     */
    public static final int keyboard_settings_title=0x7f120625;
    /**
     * Title for the button to trigger the 'keyboard shortcuts helper' dialog. [CHAR LIMIT=35]
     */
    public static final int keyboard_shortcuts_helper=0x7f120626;
    /**
     * Summary text for the 'keyboard shortcuts helper' dialog. [CHAR LIMIT=100]
     */
    public static final int keyboard_shortcuts_helper_summary=0x7f120627;
    public static final int keywords_accounts=0x7f120628;
    public static final int keywords_all_apps=0x7f120629;
    public static final int keywords_app=0x7f12062a;
    public static final int keywords_app_permissions=0x7f12062b;
    public static final int keywords_assist_gesture_launch=0x7f12062c;
    public static final int keywords_backup=0x7f12062d;
    public static final int keywords_battery=0x7f12062e;
    public static final int keywords_color_mode=0x7f12062f;
    public static final int keywords_color_temperature=0x7f120630;
    public static final int keywords_date_and_time=0x7f120631;
    public static final int keywords_default_apps=0x7f120632;
    public static final int keywords_default_phone_app=0x7f120633;
    public static final int keywords_display=0x7f120634;
    public static final int keywords_display_auto_brightness=0x7f120635;
    public static final int keywords_display_brightness_level=0x7f120636;
    public static final int keywords_display_cast_screen=0x7f120637;
    public static final int keywords_display_font_size=0x7f120638;
    public static final int keywords_display_night_display=0x7f120639;
    public static final int keywords_display_wallpaper=0x7f12063a;
    public static final int keywords_emergency_app=0x7f12063b;
    public static final int keywords_factory_data_reset=0x7f12063c;
    public static final int keywords_gesture=0x7f12063d;
    public static final int keywords_home=0x7f12063e;
    public static final int keywords_ignore_optimizations=0x7f12063f;
    /**
     * Keywords for setting screen for controlling apps that can install other apps on device
     */
    public static final int keywords_install_other_apps=0x7f120640;
    public static final int keywords_keyboard_and_ime=0x7f120641;
    public static final int keywords_location=0x7f120642;
    public static final int keywords_location_mode=0x7f120643;
    public static final int keywords_lockscreen=0x7f120644;
    public static final int keywords_more_default_sms_app=0x7f120645;
    public static final int keywords_more_mobile_networks=0x7f120646;
    public static final int keywords_network_reset=0x7f120647;
    public static final int keywords_payment_settings=0x7f120648;
    public static final int keywords_printing=0x7f120649;
    public static final int keywords_profile_challenge=0x7f12064a;
    public static final int keywords_reset_apps=0x7f12064b;
    public static final int keywords_sounds=0x7f12064c;
    public static final int keywords_sounds_and_notifications_interruptions=0x7f12064d;
    public static final int keywords_spell_checker=0x7f12064e;
    public static final int keywords_storage=0x7f12064f;
    /**
     * Keyword for SYSTEM_ALERT_WINDOW
     */
    public static final int keywords_system_alert_window=0x7f120650;
    public static final int keywords_text_to_speech_output=0x7f120651;
    public static final int keywords_unification=0x7f120652;
    public static final int keywords_users=0x7f120653;
    public static final int keywords_voice_input=0x7f120654;
    /**
     * Keyword for VR setting
     */
    public static final int keywords_vr_listener=0x7f120655;
    /**
     * Search Keywords [CHAR LIMIT=NONE]
     */
    public static final int keywords_wifi=0x7f120656;
    public static final int keywords_wifi_calling=0x7f120657;
    /**
     * Keyword for WRITE_SETTINGS
     */
    public static final int keywords_write_settings=0x7f120658;
    /**
     * Summary of Language, input & gestures setting on main settings screen when gesture setting is off.
     */
    public static final int language_input_gesture_summary_off=0x7f120659;
    /**
     * Summary of Language, input & gestures setting on main settings screen when both gesture setting and non-assistant feature is on.
     */
    public static final int language_input_gesture_summary_on_non_assist=0x7f12065a;
    /**
     * Summary of Language, input & gestures setting on main settings screen when both gesture setting and assistant feature is on.
     */
    public static final int language_input_gesture_summary_on_with_assist=0x7f12065b;
    /**
     * Title of Language, input & gestures setting on main settings screen.
     */
    public static final int language_input_gesture_title=0x7f12065c;
    /**
     * Title of Languages & input settings screen
     */
    public static final int language_keyboard_settings_title=0x7f12065d;
    /**
     * Title for the locale picker activity
     */
    public static final int language_picker_title=0x7f12065e;
    /**
     * Title of setting on main settings screen.  This item will take the user to the screen to tweak settings realted to locale and text
     */
    public static final int language_settings=0x7f12065f;
    /**
     * Last synced date/time for accounts that synced [CHAR LIMIT=none]
     */
    public static final int last_synced=0x7f120660;
    /**
     * label for last time used
     */
    public static final int last_time_used_label=0x7f120661;
    /**
     * Preference label for app default launch settings [CHAR LIMIT=35]
     */
    public static final int launch_by_default=0x7f120662;
    /**
     * Launch defaults preference summary with none set [CHAR LIMIT=40]
     */
    public static final int launch_defaults_none=0x7f120663;
    /**
     * Launch defaults preference summary with some set [CHAR LIMIT=40]
     */
    public static final int launch_defaults_some=0x7f120664;
    /**
     * About phone settings screen, setting option name to go to dialog that shows legal info
     */
    public static final int legal_information=0x7f120665;
    /**
     * About phone settings screen, setting option name to see licensing info
     */
    public static final int license_title=0x7f120666;
    /**
     * [CHAR LIMIT=40] Display settings screen, setting option name to change whether the device wakes up when a lift gesture is detected.
     */
    public static final int lift_to_wake_title=0x7f120667;
    /**
     * Link speed on Wifi Status screen
     */
    public static final int link_speed=0x7f120668;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int link_speed_label=0x7f120669;
    /**
     * [CHAR LIMIT=NONE] Text when loading app list in notification settings
     */
    public static final int loading_notification_apps=0x7f12066a;
    /**
     * Summary text of the "local backup password" setting when the user has already supplied a password
     */
    public static final int local_backup_password_summary_change=0x7f12066b;
    /**
     * Summary text of the "local backup password" setting when the user has not supplied a password
     */
    public static final int local_backup_password_summary_none=0x7f12066c;
    /**
     * Local (desktop) backup password menu title [CHAR LIMIT=25]
     */
    public static final int local_backup_password_title=0x7f12066d;
    /**
     * Toast message shown when setting a new local backup password fails due to the user not correctly typing the password again for confirmation [CHAR LIMIT=80]
     */
    public static final int local_backup_password_toast_confirmation_mismatch=0x7f12066e;
    /**
     * Toast message shown when the user successfully sets a new local backup password [CHAR LIMIT=80]
     */
    public static final int local_backup_password_toast_success=0x7f12066f;
    /**
     * Toast message shown when setting a new local backup password fails due to the user not supplying the correct existing password. The phrasing here is deliberately quite general. [CHAR LIMIT=80]
     */
    public static final int local_backup_password_toast_validation_failure=0x7f120670;
    /**
     * Label for the default device locale. [CHAR LIMIT=35]
     */
    public static final int locale_default=0x7f120671;
    /**
     * This text shows in the language picker when the system is not translated into that languages [CHAR LIMIT=80]
     */
    public static final int locale_not_translated=0x7f120672;
    /**
     * Menu item in the locale menu. Will remove the selected locales. [CHAR LIMIT=30]
     */
    public static final int locale_remove_menu=0x7f120673;
    /**
     * [CHAR LIMIT=none] Description text for location access switch
     */
    public static final int location_access_summary=0x7f120674;
    /**
     * [CHAR LIMIT=45] Label for turning on/off location access completely.
     */
    public static final int location_access_title=0x7f120675;
    /**
     * [CHAR LIMIT=30] Location settings screen. It's a link that directs the user to a page that
     * shows the location permission setting for each installed app
     */
    public static final int location_app_level_permissions=0x7f120676;
    /**
     * [CHAR LIMIT=30] Location settings screen, sub category for location services
     */
    public static final int location_category_location_services=0x7f120677;
    /**
     * [CHAR LIMIT=42] Location settings screen, sub category for recent location requests
     */
    public static final int location_category_recent_location_requests=0x7f120678;
    /**
     * [CHAR LIMIT=30] Security & location settings screen, setting check box label for GPS satellites
     */
    public static final int location_gps=0x7f120679;
    /**
     * [CHAR LIMIT=30] Location settings screen, recent location requests high battery use
     */
    public static final int location_high_battery_use=0x7f12067a;
    /**
     * [CHAR LIMIT=30] Location settings screen, recent location requests low battery use
     */
    public static final int location_low_battery_use=0x7f12067b;
    /**
     * [CHAR LIMIT=130] Location mode screen, description for battery saving mode
     */
    public static final int location_mode_battery_saving_description=0x7f12067c;
    /**
     * [CHAR LIMIT=30] Location settings screen, battery saving location mode
     */
    public static final int location_mode_battery_saving_title=0x7f12067d;
    /**
     * [CHAR LIMIT=130] Location mode screen, description for high accuracy mode
     */
    public static final int location_mode_high_accuracy_description=0x7f12067e;
    /**
     * [CHAR LIMIT=30] Location settings screen, high accuracy location mode
     */
    public static final int location_mode_high_accuracy_title=0x7f12067f;
    /**
     * [CHAR LIMIT=30] Location settings screen, location off mode
     */
    public static final int location_mode_location_off_title=0x7f120680;
    /**
     * [CHAR LIMIT=30] Location mode screen, screen title
     */
    public static final int location_mode_screen_title=0x7f120681;
    /**
     * [CHAR LIMIT=130] Location mode screen, description for sensors only mode
     */
    public static final int location_mode_sensors_only_description=0x7f120682;
    /**
     * [CHAR LIMIT=30] Location settings screen, device only location mode
     */
    public static final int location_mode_sensors_only_title=0x7f120683;
    /**
     * [CHAR LIMIT=30] Location settings screen, setting preference screen box label for location mode
     */
    public static final int location_mode_title=0x7f120684;
    /**
     * [CHAR LIMIT=130] Security & location settings screen, setting summary for Google location service check box
     */
    public static final int location_neighborhood_level=0x7f120685;
    /**
     * [CHAR LIMIT=130] Security & location settings screen, setting summary when Use wireless networks check box is selected, for wifi-only devices
     */
    public static final int location_neighborhood_level_wifi=0x7f120686;
    /**
     * [CHAR LIMIT=30] Security & location settings screen, setting check box label for Google location service (cell ID, wifi, etc.)
     */
    public static final int location_network_based=0x7f120687;
    /**
     * Location settings screen, displayed when there's no recent app accessing location
     */
    public static final int location_no_recent_apps=0x7f120688;
    /**
     * Location off [CHAR LIMIT=NONE]
     */
    public static final int location_off_summary=0x7f120689;
    /**
     * Summary of location screen [CHAR LIMIT=NONE]
     */
    public static final int location_on_summary=0x7f12068a;
    /**
     * Description text for Bluetooth always scanning
     */
    public static final int location_scanning_bluetooth_always_scanning_description=0x7f12068b;
    /**
     * [CHAR LIMIT=130] Description text for Bluetooth always scanning
     */
    public static final int location_scanning_bluetooth_always_scanning_title=0x7f12068c;
    /**
     * [CHAR LIMIT=30] Wireless background scanning settings screen, screen title
     */
    public static final int location_scanning_screen_title=0x7f12068d;
    /**
     * Preference description text for Wi-Fi always scanning
     */
    public static final int location_scanning_wifi_always_scanning_description=0x7f12068e;
    /**
     * [CHAR LIMIT=130] Preference title for Wi-Fi always scanning
     */
    public static final int location_scanning_wifi_always_scanning_title=0x7f12068f;
    /**
     * Main Settings screen setting option title for the item to take you to the location screen
     */
    public static final int location_settings_title=0x7f120690;
    /**
     * [CHAR LIMIT=45] Section heading for location sources
     */
    public static final int location_sources_heading=0x7f120691;
    /**
     * [CHAR LIMIT=100] Security & location settings screen, setting check box summary for GPS satellites on a phone
     */
    public static final int location_street_level=0x7f120692;
    /**
     * Security & location settings screen, section header for settings relating to location
     */
    public static final int location_title=0x7f120693;
    /**
     * Security settings screen, setting option name to change screen timeout
     */
    public static final int lock_after_timeout=0x7f120694;
    /**
     * Security settings screen, setting option summary to change screen timeout
     */
    public static final int lock_after_timeout_summary=0x7f120695;
    /**
     * Security settings screen, setting option summary to change screen timeout, with additional explanation
     */
    public static final int lock_after_timeout_summary_with_exception=0x7f120696;
    /**
     * Message shown on the lock screen when the user incorrectly enters their lock and it counts towards the max attempts before their data on the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_failed_attempts_before_wipe=0x7f120697;
    /**
     * Content of the dialog shown when the user has failed to provide the device lock too many times and the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_failed_attempts_now_wiping_device=0x7f120698;
    /**
     * Button label to dismiss the dialog telling the user the work profile has been wiped. [CHAR LIMIT=40]
     */
    public static final int lock_failed_attempts_now_wiping_dialog_dismiss=0x7f120699;
    /**
     * Content of the dialog shown when the user has failed to provide the work lock too many times and the work profile is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_failed_attempts_now_wiping_profile=0x7f12069a;
    /**
     * Content of the dialog shown when the user has failed to provide the user lock too many times and the user is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_failed_attempts_now_wiping_user=0x7f12069b;
    /**
     * Security settings screen, setting option summary to change screen timeout, with additional explanation
     */
    public static final int lock_immediately_summary_with_exception=0x7f12069c;
    /**
     * Title of a dialog shown when the user only has one attempt left to provide the lock before the device, one of its users, or a work profile is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_attempt_before_wipe_warning_title=0x7f12069d;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the device lock password before the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_password_attempt_before_wipe_device=0x7f12069e;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the work lock password before the work profile is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_password_attempt_before_wipe_profile=0x7f12069f;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the user lock password before the user is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_password_attempt_before_wipe_user=0x7f1206a0;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the device lock pattern before the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pattern_attempt_before_wipe_device=0x7f1206a1;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the work lock pattern before the work profile is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pattern_attempt_before_wipe_profile=0x7f1206a2;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the user lock pattern before the user is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pattern_attempt_before_wipe_user=0x7f1206a3;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the device lock PIN before the device is wiped. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pin_attempt_before_wipe_device=0x7f1206a4;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the work lock PIN before the work profile is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pin_attempt_before_wipe_profile=0x7f1206a5;
    /**
     * Content of the dialog shown when the user only has one attempt left to provide the user lock PIN before the user is removed. [CHAR LIMIT=NONE]
     */
    public static final int lock_last_pin_attempt_before_wipe_user=0x7f1206a6;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning them of potential consequences of not doing so. (phone) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_intro_skip_dialog_text=0x7f1206a7;
    /**
     * Dialog text shown when the user tries to skip setting up a screen lock, warning them of potential consequences of not doing so, including loss of factory reset protection. (phone) [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_intro_skip_dialog_text_frp=0x7f1206a8;
    /**
     * Title of dialog shown when the user tries to skip setting up a screen lock, warning them of potential consequences of not doing so [CHAR LIMIT=30]
     */
    public static final int lock_screen_intro_skip_title=0x7f1206a9;
    /**
     * Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Message asking the user how they want their notifications to appear when the device is locked [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_notifications_interstitial_message=0x7f1206aa;
    /**
     * Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Message asking the user how they want their profile notifications to appear when the device is locked [CHAR LIMIT=NONE]
     */
    public static final int lock_screen_notifications_interstitial_message_profile=0x7f1206ab;
    /**
     * Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Title for the screen asking the user how they want their notifications to appear when the device is locked [CHAR LIMIT=30]
     */
    public static final int lock_screen_notifications_interstitial_title=0x7f1206ac;
    /**
     * Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Title for the screen asking the user how they want their profile notifications to appear when the device is locked [CHAR LIMIT=30]
     */
    public static final int lock_screen_notifications_interstitial_title_profile=0x7f1206ad;
    /**
     * Configure Notifications: Value for lockscreen notifications: notifications will not appear on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_disable=0x7f1206ae;
    /**
     * Configure Notifications: Value for lockscreen notifications: work notifications will not appear on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_disable_profile=0x7f1206af;
    /**
     * Configure Notifications: Value for lockscreen notifications: sensitive information will be
     * hidden or redacted from notifications shown on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_hide=0x7f1206b0;
    /**
     * Configure Notifications: Value for lockscreen notifications: sensitive information will be
     * hidden or redacted from work notifications shown on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_hide_profile=0x7f1206b1;
    /**
     * Configure Notifications: Value for lockscreen notifications:  all information will be
     * shown in notifications shown on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_show=0x7f1206b2;
    /**
     * Configure Notifications: Value for lockscreen notifications:  all information will be
     * shown in work notifications shown on a secure lock screen
     * [CHAR LIMIT=50]
     */
    public static final int lock_screen_notifications_summary_show_profile=0x7f1206b3;
    /**
     * Configure Notifications: Title for the option controlling notifications on the lockscreen. [CHAR LIMIT=30]
     */
    public static final int lock_screen_notifications_title=0x7f1206b4;
    /**
     * Message shown when setting up screen lock, prompting user to choose the their backup screen lock method [CHAR LIMIT=NONE]
     */
    public static final int lock_settings_picker_fingerprint_added_security_message=0x7f1206b5;
    /**
     * Message shown in screen lock picker while setting up the backup/fallback screen lock method for fingerprint. Users can choose to use this method to unlock the screen instead of fingerprint, or when fingerprint is not accepted. [CHAR LIMIT=80] [BACKUP_MESSAGE_ID=2799884038398627882]
     */
    public static final int lock_settings_picker_fingerprint_message=0x7f1206b6;
    /**
     * Title for security picker to choose the unlock method: None/Pattern/PIN/Password [CHAR LIMIT=22]
     */
    public static final int lock_settings_picker_title=0x7f1206b7;
    /**
     * Title for security picker to choose the profile unlock method: None/Pattern/PIN/Password [CHAR LIMIT=22]
     */
    public static final int lock_settings_picker_title_profile=0x7f1206b8;
    /**
     * Security & location settings screen, title when changing or confirming the work profile lock
     */
    public static final int lock_settings_profile_screen_lock_title=0x7f1206b9;
    /**
     * Security & location settings screen, header for profile specific section
     */
    public static final int lock_settings_profile_title=0x7f1206ba;
    /**
     * Security & location settings screen, explanation in the dialog asking if the user wants to unify work and personal locks
     */
    public static final int lock_settings_profile_unification_dialog_body=0x7f1206bb;
    /**
     * Security & location settings screen, confirmation button of the dialog for user with compliant lock, asking to create a new lock for both personal and work profiles.
     */
    public static final int lock_settings_profile_unification_dialog_confirm=0x7f1206bc;
    /**
     * Security & location settings screen, title of the dialog asking if the user wants to unify work and personal locks
     */
    public static final int lock_settings_profile_unification_dialog_title=0x7f1206bd;
    /**
     * Security & location settings screen, explanation in the dialog asking if the user wants to create a new lock for personal and work as the current work lock is not enough for the device.
     */
    public static final int lock_settings_profile_unification_dialog_uncompliant_body=0x7f1206be;
    /**
     * Security & location settings screen, confirmation button of the dialog for user with uncompliant lock, asking to create a new lock for both personal and work profiles.
     */
    public static final int lock_settings_profile_unification_dialog_uncompliant_confirm=0x7f1206bf;
    /**
     * Security & location settings screen, setting option explanation to unify work and personal locks
     */
    public static final int lock_settings_profile_unification_summary=0x7f1206c0;
    /**
     * Security & location settings screen, setting option name to unify work and personal locks
     */
    public static final int lock_settings_profile_unification_title=0x7f1206c1;
    /**
     * Security & location settings screen, summary of the item that changes your work profile lock when it is unified with the personal lock
     */
    public static final int lock_settings_profile_unified_summary=0x7f1206c2;
    /**
     * Security & location settings screen, header
     */
    public static final int lock_settings_title=0x7f1206c3;
    /**
     * Toast shown when lock pattern or password successfully setup. [CHAR LIMIT=64]
     */
    public static final int lock_setup=0x7f1206c4;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int lock_sounds_enable_title=0x7f1206c5;
    /**
     * Label for ChoosePassword/PIN OK button
     */
    public static final int lockpassword_cancel_label=0x7f1206c6;
    /**
     * Header shown to ask the user to select an unlock method [CHAR LIMIT=30]
     */
    public static final int lockpassword_choose_lock_generic_header=0x7f1206c7;
    /**
     * Header on first screen of choose password/PIN as backup for fingerprint flow [CHAR LIMIT=30]
     */
    public static final int lockpassword_choose_your_password_header_for_fingerprint=0x7f1206c8;
    /**
     * Message on first screen of choose password flow [CHAR LIMIT=NONE]
     */
    public static final int lockpassword_choose_your_password_message=0x7f1206c9;
    /**
     * Header on first screen of choose pattern flow [CHAR LIMIT=30]
     */
    public static final int lockpassword_choose_your_pattern_header=0x7f1206ca;
    /**
     * Header on first screen of choose pattern as backup for fingerprint flow [CHAR LIMIT=30]
     */
    public static final int lockpassword_choose_your_pattern_header_for_fingerprint=0x7f1206cb;
    /**
     * Header on first screen of choose password/PIN as backup for fingerprint flow [CHAR LIMIT=30]
     */
    public static final int lockpassword_choose_your_pin_header_for_fingerprint=0x7f1206cc;
    /**
     * Message on first screen of choose PIN flow [CHAR LIMIT=NONE]
     */
    public static final int lockpassword_choose_your_pin_message=0x7f1206cd;
    /**
     * Header on first screen of choose password/PIN flow [CHAR LIMIT=40]
     */
    public static final int lockpassword_choose_your_screen_lock_header=0x7f1206ce;
    /**
     * Label for ChoosePassword/PIN Clear button that clears all text entered by the user so far.
     */
    public static final int lockpassword_clear_label=0x7f1206cf;
    /**
     * Header on password confirm screen if second password doesn't match the first. [CHAR LIMIT=30]
     */
    public static final int lockpassword_confirm_passwords_dont_match=0x7f1206d0;
    /**
     * Header on pin confirm screen if second pin doesn't match the first. [CHAR LIMIT=30]
     */
    public static final int lockpassword_confirm_pins_dont_match=0x7f1206d1;
    /**
     * An explanation text that the password needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_password_details_frp=0x7f1206d2;
    /**
     * Message to be used to explain the user that he needs to enter his password to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_password_generic=0x7f1206d3;
    /**
     * Message to be used to explain the user that he needs to enter his work password to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_password_generic_profile=0x7f1206d4;
    /**
     * Header on password confirm screen [CHAR LIMIT=40]
     */
    public static final int lockpassword_confirm_your_password_header=0x7f1206d5;
    /**
     * Header shown when the password needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_password_header_frp=0x7f1206d6;
    /**
     * An explanation text that the pattern needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_pattern_details_frp=0x7f1206d7;
    /**
     * Message to be used to explain the user that he needs to enter his pattern to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_pattern_generic=0x7f1206d8;
    /**
     * Message to be used to explain the user that he needs to enter his work pattern to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_pattern_generic_profile=0x7f1206d9;
    /**
     * Header on pattern confirm screen [CHAR LIMIT=30]
     */
    public static final int lockpassword_confirm_your_pattern_header=0x7f1206da;
    /**
     * Header shown when pattern needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_pattern_header_frp=0x7f1206db;
    /**
     * An explanation text that the pin needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_pin_details_frp=0x7f1206dc;
    /**
     * Message to be used to explain the user that he needs to enter his PIN to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_pin_generic=0x7f1206dd;
    /**
     * Message to be used to explain the user that he needs to enter his work PIN to continue a
     * particular operation. [CHAR LIMIT=70]
     */
    public static final int lockpassword_confirm_your_pin_generic_profile=0x7f1206de;
    /**
     * Header on password confirm screen [CHAR LIMIT=40]
     */
    public static final int lockpassword_confirm_your_pin_header=0x7f1206df;
    /**
     * Header shown when the pin needs to be solved because the device was factory reset. [CHAR LIMIT=100]
     */
    public static final int lockpassword_confirm_your_pin_header_frp=0x7f1206e0;
    /**
     * Hint shown after minimum password criteria is met
     */
    public static final int lockpassword_continue_label=0x7f1206e1;
    /**
     * Error shown when in PASSWORD mode and user enters an invalid character
     */
    public static final int lockpassword_illegal_character=0x7f1206e2;
    /**
     * Security & location settings screen, change security method screen instruction if user
     * enters incorrect password [CHAR LIMIT=30]
     */
    public static final int lockpassword_invalid_password=0x7f1206e3;
    /**
     * Security & location settings screen, change security method screen instruction if user
     * enters incorrect PIN [CHAR LIMIT=30]
     */
    public static final int lockpassword_invalid_pin=0x7f1206e4;
    /**
     * Label for ChoosePassword/PIN OK button
     */
    public static final int lockpassword_ok_label=0x7f1206e5;
    /**
     * Error shown when in PASSWORD mode and password has been used recently. Please keep this string short!
     */
    public static final int lockpassword_password_recently_used=0x7f1206e6;
    /**
     * Error shown when in PASSWORD mode and password is all digits
     */
    public static final int lockpassword_password_requires_alpha=0x7f1206e7;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain any digits
     */
    public static final int lockpassword_password_requires_digit=0x7f1206e8;
    /**
     * Error shown when in PASSWORD mode and password doesn't contain any symbols
     */
    public static final int lockpassword_password_requires_symbol=0x7f1206e9;
    /**
     * Toast shown if setting password was successful
     */
    public static final int lockpassword_password_set_toast=0x7f1206ea;
    /**
     * Error shown in popup when password is too long
     */
    public static final int lockpassword_password_too_long=0x7f1206eb;
    /**
     * Hint shown in dialog screen when password is too short
     */
    public static final int lockpassword_password_too_short=0x7f1206ec;
    /**
     * Toast shown if setting pattern was successful
     */
    public static final int lockpassword_pattern_set_toast=0x7f1206ed;
    /**
     * Error shown when in PIN mode and user enters a non-digit
     */
    public static final int lockpassword_pin_contains_non_digits=0x7f1206ee;
    /**
     * [CHAR_LIMIT=NONE] Error shown when the user tries to set an ascending or descending sequence of digits
     */
    public static final int lockpassword_pin_no_sequential_digits=0x7f1206ef;
    /**
     * Error shown when in PIN mode and PIN has been used recently. Please keep this string short!
     */
    public static final int lockpassword_pin_recently_used=0x7f1206f0;
    /**
     * Toast shown if setting PIN was successful
     */
    public static final int lockpassword_pin_set_toast=0x7f1206f1;
    /**
     * Error shown in popup when PIN is too long
     */
    public static final int lockpassword_pin_too_long=0x7f1206f2;
    /**
     * Hint shown in dialog screen when PIN is too short
     */
    public static final int lockpassword_pin_too_short=0x7f1206f3;
    /**
     * This string shows up on a screen where a user can enter a password that unlocks their
     * device. This is an extra security measure that's required for them to continue. [CHAR
     * LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_device_password=0x7f1206f4;
    /**
     * This string shows up on a screen where a user can enter a pattern that
     * unlocks their device. This is an extra security measure that's required for them to
     * continue. [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_device_pattern=0x7f1206f5;
    /**
     * This string shows up on a screen where a user can enter a PIN that unlocks their device.
     * This is an extra security measure that's required for them to continue. [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_device_pin=0x7f1206f6;
    /**
     * This string shows up on a screen where a user can enter a password that lets them access
     * their work profile, which is a part of their device that's specifically for work apps and
     * managed by their employer. This is an extra security measure that's required for them to
     * continue. [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_work_password=0x7f1206f7;
    /**
     * This string shows up on a screen where a user can enter a pattern that lets them access
     * their work profile, which is a part of their device that's specifically for work apps and
     * managed by their employer. This is an extra security measure that's required for them to
     * continue. [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_work_pattern=0x7f1206f8;
    /**
     * This string shows up on a screen where a user can enter a PIN that lets them access their
     * work profile, which is a part of their device that's specifically for work apps and managed
     * by their employer. This is an extra security measure that's required for them to continue.
     * [CHAR LIMIT=100]
     */
    public static final int lockpassword_strong_auth_required_work_pin=0x7f1206f9;
    /**
     * Security & location settings screen, setting option name
     */
    public static final int lockpattern_change_lock_pattern_label=0x7f1206fa;
    /**
     * Security & location settings screen, change unlock pattern screen instruction when the user chooses "Change unlock pattern".  We first ask the user toe nter the current pattern, and this is the message seen
     */
    public static final int lockpattern_change_lock_pin_label=0x7f1206fb;
    /**
     * Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  When they are ready to draw it once again to confirm it, they press this button.
     */
    public static final int lockpattern_confirm_button_text=0x7f1206fc;
    /**
     * Security & location settings screen, change unlock pattern screen button, on bottom of screen. Once they draw a new pattern and confirm it by drawing it again, they press this button to exit
     */
    public static final int lockpattern_continue_button_text=0x7f1206fd;
    /**
     * Security & location settings screen, change unlock pattern screen instruction on top of screen to confirm pattern
     */
    public static final int lockpattern_need_to_confirm=0x7f1206fe;
    /**
     * Security & location settings screen, change unlock pattern screen instruction if user
     * draws incorrect pattern [CHAR LIMIT=30]
     */
    public static final int lockpattern_need_to_unlock_wrong=0x7f1206ff;
    public static final int lockpattern_pattern_confirmed_header=0x7f120700;
    /**
     * Security & location settings screen, change unlock pattern screen message on top of screen after drawing pattern
     */
    public static final int lockpattern_pattern_entered_header=0x7f120701;
    /**
     * Security & location settings screen, change unlock pattern screen instruction on top of screen if user doesn't connect enough dots
     */
    public static final int lockpattern_recording_incorrect_too_short=0x7f120702;
    /**
     * Security & location settings screen, change unlock pattern screen instruction on top of screen while drawing pattern
     */
    public static final int lockpattern_recording_inprogress=0x7f120703;
    /**
     * Security & location settings screen, change unlock pattern screen hint on bottom of screen.  We are telling them to press the menu button to see more options or help.
     */
    public static final int lockpattern_recording_intro_footer=0x7f120704;
    /**
     * Security & location settings screen, change unlock pattern screen instruction on top of screen.  This si when they are supposed to draw a new unlock pattern (for example, if they are changing their unlock patterns)..
     */
    public static final int lockpattern_recording_intro_header=0x7f120705;
    /**
     * Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  If they are nto satisfied with this pattern, they click this button to redraw the pattern.
     */
    public static final int lockpattern_restart_button_text=0x7f120706;
    /**
     * Security & location settings screen, change unlock pattern screen button, on bottom of screen. If they are supposed to enter their current pattern before being able to draw another one, and they screw up, they hit this button to try again
     */
    public static final int lockpattern_retry_button_text=0x7f120707;
    /**
     * Security & location settings screen, setting option name when user has previously set an unlock pattern and wants to change to a new pattern
     */
    public static final int lockpattern_settings_change_lock_pattern=0x7f120708;
    /**
     * Security & location settings screen, setting option name when user has never set an unlock pattern
     */
    public static final int lockpattern_settings_choose_lock_pattern=0x7f120709;
    /**
     * Security & location settings screen, setting check box title. This controls whether the device locks immediately when the power button is pressed. [CHAR LIMIT=28]
     */
    public static final int lockpattern_settings_enable_power_button_instantly_locks=0x7f12070a;
    /**
     * Security & location settings screen, setting summary for the checkbox "Require pattern"
     */
    public static final int lockpattern_settings_enable_summary=0x7f12070b;
    /**
     * Security & location settings screen, setting check box title. This setting controls whether tactile feedback will be produced when the user draws the pattern.
     */
    public static final int lockpattern_settings_enable_tactile_feedback_title=0x7f12070c;
    /**
     * Security & location settings screen, setting check box title if the unlock pattern MUST be drawn everytime they turn on the screen
     */
    public static final int lockpattern_settings_enable_title=0x7f12070d;
    /**
     * Security & location settings screen, setting check box title. This setting controls whether a visible green line is drawn as the user moves his finger around while drawing the unlock pattern.  If checked, this line is drawn.  If unchecked, there is nothing drawn so the user does not reveal his pattern while he unlocks the phone.
     */
    public static final int lockpattern_settings_enable_visible_pattern_title=0x7f12070e;
    /**
     * Security & location settings screen, setting check box title. This setting controls whether a visible green line is drawn as the user moves his finger around while drawing the profile unlock pattern.  If checked, this line is drawn.  If unchecked, there is nothing drawn so the user does not reveal his pattern while he unlocks the profile.
     */
    public static final int lockpattern_settings_enable_visible_pattern_title_profile=0x7f12070f;
    /**
     * Security & location settings screen, the help instructions (an animation) caption
     */
    public static final int lockpattern_settings_help_how_to_record=0x7f120710;
    /**
     * Security & location settings screen, setting optional summary when a trust agent is enabled
     */
    public static final int lockpattern_settings_power_button_instantly_locks_summary=0x7f120711;
    /**
     * Title of the preference controlling whether the device encryption password/PIN/Pattern must be entered before being able to start the device. [CHAR LIMIT=60]
     */
    public static final int lockpattern_settings_require_cred_before_startup=0x7f120712;
    /**
     * Summary of the preference controlling whether the device encryption *password* must be entered before being able to start the device. [CHAR LIMIT=NONE]
     */
    public static final int lockpattern_settings_require_password_before_startup_summary=0x7f120713;
    /**
     * Summary of the preference controlling whether the device encryption *pattern* must be entered before being able to start the device. [CHAR LIMIT=NONE]
     */
    public static final int lockpattern_settings_require_pattern_before_startup_summary=0x7f120714;
    /**
     * Summary of the preference controlling whether the device encryption *PIN* must be entered before being able to start the device. [CHAR LIMIT=NONE]
     */
    public static final int lockpattern_settings_require_pin_before_startup_summary=0x7f120715;
    /**
     * Security & location settings screen, unlock screen activity title
     */
    public static final int lockpattern_settings_title=0x7f120716;
    /**
     * Security & location settings screen, confirm unlock pattern screen hint at the bottom after
     * too many incorrect attempts [CHAR LIMIT=120]
     */
    public static final int lockpattern_too_many_failed_confirmation_attempts=0x7f120717;
    /**
     * Label for LockPatternTutorial Cancel button
     */
    public static final int lockpattern_tutorial_cancel_label=0x7f120718;
    /**
     * Label for LockPatternTutorial Continue button
     */
    public static final int lockpattern_tutorial_continue_label=0x7f120719;
    /**
     * Text for the setting on whether you can type text into notifications without unlocking the device.
     */
    public static final int lockscreen_remote_input=0x7f12071a;
    /**
     * Security Settings screen setting option title for the item to take you to the lock screen preference screen [CHAR LIMIT=60]
     */
    public static final int lockscreen_settings_title=0x7f12071b;
    public static final int lost_internet_access_cancel=0x7f12071c;
    public static final int lost_internet_access_persist=0x7f12071d;
    /**
     * Button text to let user switch to mobile data
     */
    public static final int lost_internet_access_switch=0x7f12071e;
    public static final int lost_internet_access_text=0x7f12071f;
    /**
     * Dialog text to tell the user that the selected network has lost Internet access, and asking the user whether they want to avoid this network.
     */
    public static final int lost_internet_access_title=0x7f120720;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int macaddr_label=0x7f120721;
    /**
     * Representation of a mAh value. [CHAR LIMIT=NONE]
     */
    public static final int mah=0x7f120722;
    /**
     * Description of the main process in the details.
     */
    public static final int main_running_process_description=0x7f120723;
    /**
     * Title of preference to manage device admin apps, which are used by IT admins to manage devices
     */
    public static final int manage_device_admin=0x7f120724;
    /**
     * Mobile plan [CHAR LIMIT=35]
     */
    public static final int manage_mobile_plan_title=0x7f120725;
    /**
     * Summary of preference to manage notification listeners, when none are enabled
     */
    public static final int manage_notification_access_summary_zero=0x7f120726;
    /**
     * Sound & notification > Advanced section: Title for managing notification listeners option. [CHAR LIMIT=30]
     */
    public static final int manage_notification_access_title=0x7f120727;
    /**
     * Manage applications screen, individual app screen, button label when the user wants to manage the space taken up by an app.
     */
    public static final int manage_space_text=0x7f120728;
    /**
     * Title of preference to manage trust agents
     */
    public static final int manage_trust_agents=0x7f120729;
    /**
     * Summary of preference to manage device policies when there is no trust agents
     */
    public static final int manage_trust_agents_summary=0x7f12072a;
    /**
     * Sound & notification > Advanced section: Title for managing Do Not Disturb access option. [CHAR LIMIT=40]
     */
    public static final int manage_zen_access_title=0x7f12072b;
    /**
     * Applications settings screen, setting option summary for the user to go to the screen to manage installed applications
     */
    public static final int manageapplications_settings_summary=0x7f12072c;
    /**
     * Applications settings screen, setting option name for the user to go to the screen to manage installed applications
     */
    public static final int manageapplications_settings_title=0x7f12072d;
    /**
     * Title for managed device admin apps on the list [CHAR_LIMIT=25]
     */
    public static final int managed_device_admin_title=0x7f12072e;
    /**
     * [CHAR LIMIT=NONE] The preference summary for enabling cross-profile remote contact search
     */
    public static final int managed_profile_contact_search_summary=0x7f12072f;
    /**
     * [CHAR LIMIT=60] The preference title for enabling cross-profile remote contact search
     */
    public static final int managed_profile_contact_search_title=0x7f120730;
    /**
     * [CHAR LIMIT=30] Title for managed profile location switch
     */
    public static final int managed_profile_location_switch_title=0x7f120731;
    /**
     * Label for the state of the work profile [CHAR LIMIT=80]
     */
    public static final int managed_profile_not_available_label=0x7f120732;
    /**
     * [CHAR LIMIT=60] Title of work profile setting page
     */
    public static final int managed_profile_settings_title=0x7f120733;
    /**
     * Title for a work profile. [CHAR LIMIT=25]
     */
    public static final int managed_user_title=0x7f120734;
    /**
     * Summary for work profile accounts group. [CHAR LIMIT=25]
     */
    public static final int managing_admin=0x7f120735;
    /**
     * About phone settings screen, setting option name to show Manual [CHAR LIMIT=25]
     */
    public static final int manual=0x7f120736;
    /**
     * SD card & phone storage settings screen, instructions and list of current accounts.  The list of accounts follows this text[CHAR LIMIT=NONE]
     */
    public static final int master_clear_accounts=0x7f120737;
    /**
     * SD card & phone storage settings screen, button on screen after user selects Factory data reset
     */
    public static final int master_clear_button_text=0x7f120738;
    /**
     * Master clear confirmation screen title [CHAR LIMIT=30]
     */
    public static final int master_clear_confirm_title=0x7f120739;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Factory data reset [CHAR LIMIT=NONE]
     */
    public static final int master_clear_desc=0x7f12073a;
    /**
     * SD card & phone storage settings screen, list of items on an eSIM (embedded SIM) that will be erased during this operation [CHAR LIMIT=NONE]
     */
    public static final int master_clear_desc_also_erases_esim=0x7f12073b;
    /**
     * SD card & phone storage settings screen, list of items in user data storage (USB storage or SD card) that will be erased during this operation [CHAR LIMIT=NONE]
     */
    public static final int master_clear_desc_also_erases_external=0x7f12073c;
    /**
     * SD card & phone storage settings screen, instructions about whether to also erase the external storage (SD card) when erasing the internal storage [CHAR LIMIT=NONE]
     */
    public static final int master_clear_desc_erase_external_storage=0x7f12073d;
    /**
     * SD card & phone storage settings screen, notification if there are eSIM (embedded SIM) profiles present that the user's mobile service plan will not be canceled [CHAR LIMIT=NONE]
     */
    public static final int master_clear_desc_no_cancel_mobile_plan=0x7f12073e;
    /**
     * Master clear failed message
     */
    public static final int master_clear_failed=0x7f12073f;
    /**
     * SD card & phone storage settings screen, button on screen after user selects Reset phone button
     */
    public static final int master_clear_final_button_text=0x7f120740;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Reset phone button
     */
    public static final int master_clear_final_desc=0x7f120741;
    /**
     * Error message for users that aren't allowed to factory reset [CHAR LIMIT=none]
     */
    public static final int master_clear_not_available=0x7f120742;
    /**
     * SD card & phone storage settings screen, notification if other users are present on the device [CHAR LIMIT=NONE]
     */
    public static final int master_clear_other_users_present=0x7f120743;
    /**
     * Master clear progress screen text [CHAR LIMIT=75]
     */
    public static final int master_clear_progress_text=0x7f120744;
    /**
     * Master clear progress screen title [CHAR LIMIT=30]
     */
    public static final int master_clear_progress_title=0x7f120745;
    /**
     * Button title to factory data reset the entire device
     */
    public static final int master_clear_title=0x7f120746;
    /**
     * Label for maximum memory use section [CHAR LIMIT=30]
     */
    public static final int maximum_memory_use=0x7f120747;
    /**
     * Preference category for media development settings. [CHAR LIMIT=50]
     */
    public static final int media_category=0x7f120748;
    /**
     * Sound: Title for the option managing media volume. [CHAR LIMIT=30]
     */
    public static final int media_volume_option_title=0x7f120749;
    /**
     * Sound settings screen, setting option summary text
     */
    public static final int media_volume_summary=0x7f12074a;
    /**
     * Sound settings screen, setting option name
     */
    public static final int media_volume_title=0x7f12074b;
    /**
     * [CHAR LIMIT=NONE] Activity title for process stats details on overall memory state
     */
    public static final int mem_details_title=0x7f12074c;
    /**
     * [CHAR LIMIT=NONE] Subtitle for process stats memory state details for list of memory states
     */
    public static final int mem_state_subtitle=0x7f12074d;
    /**
     * [CHAR LIMIT=NONE] Type of memory use that is available/free
     */
    public static final int mem_use_free_type=0x7f12074e;
    /**
     * [CHAR LIMIT=NONE] Type of memory use associated with kernel caches
     */
    public static final int mem_use_kernel_cache_type=0x7f12074f;
    /**
     * [CHAR LIMIT=NONE] Type of memory use associated with the kernel
     */
    public static final int mem_use_kernel_type=0x7f120750;
    /**
     * [CHAR LIMIT=NONE] Type of memory use associated with native processes
     */
    public static final int mem_use_native_type=0x7f120751;
    /**
     * [CHAR LIMIT=NONE] Subtitle for process stats memory state details for list of memory use
     */
    public static final int mem_use_subtitle=0x7f120752;
    /**
     * [CHAR LIMIT=NONE] Total of all memory use
     */
    public static final int mem_use_total=0x7f120753;
    /**
     * [CHAR LIMIT=NONE] Type of memory use associated with kernel zram swap
     */
    public static final int mem_use_zram_type=0x7f120754;
    /**
     * [CHAR LIMIT=10] Running services, label for chart showing memory use.
     */
    public static final int memory=0x7f120755;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of applications installed. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_apps_usage=0x7f120756;
    /**
     * SD card & phone storage settings title. The amount of free space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section.
     */
    public static final int memory_available=0x7f120757;
    /**
     * SD card & phone storage settings title. The amount of free space for some storage partition when the volume is read-only. [CHAR LIMIT=64]
     */
    public static final int memory_available_read_only=0x7f120758;
    /**
     * Average memory used by an app [CHAR LIMIT=25]
     */
    public static final int memory_avg_desc=0x7f120759;
    /**
     * Average memory usage key [CHAR LIMIT=25]
     */
    public static final int memory_avg_use=0x7f12075a;
    /**
     * SD card & phone storage settings summary. Displayed when the total memory usage is being calculated. Will be replaced with a number like "12.3 GB" when finished calucating. [CHAR LIMIT=30]
     */
    public static final int memory_calculating_size=0x7f12075b;
    /**
     * Message of dialog asking user to confirm before clearing all caches. [CHAR LIMIT=48]
     */
    public static final int memory_clear_cache_message=0x7f12075c;
    /**
     * Title of dialog asking user to confirm before clearing all caches. [CHAR LIMIT=48]
     */
    public static final int memory_clear_cache_title=0x7f12075d;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of all pictures, videos in /sdcard/DCIM, /sdcard/Pictures folders on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_dcim_usage=0x7f12075e;
    /**
     * Label for details about an app's memory use [CHAR LIMIT=30]
     */
    public static final int memory_details=0x7f12075f;
    /**
     * Title for screen showing recent memory usage of specific app [CHAR LIMIT=30]
     */
    public static final int memory_details_title=0x7f120760;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of /sdcard/Download on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_downloads_usage=0x7f120761;
    /**
     * Maximum memory used by an app [CHAR LIMIT=25]
     */
    public static final int memory_max_desc=0x7f120762;
    /**
     * Maximum memory usage key [CHAR LIMIT=25]
     */
    public static final int memory_max_use=0x7f120763;
    /**
     * Label for maximum amount of memory app has used [CHAR LIMIT=25]
     */
    public static final int memory_maximum_usage=0x7f120764;
    /**
     * Storage item representing all cached data on device. [CHAR LIMIT=48]
     */
    public static final int memory_media_cache_usage=0x7f120765;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of misc files on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_media_misc_usage=0x7f120766;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of media on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_media_usage=0x7f120767;
    /**
     * SD card & phone storage settings title. Displayed as a title when showing the total usage of audio files in /sdcard on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50]
     */
    public static final int memory_music_usage=0x7f120768;
    /**
     * Label for the current performance of the device [CHAR LIMIT=25]
     */
    public static final int memory_performance=0x7f120769;
    /**
     * Title for screen showing recent memory usage of device [CHAR LIMIT=30]
     */
    public static final int memory_settings_title=0x7f12076a;
    /**
     * SD card & phone storage settings screen heading.  The total amount of storage space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section
     */
    public static final int memory_size=0x7f12076b;
    /**
     * Summary of memory screen [CHAR LIMIT=NONE]
     */
    public static final int memory_summary=0x7f12076c;
    /**
     * Label for app list of memory use [CHAR LIMIT=30]
     */
    public static final int memory_usage=0x7f12076d;
    /**
     * Label for button that leads to list of apps and their memory usage [CHAR LIMIT=40]
     */
    public static final int memory_usage_apps=0x7f12076e;
    /**
     * Formatting for memory description [CHAR LIMIT=25]
     */
    public static final int memory_use_running_format=0x7f12076f;
    /**
     * Summary for how much memory an app has used [CHAR LIMIT=NONE]
     */
    public static final int memory_use_summary=0x7f120770;
    /**
     * Edit access point screen menu option to discard the user's changes for this APN
     */
    public static final int menu_cancel=0x7f120771;
    /**
     * Edit access point screen menu option to delete this APN
     */
    public static final int menu_delete=0x7f120772;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data
     */
    public static final int menu_duration_12h=0x7f120773;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data
     */
    public static final int menu_duration_1d=0x7f120774;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data
     */
    public static final int menu_duration_3h=0x7f120775;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data
     */
    public static final int menu_duration_6h=0x7f120776;
    /**
     * [CHAR LIMIT=NONE] Menu for manage apps to control whether system processes are hidden
     */
    public static final int menu_hide_system=0x7f120777;
    /**
     * APNs screen menu option to create a brand spanking new APN
     */
    public static final int menu_new=0x7f120778;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to select duration of stats to show
     */
    public static final int menu_proc_stats_duration=0x7f120779;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to select which type of stats to show
     */
    public static final int menu_proc_stats_type=0x7f12077a;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show information on background processes
     */
    public static final int menu_proc_stats_type_background=0x7f12077b;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show information on cached processes
     */
    public static final int menu_proc_stats_type_cached=0x7f12077c;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to show information on foreground processes
     */
    public static final int menu_proc_stats_type_foreground=0x7f12077d;
    /**
     * APNs screen menu option to reset default APN settings
     */
    public static final int menu_restore=0x7f12077e;
    /**
     * Edit access point screen menu option to save the user's changes for this APN to the persistent storage
     */
    public static final int menu_save=0x7f12077f;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to control whether stats are shown
     * as percentages
     */
    public static final int menu_show_percentage=0x7f120780;
    /**
     * [CHAR LIMIT=NONE] Menu for manage apps to control whether system processes are shown
     */
    public static final int menu_show_system=0x7f120781;
    /**
     * Menu label for viewing battery usage since unplugged
     */
    public static final int menu_stats_last_unplugged=0x7f120782;
    /**
     * Menu label for refreshing with latest usage numbers
     */
    public static final int menu_stats_refresh=0x7f120783;
    /**
     * Menu label for viewing battery usage total
     */
    public static final int menu_stats_total=0x7f120784;
    /**
     * Menu label for viewing battery usage since unplugged
     */
    public static final int menu_stats_unplugged=0x7f120785;
    /**
     * [CHAR LIMIT=NONE] Menu for process stats to control whether computation should be based
     * on Uss (Unique Set Size) instead of Pss (Proportional Set Size)
     */
    public static final int menu_use_uss=0x7f120786;
    /**
     * Misc files [CHAR LIMIT=25]
     */
    public static final int misc_files=0x7f120787;
    /**
     * number of misc files selected [CHAR LIMIT=40]
     */
    public static final int misc_files_selected_count=0x7f120788;
    /**
     * number of bytes represented by the selected misc files [CHAR LIMIT=40]
     */
    public static final int misc_files_selected_count_bytes=0x7f120789;
    /**
     * Ask user to connect to the internet [CHAR_ LIMIT=50]
     */
    public static final int mobile_connect_to_internet=0x7f12078a;
    /**
     * Setting Checkbox title whether to always keep mobile data active. [CHAR LIMIT=80]
     */
    public static final int mobile_data_always_on=0x7f12078b;
    public static final int mobile_data_always_on_summary=0x7f12078c;
    /**
     * Ask user to insert a SIM card [CHAR_ LIMIT=50]
     */
    public static final int mobile_insert_sim_card=0x7f12078d;
    /**
     * There is no mobile provisiong website for the operator which is the firat parameter [CHAR_ LIMIT=50]
     */
    public static final int mobile_no_provisioning_url=0x7f12078e;
    /**
     * The SIM operator is not known [CHAR_ LIMIT=50]
     */
    public static final int mobile_unknown_sim_operator=0x7f12078f;
    /**
     * UI debug setting: select current app to mock location [CHAR LIMIT=50]
     */
    public static final int mock_location_app=0x7f120790;
    /**
     * UI debug setting: no mock location app has been set [CHAR LIMIT=50]
     */
    public static final int mock_location_app_not_set=0x7f120791;
    /**
     * UI debug setting: mock location app has been set [CHAR LIMIT=50]
     */
    public static final int mock_location_app_set=0x7f120792;
    /**
     * About phone screen, status item label  [CHAR LIMIT=40]
     */
    public static final int model_info=0x7f120793;
    /**
     * Manage applications, text for Move button
     */
    public static final int move_app=0x7f120794;
    /**
     * Manage applications, text for dialog moving an app
     */
    public static final int move_app_failed_dlg_text=0x7f120795;
    /**
     * Manage applications, text for dialog when moving an app
     */
    public static final int move_app_failed_dlg_title=0x7f120796;
    /**
     * Manage applications, text for Move button to move app to internal storage
     */
    public static final int move_app_to_internal=0x7f120797;
    /**
     * Manage applications, text for Move button  to move app to sdcard
     */
    public static final int move_app_to_sdcard=0x7f120798;
    /**
     * Error message shown when trying to move device administrators to external disks, such as SD card [CHAR_LIMIT=none]
     */
    public static final int move_error_device_admin=0x7f120799;
    /**
     * Manage applications, text for Move button when move is in progress
     */
    public static final int moving=0x7f12079a;
    /**
     * SD card & phone storage settings item summary that will result in the phone connected to PC and MTP/PTP enabled.   [CHAR LIMIT=80]
     */
    public static final int mtp_ptp_mode_summary=0x7f12079b;
    /**
     * Sound settings screen, music effects title [CHAR LIMIT=30]
     */
    public static final int musicfx_title=0x7f12079c;
    /**
     * Edit Mvno Match Data Info of APN
     */
    public static final int mvno_match_data=0x7f12079d;
    /**
     * Edit Mvno Type Info of APN
     */
    public static final int mvno_type=0x7f12079e;
    /**
     * Item found in thee PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int n_cacrts=0x7f12079f;
    /**
     * Summary for Network and Internet settings, explaining it contains network data usage setting [CHAR LIMIT=NONE]
     */
    public static final int network_dashboard_summary_data_usage=0x7f1207a0;
    /**
     * Summary for Network and Internet settings, explaining it contains hotspot (tethering) setting [CHAR LIMIT=NONE]
     */
    public static final int network_dashboard_summary_hotspot=0x7f1207a1;
    /**
     * Summary for Network and Internet settings, explaining it contains mobile network setting [CHAR LIMIT=NONE]
     */
    public static final int network_dashboard_summary_mobile=0x7f1207a2;
    /**
     * Title for setting tile leading to network and Internet settings [CHAR LIMIT=40]
     * no translation found for settings_suggestion_header_summary_hidden_items (5597356221942118048)
     */
    public static final int network_dashboard_title=0x7f1207a3;
    /**
     * Network operators settings title.  [CHAR LIMIT=50]
     */
    public static final int network_operators_settings=0x7f1207a4;
    /**
     * Error message for users that aren't allowed to reset network settings [CHAR LIMIT=none]
     */
    public static final int network_reset_not_available=0x7f1207a5;
    /**
     * Title of button and screen for which wifi networks have data restrictions [CHAR LIMIT=30
     */
    public static final int network_restrictions=0x7f1207a6;
    /**
     * Wifi Assistant request message.  This message asks the user if it is okay for an app to become the Wifi Assistant instead of the current Wifi Assistant app. [CHAR LIMIT=100]
     */
    public static final int network_scorer_change_active_dialog_text=0x7f1207a7;
    /**
     * Wifi Assistant change wi-fi assistant title.  [CHAR LIMIT=40]
     */
    public static final int network_scorer_change_active_dialog_title=0x7f1207a8;
    /**
     * Wifi Assistant request message.  This message asks the user if it is okay for an app to become the Wifi Assistant. [CHAR LIMIT=100]
     */
    public static final int network_scorer_change_active_no_previous_dialog_text=0x7f1207a9;
    public static final int network_scorer_picker_none_preference=0x7f1207aa;
    /**
     * Network Scorer Picker title [CHAR LIMIT=40]
     */
    public static final int network_scorer_picker_title=0x7f1207ab;
    /**
     * Wireless controls, item title to go into the network settings
     */
    public static final int network_settings_title=0x7f1207ac;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int network_state_label=0x7f1207ad;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int networkid_label=0x7f1207ae;
    /**
     * mobile network settings screen, setting option name
     */
    public static final int networks=0x7f1207af;
    /**
     * Prompt for the user to enter a new full-backup password
     */
    public static final int new_backup_pw_prompt=0x7f1207b0;
    /**
     * Summary label for new device suggestion, which is displayed in Settings homepage [CHAR LIMIT=100]
     */
    public static final int new_device_suggestion_summary=0x7f1207b1;
    /**
     * Title label for new device suggestion, which is displayed in Settings homepage [CHAR LIMIT=100]
     */
    public static final int new_device_suggestion_title=0x7f1207b2;
    /**
     * Used in setup wizard Wi-Fi screen. The button label for going to the next screen and submitting. [CHAR LIMIT=20]
     */
    public static final int next_label=0x7f1207b3;
    /**
     * Dialog content for NFC disclaimer: telling user NFC can exchange data when device is nearby other devices (for example: payment terminals, badge reader etc). [CHAR_LIMIT=NONE]
     */
    public static final int nfc_disclaimer_content=0x7f1207b4;
    /**
     * Dialog title for NFC disclaimer [CHAR_LIMIT=40]
     */
    public static final int nfc_disclaimer_title=0x7f1207b5;
    /**
     * Content for text explaning how to pay at a payment terminal in a store
     */
    public static final int nfc_how_it_works_content=0x7f1207b6;
    /**
     * Button the user can click to indicate he understood and dismiss the screen
     */
    public static final int nfc_how_it_works_got_it=0x7f1207b7;
    /**
     * Header for text explaning how to pay at a payment terminal in a store
     */
    public static final int nfc_how_it_works_title=0x7f1207b8;
    /**
     * NFC More... title.  [CHAR LIMIT=40]
     */
    public static final int nfc_more_title=0x7f1207b9;
    /**
     * String indicating the label of the default payment app and a description of its state; eg Google Wallet - MasterCard 1234
     */
    public static final int nfc_payment_app_and_desc=0x7f1207ba;
    /**
     * Header text that can be clicked on to change the default payment app
     */
    public static final int nfc_payment_default=0x7f1207bb;
    /**
     * Summary text that is shown when no default app is set
     */
    public static final int nfc_payment_default_not_set=0x7f1207bc;
    /**
     * Always use the default app (independent of what app is open)
     */
    public static final int nfc_payment_favor_default=0x7f1207bd;
    /**
     * If open app supports TapPay, use that app instead of the default
     */
    public static final int nfc_payment_favor_open=0x7f1207be;
    /**
     * Caption for button linking to a page explaining how Tap and Pay works
     */
    public static final int nfc_payment_how_it_works=0x7f1207bf;
    /**
     * String shown when there are no NFC payment applications installed
     */
    public static final int nfc_payment_no_apps=0x7f1207c0;
    /**
     * Header for a dialog asking the user which payment app to use
     */
    public static final int nfc_payment_pay_with=0x7f1207c1;
    public static final int nfc_payment_set_default=0x7f1207c2;
    public static final int nfc_payment_set_default_instead_of=0x7f1207c3;
    /**
     * Label for the dialog that is shown when the user is asked to set a
     * preferred payment application
     */
    public static final int nfc_payment_set_default_label=0x7f1207c4;
    public static final int nfc_payment_settings_title=0x7f1207c5;
    /**
     * Header for what to do when the open app supports TapPay: use the default set app, or the open app
     */
    public static final int nfc_payment_use_default=0x7f1207c6;
    /**
     * Description of NFC in the 1st level settings screen, for a phone. [CHAR LIMIT=NONE]
     */
    public static final int nfc_quick_toggle_summary=0x7f1207c7;
    /**
     * Used in the 1st-level settings screen to turn on NFC
     */
    public static final int nfc_quick_toggle_title=0x7f1207c8;
    /**
     * Night display screen, setting option value for night display to turn on/off automatically according to a user defined schedule. [CHAR LIMIT=32]
     */
    public static final int night_display_auto_mode_custom=0x7f1207c9;
    /**
     * Night display screen, setting option value for night display to *never* turn on/off automatically. [CHAR LIMIT=30]
     */
    public static final int night_display_auto_mode_never=0x7f1207ca;
    /**
     * Night display screen, setting option name to configure whether night display turn on/off automatically. [CHAR LIMIT=30]
     */
    public static final int night_display_auto_mode_title=0x7f1207cb;
    /**
     * Night display screen, setting option value for night display to turn on/off automatically at sunset/sunrise. [CHAR LIMIT=32]
     */
    public static final int night_display_auto_mode_twilight=0x7f1207cc;
    /**
     * Night display screen, setting option name to configure time to automatically turn off night display. [CHAR LIMIT=30]
     */
    public static final int night_display_end_time_title=0x7f1207cd;
    /**
     * Night display screen, setting option name to configure time to automatically turn on night display. [CHAR LIMIT=30]
     */
    public static final int night_display_start_time_title=0x7f1207ce;
    /**
     * Night display screen, setting option name controlling the current activation status. [CHAR LIMIT=30]
     */
    public static final int night_display_status_title=0x7f1207cf;
    /**
     * Night display: Summary for the night display option Suggestion (renamed "Night Light" with title caps). [CHAR LIMIT=NONE]
     */
    public static final int night_display_suggestion_summary=0x7f1207d0;
    /**
     * Night display: Title for the night display option Suggestion (renamed "Night Light" with title caps). [CHAR LIMIT=30]
     */
    public static final int night_display_suggestion_title=0x7f1207d1;
    /**
     * Display settings screen, summary format of night display when off. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_off=0x7f1207d2;
    /**
     * Display settings screen, summary format of night display when off and will turn on automatically at a user defined time. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_off_auto_mode_custom=0x7f1207d3;
    /**
     * Display settings screen, summary of night display when off and will *never* turn on automatically. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_off_auto_mode_never=0x7f1207d4;
    /**
     * Display settings screen, summary of night display when off and will turn on automatically at sunset. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_off_auto_mode_twilight=0x7f1207d5;
    /**
     * Display settings screen, summary format of night display when on. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_on=0x7f1207d6;
    /**
     * Display settings screen, summary format of night display when on and will turn off automatically at a user defined time. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_on_auto_mode_custom=0x7f1207d7;
    /**
     * Display settings screen, summary of night display when on and will *never* turn off automatically. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_on_auto_mode_never=0x7f1207d8;
    /**
     * Display settings screen, summary of night display when on and will turn off automatically at sunrise. [CHAR LIMIT=NONE]
     */
    public static final int night_display_summary_on_auto_mode_twilight=0x7f1207d9;
    /**
     * Night display screen, setting the color temperature of the display. [CHAR LIMIT=30]
     */
    public static final int night_display_temperature_title=0x7f1207da;
    /**
     * Night display screen, description of night display feature (renamed "Night Light" with title caps). [CHAR LIMIT=NONE]
     */
    public static final int night_display_text=0x7f1207db;
    /**
     * Night display screen, setting option name to enable night display (renamed "Night Light" with title caps). [CHAR LIMIT=30]
     */
    public static final int night_display_title=0x7f1207dc;
    /**
     * Strings for Dialog no button
     */
    public static final int no=0x7f1207dd;
    /**
     * UI debug setting: label for app picker to select no applicatiojn [CHAR LIMIT=50]
     */
    public static final int no_application=0x7f1207de;
    /**
     * [CHAR LIMIT=25] Text shown when there are no applications to display.
     */
    public static final int no_applications=0x7f1207df;
    /**
     * Summary for app with no battery usage [CHAR LIMIT=NONE]
     */
    public static final int no_battery_summary=0x7f1207e0;
    /**
     * [CHAR LIMIT=NONE] App notification settings: no channels
     */
    public static final int no_channels=0x7f1207e1;
    /**
     * Summary of data item when no data usage [CHAR LIMIT=40]
     */
    public static final int no_data_usage=0x7f1207e2;
    /**
     * [CHAR LIMIT=25] Text shown when there are no default Apps
     */
    public static final int no_default_apps=0x7f1207e3;
    /**
     * No default home set summary [CHAR LIMIT=NONE]
     */
    public static final int no_default_home=0x7f1207e4;
    /**
     * Message when there are no available device admin apps to display
     */
    public static final int no_device_admins=0x7f1207e5;
    public static final int no_internet_access_remember=0x7f1207e6;
    /**
     * Dialog text to tell the user that the selected network does not have Internet access.
     */
    public static final int no_internet_access_text=0x7f1207e7;
    /**
     * Summary for no memory use for an app [CHAR LIMIT=NONE]
     */
    public static final int no_memory_use_summary=0x7f1207e8;
    /**
     * String to show in the list of notification listeners, when none is installed
     * no translation found for manage_notification_access_summary_nonzero (7930130030691218387)
     * no translation found for manage_notification_access_summary_nonzero (7930130030691218387)
     */
    public static final int no_notification_listeners=0x7f1207e9;
    /**
     * [CHAR LIMIT=25] Text shown when there are no services running
     */
    public static final int no_running_services=0x7f1207ea;
    /**
     * Message displayed when there are no active services in a process.
     */
    public static final int no_services=0x7f1207eb;
    /**
     * Message when there are no available trust agents to display
     */
    public static final int no_trust_agents=0x7f1207ec;
    /**
     * String to show in the list of vr listeners, when none is installed
     */
    public static final int no_vr_listeners=0x7f1207ed;
    /**
     * [CHAR_LIMIT=NONE] Label for when app is ignoring battery optimizations
     */
    public static final int not_battery_optimizing=0x7f1207ee;
    /**
     * [CHAR LIMIT=30] Manage applications, text telling using an application is not installed for the current user. The key part is that it's not installed.
     */
    public static final int not_installed=0x7f1207ef;
    /**
     * [CHAR LIMIT=NONE] Content description for per-app notification
     * settings button
     */
    public static final int notification_app_settings_button=0x7f1207f0;
    /**
     * [CHAR LIMIT=NONE BACKUP_MESSAGE_ID:7166470350070693657] App notification settings: Badging option title
     */
    public static final int notification_badge_title=0x7f1207f1;
    /**
     * Configure Notifications: Title for the notification badging option. [CHAR LIMIT=30 BACKUP_MESSAGE_ID=5125022693565388760]
     */
    public static final int notification_badging_title=0x7f1207f2;
    /**
     * [CHAR LIMIT=NONE BACKUP_MESSAGE_ID:7166470350070693657] Channel notification settings: Badging option title
     */
    public static final int notification_channel_badge_title=0x7f1207f3;
    /**
     * [CHAR LIMIT=180] Notification settings: sound
     */
    public static final int notification_channel_sound_title=0x7f1207f4;
    /**
     * [CHAR LIMIT=100] Notification Importance title: normal importance level title
     */
    public static final int notification_channel_summary_default=0x7f1207f5;
    /**
     * [CHAR LIMIT=100] Notification Importance title: high importance level title
     */
    public static final int notification_channel_summary_high=0x7f1207f6;
    /**
     * [CHAR LIMIT=100] Notification Importance title: low importance level title
     */
    public static final int notification_channel_summary_low=0x7f1207f7;
    /**
     * [CHAR LIMIT=100] Notification Importance title: min importance level title
     */
    public static final int notification_channel_summary_min=0x7f1207f8;
    /**
     * [CHAR LIMIT=100] Notification channel title
     */
    public static final int notification_channel_title=0x7f1207f9;
    /**
     * [CHAR LIMIT=NONE] App notification settings: channels title
     */
    public static final int notification_channels=0x7f1207fa;
    /**
     * [CHAR LIMIT=NONE] App notification settings: non-grouped-channels title
     */
    public static final int notification_channels_other=0x7f1207fb;
    /**
     * [CHAR LIMIT=NONE] Channel notification settings: Block option description
     */
    public static final int notification_content_block_summary=0x7f1207fc;
    /**
     * [CHAR LIMIT=NONE] Channel notification settings: Block option title
     */
    public static final int notification_content_block_title=0x7f1207fd;
    /**
     * The divider symbol between different parts of the notification header including spaces. not translatable [CHAR LIMIT=3]
     */
    public static final int notification_header_divider_symbol_with_spaces=0x7f1207fe;
    /**
     * [CHAR LIMIT=100] Notification Importance: blocked importance level description
     */
    public static final int notification_importance_blocked=0x7f1207ff;
    /**
     * [CHAR LIMIT=100] Notification Importance: normal importance level description
     */
    public static final int notification_importance_default=0x7f120800;
    /**
     * [CHAR LIMIT=100] Notification Importance title: normal importance level title
     */
    public static final int notification_importance_default_title=0x7f120801;
    /**
     * [CHAR LIMIT=100] Notification Importance template for the channel importance summary
     */
    public static final int notification_importance_divider=0x7f120802;
    /**
     * [CHAR LIMIT=100] Notification Importance: high importance level description
     */
    public static final int notification_importance_high=0x7f120803;
    /**
     * [CHAR LIMIT=100] Notification Importance: high importance level description,
     * when the user has picked high importance but disabled sound for it
     */
    public static final int notification_importance_high_silent=0x7f120804;
    /**
     * [CHAR LIMIT=100] Notification Importance title: high importance level title
     */
    public static final int notification_importance_high_title=0x7f120805;
    /**
     * [CHAR LIMIT=100] Notification Importance: low importance level description
     */
    public static final int notification_importance_low=0x7f120806;
    /**
     * [CHAR LIMIT=100] Notification Importance title: low importance level title
     */
    public static final int notification_importance_low_title=0x7f120807;
    /**
     * [CHAR LIMIT=100] Notification Importance: min importance level description
     */
    public static final int notification_importance_min=0x7f120808;
    /**
     * [CHAR LIMIT=100] Notification Importance title: min importance level title
     */
    public static final int notification_importance_min_title=0x7f120809;
    /**
     * [CHAR LIMIT=100] Notification importance screen title
     */
    public static final int notification_importance_title=0x7f12080a;
    /**
     * [CHAR LIMIT=100 BACKUP_MESSAGE_ID=1820188704793497324] Notification Importance: unspecified importance level description
     */
    public static final int notification_importance_unspecified=0x7f12080b;
    public static final int notification_listener_disable_warning_cancel=0x7f12080c;
    public static final int notification_listener_disable_warning_confirm=0x7f12080d;
    public static final int notification_listener_disable_warning_summary=0x7f12080e;
    /**
     * Summary for a warning message about security implications of enabling a notification
     * listener, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int notification_listener_security_warning_summary=0x7f12080f;
    /**
     * Title for a warning message about security implications of enabling a notification
     * listener, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int notification_listener_security_warning_title=0x7f120810;
    /**
     * Notification log debug tool: header: notification actions list
     */
    public static final int notification_log_details_actions=0x7f120811;
    /**
     * Notification log debug tool: notification ashmem size
     */
    public static final int notification_log_details_ashmem=0x7f120812;
    /**
     * Notification log debug tool: header: notification importance
     */
    public static final int notification_log_details_badge=0x7f120813;
    /**
     * Notification log debug tool: header: notification contentIntent field
     */
    public static final int notification_log_details_content_intent=0x7f120814;
    /**
     * Notification log debug tool: header: notification contentView
     */
    public static final int notification_log_details_content_view=0x7f120815;
    /**
     * Notification log debug tool: the word 'default'
     */
    public static final int notification_log_details_default=0x7f120816;
    /**
     * Notification log debug tool: header: notification deleteIntent field
     */
    public static final int notification_log_details_delete_intent=0x7f120817;
    /**
     * Notification log debug tool: delimiter between header and field data
     */
    public static final int notification_log_details_delimiter=0x7f120818;
    /**
     * Notification log debug tool: header: notification importance explanation
     */
    public static final int notification_log_details_explanation=0x7f120819;
    /**
     * Notification log debug tool: header: notification extras
     */
    public static final int notification_log_details_extras=0x7f12081a;
    /**
     * Notification log debug tool: header: notification fullScreenIntent field
     */
    public static final int notification_log_details_full_screen_intent=0x7f12081b;
    /**
     * Notification log debug tool: header: notification group
     */
    public static final int notification_log_details_group=0x7f12081c;
    /**
     * Notification log debug tool: header: notification group summary suffix
     */
    public static final int notification_log_details_group_summary=0x7f12081d;
    /**
     * Notification log debug tool: header: notification icon
     */
    public static final int notification_log_details_icon=0x7f12081e;
    /**
     * Notification log debug tool: header: notification importance
     */
    public static final int notification_log_details_importance=0x7f12081f;
    /**
     * Notification log debug tool: header: notification key
     */
    public static final int notification_log_details_key=0x7f120820;
    /**
     * Notification log debug tool: the word 'none'
     */
    public static final int notification_log_details_none=0x7f120821;
    /**
     * Notification log debug tool: header: package name
     */
    public static final int notification_log_details_package=0x7f120822;
    /**
     * Notification log debug tool: header: notification size
     */
    public static final int notification_log_details_parcel=0x7f120823;
    /**
     * Notification log debug tool: header: notification priority
     */
    public static final int notification_log_details_priority=0x7f120824;
    /**
     * Notification log debug tool: header: notification public version
     */
    public static final int notification_log_details_public_version=0x7f120825;
    /**
     * Notification log debug tool: the word 'none'
     */
    public static final int notification_log_details_ranking_none=0x7f120826;
    /**
     * Notification log debug tool: missing ranking information
     */
    public static final int notification_log_details_ranking_null=0x7f120827;
    /**
     * Notification log debug tool: header: notification action remoteinput
     */
    public static final int notification_log_details_remoteinput=0x7f120828;
    /**
     * Notification log debug tool: header: notification sound info
     */
    public static final int notification_log_details_sound=0x7f120829;
    /**
     * Notification log debug tool: header: title
     */
    public static final int notification_log_details_title=0x7f12082a;
    /**
     * Notification log debug tool: header: notification vibration info
     */
    public static final int notification_log_details_vibrate=0x7f12082b;
    /**
     * Notification log debug tool: header: notification visibility
     */
    public static final int notification_log_details_visibility=0x7f12082c;
    /**
     * Notification log debug tool: missing title
     */
    public static final int notification_log_no_title=0x7f12082d;
    public static final int notification_log_title=0x7f12082e;
    /**
     * Configure Notifications: Title for the pulse notification light option. [CHAR LIMIT=30]
     */
    public static final int notification_pulse_title=0x7f12082f;
    /**
     * Sound: Title for the option defining the default notification sound. [CHAR LIMIT=30]
     */
    public static final int notification_ringtone_title=0x7f120830;
    /**
     * [CHAR LIMIT=180] Notification settings: lights
     */
    public static final int notification_show_lights_title=0x7f120831;
    /**
     * Notification sound summary when chosen sound is the system default.
     */
    public static final int notification_sound_default=0x7f120832;
    /**
     * Sound settings screen, setting option title
     */
    public static final int notification_sound_dialog_title=0x7f120833;
    /**
     * Sound settings screen, setting option name
     */
    public static final int notification_sound_title=0x7f120834;
    /**
     * Summary of notification suggestion during optional steps of setup. [CHAR_LIMIT=80]
     */
    public static final int notification_suggestion_summary=0x7f120835;
    /**
     * Title of notification suggestion during optional steps of setup. [CHAR_LIMIT=60]
     */
    public static final int notification_suggestion_title=0x7f120836;
    /**
     * App notification summary channel divider
     */
    public static final int notification_summary_channel=0x7f120837;
    /**
     * App notification summary for advanced controls
     */
    public static final int notification_summary_level=0x7f120838;
    /**
     * Summary of notifications when no apps are blocked [CHAR LIMIT=NONE]
     */
    public static final int notification_summary_none=0x7f120839;
    /**
     * [CHAR LIMIT=NONE] App notification settings: notifications disabled
     */
    public static final int notification_toggle_off=0x7f12083a;
    /**
     * [CHAR LIMIT=NONE] App notification settings: notifications enabled
     */
    public static final int notification_toggle_on=0x7f12083b;
    /**
     * Sound: Sound title for apps that have not provided a title. [CHAR LIMIT=30]
     */
    public static final int notification_unknown_sound_title=0x7f12083c;
    /**
     * [CHAR LIMIT=180] Notification settings: vibration
     */
    public static final int notification_vibrate_title=0x7f12083d;
    /**
     * Sound: Title for the option managing notification volume. [CHAR LIMIT=30]
     */
    public static final int notification_volume_option_title=0x7f12083e;
    /**
     * Sound settings screen, the title of the volume bar to adjust the notification volume
     */
    public static final int notification_volume_title=0x7f12083f;
    /**
     * Label for showing apps with blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int notifications_disabled=0x7f120840;
    /**
     * App notification summary with notifications enabled [CHAR LIMIT=40]
     */
    public static final int notifications_enabled=0x7f120841;
    /**
     * App notification summary with notifications hidden [CHAR LIMIT=40]
     */
    public static final int notifications_hidden=0x7f120842;
    /**
     * Label for notification settings for an specific app [CHAR LIMIT=40]
     */
    public static final int notifications_label=0x7f120843;
    /**
     * Label for showing apps with some blocked notifications in list [CHAR LIMIT=30]
     */
    public static final int notifications_partly_blocked=0x7f120844;
    /**
     * App notification summary with notifications bypassing DND [CHAR LIMIT=40]
     */
    public static final int notifications_priority=0x7f120845;
    /**
     * App notification summary with notifications redacted [CHAR LIMIT=70]
     */
    public static final int notifications_redacted=0x7f120846;
    /**
     * App notification summary with notifications silenced [CHAR LIMIT=40]
     */
    public static final int notifications_silenced=0x7f120847;
    /**
     * App notification summary divider [CHAR LIMIT=40]
     */
    public static final int notifications_summary_divider=0x7f120848;
    /**
     * Notification Settings: Title for an individual app's notification settings. [CHAR LIMIT=30]
     */
    public static final int notifications_title=0x7f120849;
    /**
     * Summary of preference to manage device admin apps, informing the user that currently no device admin apps are installed and active
     */
    public static final int number_of_device_admins_none=0x7f12084a;
    /**
     * Full package name of OEM preferred device feedback reporter [DO NOT TRANSLATE]
     */
    public static final int oem_preferred_feedback_reporter=0x7f12084b;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int oem_radio_info_label=0x7f12084c;
    /**
     * setting Checkbox title whether to enable OEM unlock [CHAR_LIMIT=35]
     */
    public static final int oem_unlock_enable=0x7f12084d;
    /**
     * setting enable OEM unlock Checkbox's summary to explain this Checkbox is disabled because the bootloader has been unlocked [CHAR_LIMIT=60]
     */
    public static final int oem_unlock_enable_disabled_summary_bootloader_unlocked=0x7f12084e;
    /**
     * setting enable OEM unlock Checkbox's summary to explain this Checkbox is disabled because there is no connectivity. [CHAR_LIMIT=60]
     */
    public static final int oem_unlock_enable_disabled_summary_connectivity=0x7f12084f;
    /**
     * setting enable OEM unlock Checkbox's summary to explain this Checkbox is disabled because there is no connectivity or the device is locked by the carrier [CHAR_LIMIT=60]
     */
    public static final int oem_unlock_enable_disabled_summary_connectivity_or_locked=0x7f120850;
    /**
     * setting enable OEM unlock Checkbox's summary to explain this Checkbox is disabled because this setting is unavailable on sim-locked devices. [CHAR_LIMIT=60]
     */
    public static final int oem_unlock_enable_disabled_summary_sim_locked_device=0x7f120851;
    /**
     * setting Checkbox summary whether to enable OEM unlock [CHAR_LIMIT=50]
     */
    public static final int oem_unlock_enable_summary=0x7f120852;
    /**
     * Button label for generic OK action [CHAR LIMIT=20]
     */
    public static final int okay=0x7f120853;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_cacrt=0x7f120854;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_usercrt=0x7f120855;
    /**
     * Item found in the PKCS12 keystore being investigated [CHAR LIMIT=NONE]
     */
    public static final int one_userkey=0x7f120856;
    /**
     * Summary for on-screen keyboard settings
     */
    public static final int onscreen_keyboard_settings_summary=0x7f120857;
    /**
     * Opening string on the dialog that prompts the user to confirm that they really want to delete their existing work profile. The administration app icon and name appear after the final colon. [CHAR LIMIT=NONE]
     */
    public static final int opening_paragraph_delete_profile_unknown_company=0x7f120858;
    /**
     * A summary shown on data usage screens to indicate inaccuracy of data tracking [CHAR LIMIT=NONE]
     */
    public static final int operator_warning=0x7f120859;
    /**
     * Name of the setting to disable the automatic update
     */
    public static final int ota_disable_automatic_update=0x7f12085a;
    /**
     * Other sounds and vibrations preference category: Title for the Other sounds and vibrations preference categories. [CHAR LIMIT=none]
     */
    public static final int other_sound_category_preference_title=0x7f12085b;
    /**
     * Sound: Title for the other sounds option and associated settings page. [CHAR LIMIT=30]
     */
    public static final int other_sound_settings=0x7f12085c;
    /**
     * UI debug setting: simulate secondary display devices using overlays [CHAR LIMIT=25]
     */
    public static final int overlay_display_devices_title=0x7f12085d;
    /**
     * Main settings screen item's title to go into the overlay settings screen [CHAR LIMIT=30]
     */
    public static final int overlay_settings=0x7f12085e;
    /**
     * Hint text shown in owner info edit text [CHAR LIMIT=50]
     */
    public static final int owner_info_settings_edit_text_hint=0x7f12085f;
    /**
     * Description of how many characters are used in owner info [CHAR LIMIT=40]
     */
    public static final int owner_info_settings_status=0x7f120860;
    /**
     * Text shown for summary of owner info setting (if none set) [CHAR LIMIT=40]
     */
    public static final int owner_info_settings_summary=0x7f120861;
    /**
     * Text shown for title of owner info setting [CHAR LIMIT=20]
     */
    public static final int owner_info_settings_title=0x7f120862;
    /**
     * Subtitle for list of packages
     */
    public static final int packages_subtitle=0x7f120863;
    /**
     * Setting tab title for all setting options. [CHAR LIMIT=20]
     */
    public static final int page_tab_title_summary=0x7f120864;
    /**
     * Setting tab title for support setting options. [CHAR LIMIT=25]
     */
    public static final int page_tab_title_support=0x7f120865;
    /**
     * Content for Passpoint network
     */
    public static final int passpoint_content=0x7f120866;
    /**
     * Label for Passpoint network
     */
    public static final int passpoint_label=0x7f120867;
    /**
     * Summary of payment screen [CHAR LIMIT=NONE]
     */
    public static final int payment_summary=0x7f120868;
    /**
     * Manage applications, individual application info screen, heading for settings related to the app's permissions. for example, it may list all the permissions the app has.
     */
    public static final int permissions_label=0x7f120869;
    /**
     * Label for setting which controls whether app can display over other apps [CHAR LIMIT=45]
     */
    public static final int permit_draw_overlay=0x7f12086a;
    /**
     * Label for setting which controls whether app has usage access [CHAR LIMIT=45]
     */
    public static final int permit_usage_access=0x7f12086b;
    /**
     * Label for setting which controls whether app can write system settings [CHAR LIMIT=45]
     */
    public static final int permit_write_settings=0x7f12086c;
    /**
     * Personal data section title
     */
    public static final int personal_data_section_title=0x7f12086d;
    /**
     * Title for personal device admin apps on the list [CHAR_LIMIT=25]
     */
    public static final int personal_device_admin_title=0x7f12086e;
    /**
     * The title of the activity to see phone info
     */
    public static final int phone_info_label=0x7f12086f;
    /**
     * On Text & language settings screen, setting option name. title of the setting to take the user to a screen to select the locale.
     */
    public static final int phone_language=0x7f120870;
    /**
     * On Text & language settings screen, setting option name. summary of the setting to take the user to a screen to select the locale.
     */
    public static final int phone_language_summary=0x7f120871;
    /**
     * Format string for a physical device in the form: InputMethodSubtype - InputMethodEditor.
     * e.g. English (US) - X Keyboard
     */
    public static final int physical_device_title=0x7f120872;
    /**
     * Title for the 'physical keyboard' settings screen. [CHAR LIMIT=35]
     */
    public static final int physical_keyboard_title=0x7f120873;
    /**
     * Name of feature to change color setting for the display [CHAR LIMIT=60]
     */
    public static final int picture_color_mode=0x7f120874;
    /**
     * Description of feature to change color setting for the display [CHAR LIMIT=NONE]
     */
    public static final int picture_color_mode_desc=0x7f120875;
    /**
     * Apps > App Details > Picture-in-picture > Description. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_app_detail_summary=0x7f120876;
    /**
     * Apps > App Details > Picture-in-picture > Switch title. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_app_detail_switch=0x7f120877;
    /**
     * Apps > App Details > Advanced section string title. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_app_detail_title=0x7f120878;
    /**
     * Special access > Picture-in-picture > Text to display when the list is empty. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_empty_text=0x7f120879;
    /**
     * Special access > Picture-in-picture > Additional keywords to search for. [CHAR LIMIT=NONE]
     */
    public static final int picture_in_picture_keywords=0x7f12087a;
    /**
     * Special access > Title for managing Picture-in-picture settings. [CHAR LIMIT=50]
     */
    public static final int picture_in_picture_title=0x7f12087b;
    /**
     * Instructions telling the user that the operation to unlock the keyguard with SIM PIN failed. Displayed in one line in a large font.  [CHAR LIMIT=40]
     */
    public static final int pin_failed=0x7f12087c;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int ping_test_label=0x7f12087d;
    /**
     * Label for the phase2
     */
    public static final int please_select_phase2=0x7f12087e;
    /**
     * UI debug setting: show pointer location? [CHAR LIMIT=25]
     */
    public static final int pointer_location=0x7f12087f;
    /**
     * UI debug setting: show pointer location summary [CHAR LIMIT=50]
     */
    public static final int pointer_location_summary=0x7f120880;
    /**
     * On Languages & input settings screen, setting summary.  Setting for mouse pointer speed. [CHAR LIMIT=35]
     */
    public static final int pointer_speed=0x7f120881;
    /**
     * Label for power consumed by apps [CHAR LIMIT=30]
     */
    public static final int power_apps=0x7f120882;
    /**
     * Label for power consumed by Bluetooth
     */
    public static final int power_bluetooth=0x7f120883;
    /**
     * Label for power consumed by the camera
     */
    public static final int power_camera=0x7f120884;
    /**
     * Label for power consumed by Mobile network idle
     */
    public static final int power_cell=0x7f120885;
    /**
     * Display time remaining until battery is charged [CHAR_LIMIT=60]
     */
    public static final int power_charge_remaining=0x7f120886;
    /**
     * [CHAR_LIMIT=40] Label for battery level chart when charging
     */
    public static final int power_charging=0x7f120887;
    /**
     * [CHAR_LIMIT=40] Label for battery level chart when charging with duration
     */
    public static final int power_charging_duration=0x7f120888;
    /**
     * Display time remaining until battery is discharged [CHAR_LIMIT=60]
     */
    public static final int power_discharge_remaining=0x7f120889;
    /**
     * [CHAR_LIMIT=40] Label for battery level chart when discharging with duration
     */
    public static final int power_discharging_duration=0x7f12088a;
    /**
     * [CHAR_LIMIT=60] Label for battery level chart when discharging with duration and using enhanced estimate
     */
    public static final int power_discharging_duration_enhanced=0x7f12088b;
    /**
     * [CHAR_LIMIT=40] Label for battery level chart when discharging with duration
     */
    public static final int power_discharging_duration_short=0x7f12088c;
    /**
     * Label for power consumed by the flashlight
     */
    public static final int power_flashlight=0x7f12088d;
    /**
     * Title for high usage item, which means power high usage [CHAR LIMIT=30]
     */
    public static final int power_high_usage_title=0x7f12088e;
    /**
     * Label for power consumed when Idle
     */
    public static final int power_idle=0x7f12088f;
    /**
     * Label for time since last full charge in power use UI, i.e. "7 h 20 min ago". Note: ^1 should be used in all translations [CHAR_LIMIT=60]
     */
    public static final int power_last_full_charge_summary=0x7f120890;
    /**
     * Label for power that we computed too much for
     */
    public static final int power_overcounted=0x7f120891;
    /**
     * Label for power consumed by Calling
     */
    public static final int power_phone=0x7f120892;
    /**
     * [CHAR_LIMIT=40] Label for estimated remaining duration of battery charging
     */
    public static final int power_remaining_charging_duration_only=0x7f120893;
    /**
     * [CHAR_LIMIT=40] Label for estimated remaining duration of battery discharging
     */
    public static final int power_remaining_duration_only=0x7f120894;
    /**
     * [CHAR_LIMIT=60] Label for estimated remaining duration of battery discharging
     */
    public static final int power_remaining_duration_only_enhanced=0x7f120895;
    /**
     * [CHAR_LIMIT=40] Short label for estimated remaining duration of battery charging/discharging
     */
    public static final int power_remaining_duration_only_short=0x7f120896;
    /**
     * [CHAR_LIMIT=60] Short label for estimated remaining duration of battery charging/discharging
     */
    public static final int power_remaining_duration_only_short_enhanced=0x7f120897;
    /**
     * Label for power consumed by the screen
     */
    public static final int power_screen=0x7f120898;
    /**
     * Label for power consumed by services [CHAR LIMIT=30]
     */
    public static final int power_service=0x7f120899;
    /**
     * Label for power consumed by system [CHAR LIMIT=30]
     */
    public static final int power_system=0x7f12089a;
    /**
     * Label for power that we aren't able to account for
     */
    public static final int power_unaccounted=0x7f12089b;
    /**
     * Display the battery level and status [CHAR_LIMIT=60]
     */
    public static final int power_usage_level_and_status=0x7f12089c;
    /**
     * Label for list of apps using battery in power use UI. Note: ^1 should be used in all translations[CHAR_LIMIT=120]
     */
    public static final int power_usage_list_summary=0x7f12089d;
    /**
     * Label for device components using battery in power use UI. Note: ^1 should be used in all translations[CHAR_LIMIT=120]
     */
    public static final int power_usage_list_summary_device=0x7f12089e;
    /**
     * Message to show when battery usage data is not available [CHAR LIMIT=30]
     */
    public static final int power_usage_not_available=0x7f12089f;
    /**
     * Activity title summary for App Fuel Gauge summary
     */
    public static final int power_usage_summary=0x7f1208a0;
    /**
     * Activity title for App Fuel Gauge summary
     */
    public static final int power_usage_summary_title=0x7f1208a1;
    /**
     * Label for power consumed by user [CHAR LIMIT=30]
     */
    public static final int power_user=0x7f1208a2;
    /**
     * Label for power consumed by Wi-Fi
     */
    public static final int power_wifi=0x7f1208a3;
    /**
     * Title for the language selection screen [CHAR LIMIT=25]
     */
    public static final int pref_title_lang_selection=0x7f1208a4;
    /**
     * Preference item that lets the user change password
     */
    public static final int preference_change_password_title=0x7f1208a5;
    /**
     * Summary text separator for preferences including a short description (eg. "Fast / Connected").
     */
    public static final int preference_summary_default_combination=0x7f1208a6;
    /**
     * Preferred Network offload Footer.  [CHAR LIMIT=100]
     */
    public static final int preferred_network_offload_footer=0x7f1208a7;
    /**
     * Preferred Network offload Header.  [CHAR LIMIT=25]
     */
    public static final int preferred_network_offload_header=0x7f1208a8;
    /**
     * Preferred Network offload Popup.  [CHAR LIMIT=100]
     */
    public static final int preferred_network_offload_popup=0x7f1208a9;
    /**
     * Preferred Network offload title.  [CHAR LIMIT=25]
     */
    public static final int preferred_network_offload_title=0x7f1208aa;
    /**
     * Preferred network type summary.  [CHAR LIMIT=100]
     */
    public static final int preferred_network_type_summary=0x7f1208ab;
    /**
     * Preferred network type title.  [CHAR LIMIT=50]
     */
    public static final int preferred_network_type_title=0x7f1208ac;
    /**
     * Title of screen controlling which apps have access to send premium SMS messages [CHAR LIMIT=60]
     */
    public static final int premium_sms_access=0x7f1208ad;
    /**
     * Message shown when there are no premium SMS apps [CHAR LIMIT=NONE]
     */
    public static final int premium_sms_none=0x7f1208ae;
    /**
     * Warning message shown between options to enable Premium SMS for an app [CHAR LIMIT=NONE]
     */
    public static final int premium_sms_warning=0x7f1208af;
    /**
     * Content description for dot pager indicator for preview pager. [CHAR LIMIT=NONE]
     */
    public static final int preview_page_indicator_content_description=0x7f1208b0;
    /**
     * Content description for preview pager. [CHAR LIMIT=NONE]
     */
    public static final int preview_pager_content_description=0x7f1208b1;
    /**
     * Template for the label of the state for a blocked print job. [CHAR LIMIT=25]
     */
    public static final int print_blocked_state_title_template=0x7f1208b2;
    /**
     * Title for the button to cancel a print job. [CHAR LIMIT=25]
     */
    public static final int print_cancel=0x7f1208b3;
    /**
     * Template for the label for a cancelling print job. [CHAR LIMIT=25]
     */
    public static final int print_cancelling_state_title_template=0x7f1208b4;
    /**
     * Template for the label of the state for a failed print job. [CHAR LIMIT=25]
     */
    public static final int print_failed_state_title_template=0x7f1208b5;
    /**
     * Summary for the disabled state of a print feature. [CHAR LIMIT=10]
     */
    public static final int print_feature_state_off=0x7f1208b6;
    /**
     * Summary for the enabled state of a print feature. [CHAR LIMIT=10]
     */
    public static final int print_feature_state_on=0x7f1208b7;
    /**
     * Template for the summary of a print job. [CHAR LIMIT=25]
     */
    public static final int print_job_summary=0x7f1208b8;
    /**
     * Title of the action bar button to got to add a printer. [CHAR LIMIT=25]
     */
    public static final int print_menu_item_add_printer=0x7f1208b9;
    /**
     * Title for print menu item to launch the add printers activity. [CHAR LIMIT=25]
     */
    public static final int print_menu_item_add_printers=0x7f1208ba;
    /**
     * Title of the action bar button to got to Play Store to download a print service. [CHAR LIMIT=25]
     */
    public static final int print_menu_item_add_service=0x7f1208bb;
    /**
     * Title for the search action bar menu item. [CHAR LIMIT=20]
     */
    public static final int print_menu_item_search=0x7f1208bc;
    /**
     * Title for print menu item to launch a settings activity. [CHAR LIMIT=25]
     */
    public static final int print_menu_item_settings=0x7f1208bd;
    /**
     * Title for the prompt shown as a placeholder if no printers are found while searching. [CHAR LIMIT=50]
     */
    public static final int print_no_printers_found=0x7f1208be;
    /**
     * Title for the prompt shown as a placeholder if no print services are installed. [CHAR LIMIT=50]
     */
    public static final int print_no_services_installed=0x7f1208bf;
    /**
     * Title for the print job settings screen. [CHAR LIMIT=25]
     */
    public static final int print_print_job=0x7f1208c0;
    /**
     * Title for the menu item to open the print jobs screen. [CHAR LIMIT=25]
     */
    public static final int print_print_jobs=0x7f1208c1;
    /**
     * Template for the label of the state for a ongoing print job. [CHAR LIMIT=25]
     */
    public static final int print_printing_state_title_template=0x7f1208c2;
    /**
     * Title for the button to restart a print job. [CHAR LIMIT=25]
     */
    public static final int print_restart=0x7f1208c3;
    /**
     * Utterance to announce that the search box is hidden. This is spoken to a blind user. [CHAR LIMIT=none]
     */
    public static final int print_search_box_hidden_utterance=0x7f1208c4;
    /**
     * Utterance to announce that the search box is shown. This is spoken to a blind user. [CHAR LIMIT=none]
     */
    public static final int print_search_box_shown_utterance=0x7f1208c5;
    /**
     * Title for the prompt if no printers are available and the system is searching for such. [CHAR LIMIT=50]
     */
    public static final int print_searching_for_printers=0x7f1208c6;
    /**
     * Title for the prompt if no printers are available because the print service is disabled. [CHAR LIMIT=50]
     */
    public static final int print_service_disabled=0x7f1208c7;
    /**
     * Title in main settings screen for printing settings [CHAR LIMIT=15]
     */
    public static final int print_settings=0x7f1208c8;
    /**
     * Print setting summary in settings screen [CHAR LIMIT=50]
     */
    public static final int print_settings_summary_no_service=0x7f1208c9;
    /**
     * Title for print service settings screen [CHAR LIMIT=25]
     */
    public static final int print_settings_title=0x7f1208ca;
    /**
     * Description of printer info icon. [CHAR LIMIT=50]
     */
    public static final int printer_info_desc=0x7f1208cb;
    /**
     * Backup and reset settings menu and activity title
     */
    public static final int privacy_settings_title=0x7f1208cc;
    /**
     * Label for dex2oat process in battery usage used for the optimization of one or more apps
     */
    public static final int process_dex2oat_label=0x7f1208cd;
    /**
     * Label for process [CHAR LIMIT=25]
     */
    public static final int process_format=0x7f1208ce;
    /**
     * Label for kernel threads in battery usage
     */
    public static final int process_kernel_label=0x7f1208cf;
    /**
     * Label for mediaserver process in battery usage
     */
    public static final int process_mediaserver_label=0x7f1208d0;
    /**
     * Message that a process's provider is in use.
     */
    public static final int process_provider_in_use_description=0x7f1208d1;
    /**
     * Message that a process's service is in use.
     */
    public static final int process_service_in_use_description=0x7f1208d2;
    /**
     * [CHAR LIMIT=NONE] Label for item showing details of average RAM use
     */
    public static final int process_stats_bg_ram_use=0x7f1208d3;
    /**
     * [CHAR LIMIT=NONE] Name of OS "process" for base memory needed for caches
     */
    public static final int process_stats_os_cache=0x7f1208d4;
    /**
     * [CHAR LIMIT=NONE] Name of OS "process" for all kernel memory
     */
    public static final int process_stats_os_kernel=0x7f1208d5;
    /**
     * [CHAR LIMIT=NONE] Label OS "process" app
     */
    public static final int process_stats_os_label=0x7f1208d6;
    /**
     * [CHAR LIMIT=NONE] Name of OS "process" for all native processes
     */
    public static final int process_stats_os_native=0x7f1208d7;
    /**
     * [CHAR LIMIT=NONE] Name of OS "process" for all zram memory
     */
    public static final int process_stats_os_zram=0x7f1208d8;
    /**
     * [CHAR LIMIT=NONE] Label for item showing details of average RAM use
     */
    public static final int process_stats_ram_use=0x7f1208d9;
    /**
     * [CHAR LIMIT=NONE] Label for item showing percent of time spent running
     */
    public static final int process_stats_run_time=0x7f1208da;
    /**
     * [CHAR LIMIT=NONE] Activity title summary for Process Stats summary
     */
    public static final int process_stats_summary=0x7f1208db;
    /**
     * [CHAR LIMIT=NONE] Activity title for Process Stats summary
     */
    public static final int process_stats_summary_title=0x7f1208dc;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over;
     * timeDuration is a duration such as "1h 30m"
     */
    public static final int process_stats_total_duration=0x7f1208dd;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over;
     * timeDuration is a duration such as "1h 30m"
     */
    public static final int process_stats_total_duration_percentage=0x7f1208de;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, text for stats type
     */
    public static final int process_stats_type_background=0x7f1208df;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, text for stats type
     */
    public static final int process_stats_type_cached=0x7f1208e0;
    /**
     * [CHAR LIMIT=NONE] Label for process stats, text for stats type
     */
    public static final int process_stats_type_foreground=0x7f1208e1;
    /**
     * [CHAR LIMIT=NONE] Subtitle for process stats processes list
     */
    public static final int processes_subtitle=0x7f1208e2;
    /**
     * Text shown for title of profile info setting [CHAR LIMIT=20]
     */
    public static final int profile_info_settings_title=0x7f1208e3;
    /**
     * Title for screen to set a profile owner [CHAR LIMIT=40]
     */
    public static final int profile_owner_add_title=0x7f1208e4;
    /**
     * Configure Notifications: Work profile section header [CHAR LIMIT=30]
     */
    public static final int profile_section_header=0x7f1208e5;
    /**
     * Bluetooth settings screen, text that appears in heading bar when scanning for devices
     */
    public static final int progress_scanning=0x7f1208e6;
    /**
     * What to show in messaging that refers to this provider, e.g. AccountSyncSettings
     */
    public static final int provider_label=0x7f1208e7;
    /**
     * HTTP proxy settings. The button to save.
     */
    public static final int proxy_action_text=0x7f1208e8;
    /**
     * HTTP proxy settings. Button to clear the proxy box.
     */
    public static final int proxy_clear_text=0x7f1208e9;
    /**
     * HTTP proxy settings. The button to restore the defaults.
     */
    public static final int proxy_defaultView_text=0x7f1208ea;
    /**
     * HTTP proxy settings. Title if there is an error
     */
    public static final int proxy_error=0x7f1208eb;
    /**
     * HTTP proxy settings. Button to get rid of error box
     */
    public static final int proxy_error_dismiss=0x7f1208ec;
    /**
     * HTTP proxy settings. Error msg
     */
    public static final int proxy_error_empty_host_set_port=0x7f1208ed;
    /**
     * HTTP proxy settings. Error msg
     */
    public static final int proxy_error_empty_port=0x7f1208ee;
    /**
     * HTTP proxy settings. The error if the exclusion list is not valid
     */
    public static final int proxy_error_invalid_exclusion_list=0x7f1208ef;
    /**
     * HTTP proxy settings. The error if the hostname is not valid
     */
    public static final int proxy_error_invalid_host=0x7f1208f0;
    /**
     * HTTP proxy settings. Error msg
     */
    public static final int proxy_error_invalid_port=0x7f1208f1;
    /**
     * HTTP proxy settings. The hint text for proxy exclusion list.
     */
    public static final int proxy_exclusionlist_hint=0x7f1208f2;
    /**
     * HTTP proxy settings. The exclusion list label.
     */
    public static final int proxy_exclusionlist_label=0x7f1208f3;
    /**
     * HTTP proxy settings. The hint text field for the hostname.
     */
    public static final int proxy_hostname_hint=0x7f1208f4;
    /**
     * HTTP proxy settings. The text field for the hostname
     */
    public static final int proxy_hostname_label=0x7f1208f5;
    /**
     * HTTP proxy settings. The hint text field for port.
     */
    public static final int proxy_port_hint=0x7f1208f6;
    /**
     * HTTP proxy settings. The port number label.
     */
    public static final int proxy_port_label=0x7f1208f7;
    /**
     * The title of the activity to adjust proxy settings
     */
    public static final int proxy_settings_label=0x7f1208f8;
    /**
     * HTTP proxy settings title
     */
    public static final int proxy_settings_title=0x7f1208f9;
    /**
     * HTTP proxy settings. Hint for Proxy-Auto Config URL.
     */
    public static final int proxy_url_hint=0x7f1208fa;
    /**
     * HTTP proxy settings. Title for Proxy-Auto Config URL.  [CHAR LIMIT=25]
     */
    public static final int proxy_url_title=0x7f1208fb;
    /**
     * HTTP proxy settings. Warning message about limited application support [CHAR LIMIT=100]
     */
    public static final int proxy_warning_limited_support=0x7f1208fc;
    /**
     * Text used as a search hint into the search box
     */
    public static final int query_hint_text=0x7f1208fd;
    /**
     * [CHAR LIMIT=60] Name of dev option to enable extra quick settings tiles
     */
    public static final int quick_settings_developer_tiles=0x7f1208fe;
    /**
     * Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_cid=0x7f1208ff;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_connected=0x7f120900;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_connecting=0x7f120901;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_disconnected=0x7f120902;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_data_suspended=0x7f120903;
    /**
     * Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_display_asu=0x7f120904;
    /**
     * Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_display_bytes=0x7f120905;
    /**
     * Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_display_dbm=0x7f120906;
    /**
     * Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_display_packets=0x7f120907;
    /**
     * Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_lac=0x7f120908;
    /**
     * Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_menu_getIMS=0x7f120909;
    /**
     * Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_menu_viewADN=0x7f12090a;
    /**
     * Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_menu_viewFDN=0x7f12090b;
    /**
     * Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_menu_viewSDN=0x7f12090c;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_phone_idle=0x7f12090d;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_phone_offhook=0x7f12090e;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_phone_ringing=0x7f12090f;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_roaming_in=0x7f120910;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_roaming_not=0x7f120911;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_emergency=0x7f120912;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_in=0x7f120913;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_off=0x7f120914;
    /**
     * Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_service_out=0x7f120915;
    /**
     * Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radioInfo_unknown=0x7f120916;
    /**
     * Main Settings screen settings summary text for the "Wireless controls" setting
     */
    public static final int radio_controls_summary=0x7f120917;
    /**
     * Main Settings screen settings title for things like airplane mode, tethering, NFC, VPN.  This will take you to another screen with those settings.  [CHAR LIMIT=30]
     */
    public static final int radio_controls_title=0x7f120918;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_band_mode_label=0x7f120919;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_call_redirect_label=0x7f12091a;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_call_status_label=0x7f12091b;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_cell_info_refresh_rate=0x7f12091c;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_cellinfo_label=0x7f12091d;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_current_network_label=0x7f12091e;
    /**
     * Data Connection Disable. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int radio_info_data_connection_disable=0x7f12091f;
    /**
     * Data Connection Enable. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int radio_info_data_connection_enable=0x7f120920;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_data_network_type_label=0x7f120921;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_dcrtinfo_label=0x7f120922;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_gprs_service_label=0x7f120923;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_gsm_service_label=0x7f120924;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_http_client_test=0x7f120925;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_imei_label=0x7f120926;
    /**
     * Phone Info screen. Ims Feature Status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_feature_status_available=0x7f120927;
    /**
     * Phone Info screen. Ims Feature status label.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_feature_status_unavailable=0x7f120928;
    /**
     * Phone Info screen. IMS Registration.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_reg_status=0x7f120929;
    /**
     * Phone Info screen. Ims Status - Unregistered.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_reg_status_not_registered=0x7f12092a;
    /**
     * Phone Info screen. IMS Status - Registered.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_reg_status_registered=0x7f12092b;
    /**
     * Phone Info screen. IMS Registration Title.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ims_reg_status_title=0x7f12092c;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, DO NOT TRANSLATE.
     */
    public static final int radio_info_imsi_label=0x7f12092d;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_message_waiting_label=0x7f12092e;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_neighboring_location_label=0x7f12092f;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_phone_number_label=0x7f120930;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ping_hostname_v4=0x7f120931;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ping_hostname_v6=0x7f120932;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ppp_received_label=0x7f120933;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ppp_resets_label=0x7f120934;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_ppp_sent_label=0x7f120935;
    /**
     * Title for controlling on/off for Mobile phone's radio power. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int radio_info_radio_power=0x7f120936;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_roaming_label=0x7f120937;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_set_perferred_label=0x7f120938;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_signal_location_label=0x7f120939;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_signal_strength_label=0x7f12093a;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_smsc_label=0x7f12093b;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_smsc_refresh_label=0x7f12093c;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_smsc_update_label=0x7f12093d;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_toggle_dns_check_label=0x7f12093e;
    /**
     * Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed
     */
    public static final int radio_info_voice_network_type_label=0x7f12093f;
    /**
     * Description of app rarely running [CHAR LIMIT=45]
     */
    public static final int rarely_running=0x7f120940;
    /**
     * Remove account message in dialog [CHAR LIMIT=NONE]
     */
    public static final int really_remove_account_message=0x7f120941;
    /**
     * Title of remove message for remove account dialog
     */
    public static final int really_remove_account_title=0x7f120942;
    /**
     * Category title listing recently used apps [CHAR_LIMIT=50]
     */
    public static final int recent_app_category_title=0x7f120943;
    /**
     * Preference summary for each recently used app, which is the time since last used, i.e. "7 h 20 min ago". Note: ^1 should be used in all translations [CHAR_LIMIT=60]
     */
    public static final int recent_app_summary=0x7f120944;
    /**
     * Manage app screen, shown when the activity is busy recomputing the size of each app
     */
    public static final int recompute_size=0x7f120945;
    /**
     * Text to display in regulatory info screen (from device overlay).
     */
    public static final int regulatory_info_text=0x7f120946;
    /**
     * About phone settings screen, setting option name to show regulatory labels [CHAR LIMIT=25]
     */
    public static final int regulatory_labels=0x7f120947;
    /**
     * Label for length of time until battery is charged [CHAR LIMIT=20]
     */
    public static final int remaining_length_format=0x7f120948;
    /**
     * This is shown if the autheticator for a given account fails to remove it. [CHAR LIMIT=NONE]
     */
    public static final int remove_account_failed=0x7f120949;
    /**
     * Button label to remove current account
     */
    public static final int remove_account_label=0x7f12094a;
    /**
     * Label for button to deactivate and uninstall the device admin app [CHAR_LIMIT=50]
     */
    public static final int remove_and_uninstall_device_admin=0x7f12094b;
    /**
     * Label for button to remove the active device admin app [CHAR LIMIT=80]
     */
    public static final int remove_device_admin=0x7f12094c;
    /**
     * Button label to remove the work profile [CHAR LIMIT=35]
     */
    public static final int remove_managed_profile_label=0x7f12094d;
    /**
     * repeat title.  Allows the user to set how oftem to repeat alert reminders.
     * For example, they may have alerts just once or every 2 or 15 minutes.  [CHAR LIMIT=30]
     */
    public static final int repeat_title=0x7f12094e;
    /**
     * [CHAR LIMIT=NONE] Manage applications screen, menu item.  Reset all of user's app preferences.
     */
    public static final int reset_app_preferences=0x7f12094f;
    /**
     * [CHAR LIMIT=25] Manage applications screen, menu item.  Confirmation button of dialog to confirm resetting user's app preferences.
     */
    public static final int reset_app_preferences_button=0x7f120950;
    /**
     * [CHAR LIMIT=NONE] Manage applications screen, menu item.  Body of dialog to confirm resetting user's app preferences.
     */
    public static final int reset_app_preferences_desc=0x7f120951;
    /**
     * [CHAR LIMIT=NONE] Manage applications screen, menu item.  Title of dialog to confirm resetting user's app preferences.
     */
    public static final int reset_app_preferences_title=0x7f120952;
    /**
     * Summary text for a screen containing all device reset options [CHAR LIMIT=None]
     */
    public static final int reset_dashboard_summary=0x7f120953;
    /**
     * Title for a screen containing all device reset options [CHAR LIMIT=50]
     */
    public static final int reset_dashboard_title=0x7f120954;
    /**
     * SD card & phone storage settings screen, button on screen after user selects Reset network settings
     */
    public static final int reset_network_button_text=0x7f120955;
    /**
     * Reset settings complete toast text [CHAR LIMIT=75]
     */
    public static final int reset_network_complete_toast=0x7f120956;
    /**
     * Reset settings confirmation screen title [CHAR LIMIT=30]
     */
    public static final int reset_network_confirm_title=0x7f120957;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Reset network settings [CHAR LIMIT=NONE]
     */
    public static final int reset_network_desc=0x7f120958;
    /**
     * SD card & phone storage settings screen, button on screen after user selects Reset settings button
     */
    public static final int reset_network_final_button_text=0x7f120959;
    /**
     * SD card & phone storage settings screen, message on screen after user selects Reset settings button
     */
    public static final int reset_network_final_desc=0x7f12095a;
    /**
     * Button title to reset Wi-Fi settings, Mobile data setting, bluetooth settings
     */
    public static final int reset_network_title=0x7f12095b;
    /**
     * Reset rate-limiting in the system service ShortcutManager.  "ShortcutManager" is the name of a system service and not translatable.
     * If the word "rate-limit" is hard to translate, use "Reset ShortcutManager API call limit" as the source text, which means
     * the same thing in this context.
     * [CHAR_LIMIT=none]
     */
    public static final int reset_shortcut_manager_throttling=0x7f12095c;
    /**
     * Toast message shown when "Reset ShortcutManager rate-limiting" has been performed. [CHAR_LIMIT=none]
     */
    public static final int reset_shortcut_manager_throttling_complete=0x7f12095d;
    /**
     * The message of dialog indicated restoring default APN settings in progress
     */
    public static final int restore_default_apn=0x7f12095e;
    /**
     * APNs screen toast message to inform reset default APN settings is completed
     */
    public static final int restore_default_apn_completed=0x7f12095f;
    /**
     * PIN entry dialog title for entering the administrator PIN [CHAR LIMIT=none]
     */
    public static final int restr_pin_enter_admin_pin=0x7f120960;
    /**
     * Description of message shown when app is blacklisted for background data access [CHAR LIMIT=NONE]
     */
    public static final int restrict_background_blacklisted=0x7f120961;
    /**
     * Restrictions summary for changing bluetooth configuration [CHAR LIMIT=100]
     */
    public static final int restriction_bluetooth_config_summary=0x7f120962;
    /**
     * Restrictions title for changing bluetooth configuration [CHAR LIMIT=35]
     */
    public static final int restriction_bluetooth_config_title=0x7f120963;
    /**
     * Restrictions summary for allowing location sharing [CHAR LIMIT=100]
     */
    public static final int restriction_location_enable_summary=0x7f120964;
    /**
     * Restrictions title for allowing location sharing [CHAR LIMIT=35]
     */
    public static final int restriction_location_enable_title=0x7f120965;
    /**
     * Restrictions screen - menu label to change restrictions pin [CHAR LIMIT=25]
     */
    public static final int restriction_menu_change_pin=0x7f120966;
    /**
     * Restrictions screen - reset menu to reset to unrestricted [CHAR LIMIT=25]
     */
    public static final int restriction_menu_reset=0x7f120967;
    /**
     * Restrictions summary for allowing NFC transfers (phone) [CHAR LIMIT=100]
     */
    public static final int restriction_nfc_enable_summary=0x7f120968;
    /**
     * Restrictions summary for allowing NFC transfers (tablet) [CHAR LIMIT=100]
     */
    public static final int restriction_nfc_enable_summary_config=0x7f120969;
    /**
     * Restrictions title for allowing NFC transfers [CHAR LIMIT=35]
     */
    public static final int restriction_nfc_enable_title=0x7f12096a;
    /**
     * Restriction settings title [CHAR LIMIT=35]
     */
    public static final int restriction_settings_title=0x7f12096b;
    /**
     * Restrictions summary for configuring wifi and mobile [CHAR LIMIT=100]
     */
    public static final int restriction_wifi_config_summary=0x7f12096c;
    /**
     * Restrictions title for configuring wifi and mobile [CHAR LIMIT=35]
     */
    public static final int restriction_wifi_config_title=0x7f12096d;
    /**
     * Label for carrier demo mode factory reset confirmation dialog. [CHAR LIMIT=NONE]
     */
    public static final int retail_demo_reset_message=0x7f12096e;
    /**
     * Label for positive button on carrier demo  mode factory reset confirmation dialog [CHAR LIMIT=40]
     */
    public static final int retail_demo_reset_next=0x7f12096f;
    /**
     * Title for carrier demo mode factory reset confirmation dialog. [CHAR LIMIT=40]
     */
    public static final int retail_demo_reset_title=0x7f120970;
    /**
     * Sound: Title for the option managing ring volume. [CHAR LIMIT=30]
     */
    public static final int ring_volume_option_title=0x7f120971;
    /**
     * Sound settings screen, setting option name
     */
    public static final int ring_volume_title=0x7f120972;
    /**
     * Sound: Title for the option defining the phone ringtone. [CHAR LIMIT=30]
     */
    public static final int ringtone_title=0x7f120973;
    /**
     * Ringtones preference category: Title for the Ringotnes preference categories. [CHAR LIMIT=none]
     */
    public static final int ringtones_category_preference_title=0x7f120974;
    /**
     * Sound installation: Message for the dialog to confirm that a new sound will be installed to the Ringtones, Notifications, or Alarms folder. [CHAR LIMIT=none]
     */
    public static final int ringtones_install_custom_sound_content=0x7f120975;
    /**
     * Sound installation: Title for the dialog to confirm that a new sound will be installed to the Ringtones, Notifications, or Alarms folder. [CHAR LIMIT=50]
     */
    public static final int ringtones_install_custom_sound_title=0x7f120976;
    /**
     * mobile network settings screen, setting check box title
     */
    public static final int roaming=0x7f120977;
    /**
     * mobile network settings screen, setting option summary text when check box is clear
     */
    public static final int roaming_disable=0x7f120978;
    /**
     * mobile network settings screen, setting option summary text when check box is selected
     */
    public static final int roaming_enable=0x7f120979;
    /**
     * mobile network settings screen, dialog message when you are roaming and clear the "Data roaming" check box
     */
    public static final int roaming_reenable_message=0x7f12097a;
    /**
     * mobile network settings screen, title of dialog box that appears when you select the "Data roaming" check box
     */
    public static final int roaming_reenable_title=0x7f12097b;
    /**
     * mobile network settings screen, button on dialog box that appears when you are roaming and clear the "Data roaming" check box
     */
    public static final int roaming_turn_it_on_button=0x7f12097c;
    /**
     * mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box
     */
    public static final int roaming_warning=0x7f12097d;
    /**
     * mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box. This is for multiuser phones [CHAR LIMIT=none]
     */
    public static final int roaming_warning_multiuser=0x7f12097e;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int rssi_label=0x7f12097f;
    /**
     * Label for frequency that the app is runnig (e.g. always, sometimes, etc.) [CHAR LIMIT=25]
     */
    public static final int running_frequency=0x7f120980;
    /**
     * [CHAR LIMIT=NONE] Label of a running process that represents a removed
     */
    public static final int running_process_item_removed_user_label=0x7f120981;
    /**
     * [CHAR LIMIT=NONE] Label of a running process that represents another user
     */
    public static final int running_process_item_user_label=0x7f120982;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
     * used by apps.
     */
    public static final int running_processes_header_apps_prefix=0x7f120983;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing portion
     * of free RAM that is used by cached apps.
     */
    public static final int running_processes_header_cached_prefix=0x7f120984;
    /**
     * [CHAR LIMIT=NONE] Bottom test of the header leading in to the running
     * processes/services list.
     */
    public static final int running_processes_header_footer=0x7f120985;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
     * that is free.
     */
    public static final int running_processes_header_free_prefix=0x7f120986;
    /**
     * [CHAR_LIMIT=20] Running processes/services header: formatter for RAM use amount.
     */
    public static final int running_processes_header_ram=0x7f120987;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
     * used by system.
     */
    public static final int running_processes_header_system_prefix=0x7f120988;
    /**
     * [CHAR LIMIT=NONE] Top title of the header of the running processes/services list.
     */
    public static final int running_processes_header_title=0x7f120989;
    /**
     * [CHAR LIMIT=20] Running processes/services header: prefix for line showing total RAM
     * used by everything.
     */
    public static final int running_processes_header_used_prefix=0x7f12098a;
    /**
     * Descriptive text of a running process: plural process, plural service.
     */
    public static final int running_processes_item_description_p_p=0x7f12098b;
    /**
     * Descriptive text of a running process: plural process, singular service.
     */
    public static final int running_processes_item_description_p_s=0x7f12098c;
    /**
     * Descriptive text of a running process: singular process, plural service.
     */
    public static final int running_processes_item_description_s_p=0x7f12098d;
    /**
     * Descriptive text of a running process: singular process, singular service.
     */
    public static final int running_processes_item_description_s_s=0x7f12098e;
    /**
     * Title for list of services.
     */
    public static final int runningservicedetails_processes_title=0x7f12098f;
    /**
     * Title for list of services.
     */
    public static final int runningservicedetails_services_title=0x7f120990;
    /**
     * Details about an application's running services.
     */
    public static final int runningservicedetails_settings_title=0x7f120991;
    /**
     * Running service details, stop confirmation descriptive text. Displays when user selects selects to stop a system service.
     */
    public static final int runningservicedetails_stop_dlg_text=0x7f120992;
    /**
     * Running service details, stop confirmation dialog title. Displays when user selects selects to stop a system service.
     */
    public static final int runningservicedetails_stop_dlg_title=0x7f120993;
    /**
     * Services settings screen, setting option summary for the user to go to the screen to view running services
     */
    public static final int runningservices_settings_summary=0x7f120994;
    /**
     * Services settings screen, setting option name for the user to go to the screen to view running services
     */
    public static final int runningservices_settings_title=0x7f120995;
    /**
     * Runtime permissions preference summary, shown when the app has no permissions granted. [CHAR LIMIT=40]
     */
    public static final int runtime_permissions_summary_no_permissions_granted=0x7f120996;
    /**
     * Runtime permissions preference summary, shown when the app requests no permissions. [CHAR LIMIT=40]
     */
    public static final int runtime_permissions_summary_no_permissions_requested=0x7f120997;
    /**
     * About phone settings screen, setting option name to show the safety and regulatory manual [CHAR LIMIT=40]
     */
    public static final int safety_and_regulatory_info=0x7f120998;
    /**
     * Button label for generic save action [CHAR LIMIT=20]
     */
    public static final int save=0x7f120999;
    /**
     * Summary for saved networks
     */
    public static final int saved_network=0x7f12099a;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int scan_list_label=0x7f12099b;
    /**
     * Manage applications, individual application info screen,  heading for settings related to controlling application screen compatibility
     */
    public static final int screen_compatibility_label=0x7f12099c;
    /**
     * Manage applications, individual application info screen, screen, message text under screen compatibility heading
     */
    public static final int screen_compatibility_text=0x7f12099d;
    /**
     * Sound: Other sounds: Title for the option enabling touch sounds for screen locking sounds. [CHAR LIMIT=30]
     */
    public static final int screen_locking_sounds_title=0x7f12099e;
    /**
     * [CHAR LIMIT=300] Screen pinning description
     */
    public static final int screen_pinning_description=0x7f12099f;
    /**
     * [CHAR LIMIT=28] Screen pinning title
     */
    public static final int screen_pinning_title=0x7f1209a0;
    /**
     * [CHAR LIMIT=60] Unlock setting for screen pinning
     */
    public static final int screen_pinning_unlock_none=0x7f1209a1;
    /**
     * [CHAR LIMIT=60] Unlock setting for screen pinning
     */
    public static final int screen_pinning_unlock_password=0x7f1209a2;
    /**
     * [CHAR LIMIT=60] Unlock setting for screen pinning
     */
    public static final int screen_pinning_unlock_pattern=0x7f1209a3;
    /**
     * [CHAR LIMIT=60] Unlock setting for screen pinning
     */
    public static final int screen_pinning_unlock_pin=0x7f1209a4;
    /**
     * Title for the accessibility preference category of screen reader services and settings. [CHAR LIMIT=50]
     */
    public static final int screen_reader_category_title=0x7f1209a5;
    /**
     * Sound & display settings screen, setting option name to change screen timeout
     */
    public static final int screen_timeout=0x7f1209a6;
    /**
     * Sound & display settings screen, setting option summary to change screen timeout
     */
    public static final int screen_timeout_summary=0x7f1209a7;
    /**
     * Sound & display settings screen, setting option name to change screen timeout [CHAR LIMIT=30]
     */
    public static final int screen_timeout_title=0x7f1209a8;
    /**
     * Description for the screen usage item [CHAR_LIMIT=120]
     */
    public static final int screen_usage_summary=0x7f1209a9;
    /**
     * Name Initial shown in the conversation message icon. [CHAR LIMIT=1]
     */
    public static final int screen_zoom_conversation_icon_alex=0x7f1209aa;
    /**
     * Name Initial shown in the conversation message icon. [CHAR LIMIT=1]
     */
    public static final int screen_zoom_conversation_icon_pete=0x7f1209ab;
    /**
     * Conversation message body of the messaging app preview screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_conversation_message_1=0x7f1209ac;
    /**
     * Conversation message body of the messaging app preview screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_conversation_message_2=0x7f1209ad;
    /**
     * Conversation message body of the messaging app preview screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_conversation_message_3=0x7f1209ae;
    /**
     * Conversation message body of the messaging app preview screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_conversation_message_4=0x7f1209af;
    /**
     * Conversation message timestamp of the messaging app preview screen. [CHAR LIMIT=20]
     */
    public static final int screen_zoom_conversation_timestamp_1=0x7f1209b0;
    /**
     * Conversation message timestamp of the messaging app preview screen. [CHAR LIMIT=20]
     */
    public static final int screen_zoom_conversation_timestamp_2=0x7f1209b1;
    /**
     * Conversation message timestamp of the messaging app preview screen. [CHAR LIMIT=20]
     */
    public static final int screen_zoom_conversation_timestamp_3=0x7f1209b2;
    /**
     * Conversation message timestamp of the messaging app preview screen. [CHAR LIMIT=20]
     */
    public static final int screen_zoom_conversation_timestamp_4=0x7f1209b3;
    /**
     * Keywords for setting that controls screen zoom (e.g. how large interface elements appear). [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_keywords=0x7f1209b4;
    /**
     * Description for the button that makes interface elements larger. [CHAR_LIMIT=NONE]
     */
    public static final int screen_zoom_make_larger_desc=0x7f1209b5;
    /**
     * Description for the button that makes interface elements smaller. [CHAR_LIMIT=NONE]
     */
    public static final int screen_zoom_make_smaller_desc=0x7f1209b6;
    /**
     * Title of the screen zoom preview activity.
     */
    public static final int screen_zoom_preview_title=0x7f1209b7;
    /**
     * Short summary for Magnification gesture. Lets the user know that this makes items on screen larger or smaller. Appears in the accessibility portion of Setup Wizard. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_short_summary=0x7f1209b8;
    /**
     * Summary of screen zoom setting screen. [CHAR LIMIT=NONE]
     */
    public static final int screen_zoom_summary=0x7f1209b9;
    /**
     * Description for a custom screen zoom level. This shows the requested display
     * density in raw pixels per inch rather than using a relative description. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_custom=0x7f1209ba;
    /**
     * Description for the device's default screen zoom level. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_default=0x7f1209bb;
    /**
     * Description for the screen zoom level that makes interface elements largest. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_extremely_large=0x7f1209bc;
    /**
     * Description for the screen zoom level that makes interface elements large. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_large=0x7f1209bd;
    /**
     * Description for the screen zoom level that makes interface elements small. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_small=0x7f1209be;
    /**
     * Description for the screen zoom level that makes interface elements larger. [CHAR LIMIT=24]
     */
    public static final int screen_zoom_summary_very_large=0x7f1209bf;
    /**
     * Title of setting that controls screen zoom (e.g. how large interface elements appear). [CHAR LIMIT=40]
     */
    public static final int screen_zoom_title=0x7f1209c0;
    /**
     * Dream settings screen, button label for settings for a specific screensaver
     */
    public static final int screensaver_settings_button=0x7f1209c1;
    /**
     * Dream settings screen, action label, current selected screen saver
     */
    public static final int screensaver_settings_current=0x7f1209c2;
    /**
     * Dream settings screen, caption for when dreams are disabled
     */
    public static final int screensaver_settings_disabled_prompt=0x7f1209c3;
    /**
     * Dream settings screen, button label to start dreaming
     */
    public static final int screensaver_settings_dream_start=0x7f1209c4;
    /**
     * Display settings screen, summary fragment for screen saver options, activated when docked
     */
    public static final int screensaver_settings_summary_dock=0x7f1209c5;
    /**
     * Display settings screen, summary fragment for screen saver options, activated when docked or asleep and charging
     */
    public static final int screensaver_settings_summary_either_long=0x7f1209c6;
    /**
     * Dream settings screen, dialog option, activated when docked or asleep and charging
     */
    public static final int screensaver_settings_summary_either_short=0x7f1209c7;
    /**
     * Display settings screen, summary fragment for screen saver options, activated never
     */
    public static final int screensaver_settings_summary_never=0x7f1209c8;
    /**
     * Display settings screen, summary for screen saver options, screen saver is turned off
     */
    public static final int screensaver_settings_summary_off=0x7f1209c9;
    /**
     * Display settings screen, summary fragment for screen saver options, activated when asleep and charging
     */
    public static final int screensaver_settings_summary_sleep=0x7f1209ca;
    /**
     * Display settings screen, trigger for screen saver options
     */
    public static final int screensaver_settings_title=0x7f1209cb;
    /**
     * Dream settings screen, action label, when to dream
     */
    public static final int screensaver_settings_when_to_dream=0x7f1209cc;
    /**
     * The title of the activity to adjust SD card settings
     */
    public static final int sd_card_settings_label=0x7f1209cd;
    /**
     * [CHAR LIMIT=15] Manage applications, label for chart showing SD card storage use.
     */
    public static final int sd_card_storage=0x7f1209ce;
    /**
     * SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.
     */
    public static final int sd_eject=0x7f1209cf;
    /**
     * SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.
     */
    public static final int sd_eject_summary=0x7f1209d0;
    /**
     * SD card eject progress text
     */
    public static final int sd_ejecting_summary=0x7f1209d1;
    /**
     * SD card eject progress title
     */
    public static final int sd_ejecting_title=0x7f1209d2;
    /**
     * SD card & phone storage settings item title that will result in the phone formatting the SD card.   [CHAR LIMIT=25]
     */
    public static final int sd_format=0x7f1209d3;
    /**
     * SD card & phone storage settings item title that will result in the phone unmounting the SD card.   [CHAR LIMIT=80]
     */
    public static final int sd_format_summary=0x7f1209d4;
    /**
     * SD card & phone storage settings item summary that is displayed when no SD card is inserted
     */
    public static final int sd_insert_summary=0x7f1209d5;
    /**
     * SD card & phone storage settings screen heading. This is displayed above items that pertain to the SD card
     */
    public static final int sd_memory=0x7f1209d6;
    /**
     * SD card & phone storage settings item title that will result in the phone mounting the SD card.
     */
    public static final int sd_mount=0x7f1209d7;
    /**
     * Subtext for Mount SD Card in Storage settings. User should never see this since we use automount.
     */
    public static final int sd_mount_summary=0x7f1209d8;
    /**
     * Instructions after the user changes the mass storage settings
     */
    public static final int sdcard_changes_instructions=0x7f1209d9;
    /**
     * Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted
     */
    public static final int sdcard_format=0x7f1209da;
    /**
     * Title for a notification shown.
     */
    public static final int sdcard_setting=0x7f1209db;
    /**
     * Th label for the available (free) sapce on the SD card
     */
    public static final int sdcard_settings_available_bytes_label=0x7f1209dc;
    /**
     * Error message when the SD card was removed without properly unmounting
     */
    public static final int sdcard_settings_bad_removal_status=0x7f1209dd;
    /**
     * Message when the SD card is being used by the computer as mass storage
     */
    public static final int sdcard_settings_mass_storage_status=0x7f1209de;
    /**
     * Message when there is no SD card present
     */
    public static final int sdcard_settings_not_present_status=0x7f1209df;
    /**
     * Message when the SD card is mounted as read only
     */
    public static final int sdcard_settings_read_only_status=0x7f1209e0;
    /**
     * Message when it is scanning the SD card for new files
     */
    public static final int sdcard_settings_scanning_status=0x7f1209e1;
    /**
     * Enable USB mass storage mode checkbox title
     */
    public static final int sdcard_settings_screen_mass_storage_text=0x7f1209e2;
    /**
     * The label for total bytes on SD card
     */
    public static final int sdcard_settings_total_bytes_label=0x7f1209e3;
    /**
     * Message when it is safe to remove the SD card
     */
    public static final int sdcard_settings_unmounted_status=0x7f1209e4;
    /**
     * Label for used bytes on the SD card
     */
    public static final int sdcard_settings_used_bytes_label=0x7f1209e5;
    /**
     * Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer
     */
    public static final int sdcard_unmount=0x7f1209e6;
    /**
     * Search breadcrumb connector symbol
     */
    public static final int search_breadcrumb_connector=0x7f1209e7;
    /**
     * Button to clear all search history in Settings [CHAR LIMIT=40]
     */
    public static final int search_clear_history=0x7f1209e8;
    /**
     * Text used as a search hint into the search box
     */
    public static final int search_menu=0x7f1209e9;
    public static final int search_menu_title=0x7f1209ea;
    /**
     * Text to describe the search results fragment title [CHAR LIMIT=16]
     */
    public static final int search_results_title=0x7f1209eb;
    /**
     * Main Settings screen, setting option name to go into search settings
     */
    public static final int search_settings=0x7f1209ec;
    /**
     * There are no search results for the user's search [CHAR LIMIT=NONE]
     */
    public static final int search_settings_no_results=0x7f1209ed;
    /**
     * Main Settings screen, setting option summary to go into search settings
     */
    public static final int search_settings_summary=0x7f1209ee;
    /**
     * Warning that the device data will not be encrypted with password or PIN if
     * choosing a secure lock and there is an enabled accessibility service. [CHAR LIMIT=NONE]
     */
    public static final int secure_lock_encryption_warning=0x7f1209ef;
    /**
     * Summary for Security settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int security_dashboard_summary=0x7f1209f0;
    /**
     * Summary for Security settings when fingerprint is not supported [CHAR LIMIT=NONE]
     */
    public static final int security_dashboard_summary_no_fingerprint=0x7f1209f1;
    /**
     * Summary for settings checkbox to disable widgets when the setting has been disabled by an installed device admin [CHAR LIMIT=50]
     */
    public static final int security_enable_widgets_disabled_summary=0x7f1209f2;
    /**
     * Text shown for title of settings checkbox to enable widgets [CHAR LIMIT=20]
     */
    public static final int security_enable_widgets_title=0x7f1209f3;
    /**
     * In the security screen, the header title for settings related to  Passwords
     */
    public static final int security_passwords_title=0x7f1209f4;
    /**
     * About phone screen, status item label  [CHAR LIMIT=60]
     */
    public static final int security_patch=0x7f1209f5;
    /**
     * Manage applications, individual application info screen, text that appears under the "Permissions" heading after the app has tried to send to a premium SMS. [CHAR LIMIT=50]
     */
    public static final int security_settings_billing_desc=0x7f1209f6;
    /**
     * Manage applications, individual application info screen, text that appears under the "Permissions" heading. This describes the permissions that the application has.
     */
    public static final int security_settings_desc=0x7f1209f7;
    /**
     * [CHAR_LIMIT=NONE] Manage applications, individual application info screen, text that appears under the "Permissions" heading.
     * This describes the permissions that the application has.  It is used when multiple packages are contributing
     * to the permissions and need to be listed here.
     */
    public static final int security_settings_desc_multi=0x7f1209f8;
    /**
     * Button text shown in fingerprint dialog that allows the user to delete the fingerprint template [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_dialog_delete=0x7f1209f9;
    /**
     * Label text shown in fingerprint dialog for renaming a fingerprint template [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_dialog_name_label=0x7f1209fa;
    /**
     * Button text shown in fingerprint dialog that allows the user to rename a fingerprint template [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_dialog_ok=0x7f1209fb;
    /**
     * Text shown in fingerprint settings explaining what the fingerprint can be used for. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_disclaimer=0x7f1209fc;
    /**
     * Text shown in fingerprint settings explaining what the fingerprint can be used for in the case unlocking is disabled [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_disclaimer_lockscreen_disabled=0x7f1209fd;
    /**
     * Button text to exit fingerprint wizard after everything is done [CHAR LIMIT=15]
     */
    public static final int security_settings_fingerprint_enroll_done=0x7f1209fe;
    /**
     * Button text to skip enrollment of fingerprint [CHAR LIMIT=40]
     */
    public static final int security_settings_fingerprint_enroll_enrolling_skip=0x7f1209ff;
    /**
     * Dialog message for dialog which shows when finger cannot be enrolled. [CHAR LIMIT=45]
     */
    public static final int security_settings_fingerprint_enroll_error_dialog_title=0x7f120a00;
    /**
     * Dialog message for dialog which shows when finger cannot be enrolled due to an internal error or fingerprint can't be read.
     */
    public static final int security_settings_fingerprint_enroll_error_generic_dialog_message=0x7f120a01;
    /**
     * Dialog message for dialog which shows when finger cannot be enrolled due to being idle too long.
     */
    public static final int security_settings_fingerprint_enroll_error_timeout_dialog_message=0x7f120a02;
    /**
     * Content description of graphic that shows where the fingerprint of the device is [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_find_sensor_content_description=0x7f120a03;
    /**
     * Message shown in fingerprint enrollment dialog to locate the sensor
     */
    public static final int security_settings_fingerprint_enroll_find_sensor_message=0x7f120a04;
    /**
     * Introduction title shown in fingerprint enrollment dialog to locate the sensor [CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_find_sensor_title=0x7f120a05;
    /**
     * Message shown in fingerprint enrollment dialog once enrollment is completed
     */
    public static final int security_settings_fingerprint_enroll_finish_message=0x7f120a06;
    /**
     * Title shown in fingerprint enrollment dialog once enrollment is completed [CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_finish_title=0x7f120a07;
    /**
     * Button text to cancel enrollment from the introduction [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_introduction_cancel=0x7f120a08;
    /**
     * Button text to cancel enrollment from the introduction (this string variant is used while in setup wizard) [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_introduction_cancel_setup=0x7f120a09;
    /**
     * Button text to continue to the next screen from the introduction [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_introduction_continue=0x7f120a0a;
    /**
     * Button text to continue to the next screen from the introduction (this string variant is used while in setup wizard) [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_enroll_introduction_continue_setup=0x7f120a0b;
    /**
     * Introduction detail message shown in fingerprint enrollment dialog [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_message=0x7f120a0c;
    /**
     * Introduction detail message shown in fingerprint enrollment screen in setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_message_setup=0x7f120a0d;
    /**
     * Introduction detail message shown in fingerprint enrollment dialog, when fingerprint unlock is disabled by device admin [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_introduction_message_unlock_disabled=0x7f120a0e;
    /**
     * Introduction title shown in fingerprint enrollment to introduce the fingerprint feature[CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_introduction_title=0x7f120a0f;
    /**
     * Introduction title shown in fingerprint enrollment to introduce the fingerprint feature, when fingerprint unlock is disabed by device admin [CHAR LIMIT=40]
     */
    public static final int security_settings_fingerprint_enroll_introduction_title_unlock_disabled=0x7f120a10;
    /**
     * Text shown in fingerprint enroll when we didn't observe progress for a few seconds. [CHAR LIMIT=100]
     */
    public static final int security_settings_fingerprint_enroll_lift_touch_again=0x7f120a11;
    /**
     * Message shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_repeat_message=0x7f120a12;
    /**
     * Title shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=40]
     */
    public static final int security_settings_fingerprint_enroll_repeat_title=0x7f120a13;
    /**
     * Button text to setup screen lock in onboard dialog [CHAR LIMIT=34]
     */
    public static final int security_settings_fingerprint_enroll_setup_screen_lock=0x7f120a14;
    /**
     * Message shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_start_message=0x7f120a15;
    /**
     * Title shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=29]
     */
    public static final int security_settings_fingerprint_enroll_start_title=0x7f120a16;
    /**
     * Dialog message for dialog which shows when user touches the icon on the screen, instead of the sensor at the back [CHAR LIMIT=NONE]
     */
    public static final int security_settings_fingerprint_enroll_touch_dialog_message=0x7f120a17;
    /**
     * Dialog title for dialog which shows when user touches the icon on the screen, instead of the sensor at the back [CHAR LIMIT=45]
     */
    public static final int security_settings_fingerprint_enroll_touch_dialog_title=0x7f120a18;
    /**
     * message shown in summary field when no fingerprints are registered
     */
    public static final int security_settings_fingerprint_preference_summary_none=0x7f120a19;
    /**
     * Title shown for menu item that launches fingerprint settings or enrollment [CHAR LIMIT=22]
     */
    public static final int security_settings_fingerprint_preference_title=0x7f120a1a;
    /**
     * Manage applications, text for permission to send to premium SMS short codes. [CHAR LIMIT=40]
     */
    public static final int security_settings_premium_sms_desc=0x7f120a1b;
    /**
     * Main Settings screen setting option summary text for the item tot ake you to the security and location screen
     */
    public static final int security_settings_summary=0x7f120a1c;
    /**
     * Main Settings screen setting option title for the item to take you to the security screen
     */
    public static final int security_settings_title=0x7f120a1d;
    /**
     * In the security screen, the header title for security statuses
     */
    public static final int security_status_title=0x7f120a1e;
    /**
     * Preference title for showing all apps on device [CHAR_LIMIT=50]
     */
    public static final int see_all_apps_title=0x7f120a1f;
    /**
     * action to select all [CHAR LIMIT=30]
     */
    public static final int select_all=0x7f120a20;
    /**
     * UI debug setting: title for app picker dialog [CHAR LIMIT=50]
     */
    public static final int select_application=0x7f120a21;
    /**
     * Label for screen showing to select device admin apps
     */
    public static final int select_device_admin_msg=0x7f120a22;
    /**
     * UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59]
     */
    public static final int select_logd_size_dialog_title=0x7f120a23;
    /**
     * UI debug setting: limit size of Android logger buffers
     */
    public static final int select_logd_size_title=0x7f120a24;
    /**
     * UI debug setting: select which logs to store persistently [CHAR LIMIT=80]
     */
    public static final int select_logpersist_dialog_title=0x7f120a25;
    /**
     * Title of setting: title for selection of logs to store persistently [CHAR LIMIT=60]
     */
    public static final int select_logpersist_title=0x7f120a26;
    /**
     * Message for selecting sim for call in settings.  [CHAR LIMIT=40]
     */
    public static final int select_sim_for_calls=0x7f120a27;
    /**
     * Message for selecting sim for data in settings.  [CHAR LIMIT=40]
     */
    public static final int select_sim_for_data=0x7f120a28;
    /**
     * Summary for the Select to Speak Accessibility Service. [CHAR_LIMIT=none]
     */
    public static final int select_to_speak_summary=0x7f120a29;
    /**
     * UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59]
     */
    public static final int select_usb_configuration_dialog_title=0x7f120a2a;
    /**
     * UI debug setting: select USB configuration
     */
    public static final int select_usb_configuration_title=0x7f120a2b;
    /**
     * Developer settings: select WebView provider dialog title [CHAR LIMIT=30]
     */
    public static final int select_webview_provider_dialog_title=0x7f120a2c;
    /**
     * Developer settings: select WebView provider title [CHAR LIMIT=30]
     */
    public static final int select_webview_provider_title=0x7f120a2d;
    /**
     * Developer settings: text for the WebView provider selection toast shown if an invalid provider was chosen (i.e. the setting list was stale). [CHAR LIMIT=NONE]
     */
    public static final int select_webview_provider_toast_text=0x7f120a2e;
    /**
     * About phone screen,  setting option name  [CHAR LIMIT=40]
     */
    public static final int selinux_status=0x7f120a2f;
    /**
     * These statuses are displayed when a device was built with SE Android supoprt.
     * These are displayed by the settings app in the about section.
     */
    public static final int selinux_status_disabled=0x7f120a30;
    public static final int selinux_status_enforcing=0x7f120a31;
    public static final int selinux_status_permissive=0x7f120a32;
    /**
     * [CHAR LIMIT=10] Running services, summary of background processes
     */
    public static final int service_background_processes=0x7f120a33;
    /**
     * Running services, description for a service in the started state
     */
    public static final int service_client_name=0x7f120a34;
    /**
     * [CHAR LIMIT=10] Running services, summary of foreground processes
     */
    public static final int service_foreground_processes=0x7f120a35;
    /**
     * Running service details, manage a service that is running for some other reason.
     */
    public static final int service_manage=0x7f120a36;
    /**
     * Running service details, default description for services that are managed.
     */
    public static final int service_manage_description=0x7f120a37;
    /**
     * Text to label a process entry with the process name.
     */
    public static final int service_process_name=0x7f120a38;
    /**
     * Label for a service item when it is restarting
     */
    public static final int service_restarting=0x7f120a39;
    /**
     * Running services, description for a service in the started state
     */
    public static final int service_started_by_app=0x7f120a3a;
    /**
     * Running service details, stop a service that has started itself.
     */
    public static final int service_stop=0x7f120a3b;
    /**
     * Running service details, default description for services that are started.
     */
    public static final int service_stop_description=0x7f120a3c;
    /**
     * [CHAR LIMIT=NONE] Subtitle for process stats services list
     */
    public static final int services_subtitle=0x7f120a3d;
    /**
     * Label for switch about whether to limit how much data can be used [CHAR LIMIT=30]
     */
    public static final int set_data_limit=0x7f120a3e;
    /**
     * Label for switch about whether to warn user about usage [CHAR LIMIT=30]
     */
    public static final int set_data_warning=0x7f120a3f;
    /**
     * Data synchronization settings screen, setting option name
     */
    public static final int settings_backup=0x7f120a40;
    /**
     * Data synchronization settings screen, setting option summary text when check box is selected
     */
    public static final int settings_backup_summary=0x7f120a41;
    /**
     * Accessibility settings: button for lauching settings for an accessibility service
     */
    public static final int settings_button=0x7f120a42;
    /**
     * Title of the Settings activity shown within the application itself.
     */
    public static final int settings_label=0x7f120a43;
    /**
     * Title of the Settings activity shown in the Launcher. [CHAR LIMIT=20]
     */
    public static final int settings_label_launcher=0x7f120a44;
    /**
     * About phone settings screen, Open source license dialog title until license is fully loaded
     */
    public static final int settings_license_activity_loading=0x7f120a45;
    /**
     * About phone settings, Legal information setting option name and title of dialog box holding license info
     */
    public static final int settings_license_activity_title=0x7f120a46;
    /**
     * About phone settings screen, Open source license dialog message when licenses cannot be loaded
     */
    public static final int settings_license_activity_unavailable=0x7f120a47;
    /**
     * Phone Manual
     */
    public static final int settings_manual_activity_title=0x7f120a48;
    /**
     * About phone settings screen, Manual dialog message when manual cannot be loaded
     */
    public static final int settings_manual_activity_unavailable=0x7f120a49;
    /**
     * Package name for Settings app
     */
    public static final int settings_package=0x7f120a4a;
    /**
     * About phone settings screen, Safety Legal dialog title until the link is fully loaded
     */
    public static final int settings_safetylegal_activity_loading=0x7f120a4b;
    /**
     * About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info
     */
    public static final int settings_safetylegal_activity_title=0x7f120a4c;
    /**
     * About phone settings screen, Safety legal dialog message when data network is not connected
     */
    public static final int settings_safetylegal_activity_unreachable=0x7f120a4d;
    /**
     * About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info
     */
    public static final int settings_safetylegal_title=0x7f120a4e;
    /**
     * Label for option to select a settings panel as a shortcut
     */
    public static final int settings_shortcut=0x7f120a4f;
    /**
     * Content of the dialog shown when the user tries to skip fingerprint setup, asking them to confirm the action [CHAR LIMIT=NONE]
     */
    public static final int setup_fingerprint_enroll_enrolling_skip_message=0x7f120a50;
    /**
     * Title of the dialog shown when the user tries to skip fingerprint setup, asking them to confirm the action [CHAR LIMIT=40]
     */
    public static final int setup_fingerprint_enroll_enrolling_skip_title=0x7f120a51;
    /**
     * Body text of dialog shown when the user tries to skip setting up fingerprint after adding lock screen during initial setup [CHAR LIMIT=NONE]
     */
    public static final int setup_fingerprint_enroll_skip_after_adding_lock_text=0x7f120a52;
    /**
     * Title of dialog shown when the user tries to skip setting up fingerprint after adding lock screen during initial setup. [CHAR LIMIT=30]
     */
    public static final int setup_fingerprint_enroll_skip_title=0x7f120a53;
    /**
     * Label for button in screen lock settings, allowing users to choose other types of screen locks. [CHAR LIMIT=40]
     */
    public static final int setup_lock_settings_options_button_label=0x7f120a54;
    /**
     * Title for dialog in screen lock settings, allowing users to choose other types of screen locks. [CHAR LIMIT=40]
     */
    public static final int setup_lock_settings_options_dialog_title=0x7f120a55;
    /**
     * Description text for screen in setup wizard asking user to set up screen lock, explaining to the user how setting up a screen lock protect them from losing data. (phone) [CHAR LIMIT=NONE]
     */
    public static final int setup_lock_settings_picker_message=0x7f120a56;
    /**
     * Title for security picker in setup wizard to choose the unlock method: None/Pattern/PIN/Password (phone) [CHAR LIMIT=22]
     */
    public static final int setup_lock_settings_picker_title=0x7f120a57;
    /**
     * Write NFC tag for Wi-Fi pairing/setup title [CHAR_LIMIT=30]
     */
    public static final int setup_wifi_nfc_tag=0x7f120a58;
    /**
     * Extreme threats summary.  [CHAR LIMIT=60]
     */
    public static final int severe_threats_summary=0x7f120a59;
    /**
     * Severe threats title.  [CHAR LIMIT=30]
     */
    public static final int severe_threats_title=0x7f120a5a;
    /**
     * Acceptance label of dialog shown to ask for user consent for sharing the remote bugreport.
     */
    public static final int share_remote_bugreport_action=0x7f120a5b;
    /**
     * Message of a dialog shown to ask for user consent for sharing a bugreport that was requested remotely by the IT administrator and it's still being taken.
     */
    public static final int share_remote_bugreport_dialog_message=0x7f120a5c;
    /**
     * Message of a dialog shown to ask for user consent for sharing a bugreport that was requested remotely by the IT administrator.
     */
    public static final int share_remote_bugreport_dialog_message_finished=0x7f120a5d;
    /**
     * Title of dialog shown to ask for user consent for sharing a bugreport that was requested remotely by the IT administrator.
     */
    public static final int share_remote_bugreport_dialog_title=0x7f120a5e;
    /**
     * Message of a dialog shown to inform that the remote bugreport that was requested remotely by the IT administrator is still being taken and will be shared when finished.
     */
    public static final int sharing_remote_bugreport_dialog_message=0x7f120a5f;
    /**
     * Summary for Font size. Lets the user know that this will make text larger or smaller. Appears in the accessibility portion of setup wizard. [CHAR LIMIT=NONE]
     */
    public static final int short_summary_font_size=0x7f120a60;
    /**
     * UI debug setting: show all ANRs? [CHAR LIMIT=25]
     */
    public static final int show_all_anrs=0x7f120a61;
    /**
     * UI debug setting: show all ANRs summary [CHAR LIMIT=50]
     */
    public static final int show_all_anrs_summary=0x7f120a62;
    /**
     * Label for menu to show battery usage in the device [CHAR LIMIT=45]
     */
    public static final int show_all_apps=0x7f120a63;
    /**
     * [CHAR LIMIT=25] Manage applications screen, menu item.  Show background cached processes.
     */
    public static final int show_background_processes=0x7f120a64;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Okay we get it, stop pressing, you already have it on
     */
    public static final int show_dev_already=0x7f120a65;
    /**
     * [CHAR LIMIT=NONE] Device Info screen. Confirmation that developer settings are enabled
     */
    public static final int show_dev_on=0x7f120a66;
    /**
     * UI debug setting: show when hardware layers get updated [CHAR LIMIT=25]
     */
    public static final int show_hw_layers_updates=0x7f120a67;
    /**
     * UI debug setting: show hardware layers updates summary [CHAR LIMIT=50]
     */
    public static final int show_hw_layers_updates_summary=0x7f120a68;
    /**
     * UI debug setting: show where window updates happen with GPU rendering? [CHAR LIMIT=25]
     */
    public static final int show_hw_screen_updates=0x7f120a69;
    /**
     * UI debug setting: show GPU rendering screen updates summary [CHAR LIMIT=50]
     */
    public static final int show_hw_screen_updates_summary=0x7f120a6a;
    /**
     * Title for the 'show virtual keyboard' preference switch. [CHAR LIMIT=35]
     */
    public static final int show_ime=0x7f120a6b;
    /**
     * Summary text for the 'add virtual keyboard' preference sub-screen. [CHAR LIMIT=100]
     */
    public static final int show_ime_summary=0x7f120a6c;
    /**
     * UI debug setting: show when non-rectangular clip operations are used [CHAR LIMIT=100]
     */
    public static final int show_non_rect_clip=0x7f120a6d;
    /**
     * UI debug setting: show all ANRs? [CHAR LIMIT=25]
     */
    public static final int show_notification_channel_warnings=0x7f120a6e;
    /**
     * UI debug setting: show all ANRs summary [CHAR LIMIT=50]
     */
    public static final int show_notification_channel_warnings_summary=0x7f120a6f;
    /**
     * Text shown next to checkbox for showing owner info on LockScreen [CHAR LIMIT=50]
     */
    public static final int show_owner_info_on_lockscreen_label=0x7f120a70;
    /**
     * On Security & location settings screen, setting check box name. Title of the checkbox to set whether password edit fields will show the most recent character typed and then hide it, or just hide it right away.  By hide, I mean mask it out.
     */
    public static final int show_password=0x7f120a71;
    /**
     * On Security & location settings screen. This is a short summary text describing what "Show passwords" setting does
     */
    public static final int show_password_summary=0x7f120a72;
    /**
     * Text shown next to checkbox for showing profile info on LockScreen [CHAR LIMIT=50]
     */
    public static final int show_profile_info_on_lockscreen_label=0x7f120a73;
    /**
     * [CHAR LIMIT=25] Manage applications screen, menu item.  Show running services.
     */
    public static final int show_running_services=0x7f120a74;
    /**
     * UI debug setting: show where surface updates happen? [CHAR LIMIT=25]
     */
    public static final int show_screen_updates=0x7f120a75;
    /**
     * UI debug setting: show surface updates summary [CHAR LIMIT=50]
     */
    public static final int show_screen_updates_summary=0x7f120a76;
    /**
     * UI debug setting: show touches? [CHAR LIMIT=25]
     */
    public static final int show_touches=0x7f120a77;
    /**
     * UI debug setting: show touches location summary [CHAR LIMIT=50]
     */
    public static final int show_touches_summary=0x7f120a78;
    /**
     * SIM card lock settings screen, SIM PIN dialog message when wrong PIN is entered  [CHAR LIMIT=40]
     */
    public static final int sim_bad_pin=0x7f120a79;
    /**
     * Title for call back. [CHAR LIMIT=60]
     */
    public static final int sim_call_back_title=0x7f120a7a;
    /**
     * Checkbox to always use for calls.  [CHAR LIMIT=40]
     */
    public static final int sim_calls_always_use=0x7f120a7b;
    /**
     * When a user chooses this "Ask first" preference for the SIM to use for phone calls, they'll be prompted to choose a SIM every time they initiate a call [CHAR LIMIT=50]
     */
    public static final int sim_calls_ask_first_prefs_title=0x7f120a7c;
    /**
     * Label for a numbered SIM card.  [CHAR LIMIT=40]
     */
    public static final int sim_card_number_title=0x7f120a7d;
    /**
     * Select label Title of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_card_select_title=0x7f120a7e;
    /**
     * Message that SIM cards have changed.  [CHAR LIMIT=40]
     */
    public static final int sim_cards_changed_message=0x7f120a7f;
    /**
     * Message smmary that SIM cards have changed.  [CHAR LIMIT=60]
     */
    public static final int sim_cards_changed_message_summary=0x7f120a80;
    /**
     * Message that Cellular data is unavailable.  [CHAR LIMIT=40]
     */
    public static final int sim_cellular_data_unavailable=0x7f120a81;
    /**
     * Message summary that Cellular data is unavailable.  [CHAR LIMIT=60]
     */
    public static final int sim_cellular_data_unavailable_summary=0x7f120a82;
    /**
     * Message confirming the user wishes to change the default data SIM from one to another.  [CHAR LIMIT=NONE]
     */
    public static final int sim_change_data_message=0x7f120a83;
    /**
     * Title asking user if they wish to change the default sim for cellular data.  [CHAR LIMIT=30]
     */
    public static final int sim_change_data_title=0x7f120a84;
    /**
     * SIM card lock settings screen, toast after not entering correct SIM PIN  [CHAR LIMIT=40]
     */
    public static final int sim_change_failed=0x7f120a85;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_change_pin=0x7f120a86;
    /**
     * SIM card lock settings screen, SIM PIN dialog message when the entered PIN is correct [CHAR LIMIT=40]
     */
    public static final int sim_change_succeeded=0x7f120a87;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_disable_sim_lock=0x7f120a88;
    /**
     * Carrier label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_carrier=0x7f120a89;
    /**
     * Color label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_color=0x7f120a8a;
    /**
     * Name label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_name=0x7f120a8b;
    /**
     * Number label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_number=0x7f120a8c;
    /**
     * Title label of Sim Editor.  [CHAR LIMIT=40]
     */
    public static final int sim_editor_title=0x7f120a8d;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_enable_sim_lock=0x7f120a8e;
    /**
     * SIM card lock settings screen, SIM PIN dialog button labels: [CHAR LIMIT=40]
     */
    public static final int sim_enter_cancel=0x7f120a8f;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_enter_new=0x7f120a90;
    /**
     * SIM card lock settings screen, SIM PIN dialog button labels: [CHAR LIMIT=40]
     */
    public static final int sim_enter_ok=0x7f120a91;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_enter_old=0x7f120a92;
    /**
     * SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40]
     */
    public static final int sim_enter_pin=0x7f120a93;
    /**
     * SIM card lock settings screen, toast after not entering correct SIM PIN [CHAR LIMIT=40]
     */
    public static final int sim_lock_failed=0x7f120a94;
    /**
     * SIM card lock settings screen, setting option summary text when SIM lock check box is clear  [CHAR LIMIT=40]
     */
    public static final int sim_lock_off=0x7f120a95;
    /**
     * SIM card lock settings screen, setting option summary text when SIM lock check box is selected  [CHAR LIMIT=40]
     */
    public static final int sim_lock_on=0x7f120a96;
    /**
     * SIM lock settings title  [CHAR LIMIT=40]
     */
    public static final int sim_lock_settings=0x7f120a97;
    /**
     * Security & screen lock settings screen, SIM card lock setting option name  [CHAR LIMIT=40]
     */
    public static final int sim_lock_settings_category=0x7f120a98;
    /**
     * Security & screen lock settings screen, SIM card lock setting summary when off [CHAR LIMIT=NONE]
     */
    public static final int sim_lock_settings_summary_off=0x7f120a99;
    /**
     * Security & screen lock settings screen, SIM card lock setting summary when on [CHAR LIMIT=NONE]
     */
    public static final int sim_lock_settings_summary_on=0x7f120a9a;
    /**
     * Security & location settings screen, section heading for settings related to sim card locking  [CHAR LIMIT=40]
     */
    public static final int sim_lock_settings_title=0x7f120a9b;
    /**
     * Multiple SIMs found summary.  [CHAR LIMIT=100]
     */
    public static final int sim_multi_sims_summary=0x7f120a9c;
    /**
     * Multiple SIMs found title.  [CHAR LIMIT=40]
     */
    public static final int sim_multi_sims_title=0x7f120a9d;
    /**
     * Hint for SIM name in sim name editor dialog.  [CHAR LIMIT=40]
     */
    public static final int sim_name_hint=0x7f120a9e;
    /**
     * Message informing the user that no SIM card is inserted  [CHAR LIMIT=60]
     */
    public static final int sim_no_inserted_msg=0x7f120a9f;
    /**
     * Message under title informing the user to touch to go to SIM Cards in Settings.  [CHAR LIMIT=40]
     */
    public static final int sim_notification_summary=0x7f120aa0;
    /**
     * Title for SIM card notification.  [CHAR LIMIT=40]
     */
    public static final int sim_notification_title=0x7f120aa1;
    /**
     * Title for other call settings. [CHAR LIMIT=60]
     */
    public static final int sim_other_call_settings=0x7f120aa2;
    /**
     * Title for outgoing back. [CHAR LIMIT=60]
     */
    public static final int sim_outgoing_call_title=0x7f120aa3;
    /**
     * SIM card lock settings screen, setting option name to change the SIM PIN  [CHAR LIMIT=40]
     */
    public static final int sim_pin_change=0x7f120aa4;
    /**
     * SIM card lock settings screen, setting check box label  [CHAR LIMIT=40]
     */
    public static final int sim_pin_toggle=0x7f120aa5;
    /**
     * SIM card lock settings screen, SIM PIN dialog message when PINs don't match  [CHAR LIMIT=40]
     */
    public static final int sim_pins_dont_match=0x7f120aa6;
    /**
     * This is a divider in the SIM cards preferences that is the header of various settings where the user chooses which SIM to use for phone calls, data, and SMS messages [CHAR LIMIT=50]
     */
    public static final int sim_pref_divider=0x7f120aa7;
    /**
     * Message for the dialog asking to user to change the preferred SIM  [CHAR LIMIT=NONE]
     */
    public static final int sim_preferred_message=0x7f120aa8;
    /**
     * Title for the dialog asking to user to change the preferred SIM  [CHAR LIMIT=30]
     */
    public static final int sim_preferred_title=0x7f120aa9;
    /**
     * SIM card lock settings screen, Re-type new PIN.  [CHAR LIMIT=40]
     */
    public static final int sim_reenter_new=0x7f120aaa;
    /**
     * Title for selecting a SIM card.  [CHAR LIMIT=40]
     */
    public static final int sim_select_card=0x7f120aab;
    /**
     * When a SIM preference hasn't been selected yet, this string is displayed as the pref summary until the user chooses a SIM subscription from the preference list [CHAR LIMIT=50]
     */
    public static final int sim_selection_required_pref=0x7f120aac;
    /**
     * Summary for SIM settings title settings during Setup Wizard.  [CHAR LIMIT=40]
     */
    public static final int sim_settings_summary=0x7f120aad;
    /**
     * Title for SIM settings title settings during Setup Wizard.  [CHAR LIMIT=40]
     */
    public static final int sim_settings_title=0x7f120aae;
    /**
     * Title for SIM card settings during Setup Wizard.  [CHAR LIMIT=40]
     */
    public static final int sim_setup_wizard_title=0x7f120aaf;
    /**
     * Summary text describing signal strength to the user.  [CHAR LIMIT=60]
     */
    public static final int sim_signal_strength=0x7f120ab0;
    /**
     * Name label of Sim card that is empty.  [CHAR LIMIT=40]
     */
    public static final int sim_slot_empty=0x7f120ab1;
    /**
     * SIM status title  [CHAR LIMIT=40]
     */
    public static final int sim_status_title=0x7f120ab2;
    /**
     * UI debug setting: simulate color space anomalies. [CHAR LIMIT=25]
     */
    public static final int simulate_color_space=0x7f120ab3;
    /**
     * Button for skipping a step after having been warned of a potential concern [CHAR LIMIT=30]
     */
    public static final int skip_anyway_button_label=0x7f120ab4;
    /**
     * Used in setup wizard Wi-Fi screen.  The button label for going to the next screen without submitting. [CHAR LIMIT=20]
     */
    public static final int skip_label=0x7f120ab5;
    public static final int slot_number=0x7f120ab6;
    /**
     * SMS Application [CHAR LIMIT=35]
     */
    public static final int sms_application_title=0x7f120ab7;
    public static final int sms_change_default_dialog_text=0x7f120ab8;
    public static final int sms_change_default_dialog_title=0x7f120ab9;
    public static final int sms_change_default_no_previous_dialog_text=0x7f120aba;
    /**
     * check box SMS Messges title [CHAR LIMIT=30]
     */
    public static final int sms_messages_title=0x7f120abb;
    /**
     * Settings item title for SMS Mirroring preference [CHAR LIMIT=35]
     */
    public static final int sms_mirroring_pref=0x7f120abc;
    /**
     * Description of app sometimes running [CHAR LIMIT=45]
     */
    public static final int sometimes_running=0x7f120abd;
    /**
     * Menu item for Sorting list by average memory use [CHAR LIMIT=NONE]
     */
    public static final int sort_avg_use=0x7f120abe;
    /**
     * Menu item for Sorting list by maximum memory use [CHAR LIMIT=NONE]
     */
    public static final int sort_max_use=0x7f120abf;
    /**
     * [CHAR LIMIT=25] Manage applications screen, menu item.  Sorts all of the apps in the list alphabetically.
     */
    public static final int sort_order_alpha=0x7f120ac0;
    /**
     * Manage applications screen, menu item. Sorts all of the apps in the list based on their file size.  This is used to uninstall when space is getting low.
     */
    public static final int sort_order_size=0x7f120ac1;
    /**
     * Category title for phone call's ringtone and vibration settings in the Sound Setting.
     * [CHAR LIMIT=40]
     */
    public static final int sound_category_call_ringtone_vibrate_title=0x7f120ac2;
    public static final int sound_category_sound_title=0x7f120ac3;
    /**
     * Category title for system-wide notification and feedback settings in the Sound Setting.
     * [CHAR LIMIT=40]
     */
    public static final int sound_category_system_title=0x7f120ac4;
    /**
     * Summary for sound settings, explaining a few important settings under it [CHAR LIMIT=NONE]
     */
    public static final int sound_dashboard_summary=0x7f120ac5;
    /**
     * Sound settings screen, setting check box label
     */
    public static final int sound_effects_enable_title=0x7f120ac6;
    /**
     * Sound settings screen heading
     */
    public static final int sound_settings=0x7f120ac7;
    /**
     * Sound: Dashboard summary example used in Setup Wizard preview screen. [CHAR LIMIT=100]
     */
    public static final int sound_settings_example_summary=0x7f120ac8;
    /**
     * Sound: Dashboard summary indicating the volume of ringtone. example: Ring volume at 20%.
     * [CHAR LIMIT=100]
     */
    public static final int sound_settings_summary=0x7f120ac9;
    /**
     * Sound: Dashboard summary indicating the volume of ringtone when at 0% with vibrate disabled [CHAR LIMIT=100]
     */
    public static final int sound_settings_summary_silent=0x7f120aca;
    /**
     * Sound: Dashboard summary indicating the volume of ringtone when at 0% with vibrate enabled. [CHAR LIMIT=100]
     */
    public static final int sound_settings_summary_vibrate=0x7f120acb;
    /**
     * Work Sounds: Work sound settings section header.  [CHAR LIMIT=50]
     */
    public static final int sound_work_settings=0x7f120acc;
    /**
     * [CHAR_LIMIT=60] Label for special access screen
     */
    public static final int special_access=0x7f120acd;
    /**
     * Speed label for fast network speed
     */
    public static final int speed_label_fast=0x7f120ace;
    /**
     * Speed label for medium network speed
     */
    public static final int speed_label_medium=0x7f120acf;
    /**
     * Speed label for okay network speed
     */
    public static final int speed_label_okay=0x7f120ad0;
    /**
     * Speed label for slow network speed
     */
    public static final int speed_label_slow=0x7f120ad1;
    /**
     * Speed label for very fast network speed
     */
    public static final int speed_label_very_fast=0x7f120ad2;
    /**
     * Speed label for very slow network speed
     */
    public static final int speed_label_very_slow=0x7f120ad3;
    /**
     * [CHAR LIMIT=30] Label for the placeholder of the current spell checker name.  Used when no spell checker is currently selected.
     */
    public static final int spell_checker_not_selected=0x7f120ad4;
    /**
     * Image button description for spell checker language.
     */
    public static final int spellchecker_language=0x7f120ad5;
    /**
     * Image button description for spell checker quick settings.
     */
    public static final int spellchecker_quick_settings=0x7f120ad6;
    /**
     * Warning message about security implications of enabling a spell checker, displayed as a dialog
     * message when the user selects to enable a spell checker.
     */
    public static final int spellchecker_security_warning=0x7f120ad7;
    /**
     * Title for spell checker settings
     */
    public static final int spellcheckers_settings_title=0x7f120ad8;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int ssid_label=0x7f120ad9;
    /**
     * Shows up when there is a user SSL CA Cert installed on the
     * device.  Indicates to the user that SSL traffic can be intercepted.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_warning=0x7f120ada;
    /**
     * Text of warning to show to users that have a SSL CA Cert installed.  [CHAR LIMIT=NONE]
     */
    public static final int ssl_ca_cert_warning_message=0x7f120adb;
    /**
     * Shown when password is correct, and we're starting Android
     */
    public static final int starting_android=0x7f120adc;
    /**
     * Text to inform the user to tap a tag to complete the setup process
     */
    public static final int status_awaiting_tap=0x7f120add;
    /**
     * About phone, status item title.  How much time the device has had its main CPU awake.
     */
    public static final int status_awake_time=0x7f120ade;
    /**
     * About phone, status item title.  The bluetooth adapter's hardware address
     */
    public static final int status_bt_address=0x7f120adf;
    /**
     * About phone, status item title. The status of data access.  For example, the value may be "Connected"
     */
    public static final int status_data_state=0x7f120ae0;
    /**
     * Text displayed in error cases (failure to write to tag)
     */
    public static final int status_failed_to_write=0x7f120ae1;
    /**
     * About phone, status item title.  The ICCID of the current LTE device. [CHAR LIMIT=30]
     */
    public static final int status_icc_id=0x7f120ae2;
    /**
     * Do not translate. About phone, status item title
     */
    public static final int status_iccid=0x7f120ae3;
    /**
     * Do not translate. About phone, status item title
     */
    public static final int status_imei=0x7f120ae4;
    /**
     * Do not translate. About phone, status item title
     */
    public static final int status_imei_sv=0x7f120ae5;
    /**
     * Text to inform the user that the network key entered was incorrect
     */
    public static final int status_invalid_password=0x7f120ae6;
    /**
     * About phone, status item title for the latest area info cell broadcast received (Brazil only).
     */
    public static final int status_latest_area_info=0x7f120ae7;
    /**
     * About phone, status item title.  The phone MEID number of the current LTE/CDMA device. [CHAR LIMIT=30]
     */
    public static final int status_meid_number=0x7f120ae8;
    /**
     * About phone, status item title.  The phone MIN number of the current device.
     */
    public static final int status_min_number=0x7f120ae9;
    /**
     * About phone, status item title.  The phone MSID number of the current device.
     */
    public static final int status_msid_number=0x7f120aea;
    /**
     * About phone, status item title for the type of data phone network we're connected to, for example 3G or Edge or GPRS
     */
    public static final int status_network_type=0x7f120aeb;
    /**
     * About phone, status item title.  The phone number of the current device [CHAR LIMIT=30]
     */
    public static final int status_number=0x7f120aec;
    /**
     * About phone, status item title. The cell carrier that the user is connected to.
     */
    public static final int status_operator=0x7f120aed;
    /**
     * About phone, status item title.  The phone PRL Version of the current device.
     */
    public static final int status_prl_version=0x7f120aee;
    /**
     * About phone, status item title, The status for roaming.  For example, the value might be "Not roaming"
     */
    public static final int status_roaming=0x7f120aef;
    /**
     * About phone, status item title.  The hardware serial number. [CHAR LIMIT=30]
     */
    public static final int status_serial_number=0x7f120af0;
    /**
     * About phone, status item title. The status of whether we have service.  for example, the value may be "In service"
     */
    public static final int status_service_state=0x7f120af1;
    /**
     * About phone, status item title. The  current cell tower signal strength
     */
    public static final int status_signal_strength=0x7f120af2;
    /**
     * Text displayed when tag is not writable
     */
    public static final int status_tag_not_writable=0x7f120af3;
    /**
     * About phone, status item value if the actual value is not available.
     */
    public static final int status_unavailable=0x7f120af4;
    /**
     * About phone, status item title.  How long the device has been running since its last reboot.
     */
    public static final int status_up_time=0x7f120af5;
    /**
     * About phone, status item title.  The MAC address of the Wi-Fi network adapter.
     */
    public static final int status_wifi_mac_address=0x7f120af6;
    public static final int status_wimax_mac_address=0x7f120af7;
    /**
     * Text displayed when tag successfully writen
     */
    public static final int status_write_success=0x7f120af8;
    /**
     * Item title describing storage used by apps [CHAR LIMIT=48]
     */
    public static final int storage_detail_apps=0x7f120af9;
    /**
     * Item title describing storage used by audio [CHAR LIMIT=48]
     */
    public static final int storage_detail_audio=0x7f120afa;
    /**
     * Item title describing storage used by cached data [CHAR LIMIT=48]
     */
    public static final int storage_detail_cached=0x7f120afb;
    /**
     * Body of dialog informing user about other files on a storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_detail_dialog_other=0x7f120afc;
    /**
     * Body of dialog informing user about the storage used by the Android System [CHAR LIMIT=NONE]
     */
    public static final int storage_detail_dialog_system=0x7f120afd;
    /**
     * Body of dialog informing user about other users on a storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_detail_dialog_user=0x7f120afe;
    /**
     * Item title that will launch a file explorer [CHAR LIMIT=48]
     */
    public static final int storage_detail_explore=0x7f120aff;
    /**
     * Item title describing storage used by images [CHAR LIMIT=48]
     */
    public static final int storage_detail_images=0x7f120b00;
    /**
     * Item title describing storage used by other data [CHAR LIMIT=48]
     */
    public static final int storage_detail_other=0x7f120b01;
    /**
     * Item title describing internal storage used by the Android System [CHAR LIMIT=48]
     */
    public static final int storage_detail_system=0x7f120b02;
    /**
     * Item title describing storage used by videos [CHAR LIMIT=48]
     */
    public static final int storage_detail_videos=0x7f120b03;
    /**
     * Dialog body informing user about an unmountable storage device. [CHAR LIMIT=NONE]
     */
    public static final int storage_dialog_unmountable=0x7f120b04;
    /**
     * Dialog body informing user about an unmounted storage device. [CHAR LIMIT=NONE]
     */
    public static final int storage_dialog_unmounted=0x7f120b05;
    /**
     * Dialog body informing user about an unsupported storage device. [CHAR LIMIT=NONE]
     */
    public static final int storage_dialog_unsupported=0x7f120b06;
    /**
     * Section header above list of external storage devices [CHAR LIMIT=30]
     */
    public static final int storage_external_title=0x7f120b07;
    /**
     * Preference label for the Files storage section. [CHAR LIMIT=50]
     */
    public static final int storage_files=0x7f120b08;
    /**
     * Toast informing that storage format operation failed. [CHAR LIMIT=64]
     */
    public static final int storage_format_failure=0x7f120b09;
    /**
     * Toast informing that storage format operation was successful. [CHAR LIMIT=64]
     */
    public static final int storage_format_success=0x7f120b0a;
    /**
     * Preference label for the Games storage section. [CHAR LIMIT=50]
     */
    public static final int storage_games=0x7f120b0b;
    /**
     * Body of dialog confirming that user wants to forget an internal storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_internal_forget_confirm=0x7f120b0c;
    /**
     * Title of dialog confirming that user wants to forget an internal storage device [CHAR LIMIT=32]
     */
    public static final int storage_internal_forget_confirm_title=0x7f120b0d;
    /**
     * Body of dialog informing user about consequences of forgetting an internal storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_internal_forget_details=0x7f120b0e;
    /**
     * Body of dialog informing user about consequences of formatting an internal storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_internal_format_details=0x7f120b0f;
    /**
     * Section header above list of internal storage devices [CHAR LIMIT=30]
     */
    public static final int storage_internal_title=0x7f120b10;
    /**
     * Body of dialog informing user about consequences of ejecting an internal storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_internal_unmount_details=0x7f120b11;
    /**
     * Manage applications, individual application info screen, section heading for stuff relating to an app's storage settings.
     */
    public static final int storage_label=0x7f120b12;
    /**
     * Settings item summary when storage is running low [CHAR LIMIT=NONE]
     */
    public static final int storage_low_summary=0x7f120b13;
    /**
     * Settings item title when storage is running low [CHAR LIMIT=32]
     */
    public static final int storage_low_title=0x7f120b14;
    /**
     * Indicates if the automatic storage manager is enabled or not. [CHAR_LIMIT=40]
     */
    public static final int storage_manager_indicator=0x7f120b15;
    /**
     * Off status for the automatic storage manager. [CHAR_LIMIT=10]
     */
    public static final int storage_manager_indicator_off=0x7f120b16;
    /**
     * On status for the automatic storage manager. [CHAR_LIMIT=10]
     */
    public static final int storage_manager_indicator_on=0x7f120b17;
    /**
     * Storage setting.  Menu option for exploring a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_explore=0x7f120b18;
    /**
     * Storage setting.  Menu option for forgetting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_forget=0x7f120b19;
    /**
     * Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_format=0x7f120b1a;
    /**
     * Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_format_private=0x7f120b1b;
    /**
     * Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_format_public=0x7f120b1c;
    /**
     * Storage setting. Menu option for using the deletion helper. [CHAR LIMIT=30]
     */
    public static final int storage_menu_free=0x7f120b1d;
    /**
     * Storage setting. Menu option for accessing the storage manager settings. [CHAR LIMIT=30]
     */
    public static final int storage_menu_manage=0x7f120b1e;
    /**
     * Storage setting.  Menu option for migrating data to a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_migrate=0x7f120b1f;
    /**
     * Storage setting.  Menu option for mounting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_mount=0x7f120b20;
    /**
     * Storage setting.  Menu option for renaming a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_rename=0x7f120b21;
    /**
     * Storage setting.  Menu option for setting up a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_set_up=0x7f120b22;
    /**
     * Storage setting.  Menu option for unmounting a storage device [CHAR LIMIT=30]
     */
    public static final int storage_menu_unmount=0x7f120b23;
    /**
     * Toast informing that storage unmount operation failed. [CHAR LIMIT=64]
     */
    public static final int storage_mount_failure=0x7f120b24;
    /**
     * Toast informing that storage mount operation was successful. [CHAR LIMIT=64]
     */
    public static final int storage_mount_success=0x7f120b25;
    /**
     * Preference label for the Movies & TV apps section [CHAR LIMIT=50]
     */
    public static final int storage_movies_tv=0x7f120b26;
    /**
     * Preference label for the Music & Audio storage section. [CHAR LIMIT=50]
     */
    public static final int storage_music_audio=0x7f120b27;
    /**
     * Preference label for the Other apps storage section. [CHAR LIMIT=50]
     */
    public static final int storage_other_apps=0x7f120b28;
    /**
     * Section header above list of other users storage [CHAR LIMIT=32]
     */
    public static final int storage_other_users=0x7f120b29;
    /**
     * Follows the percent of storage used by a storage volume. Exposed inside of a donut graph. [CHAR LIMIT=7]
     */
    public static final int storage_percent_full=0x7f120b2a;
    /**
     * Preference label for the Photos & Videos storage section. [CHAR LIMIT=50]
     */
    public static final int storage_photos_videos=0x7f120b2b;
    /**
     * Title of dialog prompting user to rename a storage volume [CHAR LIMIT=32]
     */
    public static final int storage_rename_title=0x7f120b2c;
    /**
     * Main settings screen item's title to go into the storage settings screen [CHAR LIMIT=25]
     */
    public static final int storage_settings=0x7f120b2d;
    /**
     * [CHAR LIMIT=100] Main settings screen item's summary for the SD card and storage settings
     */
    public static final int storage_settings_summary=0x7f120b2e;
    /**
     * Storage settings screen title
     */
    public static final int storage_settings_title=0x7f120b2f;
    /**
     * Summary of a single storage volume used space. [CHAR LIMIT=24]
     */
    public static final int storage_size_large=0x7f120b30;
    /**
     * Summary of a single storage volume used space. [CHAR LIMIT=24]
     */
    public static final int storage_size_large_alternate=0x7f120b31;
    /**
     * Summary of storage usage [CHAR LIMIT=NONE]
     */
    public static final int storage_summary=0x7f120b32;
    /**
     * Summary for app storage preference
     */
    public static final int storage_summary_format=0x7f120b33;
    /**
     * Summary of storage usage when there is SD card [CHAR LIMIT=NONE]
     */
    public static final int storage_summary_with_sdcard=0x7f120b34;
    /**
     * Storage setting.  Title for USB transfer settings [CHAR LIMIT=30]
     */
    public static final int storage_title_usb=0x7f120b35;
    /**
     * Summary describing external storage for applications [CHAR LIMIT=25]
     */
    public static final int storage_type_external=0x7f120b36;
    /**
     * Summary describing internal storage for applications [CHAR LIMIT=25]
     */
    public static final int storage_type_internal=0x7f120b37;
    /**
     * Toast informing that storage unmount operation failed. [CHAR LIMIT=64]
     */
    public static final int storage_unmount_failure=0x7f120b38;
    /**
     * Toast informing that storage unmount operation was successful. [CHAR LIMIT=64]
     */
    public static final int storage_unmount_success=0x7f120b39;
    /**
     * Main settings screen item's title to go into the storage & USB settings screen [CHAR LIMIT=25]
     */
    public static final int storage_usb_settings=0x7f120b3a;
    /**
     * Title of storage preference to control where app is stored
     */
    public static final int storage_used=0x7f120b3b;
    /**
     * Summary of a single storage volume, constrasting available and total storage space. [CHAR LIMIT=48]
     */
    public static final int storage_volume_summary=0x7f120b3c;
    /**
     * Summary of a single storage volume total space. [CHAR LIMIT=48]
     */
    public static final int storage_volume_total=0x7f120b3d;
    /**
     * Summary of a single storage volume total space. [CHAR LIMIT=48]
     */
    public static final int storage_volume_used=0x7f120b3e;
    /**
     * Summary of a single storage volume total space. [CHAR LIMIT=48]
     */
    public static final int storage_volume_used_total=0x7f120b3f;
    /**
     * Body of wizard step prompting user to format a storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_format_confirm_body=0x7f120b40;
    /**
     * Next button text of wizard step prompting user to format a storage device [CHAR LIMIT=32]
     */
    public static final int storage_wizard_format_confirm_next=0x7f120b41;
    /**
     * Body of wizard step prompting user to format a storage device [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_format_confirm_public_body=0x7f120b42;
    /**
     * Title of wizard step prompting user to format a storage device [CHAR LIMIT=32]
     * syntax error in translation for storage_wizard_format_confirm_body (4401758710076806509) org.xmlpull.v1.XmlPullParserException: expected: /string read: b (position:END_TAG </b>@1:86 in     <string name="storage_wizard_format_confirm_body" msgid="4401758710076806509"></b>"<xliff:g id="NAME_0">^1</xliff:g>NAME_0需要格式化，以策安全。\n\n<xliff:g id="NAME_1">^1</xliff:g>經格式化後只能用於這部裝置。\n\n"<b>"格式化將清除目前儲存在<xliff:g id="NAME_2">^1</xliff:g>的所有資料。為免遺失資料，請先備份。"</string>
     * )
     */
    public static final int storage_wizard_format_confirm_public_title=0x7f120b43;
    /**
     * Title of wizard step prompting user to format a storage device [CHAR LIMIT=32]
     */
    public static final int storage_wizard_format_confirm_title=0x7f120b44;
    /**
     * Body of wizard step showing formatting progress [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_format_progress_body=0x7f120b45;
    /**
     * Title of wizard step showing formatting progress [CHAR LIMIT=32]
     */
    public static final int storage_wizard_format_progress_title=0x7f120b46;
    /**
     * Summary of wizard choice to use storage device as external storage [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_init_external_summary=0x7f120b47;
    /**
     * Title of wizard choice to use storage device as external storage [CHAR LIMIT=64]
     */
    public static final int storage_wizard_init_external_title=0x7f120b48;
    /**
     * Summary of wizard choice to use storage device as internal storage [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_init_internal_summary=0x7f120b49;
    /**
     * Title of wizard choice to use storage device as internal storage [CHAR LIMIT=64]
     */
    public static final int storage_wizard_init_internal_title=0x7f120b4a;
    /**
     * Title of wizard step prompting user to setup a storage device [CHAR LIMIT=32]
     */
    public static final int storage_wizard_init_title=0x7f120b4b;
    /**
     * Body of wizard step prompting user to migrate data to new storage [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_body=0x7f120b4c;
    /**
     * Body of wizard step providing details about data migration [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_confirm_body=0x7f120b4d;
    /**
     * Title of wizard button prompting user to start data migration [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_confirm_next=0x7f120b4e;
    /**
     * Title of wizard step prompting user to start data migration [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_confirm_title=0x7f120b4f;
    /**
     * Body of wizard step providing details about data migration [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_details=0x7f120b50;
    /**
     * Title of wizard choice to migrate data at later time [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_migrate_later=0x7f120b51;
    /**
     * Title of wizard choice to migrate data right now [CHAR LIMIT=64]
     */
    public static final int storage_wizard_migrate_now=0x7f120b52;
    /**
     * Title of wizard step showing migration progress [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_progress_title=0x7f120b53;
    /**
     * Title of wizard step prompting user to migrate data to new storage [CHAR LIMIT=32]
     */
    public static final int storage_wizard_migrate_title=0x7f120b54;
    /**
     * Body of wizard step prompting user to move an app [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_move_confirm_body=0x7f120b55;
    /**
     * Title of wizard step prompting user to move an app [CHAR LIMIT=32]
     */
    public static final int storage_wizard_move_confirm_title=0x7f120b56;
    /**
     * Body of wizard step showing app move progress [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_move_progress_body=0x7f120b57;
    /**
     * Title of wizard button offering to cancel move [CHAR LIMIT=32]
     */
    public static final int storage_wizard_move_progress_cancel=0x7f120b58;
    /**
     * Title of wizard step showing app move progress [CHAR LIMIT=32]
     */
    public static final int storage_wizard_move_progress_title=0x7f120b59;
    /**
     * Body of wizard step indicating that external storage is ready [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_ready_external_body=0x7f120b5a;
    /**
     * Body of wizard step indicating that internal storage is ready [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_ready_internal_body=0x7f120b5b;
    /**
     * Title of wizard step indicating that storage is ready [CHAR LIMIT=32]
     */
    public static final int storage_wizard_ready_title=0x7f120b5c;
    /**
     * Title of wizard step prompting user to start data migration [CHAR LIMIT=NONE]
     */
    public static final int storage_wizard_slow_body=0x7f120b5d;
    /**
     * Services settings screen, setting option summary for the user to go to the screen to app storage use
     */
    public static final int storageuse_settings_summary=0x7f120b5e;
    /**
     * [CHAR LIMIT=25] Services settings screen, setting option name for the user to go to the screen to view app storage use
     */
    public static final int storageuse_settings_title=0x7f120b5f;
    /**
     * UI debug setting: always enable strict mode? [CHAR LIMIT=25]
     */
    public static final int strict_mode=0x7f120b60;
    /**
     * UI debug setting: show strict mode summary [CHAR LIMIT=50]
     */
    public static final int strict_mode_summary=0x7f120b61;
    /**
     * Summary for suggested actions for settings up a fingerprint lock
     */
    public static final int suggested_fingerprint_lock_settings_summary=0x7f120b62;
    /**
     * Title for suggested actions for settings up a fingerprint lock
     */
    public static final int suggested_fingerprint_lock_settings_title=0x7f120b63;
    /**
     * Summary for suggested actions for screen lock
     */
    public static final int suggested_lock_settings_summary=0x7f120b64;
    /**
     * Title for suggested actions for screen lock
     */
    public static final int suggested_lock_settings_title=0x7f120b65;
    /**
     * Title for suggestion adding more fingerprints [CHAR LIMIT=30]
     */
    public static final int suggestion_additional_fingerprints=0x7f120b66;
    /**
     * Summary for suggestion adding more fingerprints [CHAR LIMIT=60]
     */
    public static final int suggestion_additional_fingerprints_summary=0x7f120b67;
    /**
     * Name of option to remove a suggestion from the list [CHAR LIMIT=30]
     */
    public static final int suggestion_remove=0x7f120b68;
    /**
     * Title for the suggestions section on the dashboard, representing number of suggestions to show when expanded. [CHAR LIMIT=10]
     */
    public static final int suggestions_more_title=0x7f120b69;
    /**
     * Summary for the suggestions section on the dashboard, representing number of suggestions. [CHAR LIMIT=10]
     */
    public static final int suggestions_summary=0x7f120b6a;
    /**
     * Title for the suggestions section on the dashboard [CHAR LIMIT=30]
     */
    public static final int suggestions_title=0x7f120b6b;
    /**
     * mobile network settings screen, setting option summary text
     */
    public static final int sum_carrier_select=0x7f120b6c;
    /**
     * [CHAR LIMIT=40] General divider text when concatenating multiple items in a text summary
     */
    public static final int summary_divider_text=0x7f120b6d;
    /**
     * DO NOT TRANSLATE Empty summary for dynamic preferences
     */
    public static final int summary_empty=0x7f120b6e;
    /**
     * Sound & display settings screen, setting option summary displaying the currently selected font size
     */
    public static final int summary_font_size=0x7f120b6f;
    /**
     * DO NOT TRANSLATE Summary placeholder
     */
    public static final int summary_placeholder=0x7f120b70;
    /**
     * [CHAR LIMIT=40] General template for a symbolic start - end range in a text summary
     */
    public static final int summary_range_symbol_combination=0x7f120b71;
    /**
     * [CHAR LIMIT=40] General template for a verbal start to end range in a text summary
     */
    public static final int summary_range_verbal_combination=0x7f120b72;
    /**
     * DO NOT TRANSLATE Summary placeholder reserving 2 lines
     */
    public static final int summary_two_lines_placeholder=0x7f120b73;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int supplicant_state_label=0x7f120b74;
    /**
     * Spinner dropdown text, when selected will try to add account [CHAR LIMIT=60]
     */
    public static final int support_account_picker_add_account=0x7f120b75;
    /**
     * Prefix text for the account picker, e.g. "Requesting as user@gmail.com" [CHAR LIMIT=60]
     */
    public static final int support_account_request_prefix=0x7f120b76;
    /**
     * Template for formatting country and language. eg Canada - French [CHAR LIMIT=NONE]
     */
    public static final int support_country_format=0x7f120b77;
    /**
     * Button label for choosing country for phone support. [CHAR LIMIT=40]
     */
    public static final int support_country_list_title=0x7f120b78;
    /**
     * Checkbox text, when checked dialog will not show again [CHAR LIMIT=80]
     */
    public static final int support_disclaimer_do_not_show=0x7f120b79;
    /**
     * Dialog title displayed before initiating real time support [CHAR LIMIT=80]
     */
    public static final int support_disclaimer_title=0x7f120b7a;
    /**
     * Content description for connecting customer support. The "24 7" part indicates
     * support is available 24 hours a day, 7 days a week. It's used by screenreaders so it
     * cannot contain any symbol other that space. [CHAR LIMIT=80]
     */
    public static final int support_escalation_24_7_content_description=0x7f120b7b;
    /**
     * Summary text for connecting to 24/7 customer support [CHAR LIMIT=NONE]
     */
    public static final int support_escalation_24_7_summary=0x7f120b7c;
    /**
     * Title text for connecting to 24/7 available customer support [CHAR LIMIT=80]
     */
    public static final int support_escalation_24_7_title=0x7f120b7d;
    /**
     * Button label for contacting customer support by chat [CHAR LIMIT=20]
     */
    public static final int support_escalation_by_chat=0x7f120b7e;
    /**
     * Button label for contacting customer support by phone [CHAR LIMIT=20]
     */
    public static final int support_escalation_by_phone=0x7f120b7f;
    /**
     * Summary text when customer support is closed. [CHAR LIMIT=NONE]
     */
    public static final int support_escalation_closed_summary=0x7f120b80;
    /**
     * Summary text to call customer support when there is no internet. [CHAR LIMIT=NONE]
     */
    public static final int support_escalation_no_internet_summary=0x7f120b81;
    /**
     * Summary text for connecting to customer support [CHAR LIMIT=NONE]
     */
    public static final int support_escalation_summary=0x7f120b82;
    /**
     * Title text for connecting to customer support [CHAR LIMIT=80]
     */
    public static final int support_escalation_title=0x7f120b83;
    /**
     * Summary text when customer support is unavailable in the region. [CHAR LIMIT=NONE]
     */
    public static final int support_escalation_unavailable_summary=0x7f120b84;
    /**
     * Estimated wait time range for real time supports
     */
    public static final int support_estimated_wait_time=0x7f120b85;
    /**
     * Button label for visiting help and/or send feedback [CHAR LIMIT=60]
     */
    public static final int support_help_feedback_title=0x7f120b86;
    /**
     * Template for formatting support hours eg Mon - Fri, 8:00 AM - 19:30 PM. [CHAR LIMIT=NONE]
     */
    public static final int support_hour_format=0x7f120b87;
    /**
     * Description text warning international phone charge may apply when dialing support numbers. [CHAR LIMIT=NONE]
     */
    public static final int support_international_phone_summary=0x7f120b88;
    /**
     * Title text for a list of international support phone numbers. [CHAR LIMIT=60]
     */
    public static final int support_international_phone_title=0x7f120b89;
    /**
     * Template for formatting phone number and language. eg English (800-000-0000) [CHAR LIMIT=NONE]
     */
    public static final int support_phone_international_format=0x7f120b8a;
    /**
     * Button label for signing in an account [CHAR LIMIT=40]
     */
    public static final int support_sign_in_button_text=0x7f120b8b;
    /**
     * Button label that redirects user who needs help for signin to help screen [CHAR LIMIT=NONE]
     */
    public static final int support_sign_in_required_help=0x7f120b8c;
    /**
     * Summary text that indicates user needs to sign-in to get real time customer support. [CHAR LIMIT=NONE]
     */
    public static final int support_sign_in_required_summary=0x7f120b8d;
    /**
     * Title text that indicates user needs to sign in to get customer support. [CHAR LIMIT=80]
     */
    public static final int support_sign_in_required_title=0x7f120b8e;
    /**
     * Summary text for support setting tile [CHAR LIMIT=None]
     */
    public static final int support_summary=0x7f120b8f;
    /**
     * Title for the dialog containing system information shown [CHAR LIMIT=30]
     */
    public static final int support_system_information_title=0x7f120b90;
    /**
     * Button label for visiting the tips & tricks site [CHAR LIMIT=60]
     */
    public static final int support_tips_and_tricks_title=0x7f120b91;
    /**
     * Button for going to the previous screen or step [CHAR LIMIT=20]
     */
    public static final int suw_back_button_label=0x7f120b92;
    /**
     * Button for scrolling down to reveal more content on the screen [CHAR LIMIT=20]
     */
    public static final int suw_more_button_label=0x7f120b93;
    /**
     * Button for going to the next screen or step [CHAR LIMIT=20]
     */
    public static final int suw_next_button_label=0x7f120b94;
    public static final int switch_off_text=0x7f120b95;
    /**
     * Switch On/Off
     */
    public static final int switch_on_text=0x7f120b96;
    /**
     * Animation description for the sync active icon.
     */
    public static final int sync_active=0x7f120b97;
    /**
     * Title for a checkbox that enables data synchronization in the account and sync screen [CHAR LIMIT=35]
     */
    public static final int sync_automatically=0x7f120b98;
    /**
     * Data synchronization settings screen, checkbox setting option name. Controls whether Calendar shoudl be synced.
     */
    public static final int sync_calendar=0x7f120b99;
    /**
     * Data synchronization settings screen, checkbox setting option name
     */
    public static final int sync_contacts=0x7f120b9a;
    /**
     * Sync status shown when sync is disabled [CHAR LIMIT=25]
     */
    public static final int sync_disabled=0x7f120b9b;
    /**
     * Sync status shown when sync is enabled [CHAR LIMIT=25]
     */
    public static final int sync_enabled=0x7f120b9c;
    /**
     * Sync status shown when last sync resulted in an error [CHAR LIMIT=25]
     */
    public static final int sync_error=0x7f120b9d;
    /**
     * Image description for the sync failed icon.
     */
    public static final int sync_failed=0x7f120b9e;
    /**
     * Data synchronization settings screen, checkbox setting option name. Controls whether Gmail should be synced.  Should use "Gmail" to refer to this app.
     */
    public static final int sync_gmail=0x7f120b9f;
    /**
     * Sync status shown when sync is disabled [CHAR LIMIT=30]
     */
    public static final int sync_in_progress=0x7f120ba0;
    /**
     * Message when sync is currently failing [CHAR LIMIT=100]
     */
    public static final int sync_is_failing=0x7f120ba1;
    /**
     * Formatter in AccountSyncSettings for each application we wish to synchronize, e.g. "Sync Calendar"
     */
    public static final int sync_item_title=0x7f120ba2;
    /**
     * Data synchronization settings screen, menu option
     */
    public static final int sync_menu_sync_cancel=0x7f120ba3;
    /**
     * Data synchronization settings screen, menu option
     */
    public static final int sync_menu_sync_now=0x7f120ba4;
    /**
     * Data synchronization settings screen, summary of a sync provider (for example, Gmail) when autosync is off and the user wants to do a one-time sync.
     */
    public static final int sync_one_time_sync=0x7f120ba5;
    /**
     * Message introducing the user to Google Sync.
     */
    public static final int sync_plug=0x7f120ba6;
    /**
     * Title for the apps that are allowed to display over other apps [CHAR LIMIT=60]
     */
    public static final int system_alert_window_access_title=0x7f120ba7;
    /**
     * Title for the apps with SYSTEM_ALERT_WINDOW permission/privilege [CHAR LIMIT=20]
     */
    public static final int system_alert_window_apps_title=0x7f120ba8;
    /**
     * Settings title in main settings screen for SYSTEM_ALERT_WINDOW [CHAR LIMIT=45]
     */
    public static final int system_alert_window_settings=0x7f120ba9;
    /**
     * Summary of number of apps currently can display over other apps [CHAR LIMIT=60]
     */
    public static final int system_alert_window_summary=0x7f120baa;
    /**
     * Label of system app for current setting
     */
    public static final int system_app=0x7f120bab;
    /**
     * Summary text for system preference tile, showing important setting items under system setting [CHAR LIMIT=NONE]
     */
    public static final int system_dashboard_summary=0x7f120bac;
    /**
     * Label of system and default app for current setting
     */
    public static final int system_default_app=0x7f120bad;
    public static final int system_package=0x7f120bae;
    /**
     * Turn on settings for system ui tuner [CHAR LIMIT=40]
     */
    public static final int system_ui_settings=0x7f120baf;
    /**
     * About phone screen, list item summary.  Takes the user to the screen for seeing and installing system updates. [CHAR LIMIT=40]
     */
    public static final int system_update_settings_list_item_summary=0x7f120bb0;
    /**
     * About phone screen, list item title.  Takes the user to the screen for seeing and installing system updates. [CHAR LIMIT=40]
     */
    public static final int system_update_settings_list_item_title=0x7f120bb1;
    /**
     * Summary for the Talkback Accessibility Service. Lets the user know that Talkback is a screenreader and that it is usually most helpful to blind and low vision users and whether the service is on. [CHAR_LIMIT=none]
     */
    public static final int talkback_summary=0x7f120bb2;
    /**
     * Title for the Talkback Accessibility Service. Displayed on the Accessibility Settings screen in Setup Wizard. [CHAR_LIMIT=25]
     */
    public static final int talkback_title=0x7f120bb3;
    /**
     * Label for tap to wake setting [CHAR LIMIT=30]
     */
    public static final int tap_to_wake=0x7f120bb4;
    /**
     * Summary for take to wake setting [CHAR LIMIT=90]
     */
    public static final int tap_to_wake_summary=0x7f120bb5;
    /**
     * UI debug setting: title for Telephonymonitor switch [CHAR LIMIT=50]
     */
    public static final int telephony_monitor_switch=0x7f120bb6;
    /**
     * UI debug setting: summary for switch of Telephonymonitor [CHAR LIMIT=500]
     */
    public static final int telephony_monitor_switch_summary=0x7f120bb7;
    /**
     * Toast message letting the user know the how to trigger telephony monitor
     */
    public static final int telephony_monitor_toast=0x7f120bb8;
    /**
     * About phone settings screen, setting option name to see terms and conditions
     */
    public static final int terms_title=0x7f120bb9;
    /**
     * This is for diagnostics screen. The title of a screen with various items realted to launching screens that will giev the user info. For example, it contains "Phone information" and "Battery information"
     */
    public static final int testing=0x7f120bba;
    /**
     * In the Testing screen.  The item title of the activity that shows a bunch of phone-related information.
     */
    public static final int testing_phone_info=0x7f120bbb;
    /**
     * Do not translate. In the Testing screen. The item title of the activity that shows a bunch of SIM-related operations.
     */
    public static final int testing_sim_toolkit=0x7f120bbc;
    /**
     * In the Testing screen. The item title of the activity that shows usage statistics.
     */
    public static final int testing_usage_stats=0x7f120bbd;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Wi-Fi Testing on the diagnostic screen
     */
    public static final int testing_wifi_info=0x7f120bbe;
    /**
     * Tethering controls, footer note displayed when tethering is disabled because Data Saver mode is on [CHAR LIMIT=none]
     */
    public static final int tether_settings_disabled_on_data_saver=0x7f120bbf;
    /**
     * Tethering setting summary when Wi-Fi hotspot is off and tether is on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_off_tether_on=0x7f120bc0;
    /**
     * Tethering setting summary when Wi-Fi hotspot is on and tether is off [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_on_tether_off=0x7f120bc1;
    /**
     * Tethering setting summary when both Wi-Fi hotspot and tether are turned on [CHAR LIMIT=NONE]
     */
    public static final int tether_settings_summary_hotspot_on_tether_on=0x7f120bc2;
    /**
     * Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=60]
     */
    public static final int tether_settings_title_all=0x7f120bc3;
    /**
     * Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_bluetooth=0x7f120bc4;
    /**
     * Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_usb=0x7f120bc5;
    /**
     * Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_usb_bluetooth=0x7f120bc6;
    /**
     * Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]
     */
    public static final int tether_settings_title_wifi=0x7f120bc7;
    /**
     * Tethering footer info [CHAR LIMIT=NONE]
     */
    public static final int tethering_footer_info=0x7f120bc8;
    /**
     * Setting Checkbox title whether to enable hardware acceleration for tethering. [CHAR LIMIT=80]
     */
    public static final int tethering_hardware_offload=0x7f120bc9;
    public static final int tethering_hardware_offload_summary=0x7f120bca;
    /**
     * Tethering help button - calls up a web view with general tethering info
     */
    public static final int tethering_help_button_text=0x7f120bcb;
    /**
     * Error message for users that aren't allowed to modify Tethering settings [CHAR LIMIT=none]
     */
    public static final int tethering_settings_not_available=0x7f120bcc;
    /**
     * Title string shown above TimePicker, letting a user select system time
     * [CHAR LIMIT=20]
     */
    public static final int time_picker_title=0x7f120bcd;
    /**
     * Do not translate. This is a stub which will be removed soon.
     */
    public static final int time_zone_auto_stub=0x7f120bce;
    /**
     * Title used on dialog with final prompt for converting to file encryption
     */
    public static final int title_convert_fbe=0x7f120bcf;
    /**
     * [CHAR LIMIT=30] Sound & display settings screen, setting option name to change font size
     */
    public static final int title_font_size=0x7f120bd0;
    /**
     * Label for total memory of device [CHAR LIMIT=25]
     */
    public static final int total_memory=0x7f120bd1;
    /**
     * Manage applications, individual application info screen,label under Storage heading.  The total storage space taken up by this app.
     */
    public static final int total_size_label=0x7f120bd2;
    /**
     * Warning shown when user input has been blocked due to another app overlaying screen
     * content. Since we don't know what the app is showing on top of the input target, we
     * can't verify user consent. [CHAR LIMIT=NONE]
     */
    public static final int touch_filtered_warning=0x7f120bd3;
    /**
     * Sound: Other sounds: Title for the option enabling touch sounds. [CHAR LIMIT=30]
     */
    public static final int touch_sounds_title=0x7f120bd4;
    /**
     * UI debug setting: profile time taken by hardware acceleration to render apps [CHAR LIMIT=25]
     */
    public static final int track_frame_time=0x7f120bd5;
    /**
     * UI debug setting: scaling factor for transition animations [CHAR LIMIT=25]
     */
    public static final int transition_animation_scale_title=0x7f120bd6;
    /**
     * Trigger Carrier Provisioning [CHAR LIMIT=NONE]
     */
    public static final int trigger_carrier_provisioning=0x7f120bd7;
    /**
     * Title of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=30]
     */
    public static final int trusted_credentials=0x7f120bd8;
    /**
     * Alert dialog confirmation when disabling a system CA certificate.
     */
    public static final int trusted_credentials_disable_confirmation=0x7f120bd9;
    /**
     * Button label for disabling a system CA certificate.
     */
    public static final int trusted_credentials_disable_label=0x7f120bda;
    /**
     * Alert dialog confirmation when enabling a system CA certificate.
     */
    public static final int trusted_credentials_enable_confirmation=0x7f120bdb;
    /**
     * Button label for enabling a system CA certificate.
     */
    public static final int trusted_credentials_enable_label=0x7f120bdc;
    /**
     * Alert dialog confirmation when removing a user CA certificate.
     */
    public static final int trusted_credentials_remove_confirmation=0x7f120bdd;
    /**
     * Button label for removing a user CA certificate.
     */
    public static final int trusted_credentials_remove_label=0x7f120bde;
    /**
     * Summary of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=NONE]
     */
    public static final int trusted_credentials_summary=0x7f120bdf;
    /**
     * Tab label for built-in system CA certificates.
     */
    public static final int trusted_credentials_system_tab=0x7f120be0;
    /**
     * Button label for trusting a user CA certificate.
     */
    public static final int trusted_credentials_trust_label=0x7f120be1;
    /**
     * Tab label for user added CA certificates.
     */
    public static final int trusted_credentials_user_tab=0x7f120be2;
    /**
     * On main TTS Settings screen, summary for default language for synthesized voice
     */
    public static final int tts_default_lang_summary=0x7f120be3;
    /**
     * On main TTS Settings screen, in default settings section, setting default language for synthesized voice
     */
    public static final int tts_default_lang_title=0x7f120be4;
    /**
     * On main TTS Settings screen, summary for default pitch for synthesized voice
     */
    public static final int tts_default_pitch_summary=0x7f120be5;
    /**
     * On main TTS Settings screen, in default settings section, setting default pitch for synthesized voice
     */
    public static final int tts_default_pitch_title=0x7f120be6;
    /**
     * On main TTS Settings screen, summary for default speech rate for synthesized voice
     */
    public static final int tts_default_rate_summary=0x7f120be7;
    /**
     * On main TTS Settings screen, in default settings section, setting default speech rate for synthesized voice
     */
    public static final int tts_default_rate_title=0x7f120be8;
    /**
     * Text spoken by the TTS engine as an example if the engine doesn't provide sample text [CHAR LIMIT=100]
     */
    public static final int tts_default_sample_string=0x7f120be9;
    /**
     * Warning message about required internet conectivity for TTS synthesis, displayed as a dialog
     * message when the user selects to play an example for network only locale and there's no internet connectivity.
     */
    public static final int tts_engine_network_required=0x7f120bea;
    /**
     * [CHAR LIMIT=50] The text for the settings section that users to set a
     * preferred text to speech engine
     */
    public static final int tts_engine_preference_section_title=0x7f120beb;
    /**
     * [CHAR LIMIT=50] The text for the settings section that is used to set a preferred text to speech engine
     */
    public static final int tts_engine_preference_title=0x7f120bec;
    /**
     * [CHAR LIMIT=50] Name for the general text to speech settings section.
     */
    public static final int tts_engine_section_title=0x7f120bed;
    /**
     * Warning message about security implications of enabling a TTS engine, displayed as a dialog
     * message when the user selects to enable an engine.
     */
    public static final int tts_engine_security_warning=0x7f120bee;
    /**
     * [CHAR LIMIT=150] Text for screen readers / accessibility programs for
     * the image that launches the TTS engine settings when clicked.
     */
    public static final int tts_engine_settings_button=0x7f120bef;
    /**
     * [CHAR LIMIT=50] The text for a settings screen of the currently set text to speech engine
     */
    public static final int tts_engine_settings_title=0x7f120bf0;
    /**
     * [CHAR LIMIT=50] Title of the settings section that displays general preferences
     * that are applicable to all engines, such as the speech rate
     */
    public static final int tts_general_section_title=0x7f120bf1;
    /**
     * On main TTS Settings screen, summary for click to install required speech synthesis data
     */
    public static final int tts_install_data_summary=0x7f120bf2;
    /**
     * On main TTS Settings screen, click to install required speech synthesis data
     */
    public static final int tts_install_data_title=0x7f120bf3;
    /**
     * [CHAR LIMIT=50] Name for the button that goes to the voice selection screen.
     */
    public static final int tts_install_voice_title=0x7f120bf4;
    /**
     * Text of the button on the pop-up to install 3P voices on first use to cancel the operation.
     */
    public static final int tts_install_voices_cancel=0x7f120bf5;
    /**
     * Text of the button on the pop-up to install 3P voices on first use to procedd to the 3p app.
     */
    public static final int tts_install_voices_open=0x7f120bf6;
    /**
     * Text of the pop-up to install 3P voices on first use.
     */
    public static final int tts_install_voices_text=0x7f120bf7;
    /**
     * Title of the pop-up to install 3P voices on first use.
     */
    public static final int tts_install_voices_title=0x7f120bf8;
    /**
     * On main TTS Settings screen, language summary if it can't default to system language [CHAR LIMIT=50]
     */
    public static final int tts_lang_not_selected=0x7f120bf9;
    /**
     * Entry in the TTS engine language/locale picker, when selected will try to default to the system language [CHAR LIMIT=50]
     */
    public static final int tts_lang_use_system=0x7f120bfa;
    /**
     * Name for buttont hat plays a sample of the currently selected text-to-speech engine.
     */
    public static final int tts_play=0x7f120bfb;
    /**
     * On main TTS Settings screen, summary for triggering playback of an example of speech synthesis
     */
    public static final int tts_play_example_summary=0x7f120bfc;
    /**
     * On main TTS Settings screen, triggers playback of an example of speech synthesis
     */
    public static final int tts_play_example_title=0x7f120bfd;
    /**
     * Name for button that resets speech rate and pitch for synthesized voice to default values in the text to speech settings.
     */
    public static final int tts_reset=0x7f120bfe;
    /**
     * On main TTS Settings screen, summary for reset speech pitch of synthesized voice [CHAR LIMIT=150]
     */
    public static final int tts_reset_speech_pitch_summary=0x7f120bff;
    /**
     * On main TTS Settings screen, in default settings section,
     * reset speech pitch of synthesized voice to 1x speech pitch. [CHAR LIMIT=50]
     */
    public static final int tts_reset_speech_pitch_title=0x7f120c00;
    /**
     * Name of the TTS package as listed by the package manager.
     */
    public static final int tts_settings=0x7f120c01;
    /**
     * TTS option item name in the main settings screen
     */
    public static final int tts_settings_title=0x7f120c02;
    /**
     * [CHAR LIMIT=50] The text for a button that goes to the speech rate and pitch settings for text to speech.
     */
    public static final int tts_sliders_title=0x7f120c03;
    /**
     * The text for the settings to choose the language to use on TTS.
     */
    public static final int tts_spoken_language=0x7f120c04;
    /**
     * On main TTS Settings screen, current TTS engine status for the current default language,
     * tts engine is queried for status [CHAR LIMIT=150]
     */
    public static final int tts_status_checking=0x7f120c05;
    /**
     * On main TTS Settings screen, current TTS engine status for the current default language,
     * selected language is not supported by the engine [CHAR LIMIT=150]
     */
    public static final int tts_status_not_supported=0x7f120c06;
    /**
     * On main TTS Settings screen, current TTS engine status for the current default language,
     * selected language is fully supported by the engine [CHAR LIMIT=150]
     */
    public static final int tts_status_ok=0x7f120c07;
    /**
     * On main TTS Settings screen, current TTS engine status for the current default language,
     * selected language is supported by the engine only if there's a working network connection [CHAR LIMIT=150]
     */
    public static final int tts_status_requires_network=0x7f120c08;
    /**
     * On main TTS Settings screen, title of a field explaining current TTS engine status for
     * current default language [CHAR LIMIT=50]
     */
    public static final int tts_status_title=0x7f120c09;
    /**
     * Manage applications, individual application info screen, menu item to uninstall an application for all users.
     */
    public static final int uninstall_all_users_text=0x7f120c0a;
    /**
     * Label for button to uninstall the device admin app [CHAR LIMIT=80]
     */
    public static final int uninstall_device_admin=0x7f120c0b;
    /**
     * Manage applications, individual application info screen, button label under Storage heading. Button to remove the application from the system.
     */
    public static final int uninstall_text=0x7f120c0c;
    /**
     * Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.
     */
    public static final int unknown=0x7f120c0d;
    /**
     * Warning toast shown when data usage screen can't find specified app
     */
    public static final int unknown_app=0x7f120c0e;
    /**
     * Title shown on security settings to allow the user to change their lockscreen password [CHAR LIMIT=22]
     */
    public static final int unlock_change_lock_password_title=0x7f120c0f;
    /**
     * Title shown on security settings to allow the user to change their lockscreen pattern [CHAR LIMIT=22]
     */
    public static final int unlock_change_lock_pattern_title=0x7f120c10;
    /**
     * Title shown on security settings to allow the user to change their lockscreen PIN [CHAR LIMIT=22]
     */
    public static final int unlock_change_lock_pin_title=0x7f120c11;
    /**
     * Content of the dialog shown when the user removes the device lock password [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_password=0x7f120c12;
    /**
     * Content of the dialog shown when the user removes the device lock password and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_password_fingerprint=0x7f120c13;
    /**
     * Content of the dialog shown when the user removes the profile lock password and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_password_fingerprint_profile=0x7f120c14;
    /**
     * Content of the dialog shown when the user removes the profile lock password [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_password_profile=0x7f120c15;
    /**
     * Content of the dialog shown when the user removes the device lock pattern [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pattern=0x7f120c16;
    /**
     * Content of the dialog shown when the user removes the device lock pattern and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pattern_fingerprint=0x7f120c17;
    /**
     * Content of the dialog shown when the user removes the profile lock pattern and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pattern_fingerprint_profile=0x7f120c18;
    /**
     * Content of the dialog shown when the user removes the profile lock pattern [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pattern_profile=0x7f120c19;
    /**
     * Content of the dialog shown when the user removes the device lock PIN [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pin=0x7f120c1a;
    /**
     * Content of the dialog shown when the user removes the device lock PIN and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pin_fingerprint=0x7f120c1b;
    /**
     * Content of the dialog shown when the user removes the profile lock PIN and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pin_fingerprint_profile=0x7f120c1c;
    /**
     * Content of the dialog shown when the user removes the profile lock PIN [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_pin_profile=0x7f120c1d;
    /**
     * Content of the dialog shown when the user removes the device lock of unknown type [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_unknown=0x7f120c1e;
    /**
     * Content of the dialog shown when the user removes the device lock of unknown type and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_unknown_fingerprint=0x7f120c1f;
    /**
     * Content of the dialog shown when the user removes the profile lock of unknown type and the user has fingerprints enrolled [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_unknown_fingerprint_profile=0x7f120c20;
    /**
     * Content of the dialog shown when the user removes the profile lock of unknown type [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_content_unknown_profile=0x7f120c21;
    /**
     * Affirmative action of the dialog shown when the user removes the device lock [CHAR LIMIT=25]
     */
    public static final int unlock_disable_frp_warning_ok=0x7f120c22;
    /**
     * Title of the dialog shown when the user removes the device lock [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_title=0x7f120c23;
    /**
     * Title of the dialog shown when the user removes the profile lock [CHAR LIMIT=NONE]
     */
    public static final int unlock_disable_frp_warning_title_profile=0x7f120c24;
    /**
     * Title for option to turn of password/pin/pattern unlock. [CHAR LIMIT=22]
     */
    public static final int unlock_disable_lock_title=0x7f120c25;
    /**
     * Title for preference that allows the user to setup their lock screen preference later [CHAR LIMIT=22]
     */
    public static final int unlock_set_do_later_title=0x7f120c26;
    /**
     * Summary for preference that has been disabled by because of the DevicePolicyAdmin, or because device encryption is enabled, or because there are credentials in the credential storage [CHAR LIMIT=50]
     */
    public static final int unlock_set_unlock_disabled_summary=0x7f120c27;
    /**
     * Summary for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_launch_picker_change_summary=0x7f120c28;
    /**
     * Title for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_launch_picker_change_title=0x7f120c29;
    /**
     * Summary for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_launch_picker_enable_summary=0x7f120c2a;
    /**
     * Summary for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=NONE]
     */
    public static final int unlock_set_unlock_launch_picker_summary_lock_after_timeout=0x7f120c2b;
    /**
     * Summary for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=NONE]
     */
    public static final int unlock_set_unlock_launch_picker_summary_lock_immediately=0x7f120c2c;
    /**
     * Title for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_launch_picker_title=0x7f120c2d;
    /**
     * Title for PreferenceScreen to launch picker for security method for the managed profile when there is none [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_launch_picker_title_profile=0x7f120c2e;
    /**
     * Summary for "Configure lockscreen" when security is disabled [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_none=0x7f120c2f;
    /**
     * Summary for "Configure lockscreen" when lock screen is off [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_off=0x7f120c30;
    /**
     * Summary for "Configure lockscreen" when security password is enabled [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_password=0x7f120c31;
    /**
     * Summary for "Configure lockscreen" when security pattern is enabled [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_pattern=0x7f120c32;
    /**
     * Summary for "Configure lockscreen" when security PIN is enabled [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_mode_pin=0x7f120c33;
    /**
     * Summary for preference that disables unlock security [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_none_summary=0x7f120c34;
    /**
     * Title for preference that disables unlock security [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_none_title=0x7f120c35;
    /**
     * Summary for preference that disables unlock security [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_off_summary=0x7f120c36;
    /**
     * Title for preference that disables unlock security [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_off_title=0x7f120c37;
    /**
     * Title for preference that guides the user through creating an unlock password [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_password_summary=0x7f120c38;
    /**
     * Title for preference that guides the user through creating an unlock password [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_password_title=0x7f120c39;
    /**
     * Summary for preference that guides the user through creating an unlock pattern [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_pattern_summary=0x7f120c3a;
    /**
     * Title for preference that guides the user through creating an unlock pattern [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_pattern_title=0x7f120c3b;
    /**
     * Summary for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=45]
     */
    public static final int unlock_set_unlock_pin_summary=0x7f120c3c;
    /**
     * Title for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=22]
     */
    public static final int unlock_set_unlock_pin_title=0x7f120c3d;
    /**
     * Footer text in when choosing screen lock type during setup wizard, telling the user that
     * they can add fingerprint after they complete setup wizard. The text "Settings > Security"
     * should match settings_label and security_settings_title [CHAR LIMIT=NONE]
     */
    public static final int unlock_setup_wizard_fingerprint_details=0x7f120c3e;
    /**
     * SD card unmount informative text   [CHAR LIMIT=NONE]
     */
    public static final int unmount_inform_text=0x7f120c3f;
    /**
     * Title for switch to allow app unrestricted data usage [CHAR LIMIT=30]
     */
    public static final int unrestricted_app_summary=0x7f120c40;
    /**
     * Title for switch to allow app unrestricted data usage [CHAR LIMIT=30]
     */
    public static final int unrestricted_app_title=0x7f120c41;
    /**
     * Button that leads to list of apps with unrestricted data access [CHAR LIMIT=60]
     */
    public static final int unrestricted_data_saver=0x7f120c42;
    /**
     * Name to assign to a Network Access Point that was saved without a name
     */
    public static final int untitled_apn=0x7f120c43;
    /**
     * Label for category for data usage [CHAR LIMIT=30]
     */
    public static final int usage=0x7f120c44;
    /**
     * Title of usage access screen [CHAR LIMIT=30]
     */
    public static final int usage_access=0x7f120c45;
    /**
     * Description of the usage access setting [CHAR LIMIT=NONE]
     */
    public static final int usage_access_description=0x7f120c46;
    /**
     * Title of Usage Access preference item [CHAR LIMIT=30]
     */
    public static final int usage_access_title=0x7f120c47;
    /**
     * XXX remove? Strings used for displaying usage statistics
     */
    public static final int usage_stats_label=0x7f120c48;
    /**
     * label for usage time
     */
    public static final int usage_time_label=0x7f120c49;
    /**
     * [CHAR_LIMIT=NONE] Label for amount of power use that was actually observed (though
     * the change in battery level)
     */
    public static final int usage_type_actual_power=0x7f120c4a;
    /**
     * Label for Audio usage time
     */
    public static final int usage_type_audio=0x7f120c4b;
    /**
     * Label for Camera usage time
     */
    public static final int usage_type_camera=0x7f120c4c;
    /**
     * [CHAR_LIMIT=NONE] Label for amount of power use that was computed
     */
    public static final int usage_type_computed_power=0x7f120c4d;
    /**
     * Label for CPU usage time
     */
    public static final int usage_type_cpu=0x7f120c4e;
    /**
     * Label for CPU usage in foreground
     */
    public static final int usage_type_cpu_foreground=0x7f120c4f;
    /**
     * Label for mobile network data received [CHAR LIMIT=32]
     */
    public static final int usage_type_data_recv=0x7f120c50;
    /**
     * Label for mobile network data sent [CHAR LIMIT=32]
     */
    public static final int usage_type_data_send=0x7f120c51;
    /**
     * Label for Wi-Fi network data received [CHAR LIMIT=32]
     */
    public static final int usage_type_data_wifi_recv=0x7f120c52;
    /**
     * Label for Wi-Fi network data sent [CHAR LIMIT=32]
     */
    public static final int usage_type_data_wifi_send=0x7f120c53;
    /**
     * Label for Flashlight usage time
     */
    public static final int usage_type_flashlight=0x7f120c54;
    /**
     * Label for GPS usage time
     */
    public static final int usage_type_gps=0x7f120c55;
    /**
     * Label for time that there was no cell coverage
     */
    public static final int usage_type_no_coverage=0x7f120c56;
    /**
     * Label for time that a feature has been on
     */
    public static final int usage_type_on_time=0x7f120c57;
    /**
     * Label for Phone usage time
     */
    public static final int usage_type_phone=0x7f120c58;
    /**
     * Label for mobile network radio active time [CHAR LIMIT=32]
     */
    public static final int usage_type_radio_active=0x7f120c59;
    /**
     * Label for the total power capacity of the device's battery
     */
    public static final int usage_type_total_battery_capacity=0x7f120c5a;
    /**
     * Label for Video usage time
     */
    public static final int usage_type_video=0x7f120c5b;
    /**
     * [CHAR LIMIT=25] Label for keeping device from sleeping
     */
    public static final int usage_type_wake_lock=0x7f120c5c;
    /**
     * [CHAR LIMIT=25] Label for WIFI usage time
     */
    public static final int usage_type_wifi_running=0x7f120c5d;
    /**
     * UI debug setting: disable USB audio routing title [CHAR LIMIT=32]
     */
    public static final int usb_audio_disable_routing=0x7f120c5e;
    /**
     * UI debug setting: disable USB audio routing summary [CHAR LIMIT=50]
     */
    public static final int usb_audio_disable_routing_summary=0x7f120c5f;
    /**
     * Storage setting.  USB connection category [CHAR LIMIT=30]
     */
    public static final int usb_connection_category=0x7f120c60;
    /**
     * Storage setting.  Summary for MIDI checkbox [CHAR LIMIT=NONE]
     */
    public static final int usb_midi_summary=0x7f120c61;
    /**
     * Storage setting.  Title for MIDI checkbox [CHAR LIMIT=30]
     */
    public static final int usb_midi_title=0x7f120c62;
    /**
     * Storage setting.  Summary for MTP checkbox [CHAR LIMIT=NONE]
     */
    public static final int usb_mtp_summary=0x7f120c63;
    /**
     * Storage setting.  Title for MTP checkbox [CHAR LIMIT=30]
     */
    public static final int usb_mtp_title=0x7f120c64;
    /**
     * Settings item title for USB preference [CHAR LIMIT=35]
     */
    public static final int usb_pref=0x7f120c65;
    /**
     * Storage setting.  Summary for PTP checkbox [CHAR LIMIT=NONE]
     */
    public static final int usb_ptp_summary=0x7f120c66;
    /**
     * Storage setting.  Title for PTP checkbox [CHAR LIMIT=30]
     */
    public static final int usb_ptp_title=0x7f120c67;
    /**
     * Settings item summary for USB preference when set to entering MIDI mode [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_MIDI=0x7f120c68;
    /**
     * Settings item summary for USB preference when set to charging only [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_charging_only=0x7f120c69;
    /**
     * Settings item summary for USB preference when set to transferring files via MTP [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_file_transfers=0x7f120c6a;
    /**
     * Settings item summary for USB preference when set to transferring photos via PTP [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_photo_transfers=0x7f120c6b;
    /**
     * Settings item summary for USB preference when set to powering the other device only [CHAR LIMIT=NONE]
     */
    public static final int usb_summary_power_only=0x7f120c6c;
    public static final int usb_tethering_button_text=0x7f120c6d;
    public static final int usb_tethering_subtext=0x7f120c6e;
    /**
     * USB Tethering options
     */
    public static final int usb_title=0x7f120c6f;
    /**
     * The title used in a dialog which lets the user select what the USB connection
     * for this device should be used for. Choices are usb_use_charging_only,
     * usb_use_file_transfer, use_use_photo_transfer, and usb_use_MIDI
     */
    public static final int usb_use=0x7f120c70;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for entering MIDI mode.
     */
    public static final int usb_use_MIDI=0x7f120c71;
    /**
     * Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for entering MIDI mode.
     */
    public static final int usb_use_MIDI_desc=0x7f120c72;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for charging only.
     */
    public static final int usb_use_charging_only=0x7f120c73;
    /**
     * Decription of one of the choices in a dialog (with title defined in usb_use) that lets the
     * user select what the USB connection for this device should be used for. This choice
     * is for charging only.
     */
    public static final int usb_use_charging_only_desc=0x7f120c74;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transferring files via MTP.
     */
    public static final int usb_use_file_transfers=0x7f120c75;
    /**
     * Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transferring files via MTP.
     */
    public static final int usb_use_file_transfers_desc=0x7f120c76;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transferring photos via PTP.
     */
    public static final int usb_use_photo_transfers=0x7f120c77;
    /**
     * Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for transferring photos via PTP.
     */
    public static final int usb_use_photo_transfers_desc=0x7f120c78;
    /**
     * Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
     * select what the USB connection for this device should be used for. This choice
     * is for powering the other device only.
     */
    public static final int usb_use_power_only=0x7f120c79;
    /**
     * Decription of one of the choices in a dialog (with title defined in usb_use) that lets the
     * user select what the USB connection for this device should be used for. This choice
     * is for powering the other device.
     */
    public static final int usb_use_power_only_desc=0x7f120c7a;
    /**
     * [CHAR_LIMIT=100] Security & location settings screen, setting check box summary for Google search
     */
    public static final int use_location_summary=0x7f120c7b;
    /**
     * [CHAR_LIMIT=30] Security & location settings screen, setting check box label for Google search
     */
    public static final int use_location_title=0x7f120c7c;
    /**
     * Checkbox summary for option to connect to open Wi-Fi automatically  [CHAR LIMIT=100]
     */
    public static final int use_open_wifi_automatically_summary=0x7f120c7d;
    /**
     * Checkbox summary for option to connect to open Wi-Fi automatically, to explain that a compatible network rating provider needs to be selected to use the feature.
     */
    public static final int use_open_wifi_automatically_summary_scorer_unsupported_disabled=0x7f120c7e;
    /**
     * Checkbox summary for option to connect to open Wi-Fi automatically, to explain that a network rating provider needs to be selected to use the feature.
     */
    public static final int use_open_wifi_automatically_summary_scoring_disabled=0x7f120c7f;
    /**
     * Checkbox title for option to connect to open Wi-Fi automatically [CHAR LIMIT=40]
     */
    public static final int use_open_wifi_automatically_title=0x7f120c80;
    /**
     * Title for settings whether or not the framework will select input methods in an IME based
     * on the current system locales. (The user can select multiple system locales)
     * [CHAR LIMIT=35]
     */
    public static final int use_system_language_to_select_input_method_subtypes=0x7f120c81;
    /**
     * User account title [CHAR LIMIT=30]
     */
    public static final int user_account_title=0x7f120c82;
    /**
     * Summary for add user action, when it's disabled [CHAR LIMIT=100]
     */
    public static final int user_add_max_count=0x7f120c83;
    /**
     * User settings item to allow creating new users from locks screen [CHAR LIMIT=50]
     */
    public static final int user_add_on_lockscreen_menu=0x7f120c84;
    /**
     * Summary for add restricted profile entry in the choice dialog [CHAR LIMIT=none]
     */
    public static final int user_add_profile_item_summary=0x7f120c85;
    /**
     * Button text for adding a restricted profile [CHAR LIMIT=25]
     */
    public static final int user_add_profile_item_title=0x7f120c86;
    /**
     * Summary for add user entry in the choice dialog [CHAR LIMIT=none]
     */
    public static final int user_add_user_item_summary=0x7f120c87;
    /**
     * Button text for adding a regular user [CHAR LIMIT=25]
     */
    public static final int user_add_user_item_title=0x7f120c88;
    /**
     * User settings add user menu [CHAR LIMIT=35]
     */
    public static final int user_add_user_menu=0x7f120c89;
    /**
     * Message for add user confirmation dialog - long version. [CHAR LIMIT=none]
     */
    public static final int user_add_user_message_long=0x7f120c8a;
    /**
     * Message for add user confirmation dialog - short version. [CHAR LIMIT=none]
     */
    public static final int user_add_user_message_short=0x7f120c8b;
    /**
     * User settings add user or restricted profile menu [CHAR LIMIT=35]
     */
    public static final int user_add_user_or_profile_menu=0x7f120c8c;
    /**
     * Title for add user confirmation dialog [CHAR LIMIT=30]
     */
    public static final int user_add_user_title=0x7f120c8d;
    /**
     * Title for add user type dialog [CHAR LIMIT=45]
     */
    public static final int user_add_user_type_title=0x7f120c8e;
    /**
     * Setting label to show that a new user is being added [CHAR LIMIT=30]
     */
    public static final int user_adding_new_user=0x7f120c8f;
    /**
     * User information string to represent the owner of the device [CHAR LIMIT=25]
     */
    public static final int user_admin=0x7f120c90;
    /**
     * Message to limited users that they cannot add accounts [CHAR LIMIT=100]
     */
    public static final int user_cannot_add_accounts_message=0x7f120c91;
    /**
     * Message to secondary users that only owner can manage users [CHAR LIMIT=none]
     */
    public static final int user_cannot_manage_message=0x7f120c92;
    /**
     * User removal confirmation message [CHAR LIMIT=none]
     */
    public static final int user_confirm_remove_message=0x7f120c93;
    /**
     * User (self) removal confirmation message [CHAR LIMIT=none]
     */
    public static final int user_confirm_remove_self_message=0x7f120c94;
    /**
     * User (self) removal confirmation title [CHAR LIMIT=30]
     */
    public static final int user_confirm_remove_self_title=0x7f120c95;
    /**
     * User removal confirmation title [CHAR LIMIT=25]
     */
    public static final int user_confirm_remove_title=0x7f120c96;
    /**
     * Placeholder for the list of installed user credentials (private keys) when the list is empty. [CHAR LIMIT=120]
     */
    public static final int user_credential_none_installed=0x7f120c97;
    /**
     * Announcement to confirm a user credential being removed. [CHAR LIMIT=NONE]
     */
    public static final int user_credential_removed=0x7f120c98;
    /**
     * Alert dialog when viewing a set of user credentials.
     */
    public static final int user_credential_title=0x7f120c99;
    /**
     * Title of preference to display user credentials and keys [CHAR LIMIT=30]
     */
    public static final int user_credentials=0x7f120c9a;
    /**
     * Summary of preference to display user credentials and keys [CHAR LIMIT=NONE]
     */
    public static final int user_credentials_summary=0x7f120c9b;
    /**
     * Delete button text [CHAR LIMIT=25]
     */
    public static final int user_delete_button=0x7f120c9c;
    /**
     * Spoken content description for delete icon beside a user [CHAR LIMIT=none]
     */
    public static final int user_delete_user_description=0x7f120c9d;
    /**
     * User dictionary settings. Text on the dialog button to confirm adding a word. [CHAR LIMIT=15]
     */
    public static final int user_dict_settings_add_dialog_confirm=0x7f120c9e;
    /**
     * User dictionary settings. Text on the dialog button mask advanced options. [CHAR LIMIT=15]
     */
    public static final int user_dict_settings_add_dialog_less_options=0x7f120c9f;
    /**
     * User dictionary settings. Text on the dialog button to pop more options for adding a word. [CHAR LIMIT=16]
     */
    public static final int user_dict_settings_add_dialog_more_options=0x7f120ca0;
    /**
     * User dictionary settings. The title of the dialog to add a new word to the user dictionary. [CHAR LIMIT=25]
     */
    public static final int user_dict_settings_add_dialog_title=0x7f120ca1;
    /**
     * User dictionary settings. Label to put before the language field. [CHAR LIMIT=20]
     */
    public static final int user_dict_settings_add_locale_option_name=0x7f120ca2;
    /**
     * User dictionary settings. The title of the menu item to add a new word to the user dictionary.
     */
    public static final int user_dict_settings_add_menu_title=0x7f120ca3;
    /**
     * User dictionary settings. The title of the screen to add/edit a new word to the user dictionary; it describes the phrase that will be added to the user dictionary. [CHAR LIMIT=25]
     */
    public static final int user_dict_settings_add_screen_title=0x7f120ca4;
    /**
     * User dictionary settings. Hint for the text field to type the optional shortcut to add to the user dictionary. [CHAR LIMIT=35]
     */
    public static final int user_dict_settings_add_shortcut_hint=0x7f120ca5;
    /**
     * User dictionary settings. Label to put before the shortcut field (once a shortcut is registered, the user can type the shortcut and get the word it points to in the suggestions). [CHAR LIMIT=20]
     */
    public static final int user_dict_settings_add_shortcut_option_name=0x7f120ca6;
    /**
     * User dictionary settings. Hint for the text field to type the word to add to the user dictionary. [CHAR LIMIT=35]
     */
    public static final int user_dict_settings_add_word_hint=0x7f120ca7;
    /**
     * User dictionary settings. Label to put before the word field (that's the word that will actually be added to the user dictionary when OK is pressed). [CHAR LIMIT=20]
     */
    public static final int user_dict_settings_add_word_option_name=0x7f120ca8;
    /**
     * User dictionary settings. The list item to choose to insert a word into the user dictionary for all languages
     */
    public static final int user_dict_settings_all_languages=0x7f120ca9;
    /**
     * User dictionary settings. The title of the context menu item to delete the current word
     */
    public static final int user_dict_settings_context_menu_delete_title=0x7f120caa;
    /**
     * User dictionary settings. The title of the context menu item to edit the current word
     */
    public static final int user_dict_settings_context_menu_edit_title=0x7f120cab;
    /**
     * User dictionary settings. The title of the dialog to edit an existing word in the user dictionary.
     */
    public static final int user_dict_settings_edit_dialog_title=0x7f120cac;
    /**
     * User dictionary settings. The text to show when there are no user-defined words in the dictionary  [CHAR LIMIT=200]
     */
    public static final int user_dict_settings_empty_text=0x7f120cad;
    /**
     * User dictionary settings. The text to show for the option that shows the entire list of supported locales to choose one [CHAR LIMIT=30]
     */
    public static final int user_dict_settings_more_languages=0x7f120cae;
    /**
     * User dictionary settings.  The summary of the list item to go into the Personal dictionary settings screen.
     */
    public static final int user_dict_settings_summary=0x7f120caf;
    /**
     * User dictionary settings. The title of the list item to go into the Personal dictionary settings screen. [CHAR LIMIT=35]
     */
    public static final int user_dict_settings_title=0x7f120cb0;
    /**
     * Title of preference to enable calling[CHAR LIMIT=40]
     */
    public static final int user_enable_calling=0x7f120cb1;
    /**
     * Message for confirmation of turning on calls and SMS [CHAR LIMIT=none]
     */
    public static final int user_enable_calling_and_sms_confirm_message=0x7f120cb2;
    /**
     * Title for confirmation of turning on calls and SMS [CHAR LIMIT=45]
     */
    public static final int user_enable_calling_and_sms_confirm_title=0x7f120cb3;
    /**
     * Message for confirmation of turning on calls [CHAR LIMIT=none]
     */
    public static final int user_enable_calling_confirm_message=0x7f120cb4;
    /**
     * Title for confirmation of turning on calls [CHAR LIMIT=40]
     */
    public static final int user_enable_calling_confirm_title=0x7f120cb5;
    /**
     * Title of preference to enable calling and SMS [CHAR LIMIT=45]
     */
    public static final int user_enable_calling_sms=0x7f120cb6;
    /**
     * Message to user to confirm exiting guest. [CHAR LIMIT=none]
     */
    public static final int user_exit_guest_confirm_message=0x7f120cb7;
    /**
     * Title of dialog to user to confirm exiting guest. [CHAR LIMIT=50]
     */
    public static final int user_exit_guest_confirm_title=0x7f120cb8;
    /**
     * Label for button in confirmation dialog when exiting guest session [CHAR LIMIT=35]
     */
    public static final int user_exit_guest_dialog_remove=0x7f120cb9;
    /**
     * Label for item to exit guest mode [CHAR LIMIT=35]
     */
    public static final int user_exit_guest_title=0x7f120cba;
    /**
     * Title for Guest user [CHAR LIMIT=35]
     */
    public static final int user_guest=0x7f120cbb;
    /**
     * An option in a photo selection dialog, if there is no photo yet [CHAR LIMIT=50]
     */
    public static final int user_image_choose_photo=0x7f120cbc;
    /**
     * Accessibility message for the photo selector which is a button/popup with the current photo [CHAR LIMIT=50]
     */
    public static final int user_image_photo_selector=0x7f120cbd;
    /**
     * An option in a photo selection dialog, if there is no photo yet [CHAR LIMIT=50]
     */
    public static final int user_image_take_photo=0x7f120cbe;
    /**
     * Text shown for title of user info setting [CHAR LIMIT=20]
     */
    public static final int user_info_settings_title=0x7f120cbf;
    /**
     * Title for the accessibility preference category of services downloaded by the user. [CHAR LIMIT=50]
     */
    public static final int user_installed_services_category_title=0x7f120cc0;
    /**
     * User settings header for list of users and profiles [CHAR LIMIT=40]
     */
    public static final int user_list_title=0x7f120cc1;
    /**
     * User lock screen settings header[CHAR LIMIT=40]
     */
    public static final int user_lockscreen_settings=0x7f120cc2;
    /**
     * User settings warning that restricted profile needs a screen lock [CHAR LIMIT=NONE]
     */
    public static final int user_need_lock_message=0x7f120cc3;
    /**
     * User details new restricted profile name [CHAR LIMIT=30]
     */
    public static final int user_new_profile_name=0x7f120cc4;
    /**
     * User details new user name [CHAR LIMIT=30]
     */
    public static final int user_new_user_name=0x7f120cc5;
    /**
     * Title for the preference to enter the nickname of the userto display in the user switcher [CHAR LIMIT=25]
     */
    public static final int user_nickname=0x7f120cc6;
    /**
     * User picture title [CHAR LIMIT=30]
     */
    public static final int user_picture_title=0x7f120cc7;
    /**
     * User profile removal confirmation message [CHAR LIMIT=none]
     */
    public static final int user_profile_confirm_remove_message=0x7f120cc8;
    /**
     * Profile removal confirmation title [CHAR LIMIT=25]
     */
    public static final int user_profile_confirm_remove_title=0x7f120cc9;
    /**
     * Title of preference to remove the user [CHAR LIMIT=35]
     */
    public static final int user_remove_user=0x7f120cca;
    /**
     * User details remove user menu [CHAR LIMIT=20]
     */
    public static final int user_remove_user_menu=0x7f120ccb;
    /**
     * User limits screen, user name rename text [CHAR LIMIT=15]
     */
    public static final int user_rename=0x7f120ccc;
    /**
     * Summary for app entries that are controlled by another entry [CHAR LIMIT=none]
     */
    public static final int user_restrictions_controlled_by=0x7f120ccd;
    /**
     * User app limits screen title [CHAR LIMIT=35]
     */
    public static final int user_restrictions_title=0x7f120cce;
    /**
     * User settings dialog button to set screen lock [CHAR LIMIT=25]
     */
    public static final int user_set_lock_button=0x7f120ccf;
    /**
     * User settings screen title [CHAR LIMIT=25]
     */
    public static final int user_settings_title=0x7f120cd0;
    /**
     * Button text to setup the new user later [CHAR LIMIT=25]
     */
    public static final int user_setup_button_setup_later=0x7f120cd1;
    /**
     * Button text to setup the new user now [CHAR LIMIT=25]
     */
    public static final int user_setup_button_setup_now=0x7f120cd2;
    /**
     * Message in dialog to setup a new user after creation [CHAR LIMIT=none]
     */
    public static final int user_setup_dialog_message=0x7f120cd3;
    /**
     * Title of dialog to setup a new user [CHAR LIMIT=30]
     */
    public static final int user_setup_dialog_title=0x7f120cd4;
    /**
     * Message in dialog to setup a new restricted profile after creation [CHAR LIMIT=none]
     */
    public static final int user_setup_profile_dialog_message=0x7f120cd5;
    /**
     * User summary to indicate that a work profile is currently not set up [CHAR LIMIT=100]
     */
    public static final int user_summary_managed_profile_not_set_up=0x7f120cd6;
    /**
     * User summary to indicate that user is currently not set up [CHAR LIMIT=100]
     */
    public static final int user_summary_not_set_up=0x7f120cd7;
    /**
     * User summary to indicate that restricted profile is currently not set up [CHAR LIMIT=100]
     */
    public static final int user_summary_restricted_not_set_up=0x7f120cd8;
    /**
     * User settings summary for a restricted profile [CHAR LIMIT=50]
     */
    public static final int user_summary_restricted_profile=0x7f120cd9;
    /**
     * User settings title for current user entry "You" user. [CHAR LIMIT=30]
     */
    public static final int user_you=0x7f120cda;
    /**
     * Summary of Users & accounts setting screen [CHAR LIMIT=NONE]
     */
    public static final int users_and_accounts_summary=0x7f120cdb;
    /**
     * Summary of User settings [CHAR LIMIT=NONE]
     */
    public static final int users_summary=0x7f120cdc;
    public static final int v7_preference_off=0x7f120cdd;
    public static final int v7_preference_on=0x7f120cde;
    /**
     * Summary of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=NONE]
     */
    public static final int verify_apps_over_usb_summary=0x7f120cdf;
    /**
     * Title of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=32]
     */
    public static final int verify_apps_over_usb_title=0x7f120ce0;
    /**
     * Manage applications, version string displayed in app snippet
     */
    public static final int version_text=0x7f120ce1;
    /**
     * Sound settings screen, setting option name checkbox
     */
    public static final int vibrate_in_silent_title=0x7f120ce2;
    /**
     * On Languages & input settings screen, setting title.  Setting to redirect vibration to input devices. [CHAR LIMIT=35]
     */
    public static final int vibrate_input_devices=0x7f120ce3;
    /**
     * On Languages & input settings screen, setting summary.  Setting to redirect vibration to input devices. [CHAR LIMIT=100]
     */
    public static final int vibrate_input_devices_summary=0x7f120ce4;
    /**
     * Sound: Other sounds: Title for the option enabling haptic feedback on touch. [CHAR LIMIT=30]
     */
    public static final int vibrate_on_touch_title=0x7f120ce5;
    /**
     * Sound: Title for the option managing whether or not to vibrate when ringing. [CHAR LIMIT=30]
     */
    public static final int vibrate_when_ringing_title=0x7f120ce6;
    /**
     * Title for the 'virtual keyboard' preference sub-screen. [CHAR LIMIT=35]
     */
    public static final int virtual_keyboard_category=0x7f120ce7;
    /**
     * Settings description for a brief version of Vision-Related Accessibility Settings. Tells the user that they can adjust these settings now to help them through the remainder of the Setup Wizard and that they can later be changed in Settings. Displayed in Setup Wizard only. [CHAR LIMIT=none]
     */
    public static final int vision_settings_description=0x7f120ce8;
    /**
     * Label for suggested action which will allow the user to change the font size and other accessibility settings. [CHAR LIMIT=40]
     */
    public static final int vision_settings_suggestion_title=0x7f120ce9;
    /**
     * Settings title for a brief version of Vision-Related Accessibility Settings. Displayed in Setup Wizard only. [CHAR LIMIT=35]
     */
    public static final int vision_settings_title=0x7f120cea;
    /**
     * Title of setting on main settings screen. This item will take the user to the screen to tweak settings related to speech functionality
     */
    public static final int voice_input_output_settings=0x7f120ceb;
    /**
     * Main voice input/output settings screen title
     */
    public static final int voice_input_output_settings_title=0x7f120cec;
    /**
     * [CHAR_LIMIT=NONE] Name of the settings item to open the voice input settings.
     */
    public static final int voice_input_settings=0x7f120ced;
    /**
     * [CHAR_LIMIT=NONE] Title of the screen of the voice input settings
     */
    public static final int voice_input_settings_title=0x7f120cee;
    /**
     * [CHAR_LIMIT=NONE] Warning message about security implications of enabling a
     * voice interaction service, displayed as a dialog
     * message when the user selects to enable a service.
     */
    public static final int voice_interaction_security_warning=0x7f120cef;
    /**
     * [CHAR LIMIT=NONE] The summary text for the voice service preference that is
     * a full voice interaction service.  This is something that provides interactive
     * voice control of applications; for example you can tell it commands to have it
     * launch and let you interact with applications through your voice.
     */
    public static final int voice_interactor_preference_summary=0x7f120cf0;
    /**
     * [CHAR LIMIT=NONE] The summary text for the voice service preference that is
     * a simple voice recognition service.  This is something that only provides simple
     * speech to text conversions that applications can use when they want to allow you
     * to provide text to them through your voice (instead of with a keyboard).
     */
    public static final int voice_recognizer_preference_summary=0x7f120cf1;
    /**
     * Title of voice search settings list item within voice input/output settings
     */
    public static final int voice_search_settings_title=0x7f120cf2;
    /**
     * [CHAR LIMIT=50] The text for the settings section in which users select
     * a voice interaction or recognition service to use.
     */
    public static final int voice_service_preference_section_title=0x7f120cf3;
    /**
     * VoLTE provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int volte_provisioned_switch_string=0x7f120cf4;
    /**
     * Volume description for alarm volume
     */
    public static final int volume_alarm_description=0x7f120cf5;
    /**
     * Image description for alarm volume mute button.
     */
    public static final int volume_alarm_mute=0x7f120cf6;
    /**
     * Volume description for media volume
     */
    public static final int volume_media_description=0x7f120cf7;
    /**
     * Image description for media volume mute button.
     */
    public static final int volume_media_mute=0x7f120cf8;
    /**
     * Volume description for notification volume
     */
    public static final int volume_notification_description=0x7f120cf9;
    /**
     * Image description for notification volume mute button.
     */
    public static final int volume_notification_mute=0x7f120cfa;
    /**
     * Volume description for ringtone and notification volume
     */
    public static final int volume_ring_description=0x7f120cfb;
    /**
     * Image description for ring volume mute button.
     */
    public static final int volume_ring_mute=0x7f120cfc;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * DNS server addresses are not in numeric form (e.g. 8.8.8.8). [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_dns=0x7f120cfd;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * no DNS is found. [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_no_dns=0x7f120cfe;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * generic error. [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_other=0x7f120cff;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * the server address is not in numeric form (e.g. 8.8.8.8). [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_server=0x7f120d00;
    /**
     * Error message displayed below the always-on VPN checkbox when the checkbox is disabled:
     * the selected VPN type doesn't support always-on. [CHAR LIMIT=120]
     */
    public static final int vpn_always_on_invalid_reason_type=0x7f120d01;
    /**
     * Preference summary for always-on VPN checkbox. [CHAR LIMIT=40]
     */
    public static final int vpn_always_on_summary=0x7f120d02;
    /**
     * Preference summary for a VPN app that is set to be always-on. [CHAR LIMIT=40]
     */
    public static final int vpn_always_on_summary_active=0x7f120d03;
    /**
     * Preference summary for app not supporting always-on VPN [CHAR LIMIT=40]
     */
    public static final int vpn_always_on_summary_not_supported=0x7f120d04;
    /**
     * Button label to cancel changing a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_cancel=0x7f120d05;
    /**
     * Dialog message subtitle when the user can't connect an always-on vpn [CHAR LIMIT=NONE]
     */
    public static final int vpn_cant_connect_message=0x7f120d06;
    /**
     * Dialog mesage title when the user can't connect an always-on vpn [CHAR LIMIT=NONE]
     */
    public static final int vpn_cant_connect_title=0x7f120d07;
    /**
     * Button label to connect to a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_connect=0x7f120d08;
    /**
     * Dialog title to connect to a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_connect_to=0x7f120d09;
    /**
     * Preference title to create a new VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_create=0x7f120d0a;
    /**
     * Button label to disconnect from a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_disconnect=0x7f120d0b;
    /**
     * Dialog message body to disconnect from a VPN profile.
     */
    public static final int vpn_disconnect_confirm=0x7f120d0c;
    /**
     * Toast message when VPN has disconnected automatically due to Clear credentials. [CHAR LIMIT=NONE]
     */
    public static final int vpn_disconnected=0x7f120d0d;
    /**
     * Seting subtext indicating the device is not currently connected to any VPN [CHAR LIMIT=40]
     */
    public static final int vpn_disconnected_summary=0x7f120d0e;
    /**
     * Input label for the DNS servers of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_dns_servers=0x7f120d0f;
    /**
     * Button label to finish editing a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_done=0x7f120d10;
    /**
     * Dialog title to edit a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_edit=0x7f120d11;
    /**
     * Dialog message body to explain that always-on VPN will disable network traffic while the VPN is connecting.
     */
    public static final int vpn_first_always_on_vpn_message=0x7f120d12;
    /**
     * Button label to forget a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_forget=0x7f120d13;
    /**
     * Button label to forget a VPN profile [CHAR LIMIT=40]
     */
    public static final int vpn_forget_long=0x7f120d14;
    /**
     * Selection label for the IPSec CA certificate of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_ca_cert=0x7f120d15;
    /**
     * Input label for the IPSec identifier of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_identifier=0x7f120d16;
    /**
     * Input label for the IPSec pre-shared key of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_secret=0x7f120d17;
    /**
     * Selection label for the IPSec server certificate of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_server_cert=0x7f120d18;
    /**
     * Selection label for the IPSec user certificate of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_ipsec_user_cert=0x7f120d19;
    /**
     * Input label for the L2TP secret of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_l2tp_secret=0x7f120d1a;
    /**
     * Error indicating that the selected VPN doesn't meet requirements. [CHAR LIMIT=NONE]
     */
    public static final int vpn_lockdown_config_error=0x7f120d1b;
    /**
     * List item indicating that no always-on VPN is selected. [CHAR LIMIT=64]
     */
    public static final int vpn_lockdown_none=0x7f120d1c;
    /**
     * Summary describing the always-on VPN feature. [CHAR LIMIT=NONE]
     */
    public static final int vpn_lockdown_summary=0x7f120d1d;
    /**
     * Menu item to delete a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_menu_delete=0x7f120d1e;
    /**
     * Menu item to edit a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_menu_edit=0x7f120d1f;
    /**
     * Menu item to select always-on VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_menu_lockdown=0x7f120d20;
    /**
     * Toast message when a certificate is missing. [CHAR LIMIT=100]
     */
    public static final int vpn_missing_cert=0x7f120d21;
    /**
     * Checkbox label to enable PPP encryption for a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_mppe=0x7f120d22;
    /**
     * Input label for the name of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_name=0x7f120d23;
    /**
     * Option to not use a CA certificate to verify the VPN server. [CHAR LIMIT=40]
     */
    public static final int vpn_no_ca_cert=0x7f120d24;
    /**
     * Toast message when there is no network connection to start VPN. [CHAR LIMIT=100]
     */
    public static final int vpn_no_network=0x7f120d25;
    /**
     * Option to use the server certificate received from the VPN server. [CHAR LIMIT=40]
     */
    public static final int vpn_no_server_cert=0x7f120d26;
    /**
     * Placeholder when VPN settings is open but no VPNs have been created. [CHAR LIMIT=100]
     */
    public static final int vpn_no_vpns_added=0x7f120d27;
    /**
     * Hint for not using an optional feature in a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_not_used=0x7f120d28;
    /**
     * Input label for the password of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_password=0x7f120d29;
    /**
     * Button label to connect a VPN profile, replacing the current one. [CHAR LIMIT=40]
     */
    public static final int vpn_replace=0x7f120d2a;
    /**
     * Dialog message body to connect a VPN app, replacing another VPN app that is already always-on [CHAR LIMIT=NONE]
     */
    public static final int vpn_replace_always_on_vpn_disable_message=0x7f120d2b;
    /**
     * Dialog message body to explain that always-on VPN will disable network traffic while the VPN is connecting, and that this will replace the current VPN.
     */
    public static final int vpn_replace_always_on_vpn_enable_message=0x7f120d2c;
    /**
     * Dialog message body to set another VPN app to be always-on [CHAR LIMIT=NONE]
     */
    public static final int vpn_replace_vpn_message=0x7f120d2d;
    /**
     * Dialog message title to set another VPN app to be always-on [CHAR LIMIT=40]
     */
    public static final int vpn_replace_vpn_title=0x7f120d2e;
    /**
     * Preference title for the toggle that controls whether to force all network connections to
     * go through VPN. [CHAR LIMIT=40]
     */
    public static final int vpn_require_connection=0x7f120d2f;
    /**
     * Dialog message title to confirm forcing all network connections to go through VPN.
     * [CHAR LIMIT=40]
     */
    public static final int vpn_require_connection_title=0x7f120d30;
    /**
     * Input label for the forwarding routes of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_routes=0x7f120d31;
    /**
     * Button label to save a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_save=0x7f120d32;
    /**
     * Checkbox label to save the username and the password in a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_save_login=0x7f120d33;
    /**
     * Input label for the DNS search domains of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_search_domains=0x7f120d34;
    /**
     * Input label for the server address of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_server=0x7f120d35;
    /**
     * Dialog message title to set always-on VPN when another app was not already set.
     */
    public static final int vpn_set_vpn_title=0x7f120d36;
    /**
     * Error message for users that aren't allowed to modify VPN settings [CHAR LIMIT=none]
     */
    public static final int vpn_settings_not_available=0x7f120d37;
    /**
     * Title of preference to enter the VPN settings activity
     */
    public static final int vpn_settings_title=0x7f120d38;
    /**
     * Checkbox label to show advanced options of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_show_options=0x7f120d39;
    /**
     * Preference title for VPN settings. [CHAR LIMIT=40]
     */
    public static final int vpn_title=0x7f120d3a;
    /**
     * Dialog action button to turn on a VPN.
     */
    public static final int vpn_turn_on=0x7f120d3b;
    /**
     * Input label for the type of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_type=0x7f120d3c;
    /**
     * Input label for the username of a VPN profile. [CHAR LIMIT=40]
     */
    public static final int vpn_username=0x7f120d3d;
    /**
     * Field label to show the version number for a VPN app. [CHAR LIMIT=40]
     */
    public static final int vpn_version=0x7f120d3e;
    /**
     * Summary for a warning message about security implications of enabling a VR
     * listener, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int vr_listener_security_warning_summary=0x7f120d3f;
    /**
     * Title for a warning message about security implications of enabling a VR
     * listener, displayed as a dialog message. [CHAR LIMIT=NONE]
     */
    public static final int vr_listener_security_warning_title=0x7f120d40;
    /**
     * Title for managing VR (virtual reality) helper services. [CHAR LIMIT=50]
     */
    public static final int vr_listeners_title=0x7f120d41;
    /**
     * Video calling provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int vt_provisioned_switch_string=0x7f120d42;
    /**
     * UI debug setting: wait for debugger to attach to debugging process? [CHAR LIMIT=50]
     */
    public static final int wait_for_debugger=0x7f120d43;
    /**
     * UI debug setting: wait for debugger to attach to debugging process summary [CHAR LIMIT=500]
     */
    public static final int wait_for_debugger_summary=0x7f120d44;
    /**
     * About phone settings screen, setting option name to see wallpapers attributions
     */
    public static final int wallpaper_attributions=0x7f120d45;
    /**
     * About phone settings screen, setting option name to see wallpapers attributions values
     */
    public static final int wallpaper_attributions_values=0x7f120d46;
    /**
     * Wallpaper settings fragment title [CHAR LIMIT=30]
     */
    public static final int wallpaper_settings_fragment_title=0x7f120d47;
    /**
     * Wallpaper settings summary when wallpaper has been updated [CHAR LIMIT=NONE]
     */
    public static final int wallpaper_settings_summary_custom=0x7f120d48;
    /**
     * Wallpaper settings summary when default wallpaper is used [CHAR LIMIT=NONE]
     */
    public static final int wallpaper_settings_summary_default=0x7f120d49;
    /**
     * Wallpaper settings title [CHAR LIMIT=30]
     */
    public static final int wallpaper_settings_title=0x7f120d4a;
    /**
     * Wallpaper suggestion title [CHAR LIMIT=60]
     */
    public static final int wallpaper_suggestion_summary=0x7f120d4b;
    /**
     * Wallpaper suggestion title [CHAR LIMIT=30]
     */
    public static final int wallpaper_suggestion_title=0x7f120d4c;
    /**
     * Summary text for enabling web actions. [CHAR_LIMIT=250]
     */
    public static final int web_action_enable_summary=0x7f120d4d;
    /**
     * Title text for enabling web actions. [CHAR_LIMIT=60]
     */
    public static final int web_action_enable_title=0x7f120d4e;
    /**
     * Section title for the Web Action preference [CHAR LIMIT=60]
     */
    public static final int web_action_section_title=0x7f120d4f;
    /**
     * UI webview setting: WebView disabled-for-user explanatory text [CHAR LIMIT=30]
     */
    public static final int webview_disabled_for_user=0x7f120d50;
    /**
     * About phone settings screen, setting option name to see licensing info for WebView component. [CHAR LIMIT=35]
     */
    public static final int webview_license_title=0x7f120d51;
    /**
     * UI webview setting: WebView uninstalled-for-user explanatory text [CHAR LIMIT=30]
     */
    public static final int webview_uninstalled_for_user=0x7f120d52;
    /**
     * Wifi Calling provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed.
     */
    public static final int wfc_provisioned_switch_string=0x7f120d53;
    /**
     * Title for the screen that lets the user choose a widget to add to the home screen
     * (or other screens that can host widgets).  Note to translators: we're still determining
     * the final name for Gadgets/Widgets, so please translate both for now.
     */
    public static final int widget_picker_title=0x7f120d54;
    /**
     * Label for section about wifi in data usage screen [CHAR LIMIT=60]
     */
    public static final int wifi=0x7f120d55;
    /**
     * Header for the list of wifi networks
     */
    public static final int wifi_access_points=0x7f120d56;
    /**
     * Action bar text message to manually add a wifi network [CHAR LIMIT=20]
     */
    public static final int wifi_add_network=0x7f120d57;
    /**
     * Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's current IP address.
     */
    public static final int wifi_advanced_ip_address_title=0x7f120d58;
    /**
     * Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's MAC address.
     */
    public static final int wifi_advanced_mac_address_title=0x7f120d59;
    /**
     * Error message for users that aren't allowed to see or modify WiFi advanced settings [CHAR LIMIT=NONE]
     */
    public static final int wifi_advanced_not_available=0x7f120d5a;
    /**
     * Wifi Advanced settings.  Used as a label under the shortcut icon that goes to Wifi advanced settings. [CHAR LIMIT=20]
     */
    public static final int wifi_advanced_settings_label=0x7f120d5b;
    /**
     * Wi-Fi settings screen, advanced, settings section.  This is a header shown above advanced wifi settings. [CHAR LIMIT=30]
     */
    public static final int wifi_advanced_titlebar=0x7f120d5c;
    /**
     * Message for talkback to say when Advanced Options is collapsed [CHAR LIMIT=NONE]
     */
    public static final int wifi_advanced_toggle_description_collapsed=0x7f120d5d;
    /**
     * Message for talkback to say when Advanced Options expanded [CHAR LIMIT=NONE]
     */
    public static final int wifi_advanced_toggle_description_expanded=0x7f120d5e;
    /**
     * Setting Checkbox title whether to enable WiFi Aggressive Handover (more actively switch from wifi to mobile data). [CHAR LIMIT=40]
     */
    public static final int wifi_aggressive_handover=0x7f120d5f;
    /**
     * Setting Checkbox summary whether to enable Wifi aggressive handover [CHAR LIMIT=130]
     */
    public static final int wifi_aggressive_handover_summary=0x7f120d60;
    /**
     * Setting Checkbox title whether to enable WiFi Scanning in the presence of traffic. [CHAR LIMIT=80]
     */
    public static final int wifi_allow_scan_with_traffic=0x7f120d61;
    /**
     * Setting Checkbox summary whether to always allow WiFi Roam Scans [CHAR LIMIT=130]
     */
    public static final int wifi_allow_scan_with_traffic_summary=0x7f120d62;
    /**
     * Label for the RadioGroup to choose wifi ap band
     */
    public static final int wifi_ap_band_config=0x7f120d63;
    /**
     * Label for the radio button to choose wifi ap 2.4 GHz band
     */
    public static final int wifi_ap_choose_2G=0x7f120d64;
    /**
     * Label for the radio button to choose wifi ap 5GHz band
     */
    public static final int wifi_ap_choose_5G=0x7f120d65;
    /**
     * Summary for networks failing to connect due to association rejection status 17, AP full
     */
    public static final int wifi_ap_unable_to_handle_new_sta=0x7f120d66;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item on Wifi information screen
     */
    public static final int wifi_api_test=0x7f120d67;
    /**
     * This string asks the user whether or not to allow an app to disable WiFi. [CHAR LIMIT=NONE]
     */
    public static final int wifi_ask_disable=0x7f120d68;
    /**
     * This string asks the user whether or not to allow an app to enable WiFi. [CHAR LIMIT=NONE]
     */
    public static final int wifi_ask_enable=0x7f120d69;
    /**
     * Checkbox summary for option to toggle poor network detection [CHAR LIMIT=60]
     */
    public static final int wifi_avoid_poor_network_detection_summary=0x7f120d6a;
    /**
     * The minimum kbps threshold needed to use badge; value is a map with key corresponding to
     * the badge enum in ScoredNetworks (SD, HD etc) and value throughput in kbps
     */
    public static final int wifi_badging_thresholds_default=0x7f120d6b;
    /**
     * Wifi 2.4GHz is used as an universal itendifier for 2.4GHz band
     */
    public static final int wifi_band_24ghz=0x7f120d6c;
    /**
     * Wifi Internal 5GHz as an universal itendifier for 5GHz band
     */
    public static final int wifi_band_5ghz=0x7f120d6d;
    /**
     * Title of WFC preference selection dialog [CHAR LIMIT=30]
     */
    public static final int wifi_calling_mode_dialog_title=0x7f120d6e;
    /**
     * Title of WFC preference item [CHAR LIMIT=30]
     */
    public static final int wifi_calling_mode_title=0x7f120d6f;
    /**
     * Wi-Fi Calling settings. Text displayed when Wi-Fi Calling is off
     */
    public static final int wifi_calling_off_explanation=0x7f120d70;
    /**
     * Wi-Fi Calling settings. Additional text displayed when Wi-Fi Calling is off. Default empty. [CHAR LIMIT=NONE]
     * Wi-Fi Calling settings. Additional text displayed when Wi-Fi Calling is off. Default empty. [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_off_explanation_2=0x7f120d71;
    /**
     * WFC mode dialog [CHAR LIMIT=45]
     */
    public static final int wifi_calling_roaming_mode_dialog_title=0x7f120d72;
    /**
     * Summary of WFC roaming preference item [CHAR LIMIT=NONE]
     */
    public static final int wifi_calling_roaming_mode_summary=0x7f120d73;
    /**
     * Title of WFC roaming preference item [CHAR LIMIT=45]
     */
    public static final int wifi_calling_roaming_mode_title=0x7f120d74;
    /**
     * Wireless networks, item title to go into the WFC settings [CHAR LIMIT=30]
     * Do not translate. Wireless networks, item title to go into the WFC settings [CHAR LIMIT=30]
     */
    public static final int wifi_calling_settings_title=0x7f120d75;
    /**
     * Summary of suggestion to turn on wifi calling [CHAR LIMIT=60]
     */
    public static final int wifi_calling_suggestion_summary=0x7f120d76;
    /**
     * Title of suggestion to turn on wifi calling [CHAR LIMIT=30]
     */
    public static final int wifi_calling_suggestion_title=0x7f120d77;
    /**
     * Button label to dismiss the dialog
     */
    public static final int wifi_cancel=0x7f120d78;
    /**
     * Status detail for a network that can't be connected to for some reason
     */
    public static final int wifi_cant_connect=0x7f120d79;
    /**
     * Status for a named network that can't be connected to for some reason
     */
    public static final int wifi_cant_connect_to_ap=0x7f120d7a;
    /**
     * Message in dialog when the user tries to connect to a carrier network[CHAR_LIMIT=40]
     */
    public static final int wifi_carrier_connect=0x7f120d7b;
    /**
     * Message in dialog when the user tries to connect to a carrier network[CHAR_LIMIT=60]
     */
    public static final int wifi_carrier_content=0x7f120d7c;
    /**
     * Preference summary to automatically switch away from bad wifi networks [CHAR LIMIT=None]
     */
    public static final int wifi_cellular_data_fallback_summary=0x7f120d7d;
    /**
     * Preference title for option to automatically switch away from bad wifi networks [CHAR LIMIT=60]
     */
    public static final int wifi_cellular_data_fallback_title=0x7f120d7e;
    /**
     * Message shown when the user likely entered an incorrect password for a wifi network
     */
    public static final int wifi_check_password_try_again=0x7f120d7f;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item on Wifi information screen
     */
    public static final int wifi_config_info=0x7f120d80;
    /**
     * Summary for Wi-Fi Preferences that explains that Wi-Fi will not automatically be enabled when high quality saved networks are nearby
     */
    public static final int wifi_configure_settings_preference_summary_wakeup_off=0x7f120d81;
    /**
     * Summary for Wi-Fi Preferences that explains that Wi-Fi will be enabled when high quality saved networks are nearby
     */
    public static final int wifi_configure_settings_preference_summary_wakeup_on=0x7f120d82;
    /**
     * Action bar title to open additional Wi-Fi settings
     */
    public static final int wifi_configure_settings_preference_title=0x7f120d83;
    /**
     * Button label to connect to a Wi-Fi network
     */
    public static final int wifi_connect=0x7f120d84;
    /**
     * Summary for Connected wifi network without internet
     */
    public static final int wifi_connected_no_internet=0x7f120d85;
    /**
     * Format string for amount of wifi data used [CHAR LIMIT=30]
     */
    public static final int wifi_data_template=0x7f120d86;
    /**
     * Label for wifi data usage in data usage screen [CHAR LIMIT=60]
     */
    public static final int wifi_data_usage=0x7f120d87;
    /**
     * Wifi details preference title to display router DNS info
     */
    public static final int wifi_details_dns=0x7f120d88;
    /**
     * Wifi details preference category title for IPv6 information
     */
    public static final int wifi_details_ipv6_address_header=0x7f120d89;
    /**
     * Wifi details preference title to display router IP subnet mask
     */
    public static final int wifi_details_subnet_mask=0x7f120d8a;
    /**
     * Wifi details title
     */
    public static final int wifi_details_title=0x7f120d8b;
    /**
     * Status for networks disabled by the network recommendation provider
     */
    public static final int wifi_disabled_by_recommendation_provider=0x7f120d8c;
    /**
     * Status for networks disabled for unknown reason
     */
    public static final int wifi_disabled_generic=0x7f120d8d;
    /**
     * Status for networked disabled from a DNS or DHCP failure
     */
    public static final int wifi_disabled_network_failure=0x7f120d8e;
    /**
     * Status for networks disabled from authentication failure (wrong password
     * or certificate).
     */
    public static final int wifi_disabled_password_failure=0x7f120d8f;
    /**
     * Status for networked disabled from a wifi association failure
     */
    public static final int wifi_disabled_wifi_failure=0x7f120d90;
    /**
     * Wifi Display settings. The checkbox title for enabling autonomous GO during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_autonomous_go=0x7f120d91;
    /**
     * Setting Checkbox title whether to show options for wireless display certification
     */
    public static final int wifi_display_certification=0x7f120d92;
    /**
     * Wifi Display settings. The sub heading for wireless display certification options. [CHAR LIMIT=40]
     */
    public static final int wifi_display_certification_heading=0x7f120d93;
    /**
     * setting Checkbox summary whether to show options for wireless display certification
     */
    public static final int wifi_display_certification_summary=0x7f120d94;
    /**
     * Wifi Display settings. Image description for device details button. This opens the screen to rename, unpair, etc. a single device.
     */
    public static final int wifi_display_details=0x7f120d95;
    /**
     * Wifi Display settings. The title of a menu item to enable wireless display [CHAR LIMIT=40]
     */
    public static final int wifi_display_enable_menu_item=0x7f120d96;
    /**
     * Wifi Display settings. The dropdown menu title for choosing listen channel during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_listen_channel=0x7f120d97;
    /**
     * Wifi Display settings. The checkbox title for enabling listen mode during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_listen_mode=0x7f120d98;
    /**
     * Wifi Display settings. Text that appears when scanning for devices is finished and no nearby device was found [CHAR LIMIT=40]
     */
    public static final int wifi_display_no_devices_found=0x7f120d99;
    /**
     * Wifi Display settings. The dropdown menu title for choosing operating channel during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_operating_channel=0x7f120d9a;
    /**
     * Wifi Display settings. Options dialog.  The done button text. [CHAR LIMIT=20]
     */
    public static final int wifi_display_options_done=0x7f120d9b;
    /**
     * Wifi Display settings. Options dialog.  The forget button text. [CHAR LIMIT=20]
     */
    public static final int wifi_display_options_forget=0x7f120d9c;
    /**
     * Wifi Display settings. Options dialog.  The name label used when prompting the user to rename the display. [CHAR LIMIT=20]
     */
    public static final int wifi_display_options_name=0x7f120d9d;
    /**
     * Wifi Display settings. Options dialog.  The title of the dialog. [CHAR LIMIT=40]
     */
    public static final int wifi_display_options_title=0x7f120d9e;
    /**
     * Wifi Display settings. The button text for sending pause trigger during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_pause=0x7f120d9f;
    /**
     * Wifi Display settings. The button text for sending play (resume) trigger during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_resume=0x7f120da0;
    /**
     * Wifi Display settings. The section title for wireless display session info. [CHAR LIMIT=40]
     */
    public static final int wifi_display_session_info=0x7f120da1;
    /**
     * Wifi Display settings. The title of the screen. [CHAR LIMIT=40]
     */
    public static final int wifi_display_settings_title=0x7f120da2;
    /**
     * Wifi Display settings. The status summary for connected devices. [CHAR LIMIT=40]
     */
    public static final int wifi_display_status_connected=0x7f120da3;
    /**
     * Wifi Display settings. The status summary for connecting devices. [CHAR LIMIT=40]
     */
    public static final int wifi_display_status_connecting=0x7f120da4;
    /**
     * Wifi Display settings. The status summary for devices that's already in use. [CHAR LIMIT=40]
     */
    public static final int wifi_display_status_in_use=0x7f120da5;
    /**
     * Wifi Display settings. The status summary for devices that's not available. [CHAR LIMIT=40]
     */
    public static final int wifi_display_status_not_available=0x7f120da6;
    /**
     * Wifi Display settings. The dropdown menu title for choosing WPS configuration during certification process. [CHAR LIMIT=40]
     */
    public static final int wifi_display_wps_config=0x7f120da7;
    /**
     * Label for the DNS (first one)
     */
    public static final int wifi_dns1=0x7f120da8;
    /**
     * Hint text for DNS
     */
    public static final int wifi_dns1_hint=0x7f120da9;
    /**
     * Label for the DNS (second one)
     */
    public static final int wifi_dns2=0x7f120daa;
    /**
     * Hint text for DNS
     */
    public static final int wifi_dns2_hint=0x7f120dab;
    /**
     * Menu option for not providing an EAP user certificate
     */
    public static final int wifi_do_not_provide_eap_user_cert=0x7f120dac;
    /**
     * Menu option for not validating the EAP server
     */
    public static final int wifi_do_not_validate_eap_server=0x7f120dad;
    /**
     * Warning message displayed if user choses not to validate the EAP server
     */
    public static final int wifi_do_not_validate_eap_server_warning=0x7f120dae;
    /**
     * Label for the EAP anonymous identity of the network
     */
    public static final int wifi_eap_anonymous=0x7f120daf;
    /**
     * Label for the EAP CA certificate of the network
     */
    public static final int wifi_eap_ca_cert=0x7f120db0;
    /**
     * Label for the domain name that the EAP CA certificate(s) can be used to validate.
     */
    public static final int wifi_eap_domain=0x7f120db1;
    /**
     * Label for the EAP identity of the network
     */
    public static final int wifi_eap_identity=0x7f120db2;
    /**
     * Label for the EAP method of the network
     */
    public static final int wifi_eap_method=0x7f120db3;
    /**
     * Label for the EAP user certificate of the network
     */
    public static final int wifi_eap_user_cert=0x7f120db4;
    /**
     * Wifi Settings. text displayed when user has restriction DISALLOW_CONFIG_WIFI [CHAR LIMIT=NONE]
     */
    public static final int wifi_empty_list_user_restricted=0x7f120db5;
    /**
     * Wi-Fi settings. text displayed when Wi-Fi is off and network list is empty [CHAR LIMIT=50]
     */
    public static final int wifi_empty_list_wifi_off=0x7f120db6;
    /**
     * Wi-Fi settings. text displayed when Wi-Fi is on and network list is empty [CHAR LIMIT=50]
     */
    public static final int wifi_empty_list_wifi_on=0x7f120db7;
    /**
     * Summary text when Wi-Fi or bluetooth has error
     */
    public static final int wifi_error=0x7f120db8;
    /**
     * Toast message when Wi-Fi cannot scan for networks
     */
    public static final int wifi_fail_to_scan=0x7f120db9;
    /**
     * Failured notification for connect
     */
    public static final int wifi_failed_connect_message=0x7f120dba;
    /**
     * Failured notification for forget
     */
    public static final int wifi_failed_forget_message=0x7f120dbb;
    /**
     * Failured notification for save
     */
    public static final int wifi_failed_save_message=0x7f120dbc;
    /**
     * Button label to delete a Wi-Fi network
     */
    public static final int wifi_forget=0x7f120dbd;
    /**
     * Label for the frequency band of the connection
     */
    public static final int wifi_frequency=0x7f120dbe;
    /**
     * Label for the gateway of the network
     */
    public static final int wifi_gateway=0x7f120dbf;
    /**
     * Hint text for the gateway
     */
    public static final int wifi_gateway_hint=0x7f120dc0;
    /**
     * Label for Wifi hotspot AP Band.
     */
    public static final int wifi_hotspot_ap_band_title=0x7f120dc1;
    /**
     * Label for Wifi tether checkbox. Toggles Access Point on/off  [CHAR LIMIT=30]
     */
    public static final int wifi_hotspot_checkbox_text=0x7f120dc2;
    /**
     * Used to open the ssid and security dialog for Wifi Access Point.  [CHAR LIMIT=30]
     */
    public static final int wifi_hotspot_configure_ap_text=0x7f120dc3;
    /**
     * Summary Used to open the ssid and security dialog for Wifi Access Point.  [CHAR LIMIT=60]
     */
    public static final int wifi_hotspot_configure_ap_text_summary=0x7f120dc4;
    /**
     * Wifi settings button to connect in to a Hotspot. [CHAR LIMIT=50]
     */
    public static final int wifi_hotspot_connect=0x7f120dc5;
    /**
     * Wifi hotspot footer info [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_footer_info_local_only=0x7f120dc6;
    /**
     * Wifi hotspot footer info for regular hotspot [CHAR LIMIT=NONE]
     */
    public static final int wifi_hotspot_footer_info_regular=0x7f120dc7;
    /**
     * Dialog message to sign in to a Hotspot. [CHAR LIMIT=50]
     */
    public static final int wifi_hotspot_message=0x7f120dc8;
    /**
     * Summary for Wifi hotspot name when connected.
     */
    public static final int wifi_hotspot_name_summary_connected=0x7f120dc9;
    /**
     * Summary for Wifi hotspot name when connection is in progress.
     */
    public static final int wifi_hotspot_name_summary_connecting=0x7f120dca;
    /**
     * Label for Wifi hotspot name.
     */
    public static final int wifi_hotspot_name_title=0x7f120dcb;
    /**
     * Summary text when turning hotspot off
     */
    public static final int wifi_hotspot_off_subtext=0x7f120dcc;
    /**
     * Summary text when hotspot is on for local-only
     */
    public static final int wifi_hotspot_on_local_only_subtext=0x7f120dcd;
    /**
     * Label for Wifi hotspot password.
     */
    public static final int wifi_hotspot_password_title=0x7f120dce;
    /**
     * Summary text when tethering is on
     */
    public static final int wifi_hotspot_tethering_on_subtext=0x7f120dcf;
    /**
     * Dialog label to sign in to a Hotspot. [CHAR LIMIT=50]
     */
    public static final int wifi_hotspot_title=0x7f120dd0;
    /**
     * Toast message when Wi-Fi or bluetooth is disallowed in airplane mode
     */
    public static final int wifi_in_airplane_mode=0x7f120dd1;
    /**
     * Preference title for option to install certificates
     */
    public static final int wifi_install_credentials=0x7f120dd2;
    /**
     * Label for the IP address of the connection
     */
    public static final int wifi_ip_address=0x7f120dd3;
    /**
     * Hint text for the IP address
     */
    public static final int wifi_ip_address_hint=0x7f120dd4;
    /**
     * Label for the spinner to show ip settings [CHAR LIMIT=25]
     */
    public static final int wifi_ip_settings=0x7f120dd5;
    /**
     * Error message if the dns is not valid [CHAR LIMIT=50]
     */
    public static final int wifi_ip_settings_invalid_dns=0x7f120dd6;
    /**
     * Error message if the gateway is not valid [CHAR LIMIT=50]
     */
    public static final int wifi_ip_settings_invalid_gateway=0x7f120dd7;
    /**
     * Error message if the IP address is not valid [CHAR LIMIT=50]
     */
    public static final int wifi_ip_settings_invalid_ip_address=0x7f120dd8;
    /**
     * Error message if the network prefix length is not valid [CHAR LIMIT=50]
     */
    public static final int wifi_ip_settings_invalid_network_prefix_length=0x7f120dd9;
    /**
     * Menu ietm to cancel the IP settings
     */
    public static final int wifi_ip_settings_menu_cancel=0x7f120dda;
    /**
     * Menu item to save the IP settings
     */
    public static final int wifi_ip_settings_menu_save=0x7f120ddb;
    /**
     * Checkbox summary for option to toggle suspend power optimizations [CHAR LIMIT=30]
     */
    public static final int wifi_limit_optimizations_summary=0x7f120ddc;
    /**
     * Menu option to Wi-Fi advanced settings
     */
    public static final int wifi_menu_advanced=0x7f120ddd;
    /**
     * Menu option to Wi-Fi configure settings
     */
    public static final int wifi_menu_configure=0x7f120dde;
    /**
     * Menu option to connect to a Wi-Fi network
     */
    public static final int wifi_menu_connect=0x7f120ddf;
    /**
     * Menu option to delete a Wi-Fi network
     */
    public static final int wifi_menu_forget=0x7f120de0;
    /**
     * Menu option to modify a Wi-Fi network configuration
     */
    public static final int wifi_menu_modify=0x7f120de1;
    /**
     * Content description for menu button in Wifi setup. Not shown on the screen. [CHAR LIMIT=NONE]
     */
    public static final int wifi_menu_more_options=0x7f120de2;
    /**
     * Menu option to launch Wi-Fi Direct settings [CHAR LIMIT=20]
     */
    public static final int wifi_menu_p2p=0x7f120de3;
    /**
     * Menu option to remember a temporary Wi-Fi network
     */
    public static final int wifi_menu_remember=0x7f120de4;
    /**
     * Menu option to scan Wi-Fi networks
     */
    public static final int wifi_menu_scan=0x7f120de5;
    /**
     * Menu option to do WPS Push Button [CHAR LIMIT=25]
     */
    public static final int wifi_menu_wps_pbc=0x7f120de6;
    /**
     * Menu option to do WPS Pin Entry [CHAR LIMIT=25]
     */
    public static final int wifi_menu_wps_pin=0x7f120de7;
    /**
     * Menu option to write a Wi-Fi configuration token to an NFC tag [CHAR_LIMIT=30]
     */
    public static final int wifi_menu_write_to_nfc=0x7f120de8;
    /**
     * Button label to modify a Wi-Fi network
     */
    public static final int wifi_modify=0x7f120de9;
    /**
     * Wi-Fi settings. content description for more button [CHAR LIMIT=50]
     */
    public static final int wifi_more=0x7f120dea;
    /**
     * Hint for multiple certificates being added to the configuration
     */
    public static final int wifi_multiple_cert_added=0x7f120deb;
    /**
     * Label for the network prefix of the network [CHAR LIMIT=25]
     */
    public static final int wifi_network_prefix_length=0x7f120dec;
    /**
     * Hint text for network prefix length
     */
    public static final int wifi_network_prefix_length_hint=0x7f120ded;
    /**
     * Warning message displayed if user does not specify a domain for the CA certificate.
     * Only displayed if the user also chooses to use system certificates.
     */
    public static final int wifi_no_domain_warning=0x7f120dee;
    /**
     * Summary for the remembered network but no internet connection was detected.
     */
    public static final int wifi_no_internet=0x7f120def;
    /**
     * Summary for the network but no internet connection was detected.
     */
    public static final int wifi_no_internet_no_reconnect=0x7f120df0;
    /**
     * Summary for the remembered network but currently not in range.
     */
    public static final int wifi_not_in_range=0x7f120df1;
    /**
     * Checkbox title for option to notify user when open networks are nearby
     */
    public static final int wifi_notify_open_networks=0x7f120df2;
    /**
     * Checkbox summary for option to notify user when open networks are nearby
     */
    public static final int wifi_notify_open_networks_summary=0x7f120df3;
    /**
     * Wifi on time
     */
    public static final int wifi_on_time=0x7f120df4;
    /**
     * Message text for disconnection from one device
     */
    public static final int wifi_p2p_cancel_connect_message=0x7f120df5;
    /**
     * Title for cancel connect dialog
     */
    public static final int wifi_p2p_cancel_connect_title=0x7f120df6;
    /**
     * Message text for remembered group deletion
     */
    public static final int wifi_p2p_delete_group_message=0x7f120df7;
    public static final int wifi_p2p_device_info=0x7f120df8;
    /**
     * Message text for disconnection from one device
     */
    public static final int wifi_p2p_disconnect_message=0x7f120df9;
    /**
     * Message text for disconnection from multiple devices
     */
    public static final int wifi_p2p_disconnect_multiple_message=0x7f120dfa;
    /**
     * Title for disconnect dialog
     */
    public static final int wifi_p2p_disconnect_title=0x7f120dfb;
    /**
     * Toast text for a failed connection initiation
     */
    public static final int wifi_p2p_failed_connect_message=0x7f120dfc;
    /**
     * Message text for failure to rename
     */
    public static final int wifi_p2p_failed_rename_message=0x7f120dfd;
    /**
     * Menu option to Rename
     */
    public static final int wifi_p2p_menu_rename=0x7f120dfe;
    /**
     * Menu option to discover peers
     */
    public static final int wifi_p2p_menu_search=0x7f120dff;
    /**
     * Menu option when discovery is in progress [CHAR LIMIT=25]
     */
    public static final int wifi_p2p_menu_searching=0x7f120e00;
    /**
     * Title for available p2p devices
     */
    public static final int wifi_p2p_peer_devices=0x7f120e01;
    public static final int wifi_p2p_persist_network=0x7f120e02;
    /**
     * Title for remembered p2p groups
     */
    public static final int wifi_p2p_remembered_groups=0x7f120e03;
    /**
     * Used in the 1st-level settings screen to launch Wi-fi Direct settings [CHAR LIMIT=25]
     */
    public static final int wifi_p2p_settings_title=0x7f120e04;
    /**
     * Label for the password of the secured network
     */
    public static final int wifi_password=0x7f120e05;
    /**
     * Checkbox title for option to toggle poor network detection
     */
    public static final int wifi_poor_network_detection=0x7f120e06;
    /**
     * Checkbox summary for option to toggle poor network detection
     */
    public static final int wifi_poor_network_detection_summary=0x7f120e07;
    /**
     * Used in the 1st-level settings screen as the turn-on summary
     */
    public static final int wifi_quick_toggle_summary=0x7f120e08;
    /**
     * Used in the 1st-level settings screen to turn on Wi-Fi
     */
    public static final int wifi_quick_toggle_title=0x7f120e09;
    /**
     * Summary for the remembered network.
     */
    public static final int wifi_remembered=0x7f120e0a;
    /**
     * Summary text when wifi SoftAP started failed due to no legal usable channel allowed in this region by regulatory
     */
    public static final int wifi_sap_no_channel_error=0x7f120e0b;
    /**
     * Button label to save a Wi-Fi network configuration
     */
    public static final int wifi_save=0x7f120e0c;
    /**
     * Wifi saved access points.  Used as a label under the shortcut icon that goes to Wifi saved access points. [CHAR LIMIT=20]
     */
    public static final int wifi_saved_access_points_label=0x7f120e0d;
    /**
     * Wi-Fi settings screen, Saved networks, settings section.  This is a header shown above Saved networks wifi settings. [CHAR LIMIT=30]
     */
    public static final int wifi_saved_access_points_titlebar=0x7f120e0e;
    public static final int wifi_scan_always_confirm_allow=0x7f120e0f;
    public static final int wifi_scan_always_confirm_deny=0x7f120e10;
    /**
     * Message informing the user how to turn off  [CHAR LIMIT=200]
     */
    public static final int wifi_scan_always_turnoff_message=0x7f120e11;
    public static final int wifi_scan_always_turnon_message=0x7f120e12;
    /**
     * Wifi scan always mode checkbox text
     */
    public static final int wifi_scan_notify_remember_choice=0x7f120e13;
    /**
     * Message to describe "Wi-Fi scan always available feature" when Wi-Fi is off and Wi-Fi
     * scanning is on. The place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They
     * mark a link to bring the user to "scanning settings" screen.
     */
    public static final int wifi_scan_notify_text=0x7f120e14;
    /**
     * Message to describe "Wi-Fi scan always available feature" when Wi-Fi is off and Wi-Fi
     * scanning is also off. The place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated.
     * They mark a link to bring the user to "scanning settings" screen.
     */
    public static final int wifi_scan_notify_text_scanning_off=0x7f120e15;
    /**
     * Label for the security of the connection
     */
    public static final int wifi_security=0x7f120e16;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP security
     */
    public static final int wifi_security_eap=0x7f120e17;
    /**
     * Used in Wi-Fi settings dialogs when Wi-Fi does not have any security.
     */
    public static final int wifi_security_none=0x7f120e18;
    /**
     * Do not translate.  Concise terminology for Passpoint network
     */
    public static final int wifi_security_passpoint=0x7f120e19;
    /**
     * Do not translate.  Terminology for wifi with unknown PSK type
     */
    public static final int wifi_security_psk_generic=0x7f120e1a;
    /**
     * Do not translate.  Concise terminology for wifi with 802.1x EAP security
     */
    public static final int wifi_security_short_eap=0x7f120e1b;
    /**
     * Do not translate.  Concise terminology for wifi with unknown PSK type
     */
    public static final int wifi_security_short_psk_generic=0x7f120e1c;
    /**
     * Do not translate.  Concise terminology for wifi with WEP security
     */
    public static final int wifi_security_short_wep=0x7f120e1d;
    /**
     * Do not translate.  Concise terminology for wifi with WPA security
     */
    public static final int wifi_security_short_wpa=0x7f120e1e;
    /**
     * Do not translate.  Concise terminology for wifi with WPA2 security
     */
    public static final int wifi_security_short_wpa2=0x7f120e1f;
    /**
     * Do not translate.  Concise terminology for wifi with both WPA/WPA2 security
     */
    public static final int wifi_security_short_wpa_wpa2=0x7f120e20;
    /**
     * Do not translate.  Terminology for wifi with WEP security
     */
    public static final int wifi_security_wep=0x7f120e21;
    /**
     * Do not translate.  Terminology for wifi with WPA security
     */
    public static final int wifi_security_wpa=0x7f120e22;
    /**
     * Do not translate.  Terminology for wifi with WPA2 security
     */
    public static final int wifi_security_wpa2=0x7f120e23;
    /**
     * Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown
     */
    public static final int wifi_security_wpa_wpa2=0x7f120e24;
    /**
     * Used by Account creation for turning on Wi-Fi  [CHAR LIMIT=60]
     */
    public static final int wifi_select_network=0x7f120e25;
    /**
     * Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off? [CHAR LIMIT=30]
     */
    public static final int wifi_setting_on_during_sleep_title=0x7f120e26;
    /**
     * Generic error message when the sleep policy could not be set.
     */
    public static final int wifi_setting_sleep_policy_error=0x7f120e27;
    /**
     * Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off?
     */
    public static final int wifi_setting_sleep_policy_title=0x7f120e28;
    /**
     * Used in the 1st-level settings screen to go to the 2nd-level settings screen  [CHAR LIMIT=20]
     */
    public static final int wifi_settings=0x7f120e29;
    /**
     * Title of the Wi-fi settings screen
     */
    public static final int wifi_settings_category=0x7f120e2a;
    /**
     * Summary text of the Wi-fi settings screen
     */
    public static final int wifi_settings_summary=0x7f120e2b;
    /**
     * Title of the Wi-fi settings entry in the left top level menu
     */
    public static final int wifi_settings_title=0x7f120e2c;
    /**
     * Button message shown on the button adding manual setting.
     * Used in Wifi Setup For Setup Wizard with XL screen.
     */
    public static final int wifi_setup_add_network=0x7f120e2d;
    /**
     * Button label to go back to previous screen. Used in SetupWizard for
     * XLarge screen [CHAR LIMIT=10]
     */
    public static final int wifi_setup_back=0x7f120e2e;
    /**
     * Button label to dismiss the dialog.
     * Used in SetupWizard for XLarge screen [CHAR LIMIT=10]
     */
    public static final int wifi_setup_cancel=0x7f120e2f;
    /**
     * Button label to connect to a Wi-Fi network.
     * Used in SetupWizard for XLarge screen [CHAR LIMIT=10]
     */
    public static final int wifi_setup_connect=0x7f120e30;
    /**
     * Message shown when the device is connected to a network [CHAR LIMIT=NONE]
     */
    public static final int wifi_setup_description_connected=0x7f120e31;
    /**
     * Message shown when the device is connecting a network [CHAR LIMIT=NONE]
     */
    public static final int wifi_setup_description_connecting=0x7f120e32;
    /**
     * Button label to show detailed dialog for a selected Wi-Fi settings.
     * Used in SetupWizard for XLarge screen [CHAR LIMIT=20]
     */
    public static final int wifi_setup_detail=0x7f120e33;
    /**
     * Message shown when users select EAP in Wi-Fi settings for SetupWizard,
     * saying EAP can't be configured in SetupWizard flow.
     * [CHAR LIMIT=NONE]
     */
    public static final int wifi_setup_eap_not_supported=0x7f120e34;
    /**
     * Button label to delete a Wi-Fi network.
     * Used in SetupWizard for XLarge screen [CHAR LIMIT=10]
     */
    public static final int wifi_setup_forget=0x7f120e35;
    /**
     * Button message shown on the button enabling users go the next step.
     * Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=10]
     */
    public static final int wifi_setup_next=0x7f120e36;
    /**
     * Text message shown when Wifi is not connected.
     * Used in Wifi Setup For Setup Wizard with XL screen.
     */
    public static final int wifi_setup_not_connected=0x7f120e37;
    /**
     * Button message shown on the button refreshing a list of network.
     * Used in Wifi Setup For Setup Wizard with XL screen.
     */
    public static final int wifi_setup_refresh_list=0x7f120e38;
    /**
     * Button label to save a Wi-Fi network configuration.
     * Used in SetupWizard for XLarge screen [CHAR LIMIT=10]
     */
    public static final int wifi_setup_save=0x7f120e39;
    /**
     * Button message shown on the button enabling users skip Wifi Setup.
     * Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=10]
     */
    public static final int wifi_setup_skip=0x7f120e3a;
    /**
     * The message shown above available networks when a user clicked one of available
     * networks or created another profile and he/she is waiting for the connection
     * is established.
     * Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35]
     */
    public static final int wifi_setup_status_connecting=0x7f120e3b;
    /**
     * The message shown above available networks when a user clicked a network secured by
     * EAP. We don't allow the user to connect it.
     * Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35]
     */
    public static final int wifi_setup_status_eap_not_supported=0x7f120e3c;
    /**
     * Message shown above available networks when a user clicked one of available
     * networks and the UI is prompting the user to edit the network configuration
     * if needed. Used in Wifi Setup with XL screen. [CHAR LIMIT=35]
     */
    public static final int wifi_setup_status_edit_network=0x7f120e3d;
    /**
     * Message shown above available networks when a user clicked one of available
     * networks and the UI is showing one possible existing network.
     * Used in Wifi Setup.
     */
    public static final int wifi_setup_status_existing_network=0x7f120e3e;
    /**
     * The message shown above available networks when a user clicked "Add network"
     * button. Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35]
     */
    public static final int wifi_setup_status_new_network=0x7f120e3f;
    /**
     * The message shown above available networks when connection is established,
     * letting a user to proceed to the next step of the SetupWizard.
     * Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35]
     */
    public static final int wifi_setup_status_proceed_to_next=0x7f120e40;
    /**
     * The message shown above available networks when the device is scanning
     * available networks [CHAR LIMIT=35]
     */
    public static final int wifi_setup_status_scanning=0x7f120e41;
    /**
     * Message shown above available network when there's no connected network.
     * Used in Wifi Setup For Setup Wizard with XL screen.
     */
    public static final int wifi_setup_status_select_network=0x7f120e42;
    /**
     * Message shown above available networks when a user clicked one of available
     * networks and the network doesn't require configuration (e.g. password)
     * Used in Wifi Setup with XL screen. [CHAR LIMIT=35]
     */
    public static final int wifi_setup_status_unsecured_network=0x7f120e43;
    /**
     * Title shown in Wifi Setup Wizard with XL screen
     */
    public static final int wifi_setup_title=0x7f120e44;
    /**
     * Title shown in Wifi Setup For Setup Wizard with XL screen when
     * a user is adding a network.
     * [CHAR LIMIT=50]
     */
    public static final int wifi_setup_title_add_network=0x7f120e45;
    /**
     * Title shown in Wifi Setup For Setup Wizard with XL screen when
     * the device successfully connected to a network the user specified.
     * The argument should be the name of the network.
     * [CHAR LIMIT=50]
     */
    public static final int wifi_setup_title_connected_network=0x7f120e46;
    /**
     * Title shown in Wifi Setup For Setup Wizard with XL screen when
     * the device is connecting a network the user specified.
     * The argument should be the name of the network.
     * [CHAR LIMIT=50]
     */
    public static final int wifi_setup_title_connecting_network=0x7f120e47;
    /**
     * Title shown in Wifi Setup Wizard with XL screen when
     * a user is configuring password for a network.
     * The argument should be the name of the network.
     * [CHAR LIMIT=50]
     */
    public static final int wifi_setup_title_editing_network=0x7f120e48;
    /**
     * Wi-Fi settings. wps menu title [CHAR LIMIT=25]
     */
    public static final int wifi_setup_wps=0x7f120e49;
    /**
     * Label for the check box to share a network with other users on the same device
     */
    public static final int wifi_shared=0x7f120e4a;
    /**
     * Label to show/hide advanced options [CHAR LIMIT=40]
     */
    public static final int wifi_show_advanced=0x7f120e4b;
    /**
     * Label for the check box to show password
     */
    public static final int wifi_show_password=0x7f120e4c;
    /**
     * Label for the signal strength of the connection
     */
    public static final int wifi_signal=0x7f120e4d;
    /**
     * Label for the link speed of the connection
     */
    public static final int wifi_speed=0x7f120e4e;
    /**
     * Label for the SSID of the network
     */
    public static final int wifi_ssid=0x7f120e4f;
    /**
     * Hint for a text field to enter the SSID of a hidden wifi network. [CHAR LIMIT=35]
     */
    public static final int wifi_ssid_hint=0x7f120e50;
    /**
     * Warning message displayed if network name (ssid) is too long
     */
    public static final int wifi_ssid_too_long=0x7f120e51;
    /**
     * Summary text when turning Wi-Fi or bluetooth on
     */
    public static final int wifi_starting=0x7f120e52;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_disabled=0x7f120e53;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_disabling=0x7f120e54;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_enabled=0x7f120e55;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_enabling=0x7f120e56;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Label on Wifi Status screen
     */
    public static final int wifi_state_label=0x7f120e57;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     */
    public static final int wifi_state_unknown=0x7f120e58;
    /**
     * Label for the status of the connection
     */
    public static final int wifi_status=0x7f120e59;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Menu item on Wifi information screen
     */
    public static final int wifi_status_test=0x7f120e5a;
    /**
     * Summary text when turning Wi-Fi or bluetooth off
     */
    public static final int wifi_stopping=0x7f120e5b;
    /**
     * Checkbox title for option to toggle suspend power optimizations [CHAR LIMIT=30]
     */
    public static final int wifi_suspend_efficiency_title=0x7f120e5c;
    /**
     * Checkbox title for option to toggle suspend power optimizations
     */
    public static final int wifi_suspend_optimizations=0x7f120e5d;
    /**
     * Checkbox summary for option to toggle suspend power optimizations
     */
    public static final int wifi_suspend_optimizations_summary=0x7f120e5e;
    /**
     * Checkbox title. Should we switch to using cellular data if Wi-Fi is still connected but the Wi-Fi network we're connected to no longer has Internet access (e.g., due to an outage)?
     */
    public static final int wifi_switch_away_when_unvalidated=0x7f120e5f;
    /**
     * Used to open the ssid and security dialog for Wifi Access Point
     */
    public static final int wifi_tether_configure_ap_text=0x7f120e60;
    /**
     * Default access point SSID used for tethering
     */
    public static final int wifi_tether_configure_ssid_default=0x7f120e61;
    /**
     * Subtext on configuration preference to indicate SSID and security chosen
     */
    public static final int wifi_tether_configure_subtext=0x7f120e62;
    /**
     * Subtext for wifi tether checkbox on success
     */
    public static final int wifi_tether_enabled_subtext=0x7f120e63;
    /**
     * Subtext for wifi tether checkbox on failure
     */
    public static final int wifi_tether_failed_subtext=0x7f120e64;
    /**
     * Summary text when turning hotspot on
     */
    public static final int wifi_tether_starting=0x7f120e65;
    /**
     * Summary text when turning hotspot off
     */
    public static final int wifi_tether_stopping=0x7f120e66;
    /**
     * Hint for unchanged fields
     */
    public static final int wifi_unchanged=0x7f120e67;
    /**
     * Hint for unspecified fields
     */
    public static final int wifi_unspecified=0x7f120e68;
    /**
     * Do not translate. Used for diagnostic screens, precise translation is not necessary
     * Button text on Wifi Status screen
     */
    public static final int wifi_update=0x7f120e69;
    /**
     * Menu option for using trusted system CA certificates to validate EAP servers
     */
    public static final int wifi_use_system_certs=0x7f120e6a;
    /**
     * Setting Checkbox title whether to enable WiFi Verbose Logging. [CHAR LIMIT=40]
     */
    public static final int wifi_verbose_logging=0x7f120e6b;
    /**
     * Setting Checkbox summary whether to enable Wifi verbose Logging [CHAR LIMIT=80]
     */
    public static final int wifi_verbose_logging_summary=0x7f120e6c;
    /**
     * Checkbox title for option to enable Wi-Fi when saved networks are nearby
     */
    public static final int wifi_wakeup=0x7f120e6d;
    /**
     * Checkbox summary for option to enable Wi-Fi when high quality saved networks are nearby
     */
    public static final int wifi_wakeup_summary=0x7f120e6e;
    /**
     * Checkbox summary for Wi-Fi wakeup option to explain that Wi-Fi wakeup is disabled because Wi-Fi scanning is turned off
     */
    public static final int wifi_wakeup_summary_scanning_disabled=0x7f120e6f;
    /**
     * Checkbox summary for Wi-Fi wakeup option to explain that a network rating provider needs to be selected to use the feature.
     */
    public static final int wifi_wakeup_summary_scoring_disabled=0x7f120e70;
    /**
     * Substring of status line when Wi-Fi Protected Setup (WPS) is available and
     * string is listed first [CHAR LIMIT=20]
     */
    public static final int wifi_wps_available_first_item=0x7f120e71;
    /**
     * Substring of wifi status when Wi-Fi Protected Setup (WPS) is available and
     * string is listed after a wifi_secured_* string
     */
    public static final int wifi_wps_available_second_item=0x7f120e72;
    /**
     * Text displayed when WPS succeeds [CHAR LIMIT=150]
     */
    public static final int wifi_wps_complete=0x7f120e73;
    /**
     * Text displayed when Wi-Fi is connected through WPS [CHAR LIMIT=150]
     */
    public static final int wifi_wps_connected=0x7f120e74;
    /**
     * Text displayed when WPS fails due to authentication issues [CHAR LIMIT=150]
     */
    public static final int wifi_wps_failed_auth=0x7f120e75;
    /**
     * Text displayed when WPS fails to start [CHAR LIMIT=150]
     */
    public static final int wifi_wps_failed_generic=0x7f120e76;
    /**
     * Text displayed when WPS fails due to another session [CHAR LIMIT=150]
     */
    public static final int wifi_wps_failed_overlap=0x7f120e77;
    /**
     * Text displayed when WPS fails to TKIP [CHAR LIMIT=150]
     */
    public static final int wifi_wps_failed_tkip=0x7f120e78;
    /**
     * Text displayed when WPS fails due to WEP [CHAR LIMIT=150]
     */
    public static final int wifi_wps_failed_wep=0x7f120e79;
    /**
     * Text displayed when WPS setup is in progress [CHAR LIMIT=150]
     */
    public static final int wifi_wps_in_progress=0x7f120e7a;
    /**
     * Message in WriteWifiConfigToNfcDialog when prompted to enter network password [CHAR_LIMIT=40]
     */
    public static final int wifi_wps_nfc_enter_password=0x7f120e7b;
    /**
     * Message in WPS dialog for PBC after start up [CHAR LIMIT=150]
     */
    public static final int wifi_wps_onstart_pbc=0x7f120e7c;
    /**
     * Message in WPS dialog for PIN after start up [CHAR LIMIT=150]
     */
    public static final int wifi_wps_onstart_pin=0x7f120e7d;
    /**
     * Message in WPS dialog at start up [CHAR LIMIT=150]
     */
    public static final int wifi_wps_setup_msg=0x7f120e7e;
    /**
     * Title for the WPS setup dialog [CHAR LIMIT=50]
     */
    public static final int wifi_wps_setup_title=0x7f120e7f;
    public static final int wimax_settings=0x7f120e80;
    /**
     * UI debug setting: scaling factor for window animations [CHAR LIMIT=25]
     */
    public static final int window_animation_scale_title=0x7f120e81;
    /**
     * Wireless Settings screen title for things like Wi-Fi, bluetooth, airplane mode.
     */
    public static final int wireless_networks_settings_title=0x7f120e82;
    /**
     * Wizard back button label [CHAR LIMIT=25]
     */
    public static final int wizard_back=0x7f120e83;
    /**
     * Wizard next button label [CHAR LIMIT=25]
     */
    public static final int wizard_finish=0x7f120e84;
    /**
     * Wizard next button label [CHAR LIMIT=25]
     */
    public static final int wizard_next=0x7f120e85;
    /**
     * Work Sound: Title for the option defining the default work alarm ringtone. [CHAR LIMIT=60]
     */
    public static final int work_alarm_ringtone_title=0x7f120e86;
    /**
     * Account Settings. The preference title for enabling work mode
     */
    public static final int work_mode_label=0x7f120e87;
    /**
     * Account Settings. The preference summary for enabling work mode
     */
    public static final int work_mode_summary=0x7f120e88;
    /**
     * Work Sounds: Title for the option defining the default work notification ringtone. [CHAR LIMIT=60]
     */
    public static final int work_notification_ringtone_title=0x7f120e89;
    /**
     * Work profile removal confirmation message [CHAR LIMIT=none]
     */
    public static final int work_profile_confirm_remove_message=0x7f120e8a;
    /**
     * Work profile removal confirmation title [CHAR LIMIT=25]
     */
    public static final int work_profile_confirm_remove_title=0x7f120e8b;
    /**
     * Notification Access section: Indicates that the work profile admin doesn't allow this
     * notification listener to access work profile notifications [CHAR LIMIT=100]
     */
    public static final int work_profile_notification_access_blocked_summary=0x7f120e8c;
    /**
     * Warning message about disabling usage access on profile owner [CHAR LIMIT=NONE]
     */
    public static final int work_profile_usage_access_warning=0x7f120e8d;
    /**
     * Work Sounds: Title for the option defining the work phone ringtone. [CHAR LIMIT=60]
     */
    public static final int work_ringtone_title=0x7f120e8e;
    /**
     * Work SIM title.  [CHAR LIMIT=50]
     */
    public static final int work_sim_title=0x7f120e8f;
    /**
     * Work Sound: Summary for sounds when sync with personal sounds is active [CHAR LIMIT=60]
     */
    public static final int work_sound_same_as_personal=0x7f120e90;
    /**
     * Work Sound: Message for dialog shown when using the same sounds for work events as for personal events (notifications / ringtones / alarms). [CHAR LIMIT=none]
     */
    public static final int work_sync_dialog_message=0x7f120e91;
    /**
     * Work Sound: Title for dialog shown when enabling sync with personal sounds. [CHAR LIMIT=60]
     */
    public static final int work_sync_dialog_title=0x7f120e92;
    /**
     * Work Sound: Confirm action text for dialog shown when overriding work notification sounds with personal sounds. [CHAR LIMIT=30]
     */
    public static final int work_sync_dialog_yes=0x7f120e93;
    /**
     * Work Sound: Summary for the switch that enables syncing of personal ringtones to work profile. [CHAR LIMIT=160]
     */
    public static final int work_use_personal_sounds_summary=0x7f120e94;
    /**
     * Work Sounds: Title for the switch that enables syncing of personal ringtones to work profile. [CHAR LIMIT=60]
     */
    public static final int work_use_personal_sounds_title=0x7f120e95;
    /**
     * Settings title in main settings screen for WRITE_SETTINGS [CHAR LIMIT=30]
     */
    public static final int write_settings=0x7f120e96;
    /**
     * Description of the write system settings [CHAR LIMIT=NONE]
     */
    public static final int write_settings_description=0x7f120e97;
    /**
     * Summary of app not allowed to write system settings [CHAR LIMIT=45]
     */
    public static final int write_settings_off=0x7f120e98;
    /**
     * Summary of app allowed to write system settings [CHAR LIMIT=45]
     */
    public static final int write_settings_on=0x7f120e99;
    /**
     * Link to the apps page for WRITE_SETTINGS settings [CHAR LIMIT=52]
     */
    public static final int write_settings_preference=0x7f120e9a;
    /**
     * Summary of number of apps currently can write system settings [CHAR LIMIT=60]
     */
    public static final int write_settings_summary=0x7f120e9b;
    /**
     * Title for the apps that are allowed to write system settings [CHAR LIMIT=60]
     */
    public static final int write_settings_title=0x7f120e9c;
    /**
     * Main settings screen item's title to go into the write system settings screen [CHAR LIMIT=30]
     */
    public static final int write_system_settings=0x7f120e9d;
    /**
     * Text for button to confirm writing tag
     */
    public static final int write_tag=0x7f120e9e;
    /**
     * Instructions telling the user that they entered the wrong SIM PIN for the last time.
     * Displayed in a dialog box.  [CHAR LIMIT=100]
     */
    public static final int wrong_pin_code_pukked=0x7f120e9f;
    /**
     * Strings for Dialog yes button
     */
    public static final int yes=0x7f120ea0;
    public static final int zen_access_disabled_package_warning=0x7f120ea1;
    /**
     * Sound & notification > Do Not Disturb access > Text to display when the list is empty. [CHAR LIMIT=NONE]
     */
    public static final int zen_access_empty_text=0x7f120ea2;
    /**
     * Zen mode access settings - summary for warning dialog when revoking access [CHAR LIMIT=NONE]
     */
    public static final int zen_access_revoke_warning_dialog_summary=0x7f120ea3;
    /**
     * Zen mode access settings - title for warning dialog when revoking access [CHAR LIMIT=NONE]
     */
    public static final int zen_access_revoke_warning_dialog_title=0x7f120ea4;
    /**
     * Zen mode access settings - summary for warning dialog when enabling access [CHAR LIMIT=NONE]
     */
    public static final int zen_access_warning_dialog_summary=0x7f120ea5;
    /**
     * Zen mode access settings - title for warning dialog when enabling access [CHAR LIMIT=NONE]
     */
    public static final int zen_access_warning_dialog_title=0x7f120ea6;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Event rule toast hint when enabled
     */
    public static final int zen_event_rule_enabled_toast=0x7f120ea7;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event rule type name
     */
    public static final int zen_event_rule_type_name=0x7f120ea8;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Add rule menu option name
     */
    public static final int zen_mode_add_rule=0x7f120ea9;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Alarms option
     */
    public static final int zen_mode_alarms=0x7f120eaa;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Alarms option summary
     */
    public static final int zen_mode_alarms_summary=0x7f120eab;
    /**
     * [CHAR LIMIT=50] Zen mode settings: All callers summary
     */
    public static final int zen_mode_all_callers=0x7f120eac;
    /**
     * [CHAR LIMIT=50] Zen mode settings: All messages summary
     */
    public static final int zen_mode_all_messages=0x7f120ead;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions summary
     */
    public static final int zen_mode_all_visual_interruptions=0x7f120eae;
    /**
     * Do not disturb: Title for the zen mode automation listing. [CHAR LIMIT=30]
     */
    public static final int zen_mode_automation_settings_title=0x7f120eaf;
    /**
     * Do not disturb: Summary for the zen mode automation option Suggestion. [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_automation_suggestion_summary=0x7f120eb0;
    /**
     * Do not disturb: Title for the zen mode automation option Suggestion. [CHAR LIMIT=50]
     */
    public static final int zen_mode_automation_suggestion_title=0x7f120eb1;
    /**
     * [CHAR LIMIT=20] Zen mode settings: Calls option
     */
    public static final int zen_mode_calls=0x7f120eb2;
    /**
     * [CHAR LIMIT=60] Zen mode settings: Choose rule type dialog title
     */
    public static final int zen_mode_choose_rule_type=0x7f120eb3;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Configure external rule
     */
    public static final int zen_mode_configure_rule=0x7f120eb4;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Delete rule menu option name
     */
    public static final int zen_mode_delete_rule=0x7f120eb5;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Delete rule dialog button caption
     */
    public static final int zen_mode_delete_rule_button=0x7f120eb6;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Delete rule dialog confirmation message
     */
    public static final int zen_mode_delete_rule_confirmation=0x7f120eb7;
    /**
     * [CHAR LIMIT=20] Zen mode settings: End time option
     */
    public static final int zen_mode_end_time=0x7f120eb8;
    /**
     * [CHAR LIMIT=60] Zen mode settings: End time option: Summary text value format when end time = next day
     */
    public static final int zen_mode_end_time_next_day_summary_format=0x7f120eb9;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule calendar option title
     */
    public static final int zen_mode_event_rule_calendar=0x7f120eba;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule calendar option value for any calendar
     */
    public static final int zen_mode_event_rule_calendar_any=0x7f120ebb;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option title
     */
    public static final int zen_mode_event_rule_reply=0x7f120ebc;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes, Maybe, or Not replied
     */
    public static final int zen_mode_event_rule_reply_any_except_no=0x7f120ebd;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes
     */
    public static final int zen_mode_event_rule_reply_yes=0x7f120ebe;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes or Maybe
     */
    public static final int zen_mode_event_rule_reply_yes_or_maybe=0x7f120ebf;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: any calendar
     */
    public static final int zen_mode_event_rule_summary_any_calendar=0x7f120ec0;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: During events for
     */
    public static final int zen_mode_event_rule_summary_calendar_template=0x7f120ec1;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: Where reply is
     */
    public static final int zen_mode_event_rule_summary_reply_template=0x7f120ec2;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Events option
     */
    public static final int zen_mode_events=0x7f120ec3;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From anyone
     */
    public static final int zen_mode_from_anyone=0x7f120ec4;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From contacts only
     */
    public static final int zen_mode_from_contacts=0x7f120ec5;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: None
     */
    public static final int zen_mode_from_none=0x7f120ec6;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From starred contacts only
     */
    public static final int zen_mode_from_starred=0x7f120ec7;
    /**
     * [CHAR LIMIT=20] Zen mode settings: Messages option
     */
    public static final int zen_mode_messages=0x7f120ec8;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions summary
     */
    public static final int zen_mode_no_visual_interruptions=0x7f120ec9;
    /**
     * Do not disturb: Zen mode option: Alarms only [CHAR LIMIT=60]
     */
    public static final int zen_mode_option_alarms=0x7f120eca;
    /**
     * Do not disturb: Zen mode option: Important interruptions [CHAR LIMIT=60]
     */
    public static final int zen_mode_option_important_interruptions=0x7f120ecb;
    /**
     * Do not disturb: Zen mode option: No interruptions [CHAR LIMIT=60]
     */
    public static final int zen_mode_option_no_interruptions=0x7f120ecc;
    /**
     * Do not disturb: Title for the Priority interruptions option and associated settings page. [CHAR LIMIT=30]
     */
    public static final int zen_mode_priority_settings_title=0x7f120ecd;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Reminders option
     */
    public static final int zen_mode_reminders=0x7f120ece;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Repeat callers option
     */
    public static final int zen_mode_repeat_callers=0x7f120ecf;
    /**
     * [CHAR LIMIT=200] Zen mode settings: Repeat callers option summary
     */
    public static final int zen_mode_repeat_callers_summary=0x7f120ed0;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule delete button
     */
    public static final int zen_mode_rule_delete_button=0x7f120ed1;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule name option and edit dialog title
     */
    public static final int zen_mode_rule_name=0x7f120ed2;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule name hint text
     */
    public static final int zen_mode_rule_name_hint=0x7f120ed3;
    /**
     * [CHAR LIMIT=100] Zen mode settings: Warning text for invalid zen rule names
     */
    public static final int zen_mode_rule_name_warning=0x7f120ed4;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Text to display if rule isn't found
     */
    public static final int zen_mode_rule_not_found_text=0x7f120ed5;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule name edit button
     */
    public static final int zen_mode_rule_rename_button=0x7f120ed6;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Rule summary template (when enabled)
     */
    public static final int zen_mode_rule_summary_enabled_combination=0x7f120ed7;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Third party Rule summary template
     */
    public static final int zen_mode_rule_summary_provider_combination=0x7f120ed8;
    /**
     * [CHAR LIMIT=40] Zen mode settings: External rule type
     */
    public static final int zen_mode_rule_type=0x7f120ed9;
    /**
     * [CHAR LIMIT=40] Zen mode settings: External rule type name if unknown
     */
    public static final int zen_mode_rule_type_unknown=0x7f120eda;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Downtime rule setting
     */
    public static final int zen_mode_schedule_alarm_summary=0x7f120edb;
    /**
     * [CHAR LIMIT=60] Zen mode settings: Downtime rule setting
     */
    public static final int zen_mode_schedule_alarm_title=0x7f120edc;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Time-based rule days option title
     */
    public static final int zen_mode_schedule_rule_days=0x7f120edd;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Downtime days option value, all days set
     */
    public static final int zen_mode_schedule_rule_days_all=0x7f120ede;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Downtime days option value, no days set
     */
    public static final int zen_mode_schedule_rule_days_none=0x7f120edf;
    /**
     * [CHAR LIMIT=40] Zen mode settings: visual interruptions: screen is off: title
     */
    public static final int zen_mode_screen_off=0x7f120ee0;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions: screen is off: summary
     */
    public static final int zen_mode_screen_off_summary=0x7f120ee1;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions: screen is off: summary
     */
    public static final int zen_mode_screen_off_summary_no_led=0x7f120ee2;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions summary
     */
    public static final int zen_mode_screen_off_visual_interruptions=0x7f120ee3;
    /**
     * [CHAR LIMIT=40] Zen mode settings: visual interruptions: screen is on: title
     */
    public static final int zen_mode_screen_on=0x7f120ee4;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions: screen is on: summary
     */
    public static final int zen_mode_screen_on_summary=0x7f120ee5;
    /**
     * [CHAR LIMIT=130] Zen mode settings:  visual interruptions summary
     */
    public static final int zen_mode_screen_on_visual_interruptions=0x7f120ee6;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Selected callers summary
     */
    public static final int zen_mode_selected_callers=0x7f120ee7;
    /**
     * [CHAR LIMIT=50] Zen mode settings: Selected messages summary
     */
    public static final int zen_mode_selected_messages=0x7f120ee8;
    /**
     * Sound: Summary for the Do not Disturb option when there is no automatic rules turned on. [CHAR LIMIT=NONE]
     */
    public static final int zen_mode_settings_summary_off=0x7f120ee9;
    /**
     * Sound: Title for the Do not Disturb option and associated settings page. [CHAR LIMIT=50]
     */
    public static final int zen_mode_settings_title=0x7f120eea;
    /**
     * [CHAR LIMIT=20] Zen mode settings: Start time option
     */
    public static final int zen_mode_start_time=0x7f120eeb;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only until a specific time.
     */
    public static final int zen_mode_summary_alarms_only_by_time=0x7f120eec;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only forever.
     */
    public static final int zen_mode_summary_alarms_only_indefinite=0x7f120eed;
    /**
     * [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: Turn on all notifications.
     */
    public static final int zen_mode_summary_always=0x7f120eee;
    /**
     * Do not disturb: Zen mode combined summary + condition line [CHAR LIMIT=60]
     */
    public static final int zen_mode_summary_combination=0x7f120eef;
    /**
     * Do not disturb: Title for the Visual interruptions option and associated settings page. [CHAR LIMIT=30]
     */
    public static final int zen_mode_visual_interruptions_settings_title=0x7f120ef0;
    /**
     * [CHAR LIMIT=20] Zen mode settings: When option
     */
    public static final int zen_mode_when=0x7f120ef1;
    /**
     * [CHAR LIMIT=20] Zen mode settings: When option value: Every night
     */
    public static final int zen_mode_when_every_night=0x7f120ef2;
    /**
     * [CHAR LIMIT=20] Zen mode settings: When option value: Never
     */
    public static final int zen_mode_when_never=0x7f120ef3;
    /**
     * [CHAR LIMIT=20] Zen mode settings: When option value: Weeknights
     */
    public static final int zen_mode_when_weeknights=0x7f120ef4;
    /**
     * [CHAR LIMIT=NONE] Zen mode settings: Schedule rule toast hint when enabled
     */
    public static final int zen_schedule_rule_enabled_toast=0x7f120ef5;
    /**
     * [CHAR LIMIT=40] Zen mode settings: Schedule rule type name
     */
    public static final int zen_schedule_rule_type_name=0x7f120ef6;
    /**
     * Date & time setting screen setting check box title if the time zone should be determined automatically [CHAR LIMIT=30]
     */
    public static final int zone_auto=0x7f120ef7;
    /**
     * Date & time setting screen setting option summary text when Automatic time zone check box is clear
     * [CHAR LIMIT=100]
     */
    public static final int zone_auto_summaryOff=0x7f120ef8;
    /**
     * Date & time setting screen setting option summary text when Automatic time zone check box is selected (that is, when date and time should be determined automatically)
     * [CHAR LIMIT=100]
     */
    public static final int zone_auto_summaryOn=0x7f120ef9;
    /**
     * Menu item on Select time zone screen
     */
    public static final int zone_list_menu_sort_alphabetically=0x7f120efa;
    /**
     * Menu item on Select time zone screen
     */
    public static final int zone_list_menu_sort_by_timezone=0x7f120efb;
  }
  public static final class style {
    public static final int AccentColorHighlightBorderlessButton=0x7f130000;
    public static final int AlertDialog_AppCompat=0x7f130001;
    public static final int AlertDialog_AppCompat_Light=0x7f130002;
    public static final int Animation_AppCompat_Dialog=0x7f130003;
    public static final int Animation_AppCompat_DropDownUp=0x7f130004;
    public static final int Animation_AppCompat_Tooltip=0x7f130005;
    public static final int Animation_SuwWindowAnimation=0x7f130006;
    public static final int ApnPreference=0x7f130007;
    public static final int AppActionPrimaryButton=0x7f130008;
    public static final int Base_AlertDialog_AppCompat=0x7f130009;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f13000a;
    public static final int Base_Animation_AppCompat_Dialog=0x7f13000b;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f13000c;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f13000d;
    public static final int Base_CardView=0x7f13000e;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f13000f;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f130010;
    public static final int Base_TextAppearance_AppCompat=0x7f130011;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f130012;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f130013;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f130014;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f130015;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f130016;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f130017;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f130018;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f130019;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f13001a;
    /**
     * Now deprecated styles
     */
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f13001b;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f13001c;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f13001d;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f13001e;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f13001f;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f130020;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f130021;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f130022;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f130023;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f130024;
    /**
     * Search View result styles
     */
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f130025;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f130026;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f130027;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f130028;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f130029;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f13002a;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f13002b;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f13002c;
    /**
     * We can use the fixed TextAppearance.Material.Widget.ActionBar.Menu on 23+
     */
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f13002d;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f13002e;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f13002f;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f130030;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f130031;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f130032;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f130033;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f130034;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f130035;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f130036;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f130037;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f130038;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f130039;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f13003a;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f13003b;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f13003c;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f13003d;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f13003e;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f13003f;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f130040;
    public static final int Base_Theme_AppCompat=0x7f130041;
    /**
     * Menu/item attributes
     */
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f130042;
    public static final int Base_Theme_AppCompat_Dialog=0x7f130043;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f130044;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f130045;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f130046;
    /**
     * We're not large, so redirect to Theme.AppCompat
     */
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f130047;
    public static final int Base_Theme_AppCompat_Light=0x7f130048;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f130049;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f13004a;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f13004b;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f13004c;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f13004d;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f13004e;
    public static final int Base_ThemeOverlay_AppCompat=0x7f13004f;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f130050;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f130051;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f130052;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f130053;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f130054;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f130055;
    public static final int Base_V11_Theme_AppCompat_Dialog=0x7f130056;
    public static final int Base_V11_Theme_AppCompat_Light_Dialog=0x7f130057;
    public static final int Base_V11_ThemeOverlay_AppCompat_Dialog=0x7f130058;
    public static final int Base_V12_Widget_AppCompat_AutoCompleteTextView=0x7f130059;
    public static final int Base_V12_Widget_AppCompat_EditText=0x7f13005a;
    public static final int Base_V21_Theme_AppCompat=0x7f13005b;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f13005c;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f13005d;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f13005e;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f13005f;
    public static final int Base_V22_Theme_AppCompat=0x7f130060;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f130061;
    public static final int Base_V23_Theme_AppCompat=0x7f130062;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f130063;
    public static final int Base_V26_Theme_AppCompat=0x7f130064;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f130065;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f130066;
    /**
     * Base platform-dependent theme providing an action bar in a dark-themed activity.
     */
    public static final int Base_V7_Theme_AppCompat=0x7f130067;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f130068;
    /**
     * Base platform-dependent theme providing an action bar in a light-themed activity.
     */
    public static final int Base_V7_Theme_AppCompat_Light=0x7f130069;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f13006a;
    /**
     * Theme overlay that overrides window properties to display as a dialog.
     */
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f13006b;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f13006c;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f13006d;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f13006e;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f13006f;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f130070;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f130071;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f130072;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f130073;
    /**
     * Action Button Styles
     */
    public static final int Base_Widget_AppCompat_ActionButton=0x7f130074;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f130075;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f130076;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f130077;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f130078;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f130079;
    public static final int Base_Widget_AppCompat_Button=0x7f13007a;
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f13007b;
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f13007c;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f13007d;
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f13007e;
    public static final int Base_Widget_AppCompat_Button_Small=0x7f13007f;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f130080;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f130081;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f130082;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f130083;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f130084;
    /**
     * contains values used in all dpis except hdpi and xxhdpi
     */
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f130085;
    /**
     * contains values used in all dpis
     */
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f130086;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f130087;
    public static final int Base_Widget_AppCompat_EditText=0x7f130088;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f130089;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f13008a;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f13008b;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f13008c;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f13008d;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f13008e;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f13008f;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f130090;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f130091;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f130092;
    /**
     * Popup Menu
     */
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f130093;
    /**
     * Base.Widget.AppCompat.Spinner.Underlined is overridden in ldltr-v21 and v23
     */
    public static final int Base_Widget_AppCompat_ListView=0x7f130094;
    /**
     * Spinner Widgets
     */
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f130095;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f130096;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f130097;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f130098;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f130099;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f13009a;
    /**
     * Progress Bar
     */
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f13009b;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f13009c;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f13009d;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f13009e;
    public static final int Base_Widget_AppCompat_SearchView=0x7f13009f;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f1300a0;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f1300a1;
    /**
     * A seek bar with tick marks at each progress value.
     */
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f1300a2;
    public static final int Base_Widget_AppCompat_Spinner=0x7f1300a3;
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f1300a4;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1300a5;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f1300a6;
    /**
     * Widget.AppCompat.Toolbar style is purposely ommitted. This is because the support
     * Toolbar implementation is used on ALL platforms and relies on the unbundled attrs.
     * The supporting Toolbar styles below only use basic attrs so work fine.
     */
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1300a7;
    public static final int BluetoothPermission=0x7f1300a8;
    /**
     * On API v23+ we can use the platform provided floating background color
     */
    public static final int CardView=0x7f1300a9;
    public static final int CardView_Dark=0x7f1300aa;
    public static final int CardView_Light=0x7f1300ab;
    public static final int ConfirmDeviceCredentialsAnimationStyle=0x7f1300ac;
    public static final int CryptKeeperBlankTheme=0x7f1300ad;
    public static final int DreamStartButton=0x7f1300ae;
    public static final int EntityHeader=0x7f1300af;
    public static final int FallbackHome=0x7f1300b0;
    public static final int FallbackHome_SetupWizard=0x7f1300b1;
    public static final int FallbackHomeProgressBar=0x7f1300b2;
    public static final int FingerprintHeaderStyle=0x7f1300b3;
    public static final int FingerprintLayoutTheme=0x7f1300b4;
    public static final int GlifTheme=0x7f1300b5;
    public static final int GlifTheme_Light=0x7f1300b6;
    public static final int GlifV2Theme=0x7f1300b7;
    public static final int GlifV2Theme_Light=0x7f1300b8;
    public static final int KeyguardAppWidgetItem=0x7f1300b9;
    public static final int LanguageCheckboxAndLabel=0x7f1300ba;
    public static final int LockPatternContainerStyle=0x7f1300bb;
    /**
     * Overridden in sw400dp
     * Unhide the icon on bigger screens
     */
    public static final int LockPatternIconStyle=0x7f1300bc;
    public static final int LockPatternStyle=0x7f1300bd;
    public static final int LockPatternStyle_Dark=0x7f1300be;
    public static final int LockPatternStyle_Dark_Work=0x7f1300bf;
    public static final int LockPatternStyle_Setup=0x7f1300c0;
    public static final int LockPatternStyle_Unlock=0x7f1300c1;
    public static final int Platform_AppCompat=0x7f1300c2;
    public static final int Platform_AppCompat_Light=0x7f1300c3;
    public static final int Platform_ThemeOverlay_AppCompat=0x7f1300c4;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f1300c5;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f1300c6;
    public static final int Platform_V11_AppCompat=0x7f1300c7;
    public static final int Platform_V11_AppCompat_Light=0x7f1300c8;
    public static final int Platform_V14_AppCompat=0x7f1300c9;
    public static final int Platform_V14_AppCompat_Light=0x7f1300ca;
    public static final int Platform_V21_AppCompat=0x7f1300cb;
    public static final int Platform_V21_AppCompat_Light=0x7f1300cc;
    public static final int Platform_V25_AppCompat=0x7f1300cd;
    public static final int Platform_V25_AppCompat_Light=0x7f1300ce;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f1300cf;
    public static final int Preference=0x7f1300d0;
    public static final int Preference_Category=0x7f1300d1;
    public static final int Preference_Category_Material=0x7f1300d2;
    /**
     * Preference category
     */
    public static final int Preference_Category_SettingsBase=0x7f1300d3;
    public static final int Preference_CheckBoxPreference=0x7f1300d4;
    public static final int Preference_CheckBoxPreference_Material=0x7f1300d5;
    public static final int Preference_DialogPreference=0x7f1300d6;
    public static final int Preference_DialogPreference_EditTextPreference=0x7f1300d7;
    public static final int Preference_DialogPreference_EditTextPreference_Material=0x7f1300d8;
    public static final int Preference_DialogPreference_Material=0x7f1300d9;
    public static final int Preference_DropDown=0x7f1300da;
    public static final int Preference_DropDown_Material=0x7f1300db;
    /**
     * Dropdown Preferences
     */
    public static final int Preference_DropdownPreference_SettingsBase=0x7f1300dc;
    /**
     * EditText Preferences
     */
    public static final int Preference_EditTextPreference_SettingsBase=0x7f1300dd;
    /**
     * Footer Preferences
     */
    public static final int Preference_FooterPreference_SettingsBase=0x7f1300de;
    public static final int Preference_Information=0x7f1300df;
    public static final int Preference_Information_Material=0x7f1300e0;
    public static final int Preference_Material=0x7f1300e1;
    public static final int Preference_PreferenceScreen=0x7f1300e2;
    public static final int Preference_PreferenceScreen_Material=0x7f1300e3;
    /**
     * Preference screen
     */
    public static final int Preference_Screen_SettingsBase=0x7f1300e4;
    public static final int Preference_SeekBarPreference=0x7f1300e5;
    public static final int Preference_SeekBarPreference_Material=0x7f1300e6;
    /**
     * Preferences
     */
    public static final int Preference_SettingsBase=0x7f1300e7;
    public static final int Preference_SwitchPreference=0x7f1300e8;
    public static final int Preference_SwitchPreference_Material=0x7f1300e9;
    /**
     * Switch Preferences
     */
    public static final int Preference_SwitchPreference_SettingsBase=0x7f1300ea;
    public static final int Preference_SwitchPreferenceCompat=0x7f1300eb;
    public static final int Preference_SwitchPreferenceCompat_Material=0x7f1300ec;
    public static final int PreferenceFragment=0x7f1300ed;
    public static final int PreferenceFragment_Material=0x7f1300ee;
    public static final int PreferenceFragmentList=0x7f1300ef;
    public static final int PreferenceFragmentList_Material=0x7f1300f0;
    public static final int PreferenceFragmentListSinglePane=0x7f1300f1;
    /**
     * Fragment style
     */
    public static final int PreferenceFragmentStyle_SettingsBase=0x7f1300f2;
    public static final int PreferenceHeaderListSinglePane=0x7f1300f3;
    public static final int PreferenceHeaderPanelSinglePane=0x7f1300f4;
    public static final int PreferencePanelSinglePane=0x7f1300f5;
    public static final int PreferenceTheme=0x7f1300f6;
    public static final int PreferenceTheme_SetupWizard=0x7f1300f7;
    public static final int PreferenceThemeOverlay=0x7f1300f8;
    public static final int PreferenceThemeOverlay_SettingsBase=0x7f1300f9;
    public static final int PreferenceThemeOverlay_v14=0x7f1300fa;
    public static final int PreferenceThemeOverlay_v14_Material=0x7f1300fb;
    public static final int Preference_TextAppearanceMaterialBody2=0x7f1300fc;
    public static final int Preference_TextAppearanceMaterialSubhead=0x7f1300fd;
    public static final int PreviewPagerPageIndicator=0x7f1300fe;
    public static final int RedactionItemAndLabel=0x7f1300ff;
    public static final int RingProgressBarStyle=0x7f130100;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f130101;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f130102;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f130103;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f130104;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f130105;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f130106;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f130107;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f130108;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f130109;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f13010a;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f13010b;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f13010c;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f13010d;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f13010e;
    public static final int SecurityPreferenceButton=0x7f13010f;
    public static final int SecurityPreferenceButtonContainer=0x7f130110;
    /**
     * Fragment style
     */
    public static final int SettingsPreferenceFragmentStyle=0x7f130111;
    public static final int SettingsPreferenceHeaderList=0x7f130112;
    public static final int SettingsPreferenceHeaderPanel=0x7f130113;
    public static final int SettingsSeekBarPreference=0x7f130114;
    public static final int SetupWizardAccessibilitySwitchBarTheme=0x7f130115;
    /**
     * Accessibility portion of Setup Wizard
     */
    public static final int SetupWizardAccessibilityTheme=0x7f130116;
    public static final int SetupWizardButton_Negative=0x7f130117;
    public static final int SetupWizardButton_Positive=0x7f130118;
    public static final int SetupWizardPreferenceFragmentStyle=0x7f130119;
    public static final int SetupWizardStorageStyle=0x7f13011a;
    public static final int SetupWizardTheme_Light_Transparent=0x7f13011b;
    public static final int SetupWizardTheme_Transparent=0x7f13011c;
    public static final int SuggestionConditionStyle=0x7f13011d;
    public static final int SupportEscalationCard=0x7f13011e;
    public static final int SupportPrimaryButton=0x7f13011f;
    public static final int SupportSecondaryButton=0x7f130120;
    /**
     * Card layout (for tablets)
     */
    public static final int SuwBaseCardTitle=0x7f130121;
    /**
     * Header layout (for phones)
     */
    public static final int SuwBaseHeaderTitle=0x7f130122;
    /**
     * Button styles
     */
    public static final int SuwButtonItem=0x7f130123;
    public static final int SuwButtonItem_Colored=0x7f130124;
    /**
     * Card layout (for tablets)
     */
    public static final int SuwCardTitle=0x7f130125;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SuwCheckBox=0x7f130126;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SuwCheckBox_Multiline=0x7f130127;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SuwContentFrame=0x7f130128;
    /**
     * Ignore UnusedResources: used by clients
     */
    public static final int SuwContentIllustration=0x7f130129;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SuwDescription=0x7f13012a;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SuwDescription_Glif=0x7f13012b;
    public static final int SuwFillContentLayout=0x7f13012c;
    /**
     * Use this style with a Button not a TextView, so that TalkBack will announce it as a
     * button.
     */
    public static final int SuwGlifButton_BaseTertiary=0x7f13012d;
    /**
     * Button styles
     */
    public static final int SuwGlifButton_Primary=0x7f13012e;
    public static final int SuwGlifButton_Secondary=0x7f13012f;
    /**
     * Button styles
     */
    public static final int SuwGlifButton_Tertiary=0x7f130130;
    /**
     * The start and end paddings are asymmetric because start buttons are borderless buttons
     * which aligns the text label.
     */
    public static final int SuwGlifButtonBar=0x7f130131;
    public static final int SuwGlifButtonBar_Stackable=0x7f130132;
    /**
     * GLIF Card layout (for tablets)
     */
    public static final int SuwGlifCardBackground=0x7f130133;
    /**
     * GLIF Card layout (for tablets)
     */
    public static final int SuwGlifCardContainer=0x7f130134;
    public static final int SuwGlifHeaderContainer=0x7f130135;
    /**
     * GLIF layout
     */
    public static final int SuwGlifHeaderTitle=0x7f130136;
    public static final int SuwGlifIcon=0x7f130137;
    public static final int SuwHeaderTitle=0x7f130138;
    /**
     * Items styles
     */
    public static final int SuwItemContainer=0x7f130139;
    /**
     * Items styles
     */
    public static final int SuwItemContainer_Description=0x7f13013a;
    public static final int SuwItemContainer_Description_Glif=0x7f13013b;
    public static final int SuwItemContainer_Verbose=0x7f13013c;
    public static final int SuwItemSummary=0x7f13013d;
    public static final int SuwItemTitle=0x7f13013e;
    public static final int SuwItemTitle_GlifDescription=0x7f13013f;
    public static final int SuwItemTitle_Verbose=0x7f130140;
    /**
     * Navigation bar styles
     */
    public static final int SuwNavBarButtonStyle=0x7f130141;
    /**
     * Navigation bar styles
     */
    public static final int SuwNavBarTheme=0x7f130142;
    public static final int SuwNavBarThemeDark=0x7f130143;
    public static final int SuwNavBarThemeLight=0x7f130144;
    /**
     * Ignore UnusedResources: Used by clients
     */
    public static final int SuwRadioButton=0x7f130145;
    public static final int SuwSuggestionThemeGlif_Light=0x7f130146;
    public static final int SuwSwitchStyle=0x7f130147;
    public static final int SuwSwitchStyle_Divided=0x7f130148;
    public static final int SuwThemeGlif=0x7f130149;
    public static final int SuwThemeGlif_Light=0x7f13014a;
    /**
     * Deprecated. Use SuwThemeGlifV2 instead
     */
    public static final int SuwThemeGlifPixel=0x7f13014b;
    /**
     * Deprecated. Use SuwThemeGlifV2.Light instead
     */
    public static final int SuwThemeGlifPixel_Light=0x7f13014c;
    /**
     * General styles
     */
    public static final int SuwThemeGlifV2=0x7f13014d;
    public static final int SuwThemeGlifV2_Light=0x7f13014e;
    /**
     * General styles
     */
    public static final int SuwThemeMaterial=0x7f13014f;
    public static final int SuwThemeMaterial_Light=0x7f130150;
    public static final int SyncSwitchPreference=0x7f130151;
    public static final int TallTitleBarTheme=0x7f130152;
    public static final int TextAppearance=0x7f130153;
    public static final int TextAppearance_AppCompat=0x7f130154;
    public static final int TextAppearance_AppCompat_Body1=0x7f130155;
    public static final int TextAppearance_AppCompat_Body2=0x7f130156;
    public static final int TextAppearance_AppCompat_Button=0x7f130157;
    public static final int TextAppearance_AppCompat_Caption=0x7f130158;
    public static final int TextAppearance_AppCompat_Display1=0x7f130159;
    public static final int TextAppearance_AppCompat_Display2=0x7f13015a;
    public static final int TextAppearance_AppCompat_Display3=0x7f13015b;
    public static final int TextAppearance_AppCompat_Display4=0x7f13015c;
    public static final int TextAppearance_AppCompat_Headline=0x7f13015d;
    public static final int TextAppearance_AppCompat_Inverse=0x7f13015e;
    public static final int TextAppearance_AppCompat_Large=0x7f13015f;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f130160;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f130161;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f130162;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f130163;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f130164;
    public static final int TextAppearance_AppCompat_Medium=0x7f130165;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f130166;
    public static final int TextAppearance_AppCompat_Menu=0x7f130167;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f130168;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f130169;
    public static final int TextAppearance_AppCompat_Small=0x7f13016a;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f13016b;
    public static final int TextAppearance_AppCompat_Subhead=0x7f13016c;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f13016d;
    public static final int TextAppearance_AppCompat_Title=0x7f13016e;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f13016f;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f130170;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f130171;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f130172;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f130173;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f130174;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f130175;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f130176;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f130177;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f130178;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f130179;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f13017a;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f13017b;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f13017c;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f13017d;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f13017e;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f13017f;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f130180;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f130181;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f130182;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f130183;
    public static final int TextAppearance_CategoryTitle=0x7f130184;
    public static final int TextAppearance_ConfirmDeviceCredentialsErrorText=0x7f130185;
    public static final int TextAppearance_CryptKeeper_PasswordEntry=0x7f130186;
    public static final int TextAppearance_EntityHeaderTitle=0x7f130187;
    public static final int TextAppearance_FingerprintErrorText=0x7f130188;
    public static final int TextAppearance_Medium=0x7f130189;
    public static final int TextAppearance_PagerTabs=0x7f13018a;
    public static final int TextAppearance_PasswordEntry=0x7f13018b;
    public static final int TextAppearance_RecentsTitle=0x7f13018c;
    public static final int TextAppearance_RemoveDialogContent=0x7f13018d;
    public static final int TextAppearance_ResultTitle=0x7f13018e;
    public static final int TextAppearance_SearchBar=0x7f13018f;
    public static final int TextAppearance_Small=0x7f130190;
    public static final int TextAppearance_Small_SwitchBar=0x7f130191;
    public static final int TextAppearance_SuggestionTitle=0x7f130192;
    public static final int TextAppearance_SupportSummary=0x7f130193;
    public static final int TextAppearance_SupportTitle=0x7f130194;
    /**
     * Card layout (for tablets)
     */
    public static final int TextAppearance_SuwCardTitle=0x7f130195;
    /**
     * Content styles
     */
    public static final int TextAppearance_SuwDescription=0x7f130196;
    public static final int TextAppearance_SuwDescription_Light=0x7f130197;
    public static final int TextAppearance_SuwDescription_Secondary=0x7f130198;
    public static final int TextAppearance_SuwGlifBody=0x7f130199;
    public static final int TextAppearance_SuwGlifItemSummary=0x7f13019a;
    public static final int TextAppearance_SuwGlifItemTitle=0x7f13019b;
    public static final int TextAppearance_SuwItemSummary=0x7f13019c;
    public static final int TextAppearance_Switch=0x7f13019d;
    public static final int TextAppearance_TileSubTitle=0x7f13019e;
    public static final int TextAppearance_TileTitle=0x7f13019f;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f1301a0;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f1301a1;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f1301a2;
    public static final int TextAppearance_info_label=0x7f1301a3;
    public static final int TextAppearance_info_small=0x7f1301a4;
    public static final int TextAppearance_info_value=0x7f1301a5;
    public static final int TextAppearanceMedium=0x7f1301a6;
    public static final int TextAppearanceSmall=0x7f1301a7;
    public static final int Theme_ActionBar=0x7f1301a8;
    public static final int Theme_ActionBar_SubSettings=0x7f1301a9;
    public static final int Theme_AlertDialog=0x7f1301aa;
    /**
     * Platform-independent theme providing an action bar in a dark-themed activity.
     */
    public static final int Theme_AppCompat=0x7f1301ab;
    /**
     * Menu/item attributes
     */
    public static final int Theme_AppCompat_CompactMenu=0x7f1301ac;
    /**
     * AppCompat theme (day/night vesion) for activities.
     * AppCompat theme (day/night vesion) for activities.
     */
    public static final int Theme_AppCompat_DayNight=0x7f1301ad;
    /**
     * Variant of AppCompat.DayNight that has a solid (opaque) action bar
     * with an inverse color profile. The dark action bar sharply stands out against
     * the light content (when applicable).
     * Variant of AppCompat.DayNight that has a solid (opaque) action bar
     * with an inverse color profile. The dark action bar sharply stands out against
     * the light content (when applicable).
     */
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f1301ae;
    /**
     * AppCompat theme (day/night vesion) for dialog windows and activities,
     * which is used by the {@code android.support.v7.app.Dialog} class. This changes
     * the window to be floating (not fill the entire screen), and puts a
     * frame around its contents. You can set this theme on an activity if
     * you would like to make an activity that looks like a Dialog.
     * AppCompat theme (day/night vesion) for dialog windows and activities,
     * which is used by the {@code android.support.v7.app.Dialog} class. This changes
     * the window to be floating (not fill the entire screen), and puts a
     * frame around its contents. You can set this theme on an activity if
     * you would like to make an activity that looks like a Dialog.
     */
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f1301af;
    /**
     * AppCompat user theme for alert dialog windows, which is used by the
     * {@code android.support.v7.app.AlertDialog} class.
     * AppCompat user theme for alert dialog windows, which is used by the
     * {@code android.support.v7.app.AlertDialog} class.
     */
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f1301b0;
    /**
     * Variant of Theme.AppCompat.DayNight.Dialog that has a nice minimum width for
     * a regular dialog.
     * Variant of Theme.AppCompat.DayNight.Dialog that has a nice minimum width for
     * a regular dialog.
     */
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f1301b1;
    /**
     * Theme for a window that will be displayed either full-screen on
     * smaller screens (small, normal) or as a dialog on larger screens
     * (large, xlarge).
     * Theme for a window that will be displayed either full-screen on
     * smaller screens (small, normal) or as a dialog on larger screens
     * (large, xlarge).
     */
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f1301b2;
    /**
     * Variant of AppCompat.DayNight with no action bar.
     * Variant of AppCompat.DayNight with no action bar.
     */
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f1301b3;
    public static final int Theme_AppCompat_Dialog=0x7f1301b4;
    /**
     * Material theme for alert dialog windows, which is used by the AlertDialog class.
     * This is basically a dialog but sets the background to empty so it can do
     * two-tone backgrounds. For applications targeting Honeycomb or newer, this is the default
     * AlertDialog theme.
     */
    public static final int Theme_AppCompat_Dialog_Alert=0x7f1301b5;
    /**
     * Variant of Theme.AppCompat.Dialog that has a nice minimum width for
     * a regular dialog.
     */
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f1301b6;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f1301b7;
    /**
     * Platform-independent theme providing an action bar in a light-themed activity.
     */
    public static final int Theme_AppCompat_Light=0x7f1301b8;
    /**
     * Platform-independent theme providing an action bar in a dark-themed activity.
     */
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f1301b9;
    public static final int Theme_AppCompat_Light_Dialog=0x7f1301ba;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f1301bb;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f1301bc;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f1301bd;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f1301be;
    public static final int Theme_AppCompat_NoActionBar=0x7f1301bf;
    public static final int Theme_ConfirmDeviceCredentials=0x7f1301c0;
    public static final int Theme_ConfirmDeviceCredentialsDark=0x7f1301c1;
    public static final int Theme_ConfirmDeviceCredentialsWork=0x7f1301c2;
    public static final int Theme_CreateShortCut=0x7f1301c3;
    public static final int Theme_CryptKeeper=0x7f1301c4;
    public static final int Theme_FingerprintEnroll=0x7f1301c5;
    public static final int Theme_NotificationStation=0x7f1301c6;
    public static final int Theme_ProvisioningActivity=0x7f1301c7;
    public static final int Theme_Settings=0x7f1301c8;
    /**
     * Variant of the settings theme with no action bar.
     */
    public static final int Theme_Settings_NoActionBar=0x7f1301c9;
    /**
     * Theme with no local references, used by AccountPreferenceBase where we have to inflate
     * layouts against a remote context using our local theme colors. Due to the implementation
     * details of Theme, we can't reference any local resources and MUST instead use the values
     * directly. So use #ff263238 instead of @color/theme_primary and so on.
     */
    public static final int Theme_SettingsBase=0x7f1301ca;
    public static final int Theme_SubSettings=0x7f1301cb;
    public static final int ThemeOverlay_AlertDialog=0x7f1301cc;
    public static final int ThemeOverlay_AppCompat=0x7f1301cd;
    /**
     * Theme overlay that replaces the normal control color, which by default is the same as the
     * secondary text color, with the primary text color.
     */
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f1301ce;
    /**
     * Theme overlay that replaces colors with their dark versions but preserves
     * the value of colorAccent, colorPrimary and its variants.
     */
    public static final int ThemeOverlay_AppCompat_Dark=0x7f1301cf;
    /**
     * Theme overlay that replaces colors with their dark versions and replaces the normal
     * control color, which by default is the same as the secondary text color, with the primary
     * text color.
     */
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f1301d0;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f1301d1;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f1301d2;
    /**
     * Theme overlay that replaces colors with their light versions but preserves
     * the value of colorAccent, colorPrimary and its variants.
     */
    public static final int ThemeOverlay_AppCompat_Light=0x7f1301d3;
    public static final int ThemeOverlay_SwitchBar_Settings=0x7f1301d4;
    public static final int ThemeOverlay_SwitchBar_SubSettings=0x7f1301d5;
    public static final int Transparent=0x7f1301d6;
    public static final int TrimmedHorizontalProgressBar=0x7f1301d7;
    public static final int TrustedCredentialsList=0x7f1301d8;
    /**
     * Styles in here can be extended for customisation in your application. Each utilises
     * one of the.styles. If Holo themes are available on the current platform version
     * they will be used instead of the compat styles.
     */
    public static final int Widget_AppCompat_ActionBar=0x7f1301d9;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f1301da;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f1301db;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f1301dc;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f1301dd;
    public static final int Widget_AppCompat_ActionButton=0x7f1301de;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f1301df;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f1301e0;
    public static final int Widget_AppCompat_ActionMode=0x7f1301e1;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f1301e2;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f1301e3;
    public static final int Widget_AppCompat_Button=0x7f1301e4;
    public static final int Widget_AppCompat_Button_Borderless=0x7f1301e5;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f1301e6;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f1301e7;
    public static final int Widget_AppCompat_Button_Colored=0x7f1301e8;
    public static final int Widget_AppCompat_Button_Small=0x7f1301e9;
    public static final int Widget_AppCompat_ButtonBar=0x7f1301ea;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f1301eb;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f1301ec;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f1301ed;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f1301ee;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f1301ef;
    /**
     * This style has an extra indirection to properly set RTL attributes. See styles_rtl.xml
     */
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f1301f0;
    public static final int Widget_AppCompat_EditText=0x7f1301f1;
    public static final int Widget_AppCompat_ImageButton=0x7f1301f2;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f1301f3;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f1301f4;
    /**
     * The following themes are deprecated.
     */
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f1301f5;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f1301f6;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f1301f7;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f1301f8;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f1301f9;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f1301fa;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f1301fb;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f1301fc;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f1301fd;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f1301fe;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f1301ff;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f130200;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f130201;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f130202;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f130203;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f130204;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f130205;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f130206;
    public static final int Widget_AppCompat_Light_SearchView=0x7f130207;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f130208;
    public static final int Widget_AppCompat_ListMenuView=0x7f130209;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f13020a;
    public static final int Widget_AppCompat_ListView=0x7f13020b;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f13020c;
    public static final int Widget_AppCompat_ListView_Menu=0x7f13020d;
    public static final int Widget_AppCompat_PopupMenu=0x7f13020e;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f13020f;
    public static final int Widget_AppCompat_PopupWindow=0x7f130210;
    public static final int Widget_AppCompat_ProgressBar=0x7f130211;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f130212;
    public static final int Widget_AppCompat_RatingBar=0x7f130213;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f130214;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f130215;
    public static final int Widget_AppCompat_SearchView=0x7f130216;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f130217;
    public static final int Widget_AppCompat_SeekBar=0x7f130218;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f130219;
    public static final int Widget_AppCompat_Spinner=0x7f13021a;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f13021b;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f13021c;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f13021d;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f13021e;
    /**
     * Toolbar
     */
    public static final int Widget_AppCompat_Toolbar=0x7f13021f;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f130220;
    public static final int bt_item=0x7f130221;
    public static final int bt_item_edit_content=0x7f130222;
    public static final int bt_item_label=0x7f130223;
    public static final int entry_layout=0x7f130224;
    public static final int form_value=0x7f130225;
    public static final int info_label=0x7f130226;
    public static final int info_layout=0x7f130227;
    public static final int info_small=0x7f130228;
    public static final int info_value=0x7f130229;
    public static final int preference_icon_frame=0x7f13022a;
    public static final int setup_wizard_button=0x7f13022b;
    public static final int vpn_label=0x7f13022c;
    public static final int vpn_value=0x7f13022d;
    public static final int vpn_warning=0x7f13022e;
    public static final int wifi_advanced_toggle=0x7f13022f;
    public static final int wifi_item=0x7f130230;
    public static final int wifi_item_content=0x7f130231;
    public static final int wifi_item_edit_content=0x7f130232;
    public static final int wifi_item_label=0x7f130233;
    public static final int wifi_item_spinner=0x7f130234;
    public static final int wifi_item_warning=0x7f130235;
    public static final int wifi_section=0x7f130236;
  }
  public static final class styleable {
    /**
     * Attributes used to style the Action Bar.
     * These should be set on your theme; the default actionBarStyle will
     * propagate them to the correct elements as needed.
     * Please Note: when overriding attributes for an ActionBar style
     * you must specify each attribute twice: once with the "android:"
     * namespace prefix and once without.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.android.settings:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.android.settings:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.android.settings:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.settings:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.android.settings:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.settings:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.android.settings:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.android.settings:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.android.settings:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.settings:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.android.settings:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.android.settings:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.android.settings:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.android.settings:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.settings:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.settings:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.android.settings:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.android.settings:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.settings:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.android.settings:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.android.settings:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.android.settings:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.android.settings:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.android.settings:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.android.settings:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.android.settings:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.settings:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.android.settings:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.android.settings:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
        0x7f04003a, 0x7f04003b, 0x7f04003c, 0x7f04006d, 
        0x7f04006e, 0x7f04006f, 0x7f040070, 0x7f040071, 
        0x7f040072, 0x7f04007a, 0x7f040086, 0x7f040087, 
        0x7f040096, 0x7f0400ac, 0x7f0400ad, 0x7f0400ae, 
        0x7f0400af, 0x7f0400b2, 0x7f0400bc, 0x7f0400bf, 
        0x7f0400d2, 0x7f0400e0, 0x7f0400f3, 0x7f040108, 
        0x7f040109, 0x7f040138, 0x7f04013b, 0x7f04018c, 
        0x7f040195
      };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Valid LayoutParams for views placed in the action bar as custom views.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
        0x010100b3
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
        0x0101013f
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
      };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.android.settings:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.android.settings:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.android.settings:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.android.settings:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.settings:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.android.settings:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
        0x7f04003a, 0x7f04003b, 0x7f04005b, 0x7f0400ac, 
        0x7f04013b, 0x7f040195
      };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attrbitutes for a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.settings:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.settings:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
        0x7f04009b, 0x7f0400bd
      };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * The set of attributes that describe a AlertDialog's theme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.settings:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.android.settings:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.android.settings:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.settings:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.android.settings:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.settings:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
        0x010100f2, 0x7f04004b, 0x7f0400c9, 0x7f0400ca, 
        0x7f0400dd, 0x7f040125, 0x7f040128
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listLayout
     */
    public static final int AlertDialog_listLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:showTitle
     */
    public static final int AlertDialog_showTitle=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=6;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.android.settings:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.android.settings:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.android.settings:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
        0x01010119, 0x7f04012f, 0x7f04018a, 0x7f04018b
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.android.settings:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.android.settings:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.android.settings:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
        0x01010142, 0x7f040186, 0x7f040187, 0x7f040188
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
        0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
        0x01010170, 0x01010392, 0x01010393
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.android.settings:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.android.settings:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.android.settings:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.android.settings:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.android.settings:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.android.settings:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.settings:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_textAllCaps
     */
    public static final int[] AppCompatTextView={
        0x01010034, 0x7f040035, 0x7f040036, 0x7f040037, 
        0x7f040038, 0x7f040039, 0x7f0400a5, 0x7f040175
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=6;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=7;
    /**
     * These are the standard attributes that make up a complete theme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.android.settings:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.android.settings:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.android.settings:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.android.settings:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.android.settings:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.android.settings:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.android.settings:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.android.settings:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.android.settings:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.android.settings:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.android.settings:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.android.settings:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.android.settings:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.android.settings:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.android.settings:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.android.settings:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.android.settings:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.android.settings:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.android.settings:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.android.settings:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.android.settings:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.android.settings:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.android.settings:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.android.settings:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.android.settings:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.android.settings:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.android.settings:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.android.settings:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.android.settings:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.android.settings:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.android.settings:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.android.settings:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.android.settings:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.android.settings:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.android.settings:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.android.settings:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.android.settings:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.android.settings:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.android.settings:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.android.settings:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.android.settings:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.android.settings:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.android.settings:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.android.settings:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.android.settings:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.android.settings:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.android.settings:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.android.settings:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.android.settings:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.android.settings:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.android.settings:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.android.settings:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.android.settings:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.android.settings:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.android.settings:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.android.settings:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.android.settings:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.android.settings:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.android.settings:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.android.settings:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.android.settings:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.android.settings:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.android.settings:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.android.settings:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.android.settings:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.android.settings:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.android.settings:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.android.settings:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.android.settings:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.android.settings:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.android.settings:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.android.settings:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.android.settings:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.android.settings:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.android.settings:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.android.settings:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.android.settings:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.android.settings:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.android.settings:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.android.settings:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.android.settings:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.android.settings:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.android.settings:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.android.settings:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.android.settings:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.android.settings:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.android.settings:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.android.settings:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.android.settings:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.android.settings:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.android.settings:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.android.settings:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.android.settings:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.android.settings:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.android.settings:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.android.settings:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.android.settings:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.android.settings:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.android.settings:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.android.settings:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.android.settings:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.android.settings:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.android.settings:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.android.settings:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.android.settings:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.android.settings:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.android.settings:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.android.settings:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.android.settings:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.android.settings:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.android.settings:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.android.settings:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.android.settings:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.android.settings:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.android.settings:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.android.settings:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.android.settings:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
        0x01010057, 0x010100ae, 0x7f040000, 0x7f040001, 
        0x7f040002, 0x7f040003, 0x7f040004, 0x7f040005, 
        0x7f040006, 0x7f040007, 0x7f040008, 0x7f040009, 
        0x7f04000a, 0x7f04000b, 0x7f04000c, 0x7f04000e, 
        0x7f04000f, 0x7f040010, 0x7f040011, 0x7f040012, 
        0x7f040013, 0x7f040014, 0x7f040015, 0x7f040016, 
        0x7f040017, 0x7f040018, 0x7f040019, 0x7f04001a, 
        0x7f04001b, 0x7f04001c, 0x7f04001d, 0x7f04001e, 
        0x7f040021, 0x7f040023, 0x7f040024, 0x7f040025, 
        0x7f040026, 0x7f040034, 0x7f040043, 0x7f040045, 
        0x7f040046, 0x7f040047, 0x7f040048, 0x7f040049, 
        0x7f04004c, 0x7f04004d, 0x7f040058, 0x7f040059, 
        0x7f04005f, 0x7f040060, 0x7f040061, 0x7f040062, 
        0x7f040063, 0x7f040064, 0x7f040065, 0x7f040066, 
        0x7f040067, 0x7f040068, 0x7f040078, 0x7f040082, 
        0x7f040083, 0x7f040088, 0x7f04008a, 0x7f04008f, 
        0x7f040090, 0x7f040092, 0x7f040093, 0x7f040095, 
        0x7f0400ae, 0x7f0400ba, 0x7f0400c7, 0x7f0400c8, 
        0x7f0400cb, 0x7f0400cc, 0x7f0400cd, 0x7f0400ce, 
        0x7f0400cf, 0x7f0400d0, 0x7f0400d1, 0x7f0400ee, 
        0x7f0400ef, 0x7f0400f0, 0x7f0400f2, 0x7f0400f4, 
        0x7f04010c, 0x7f04010d, 0x7f04010e, 0x7f04010f, 
        0x7f040116, 0x7f04011a, 0x7f04011c, 0x7f04011d, 
        0x7f04012c, 0x7f04012d, 0x7f040171, 0x7f040176, 
        0x7f040177, 0x7f040178, 0x7f040179, 0x7f04017a, 
        0x7f04017b, 0x7f04017c, 0x7f04017d, 0x7f04017f, 
        0x7f040180, 0x7f040196, 0x7f040197, 0x7f040198, 
        0x7f040199, 0x7f0401a6, 0x7f0401a7, 0x7f0401a8, 
        0x7f0401a9, 0x7f0401aa, 0x7f0401ab, 0x7f0401ac, 
        0x7f0401ad, 0x7f0401ae, 0x7f0401af
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=23;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=26;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=28;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=31;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=35;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=36;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=37;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=38;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=39;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=43;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=44;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=45;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=46;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=47;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=48;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=49;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=50;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=53;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorError
     */
    public static final int AppCompatTheme_colorError=54;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=55;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=56;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=57;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=58;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=59;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=60;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=61;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=62;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=63;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=64;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=65;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=66;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=67;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=68;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=69;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=70;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=71;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=72;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=73;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=74;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=75;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=76;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=77;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=78;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=79;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=80;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=81;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=82;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=83;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=84;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=85;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=86;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=87;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=88;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=89;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=90;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=91;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=92;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=93;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=94;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=95;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=96;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=97;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=98;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=99;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=100;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=102;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=103;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=104;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=105;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=106;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=107;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=108;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=109;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=110;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=111;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=112;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=113;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=114;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=115;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=116;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.settings:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=117;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=118;
    /**
     * For AspectRatioFrameLayout
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AspectRatioFrameLayout_aspectRatio com.android.settings:aspectRatio}</code></td><td></td></tr>
     * </table>
     * @see #AspectRatioFrameLayout_aspectRatio
     */
    public static final int[] AspectRatioFrameLayout={
        0x7f040033
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#aspectRatio}
     * attribute's value can be found in the {@link #AspectRatioFrameLayout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:aspectRatio
     */
    public static final int AspectRatioFrameLayout_aspectRatio=0;
    /**
     * Used to access some android attrs
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BackgroundStyle_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BackgroundStyle_selectableItemBackground com.android.settings:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #BackgroundStyle_android_selectableItemBackground
     * @see #BackgroundStyle_selectableItemBackground
     */
    public static final int[] BackgroundStyle={
        0x0101030e, 0x7f04011c
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #BackgroundStyle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int BackgroundStyle_android_selectableItemBackground=0;
    /**
     * <p>
     * @attr description
     * Need a non-android: attr here so that gradle doesn't remove it
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:selectableItemBackground
     */
    public static final int BackgroundStyle_selectableItemBackground=1;
    /**
     * Attributes that can be used with a BatteryHistoryChart.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_barPredictionColor com.android.settings:barPredictionColor}</code></td><td>Color of predicted future use part of chart.</td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_barPrimaryColor com.android.settings:barPrimaryColor}</code></td><td>Primary color of chart.</td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_chartMinHeight com.android.settings:chartMinHeight}</code></td><td>Minimum height of the chart itself.</td></tr>
     * <tr><td><code>{@link #BatteryHistoryChart_headerAppearance com.android.settings:headerAppearance}</code></td><td>Text color, typeface, size, and style of header.</td></tr>
     * </table>
     * @see #BatteryHistoryChart_android_textAppearance
     * @see #BatteryHistoryChart_android_textSize
     * @see #BatteryHistoryChart_android_typeface
     * @see #BatteryHistoryChart_android_textStyle
     * @see #BatteryHistoryChart_android_textColor
     * @see #BatteryHistoryChart_android_shadowColor
     * @see #BatteryHistoryChart_android_shadowDx
     * @see #BatteryHistoryChart_android_shadowDy
     * @see #BatteryHistoryChart_android_shadowRadius
     * @see #BatteryHistoryChart_barPredictionColor
     * @see #BatteryHistoryChart_barPrimaryColor
     * @see #BatteryHistoryChart_chartMinHeight
     * @see #BatteryHistoryChart_headerAppearance
     */
    public static final int[] BatteryHistoryChart={
        0x01010034, 0x01010095, 0x01010096, 0x01010097, 
        0x01010098, 0x01010161, 0x01010162, 0x01010163, 
        0x01010164, 0x7f040040, 0x7f040041, 0x7f040056, 
        0x7f0400ab
      };
    /**
     * <p>
     * @attr description
     * Base text color, typeface, size, and style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int BatteryHistoryChart_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp).
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int BatteryHistoryChart_android_textSize=1;
    /**
     * <p>
     * @attr description
     * Typeface (normal, sans, serif, monospace) for the text.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int BatteryHistoryChart_android_typeface=2;
    /**
     * <p>
     * @attr description
     * Style (bold, italic, bolditalic) for the text.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int BatteryHistoryChart_android_textStyle=3;
    /**
     * <p>
     * @attr description
     * Text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int BatteryHistoryChart_android_textColor=4;
    /**
     * <p>
     * @attr description
     * Place a shadow of the specified color behind the text.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int BatteryHistoryChart_android_shadowColor=5;
    /**
     * <p>
     * @attr description
     * Horizontal offset of the shadow.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int BatteryHistoryChart_android_shadowDx=6;
    /**
     * <p>
     * @attr description
     * Vertical offset of the shadow.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int BatteryHistoryChart_android_shadowDy=7;
    /**
     * <p>
     * @attr description
     * Radius of the shadow.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int BatteryHistoryChart_android_shadowRadius=8;
    /**
     * <p>
     * @attr description
     * Color of predicted future use part of chart.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:barPredictionColor
     */
    public static final int BatteryHistoryChart_barPredictionColor=9;
    /**
     * <p>
     * @attr description
     * Primary color of chart.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:barPrimaryColor
     */
    public static final int BatteryHistoryChart_barPrimaryColor=10;
    /**
     * <p>
     * @attr description
     * Minimum height of the chart itself.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:chartMinHeight
     */
    public static final int BatteryHistoryChart_chartMinHeight=11;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style of header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:headerAppearance
     */
    public static final int BatteryHistoryChart_headerAppearance=12;
    /**
     * @hide
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.android.settings:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
        0x7f04002a
      };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Attributes that can be used with a CardView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CardView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #CardView_cardBackgroundColor com.android.settings:cardBackgroundColor}</code></td><td>Background color for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardCornerRadius com.android.settings:cardCornerRadius}</code></td><td>Corner radius for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardElevation com.android.settings:cardElevation}</code></td><td>Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardMaxElevation com.android.settings:cardMaxElevation}</code></td><td>Maximum Elevation for CardView.</td></tr>
     * <tr><td><code>{@link #CardView_cardPreventCornerOverlap com.android.settings:cardPreventCornerOverlap}</code></td><td>Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.</td></tr>
     * <tr><td><code>{@link #CardView_cardUseCompatPadding com.android.settings:cardUseCompatPadding}</code></td><td>Add padding in API v21+ as well to have the same measurements with previous versions.</td></tr>
     * <tr><td><code>{@link #CardView_contentPadding com.android.settings:contentPadding}</code></td><td>Inner padding between the edges of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingBottom com.android.settings:contentPaddingBottom}</code></td><td>Inner padding between the bottom edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingLeft com.android.settings:contentPaddingLeft}</code></td><td>Inner padding between the left edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingRight com.android.settings:contentPaddingRight}</code></td><td>Inner padding between the right edge of the Card and children of the CardView.</td></tr>
     * <tr><td><code>{@link #CardView_contentPaddingTop com.android.settings:contentPaddingTop}</code></td><td>Inner padding between the top edge of the Card and children of the CardView.</td></tr>
     * </table>
     * @see #CardView_android_minWidth
     * @see #CardView_android_minHeight
     * @see #CardView_cardBackgroundColor
     * @see #CardView_cardCornerRadius
     * @see #CardView_cardElevation
     * @see #CardView_cardMaxElevation
     * @see #CardView_cardPreventCornerOverlap
     * @see #CardView_cardUseCompatPadding
     * @see #CardView_contentPadding
     * @see #CardView_contentPaddingBottom
     * @see #CardView_contentPaddingLeft
     * @see #CardView_contentPaddingRight
     * @see #CardView_contentPaddingTop
     */
    public static final int[] CardView={
        0x0101013f, 0x01010140, 0x7f040050, 0x7f040051, 
        0x7f040052, 0x7f040053, 0x7f040054, 0x7f040055, 
        0x7f040073, 0x7f040074, 0x7f040075, 0x7f040076, 
        0x7f040077
      };
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum width
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int CardView_android_minWidth=0;
    /**
     * <p>
     * @attr description
     * Workaround to read user defined minimum height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int CardView_android_minHeight=1;
    /**
     * <p>
     * @attr description
     * Background color for CardView.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:cardBackgroundColor
     */
    public static final int CardView_cardBackgroundColor=2;
    /**
     * <p>
     * @attr description
     * Corner radius for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:cardCornerRadius
     */
    public static final int CardView_cardCornerRadius=3;
    /**
     * <p>
     * @attr description
     * Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:cardElevation
     */
    public static final int CardView_cardElevation=4;
    /**
     * <p>
     * @attr description
     * Maximum Elevation for CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:cardMaxElevation
     */
    public static final int CardView_cardMaxElevation=5;
    /**
     * <p>
     * @attr description
     * Add padding to CardView on v20 and before to prevent intersections between the Card content and rounded corners.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:cardPreventCornerOverlap
     */
    public static final int CardView_cardPreventCornerOverlap=6;
    /**
     * <p>
     * @attr description
     * Add padding in API v21+ as well to have the same measurements with previous versions.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:cardUseCompatPadding
     */
    public static final int CardView_cardUseCompatPadding=7;
    /**
     * <p>
     * @attr description
     * Inner padding between the edges of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPadding
     */
    public static final int CardView_contentPadding=8;
    /**
     * <p>
     * @attr description
     * Inner padding between the bottom edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingBottom
     */
    public static final int CardView_contentPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * Inner padding between the left edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingLeft
     */
    public static final int CardView_contentPaddingLeft=10;
    /**
     * <p>
     * @attr description
     * Inner padding between the right edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingRight
     */
    public static final int CardView_contentPaddingRight=11;
    /**
     * <p>
     * @attr description
     * Inner padding between the top edge of the Card and children of the CardView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentPaddingTop
     */
    public static final int CardView_contentPaddingTop=12;
    /**
     * Attributes that can be used with a ChartGridView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartGridView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartGridView_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartGridView_borderDrawable com.android.settings:borderDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartGridView_primaryDrawable com.android.settings:primaryDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartGridView_secondaryDrawable com.android.settings:secondaryDrawable}</code></td><td></td></tr>
     * </table>
     * @see #ChartGridView_android_textAppearance
     * @see #ChartGridView_android_textColor
     * @see #ChartGridView_borderDrawable
     * @see #ChartGridView_primaryDrawable
     * @see #ChartGridView_secondaryDrawable
     */
    public static final int[] ChartGridView={
        0x01010034, 0x01010098, 0x7f040042, 0x7f040107, 
        0x7f040117
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int ChartGridView_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int ChartGridView_android_textColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#borderDrawable}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:borderDrawable
     */
    public static final int ChartGridView_borderDrawable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#primaryDrawable}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:primaryDrawable
     */
    public static final int ChartGridView_primaryDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#secondaryDrawable}
     * attribute's value can be found in the {@link #ChartGridView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:secondaryDrawable
     */
    public static final int ChartGridView_secondaryDrawable=4;
    /**
     * Attributes that can be used with a ChartNetworkSeriesView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartNetworkSeriesView_fillColor com.android.settings:fillColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartNetworkSeriesView_fillColorSecondary com.android.settings:fillColorSecondary}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartNetworkSeriesView_safeRegion com.android.settings:safeRegion}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartNetworkSeriesView_strokeColor com.android.settings:strokeColor}</code></td><td></td></tr>
     * </table>
     * @see #ChartNetworkSeriesView_fillColor
     * @see #ChartNetworkSeriesView_fillColorSecondary
     * @see #ChartNetworkSeriesView_safeRegion
     * @see #ChartNetworkSeriesView_strokeColor
     */
    public static final int[] ChartNetworkSeriesView={
        0x7f0400a1, 0x7f0400a2, 0x7f040113, 0x7f040135
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fillColor}
     * attribute's value can be found in the {@link #ChartNetworkSeriesView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:fillColor
     */
    public static final int ChartNetworkSeriesView_fillColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fillColorSecondary}
     * attribute's value can be found in the {@link #ChartNetworkSeriesView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:fillColorSecondary
     */
    public static final int ChartNetworkSeriesView_fillColorSecondary=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#safeRegion}
     * attribute's value can be found in the {@link #ChartNetworkSeriesView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:safeRegion
     */
    public static final int ChartNetworkSeriesView_safeRegion=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#strokeColor}
     * attribute's value can be found in the {@link #ChartNetworkSeriesView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:strokeColor
     */
    public static final int ChartNetworkSeriesView_strokeColor=3;
    /**
     * Attributes that can be used with a ChartSweepView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartSweepView_followAxis com.android.settings:followAxis}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_labelColor com.android.settings:labelColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_labelSize com.android.settings:labelSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_labelTemplate com.android.settings:labelTemplate}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_neighborMargin com.android.settings:neighborMargin}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_safeRegion com.android.settings:safeRegion}</code></td><td></td></tr>
     * <tr><td><code>{@link #ChartSweepView_sweepDrawable com.android.settings:sweepDrawable}</code></td><td></td></tr>
     * </table>
     * @see #ChartSweepView_followAxis
     * @see #ChartSweepView_labelColor
     * @see #ChartSweepView_labelSize
     * @see #ChartSweepView_labelTemplate
     * @see #ChartSweepView_neighborMargin
     * @see #ChartSweepView_safeRegion
     * @see #ChartSweepView_sweepDrawable
     */
    public static final int[] ChartSweepView={
        0x7f0400a4, 0x7f0400c2, 0x7f0400c3, 0x7f0400c4, 
        0x7f0400e2, 0x7f040113, 0x7f040168
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#followAxis}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:followAxis
     */
    public static final int ChartSweepView_followAxis=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelColor}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:labelColor
     */
    public static final int ChartSweepView_labelColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelSize}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:labelSize
     */
    public static final int ChartSweepView_labelSize=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelTemplate}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:labelTemplate
     */
    public static final int ChartSweepView_labelTemplate=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#neighborMargin}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:neighborMargin
     */
    public static final int ChartSweepView_neighborMargin=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#safeRegion}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:safeRegion
     */
    public static final int ChartSweepView_safeRegion=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sweepDrawable}
     * attribute's value can be found in the {@link #ChartSweepView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sweepDrawable
     */
    public static final int ChartSweepView_sweepDrawable=6;
    /**
     * Attributes that can be used with a ChartView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ChartView_optimalWidth com.android.settings:optimalWidth}</code></td><td>optimal width of the chart</td></tr>
     * <tr><td><code>{@link #ChartView_optimalWidthWeight com.android.settings:optimalWidthWeight}</code></td><td>how to weight extra space beyond optimal width</td></tr>
     * </table>
     * @see #ChartView_optimalWidth
     * @see #ChartView_optimalWidthWeight
     */
    public static final int[] ChartView={
        0x7f0400e4, 0x7f0400e5
      };
    /**
     * <p>
     * @attr description
     * optimal width of the chart
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:optimalWidth
     */
    public static final int ChartView_optimalWidth=0;
    /**
     * <p>
     * @attr description
     * how to weight extra space beyond optimal width
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:optimalWidthWeight
     */
    public static final int ChartView_optimalWidthWeight=1;
    /**
     * Base attributes available to CheckBoxPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_disableDependentsState com.android.settings:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOff com.android.settings:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOn com.android.settings:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * </table>
     * @see #CheckBoxPreference_android_summaryOn
     * @see #CheckBoxPreference_android_summaryOff
     * @see #CheckBoxPreference_android_disableDependentsState
     * @see #CheckBoxPreference_disableDependentsState
     * @see #CheckBoxPreference_summaryOff
     * @see #CheckBoxPreference_summaryOn
     */
    public static final int[] CheckBoxPreference={
        0x010101ef, 0x010101f0, 0x010101f1, 0x7f040085, 
        0x7f04013f, 0x7f040140
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int CheckBoxPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int CheckBoxPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int CheckBoxPreference_android_disableDependentsState=2;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:disableDependentsState
     */
    public static final int CheckBoxPreference_disableDependentsState=3;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOff
     */
    public static final int CheckBoxPreference_summaryOff=4;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOn
     */
    public static final int CheckBoxPreference_summaryOn=5;
    /**
     * Attributes that can be assigned to a ColorStateList item.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.settings:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
        0x010101a5, 0x0101031f, 0x7f04002b
      };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.android.settings:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.settings:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
        0x01010107, 0x7f04004e, 0x7f04004f
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:buttonTint
     */
    public static final int CompoundButton_buttonTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=2;
    /**
     * For ConversationMessageView
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ConversationMessageView_iconBackgroundColor com.android.settings:iconBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_iconText com.android.settings:iconText}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_iconTextColor com.android.settings:iconTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_incoming com.android.settings:incoming}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_messageText com.android.settings:messageText}</code></td><td></td></tr>
     * <tr><td><code>{@link #ConversationMessageView_timestampText com.android.settings:timestampText}</code></td><td></td></tr>
     * </table>
     * @see #ConversationMessageView_iconBackgroundColor
     * @see #ConversationMessageView_iconText
     * @see #ConversationMessageView_iconTextColor
     * @see #ConversationMessageView_incoming
     * @see #ConversationMessageView_messageText
     * @see #ConversationMessageView_timestampText
     */
    public static final int[] ConversationMessageView={
        0x7f0400b3, 0x7f0400b5, 0x7f0400b6, 0x7f0400bb, 
        0x7f0400d8, 0x7f040189
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#iconBackgroundColor}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:iconBackgroundColor
     */
    public static final int ConversationMessageView_iconBackgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#iconText}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:iconText
     */
    public static final int ConversationMessageView_iconText=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#iconTextColor}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:iconTextColor
     */
    public static final int ConversationMessageView_iconTextColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#incoming}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:incoming
     */
    public static final int ConversationMessageView_incoming=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#messageText}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:messageText
     */
    public static final int ConversationMessageView_messageText=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#timestampText}
     * attribute's value can be found in the {@link #ConversationMessageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:timestampText
     */
    public static final int ConversationMessageView_timestampText=5;
    /**
     * Base attributes available to DialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogTitle android:dialogTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogMessage android:dialogMessage}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogIcon android:dialogIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_positiveButtonText android:positiveButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_negativeButtonText android:negativeButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogLayout android:dialogLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogIcon com.android.settings:dialogIcon}</code></td><td>The icon for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogLayout com.android.settings:dialogLayout}</code></td><td>A layout to be used as the content View for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogMessage com.android.settings:dialogMessage}</code></td><td>The message in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogTitle com.android.settings:dialogTitle}</code></td><td>The title in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_negativeButtonText com.android.settings:negativeButtonText}</code></td><td>The negative button text for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_positiveButtonText com.android.settings:positiveButtonText}</code></td><td>The positive button text for the dialog.</td></tr>
     * </table>
     * @see #DialogPreference_android_dialogTitle
     * @see #DialogPreference_android_dialogMessage
     * @see #DialogPreference_android_dialogIcon
     * @see #DialogPreference_android_positiveButtonText
     * @see #DialogPreference_android_negativeButtonText
     * @see #DialogPreference_android_dialogLayout
     * @see #DialogPreference_dialogIcon
     * @see #DialogPreference_dialogLayout
     * @see #DialogPreference_dialogMessage
     * @see #DialogPreference_dialogTitle
     * @see #DialogPreference_negativeButtonText
     * @see #DialogPreference_positiveButtonText
     */
    public static final int[] DialogPreference={
        0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5, 
        0x010101f6, 0x010101f7, 0x7f04007e, 0x7f04007f, 
        0x7f040080, 0x7f040084, 0x7f0400e1, 0x7f0400f5
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogTitle}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogTitle
     */
    public static final int DialogPreference_android_dialogTitle=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogMessage}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogMessage
     */
    public static final int DialogPreference_android_dialogMessage=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogIcon}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogIcon
     */
    public static final int DialogPreference_android_dialogIcon=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#positiveButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:positiveButtonText
     */
    public static final int DialogPreference_android_positiveButtonText=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#negativeButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:negativeButtonText
     */
    public static final int DialogPreference_android_negativeButtonText=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogLayout}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogLayout
     */
    public static final int DialogPreference_android_dialogLayout=5;
    /**
     * <p>
     * @attr description
     * The icon for the dialog.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dialogIcon
     */
    public static final int DialogPreference_dialogIcon=6;
    /**
     * <p>
     * @attr description
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dialogLayout
     */
    public static final int DialogPreference_dialogLayout=7;
    /**
     * <p>
     * @attr description
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:dialogMessage
     */
    public static final int DialogPreference_dialogMessage=8;
    /**
     * <p>
     * @attr description
     * The title in the dialog.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:dialogTitle
     */
    public static final int DialogPreference_dialogTitle=9;
    /**
     * <p>
     * @attr description
     * The negative button text for the dialog. Set to @null to hide the negative button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:negativeButtonText
     */
    public static final int DialogPreference_negativeButtonText=10;
    /**
     * <p>
     * @attr description
     * The positive button text for the dialog. Set to @null to hide the positive button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:positiveButtonText
     */
    public static final int DialogPreference_positiveButtonText=11;
    /**
     * Attributes that can be used with a DividerPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DividerPreference_allowDividerAbove com.android.settings:allowDividerAbove}</code></td><td></td></tr>
     * <tr><td><code>{@link #DividerPreference_allowDividerBelow com.android.settings:allowDividerBelow}</code></td><td></td></tr>
     * </table>
     * @see #DividerPreference_allowDividerAbove
     * @see #DividerPreference_allowDividerBelow
     */
    public static final int[] DividerPreference={
        0x7f040027, 0x7f040029
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#allowDividerAbove}
     * attribute's value can be found in the {@link #DividerPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerAbove
     */
    public static final int DividerPreference_allowDividerAbove=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#allowDividerBelow}
     * attribute's value can be found in the {@link #DividerPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerBelow
     */
    public static final int DividerPreference_allowDividerBelow=1;
    /**
     * For DonutView
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DonutView_applyColorAccent com.android.settings:applyColorAccent}</code></td><td></td></tr>
     * <tr><td><code>{@link #DonutView_meterBackgroundColor com.android.settings:meterBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #DonutView_meterConsumedColor com.android.settings:meterConsumedColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #DonutView_showPercentString com.android.settings:showPercentString}</code></td><td></td></tr>
     * <tr><td><code>{@link #DonutView_thickness com.android.settings:thickness}</code></td><td></td></tr>
     * </table>
     * @see #DonutView_applyColorAccent
     * @see #DonutView_meterBackgroundColor
     * @see #DonutView_meterConsumedColor
     * @see #DonutView_showPercentString
     * @see #DonutView_thickness
     */
    public static final int[] DonutView={
        0x7f040030, 0x7f0400d9, 0x7f0400da, 0x7f040122, 
        0x7f040182
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#applyColorAccent}
     * attribute's value can be found in the {@link #DonutView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:applyColorAccent
     */
    public static final int DonutView_applyColorAccent=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#meterBackgroundColor}
     * attribute's value can be found in the {@link #DonutView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:meterBackgroundColor
     */
    public static final int DonutView_meterBackgroundColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#meterConsumedColor}
     * attribute's value can be found in the {@link #DonutView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:meterConsumedColor
     */
    public static final int DonutView_meterConsumedColor=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#showPercentString}
     * attribute's value can be found in the {@link #DonutView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:showPercentString
     */
    public static final int DonutView_showPercentString=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#thickness}
     * attribute's value can be found in the {@link #DonutView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:thickness
     */
    public static final int DonutView_thickness=4;
    /**
     * For DotsPageIndicator
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DotsPageIndicator_animationDuration com.android.settings:animationDuration}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotsPageIndicator_currentPageIndicatorColor com.android.settings:currentPageIndicatorColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotsPageIndicator_dotDiameter com.android.settings:dotDiameter}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotsPageIndicator_dotGap com.android.settings:dotGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #DotsPageIndicator_pageIndicatorColor com.android.settings:pageIndicatorColor}</code></td><td></td></tr>
     * </table>
     * @see #DotsPageIndicator_animationDuration
     * @see #DotsPageIndicator_currentPageIndicatorColor
     * @see #DotsPageIndicator_dotDiameter
     * @see #DotsPageIndicator_dotGap
     * @see #DotsPageIndicator_pageIndicatorColor
     */
    public static final int[] DotsPageIndicator={
        0x7f04002e, 0x7f040079, 0x7f04008b, 0x7f04008c, 
        0x7f0400ed
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#animationDuration}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:animationDuration
     */
    public static final int DotsPageIndicator_animationDuration=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#currentPageIndicatorColor}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:currentPageIndicatorColor
     */
    public static final int DotsPageIndicator_currentPageIndicatorColor=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dotDiameter}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dotDiameter
     */
    public static final int DotsPageIndicator_dotDiameter=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#dotGap}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dotGap
     */
    public static final int DotsPageIndicator_dotGap=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#pageIndicatorColor}
     * attribute's value can be found in the {@link #DotsPageIndicator} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:pageIndicatorColor
     */
    public static final int DotsPageIndicator_pageIndicatorColor=4;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.settings:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.settings:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.settings:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.android.settings:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.settings:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.settings:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.settings:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.settings:thickness}</code></td><td></td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
        0x7f040031, 0x7f040032, 0x7f04003f, 0x7f04005e, 
        0x7f04008d, 0x7f0400a9, 0x7f04012b, 0x7f040182
      };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a FixedLineSummaryPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FixedLineSummaryPreference_summaryLineCount com.android.settings:summaryLineCount}</code></td><td></td></tr>
     * </table>
     * @see #FixedLineSummaryPreference_summaryLineCount
     */
    public static final int[] FixedLineSummaryPreference={
        0x7f04013e
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#summaryLineCount}
     * attribute's value can be found in the {@link #FixedLineSummaryPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:summaryLineCount
     */
    public static final int FixedLineSummaryPreference_summaryLineCount=0;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.android.settings:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.settings:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.settings:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.settings:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
        0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
        0x01010128, 0x7f040087, 0x7f040089, 0x7f0400d7, 
        0x7f040121
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
        0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
        0x010102ac, 0x010102ad
      };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Base attributes available to ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries com.android.settings:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues com.android.settings:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #ListPreference_android_entries
     * @see #ListPreference_android_entryValues
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     */
    public static final int[] ListPreference={
        0x010100b2, 0x010101f8, 0x7f040099, 0x7f04009a
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int ListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int ListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entries
     */
    public static final int ListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entryValues
     */
    public static final int ListPreference_entryValues=3;
    /**
     * Base attributes that are available to all groups.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
        0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
        0x010101df, 0x010101e0
      };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Base attributes that are available to all Item objects.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.android.settings:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.android.settings:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.android.settings:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.android.settings:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.android.settings:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.android.settings:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.android.settings:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.android.settings:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.android.settings:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.android.settings:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
        0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
        0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
        0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
        0x0101026f, 0x7f04000d, 0x7f04001f, 0x7f040020, 
        0x7f04002c, 0x7f04006c, 0x7f0400b7, 0x7f0400b8, 
        0x7f0400e3, 0x7f040120, 0x7f04019a
      };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.settings:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.android.settings:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
        0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
        0x0101012f, 0x01010130, 0x01010131, 0x7f040105, 
        0x7f040136
      };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a MultiSelectListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entries com.android.settings:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entryValues com.android.settings:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #MultiSelectListPreference_android_entries
     * @see #MultiSelectListPreference_android_entryValues
     * @see #MultiSelectListPreference_entries
     * @see #MultiSelectListPreference_entryValues
     */
    public static final int[] MultiSelectListPreference={
        0x010100b2, 0x010101f8, 0x7f040099, 0x7f04009a
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int MultiSelectListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int MultiSelectListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entries
     */
    public static final int MultiSelectListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:entryValues
     */
    public static final int MultiSelectListPreference_entryValues=3;
    /**
     * Attributes that can be used with a PercentageBarChart.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PercentageBarChart_emptyColor com.android.settings:emptyColor}</code></td><td>Background color</td></tr>
     * <tr><td><code>{@link #PercentageBarChart_minTickWidth com.android.settings:minTickWidth}</code></td><td>Minimum tick width for each slice in the bar chart.</td></tr>
     * </table>
     * @see #PercentageBarChart_emptyColor
     * @see #PercentageBarChart_minTickWidth
     */
    public static final int[] PercentageBarChart={
        0x7f040097, 0x7f0400dc
      };
    /**
     * <p>
     * @attr description
     * Background color
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:emptyColor
     */
    public static final int PercentageBarChart_emptyColor=0;
    /**
     * <p>
     * @attr description
     * Minimum tick width for each slice in the bar chart.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:minTickWidth
     */
    public static final int PercentageBarChart_minTickWidth=1;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.settings:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
        0x01010176, 0x010102c9, 0x7f0400e8
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.settings:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
        0x7f040131
      };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Base attributes available to Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_persistent android:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_selectable android:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_order android:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_widgetLayout android:widgetLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_dependency android:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_shouldDisableView android:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_fragment android:fragment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_singleLineTitle android:singleLineTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_iconSpaceReserved android:iconSpaceReserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerAbove com.android.settings:allowDividerAbove}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerBelow com.android.settings:allowDividerBelow}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_defaultValue com.android.settings:defaultValue}</code></td><td>The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.</td></tr>
     * <tr><td><code>{@link #Preference_dependency com.android.settings:dependency}</code></td><td>The key of another Preference that this Preference will depend on.</td></tr>
     * <tr><td><code>{@link #Preference_enabled com.android.settings:enabled}</code></td><td>Whether the Preference is enabled.</td></tr>
     * <tr><td><code>{@link #Preference_fragment com.android.settings:fragment}</code></td><td>When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.</td></tr>
     * <tr><td><code>{@link #Preference_icon com.android.settings:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #Preference_iconSpaceReserved com.android.settings:iconSpaceReserved}</code></td><td>Whether the space for the preference icon view will be reserved.</td></tr>
     * <tr><td><code>{@link #Preference_key com.android.settings:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Preference_keywords com.android.settings:keywords}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_layout com.android.settings:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #Preference_order com.android.settings:order}</code></td><td>The order for the Preference (lower values are to be ordered first).</td></tr>
     * <tr><td><code>{@link #Preference_persistent com.android.settings:persistent}</code></td><td>Whether the Preference stores its value to the shared preferences.</td></tr>
     * <tr><td><code>{@link #Preference_selectable com.android.settings:selectable}</code></td><td>Whether the Preference is selectable.</td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView com.android.settings:shouldDisableView}</code></td><td>Whether the view of this Preference should be disabled when
     * this Preference is disabled.</td></tr>
     * <tr><td><code>{@link #Preference_singleLineTitle com.android.settings:singleLineTitle}</code></td><td>Whether to use single line for the preference title text.</td></tr>
     * <tr><td><code>{@link #Preference_summary com.android.settings:summary}</code></td><td>The summary for the Preference in a PreferenceActivity screen.</td></tr>
     * <tr><td><code>{@link #Preference_title com.android.settings:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout com.android.settings:widgetLayout}</code></td><td>The layout for the controllable widget portion of a Preference.</td></tr>
     * </table>
     * @see #Preference_android_icon
     * @see #Preference_android_persistent
     * @see #Preference_android_enabled
     * @see #Preference_android_layout
     * @see #Preference_android_title
     * @see #Preference_android_selectable
     * @see #Preference_android_key
     * @see #Preference_android_summary
     * @see #Preference_android_order
     * @see #Preference_android_widgetLayout
     * @see #Preference_android_dependency
     * @see #Preference_android_defaultValue
     * @see #Preference_android_shouldDisableView
     * @see #Preference_android_fragment
     * @see #Preference_android_singleLineTitle
     * @see #Preference_android_iconSpaceReserved
     * @see #Preference_allowDividerAbove
     * @see #Preference_allowDividerBelow
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enabled
     * @see #Preference_fragment
     * @see #Preference_icon
     * @see #Preference_iconSpaceReserved
     * @see #Preference_key
     * @see #Preference_keywords
     * @see #Preference_layout
     * @see #Preference_order
     * @see #Preference_persistent
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_singleLineTitle
     * @see #Preference_summary
     * @see #Preference_title
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
        0x01010002, 0x0101000d, 0x0101000e, 0x010100f2, 
        0x010101e1, 0x010101e6, 0x010101e8, 0x010101e9, 
        0x010101ea, 0x010101eb, 0x010101ec, 0x010101ed, 
        0x010101ee, 0x010102e3, 0x0101055c, 0x01010561, 
        0x7f040027, 0x7f040029, 0x7f04007c, 0x7f04007d, 
        0x7f040098, 0x7f0400a8, 0x7f0400b2, 0x7f0400b4, 
        0x7f0400c0, 0x7f0400c1, 0x7f0400c5, 0x7f0400e6, 
        0x7f0400f1, 0x7f04011b, 0x7f04011f, 0x7f040129, 
        0x7f04013d, 0x7f04018c, 0x7f0401a2
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int Preference_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:persistent
     */
    public static final int Preference_android_persistent=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Preference_android_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int Preference_android_layout=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int Preference_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:selectable
     */
    public static final int Preference_android_selectable=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static final int Preference_android_key=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int Preference_android_summary=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:order
     */
    public static final int Preference_android_order=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:widgetLayout
     */
    public static final int Preference_android_widgetLayout=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dependency
     */
    public static final int Preference_android_dependency=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static final int Preference_android_defaultValue=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:shouldDisableView
     */
    public static final int Preference_android_shouldDisableView=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fragment}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fragment
     */
    public static final int Preference_android_fragment=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#singleLineTitle}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:singleLineTitle
     */
    public static final int Preference_android_singleLineTitle=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#iconSpaceReserved}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:iconSpaceReserved
     */
    public static final int Preference_android_iconSpaceReserved=15;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider on top
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerAbove
     */
    public static final int Preference_allowDividerAbove=16;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider below it
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerBelow
     */
    public static final int Preference_allowDividerBelow=17;
    /**
     * <p>
     * @attr description
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:defaultValue
     */
    public static final int Preference_defaultValue=18;
    /**
     * <p>
     * @attr description
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:dependency
     */
    public static final int Preference_dependency=19;
    /**
     * <p>
     * @attr description
     * Whether the Preference is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:enabled
     */
    public static final int Preference_enabled=20;
    /**
     * <p>
     * @attr description
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fragment
     */
    public static final int Preference_fragment=21;
    /**
     * <p>
     * @attr description
     * The optional icon for the preference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:icon
     */
    public static final int Preference_icon=22;
    /**
     * <p>
     * @attr description
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:iconSpaceReserved
     */
    public static final int Preference_iconSpaceReserved=23;
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:key
     */
    public static final int Preference_key=24;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#keywords}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:keywords
     */
    public static final int Preference_keywords=25;
    /**
     * <p>
     * @attr description
     * The layout for the Preference in a PreferenceActivity screen. This should
     * rarely need to be changed, look at widgetLayout instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout
     */
    public static final int Preference_layout=26;
    /**
     * <p>
     * @attr description
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:order
     */
    public static final int Preference_order=27;
    /**
     * <p>
     * @attr description
     * Whether the Preference stores its value to the shared preferences.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:persistent
     */
    public static final int Preference_persistent=28;
    /**
     * <p>
     * @attr description
     * Whether the Preference is selectable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:selectable
     */
    public static final int Preference_selectable=29;
    /**
     * <p>
     * @attr description
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:shouldDisableView
     */
    public static final int Preference_shouldDisableView=30;
    /**
     * <p>
     * @attr description
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:singleLineTitle
     */
    public static final int Preference_singleLineTitle=31;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summary
     */
    public static final int Preference_summary=32;
    /**
     * <p>
     * @attr description
     * The title for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:title
     */
    public static final int Preference_title=33;
    /**
     * <p>
     * @attr description
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:widgetLayout
     */
    public static final int Preference_widgetLayout=34;
    /**
     * Base attributes available to PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_allowDividerAfterLastItem com.android.settings:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragment_android_layout
     * @see #PreferenceFragment_android_divider
     * @see #PreferenceFragment_android_dividerHeight
     * @see #PreferenceFragment_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragment={
        0x010100f2, 0x01010129, 0x0101012a, 0x7f040028
      };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragment_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragment_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragment_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerAfterLastItem
     */
    public static final int PreferenceFragment_allowDividerAfterLastItem=3;
    /**
     * Base attributes available to PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_allowDividerAfterLastItem com.android.settings:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragmentCompat_android_layout
     * @see #PreferenceFragmentCompat_android_divider
     * @see #PreferenceFragmentCompat_android_dividerHeight
     * @see #PreferenceFragmentCompat_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragmentCompat={
        0x010100f2, 0x01010129, 0x0101012a, 0x7f040028
      };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragmentCompat_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragmentCompat_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragmentCompat_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:allowDividerAfterLastItem
     */
    public static final int PreferenceFragmentCompat_allowDividerAfterLastItem=3;
    /**
     * Base attributes available to PreferenceGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceGroup_android_orderingFromXml android:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceGroup_orderingFromXml com.android.settings:orderingFromXml}</code></td><td>Whether to order the Preference under this group as they appear in the XML file.</td></tr>
     * </table>
     * @see #PreferenceGroup_android_orderingFromXml
     * @see #PreferenceGroup_orderingFromXml
     */
    public static final int[] PreferenceGroup={
        0x010101e7, 0x7f0400e7
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #PreferenceGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:orderingFromXml
     */
    public static final int PreferenceGroup_android_orderingFromXml=0;
    /**
     * <p>
     * @attr description
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:orderingFromXml
     */
    public static final int PreferenceGroup_orderingFromXml=1;
    /**
     * Attributes that can be used with a PreferenceImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxHeight com.android.settings:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxWidth com.android.settings:maxWidth}</code></td><td></td></tr>
     * </table>
     * @see #PreferenceImageView_android_maxWidth
     * @see #PreferenceImageView_android_maxHeight
     * @see #PreferenceImageView_maxHeight
     * @see #PreferenceImageView_maxWidth
     */
    public static final int[] PreferenceImageView={
        0x0101011f, 0x01010120, 0x7f0400d5, 0x7f0400d6
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int PreferenceImageView_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int PreferenceImageView_android_maxHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxHeight
     */
    public static final int PreferenceImageView_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxWidth
     */
    public static final int PreferenceImageView_maxWidth=3;
    /**
     * Attributes that can be used with a PreferenceTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceTheme_checkBoxPreferenceStyle com.android.settings:checkBoxPreferenceStyle}</code></td><td>Default style for CheckBoxPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dialogPreferenceStyle com.android.settings:dialogPreferenceStyle}</code></td><td>Default style for DialogPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dropdownPreferenceStyle com.android.settings:dropdownPreferenceStyle}</code></td><td>Default style for DropDownPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_editTextPreferenceStyle com.android.settings:editTextPreferenceStyle}</code></td><td>Default style for EditTextPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceActivityStyle com.android.settings:preferenceActivityStyle}</code></td><td>Default style for the PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryStyle com.android.settings:preferenceCategoryStyle}</code></td><td>Default style for PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentCompatStyle com.android.settings:preferenceFragmentCompatStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentListStyle com.android.settings:preferenceFragmentListStyle}</code></td><td>Preference fragment list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentPaddingSide com.android.settings:preferenceFragmentPaddingSide}</code></td><td>Preference fragment padding side</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentStyle com.android.settings:preferenceFragmentStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceHeaderPanelStyle com.android.settings:preferenceHeaderPanelStyle}</code></td><td>Preference headers panel style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceInformationStyle com.android.settings:preferenceInformationStyle}</code></td><td>Default style for informational Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceLayoutChild com.android.settings:preferenceLayoutChild}</code></td><td>The preference layout that has the child/tabbed effect.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceListStyle com.android.settings:preferenceListStyle}</code></td><td>Preference list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferencePanelStyle com.android.settings:preferencePanelStyle}</code></td><td>Preference panel style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceScreenStyle com.android.settings:preferenceScreenStyle}</code></td><td>Default style for PreferenceScreen.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceStyle com.android.settings:preferenceStyle}</code></td><td>Default style for Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceTheme com.android.settings:preferenceTheme}</code></td><td>Theme for inflating Preference objects</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_ringtonePreferenceStyle com.android.settings:ringtonePreferenceStyle}</code></td><td>Default style for RingtonePreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_seekBarPreferenceStyle com.android.settings:seekBarPreferenceStyle}</code></td><td>Default style for seekbar preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceCompatStyle com.android.settings:switchPreferenceCompatStyle}</code></td><td>Default style for switch compat preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceStyle com.android.settings:switchPreferenceStyle}</code></td><td>Default style for switch preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_yesNoPreferenceStyle com.android.settings:yesNoPreferenceStyle}</code></td><td>Default style for YesNoPreference.</td></tr>
     * </table>
     * @see #PreferenceTheme_checkBoxPreferenceStyle
     * @see #PreferenceTheme_dialogPreferenceStyle
     * @see #PreferenceTheme_dropdownPreferenceStyle
     * @see #PreferenceTheme_editTextPreferenceStyle
     * @see #PreferenceTheme_preferenceActivityStyle
     * @see #PreferenceTheme_preferenceCategoryStyle
     * @see #PreferenceTheme_preferenceFragmentCompatStyle
     * @see #PreferenceTheme_preferenceFragmentListStyle
     * @see #PreferenceTheme_preferenceFragmentPaddingSide
     * @see #PreferenceTheme_preferenceFragmentStyle
     * @see #PreferenceTheme_preferenceHeaderPanelStyle
     * @see #PreferenceTheme_preferenceInformationStyle
     * @see #PreferenceTheme_preferenceLayoutChild
     * @see #PreferenceTheme_preferenceListStyle
     * @see #PreferenceTheme_preferencePanelStyle
     * @see #PreferenceTheme_preferenceScreenStyle
     * @see #PreferenceTheme_preferenceStyle
     * @see #PreferenceTheme_preferenceTheme
     * @see #PreferenceTheme_ringtonePreferenceStyle
     * @see #PreferenceTheme_seekBarPreferenceStyle
     * @see #PreferenceTheme_switchPreferenceCompatStyle
     * @see #PreferenceTheme_switchPreferenceStyle
     * @see #PreferenceTheme_yesNoPreferenceStyle
     */
    public static final int[] PreferenceTheme={
        0x7f040057, 0x7f040081, 0x7f040091, 0x7f040094, 
        0x7f0400f6, 0x7f0400f8, 0x7f0400f9, 0x7f0400fa, 
        0x7f0400fb, 0x7f0400fc, 0x7f0400fd, 0x7f0400fe, 
        0x7f0400ff, 0x7f040100, 0x7f040101, 0x7f040102, 
        0x7f040103, 0x7f040104, 0x7f040112, 0x7f040119, 
        0x7f04016f, 0x7f040170, 0x7f0401b0
      };
    /**
     * <p>
     * @attr description
     * Default style for CheckBoxPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:checkBoxPreferenceStyle
     */
    public static final int PreferenceTheme_checkBoxPreferenceStyle=0;
    /**
     * <p>
     * @attr description
     * Default style for DialogPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dialogPreferenceStyle
     */
    public static final int PreferenceTheme_dialogPreferenceStyle=1;
    /**
     * <p>
     * @attr description
     * Default style for DropDownPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:dropdownPreferenceStyle
     */
    public static final int PreferenceTheme_dropdownPreferenceStyle=2;
    /**
     * <p>
     * @attr description
     * Default style for EditTextPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:editTextPreferenceStyle
     */
    public static final int PreferenceTheme_editTextPreferenceStyle=3;
    /**
     * <p>
     * @attr description
     * Default style for the PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceActivityStyle
     */
    public static final int PreferenceTheme_preferenceActivityStyle=4;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceCategory.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceCategoryStyle
     */
    public static final int PreferenceTheme_preferenceCategoryStyle=5;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceFragmentCompatStyle
     */
    public static final int PreferenceTheme_preferenceFragmentCompatStyle=6;
    /**
     * <p>
     * @attr description
     * Preference fragment list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceFragmentListStyle
     */
    public static final int PreferenceTheme_preferenceFragmentListStyle=7;
    /**
     * <p>
     * @attr description
     * Preference fragment padding side
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:preferenceFragmentPaddingSide
     */
    public static final int PreferenceTheme_preferenceFragmentPaddingSide=8;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceFragmentStyle
     */
    public static final int PreferenceTheme_preferenceFragmentStyle=9;
    /**
     * <p>
     * @attr description
     * Preference headers panel style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceHeaderPanelStyle
     */
    public static final int PreferenceTheme_preferenceHeaderPanelStyle=10;
    /**
     * <p>
     * @attr description
     * Default style for informational Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceInformationStyle
     */
    public static final int PreferenceTheme_preferenceInformationStyle=11;
    /**
     * <p>
     * @attr description
     * The preference layout that has the child/tabbed effect.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceLayoutChild
     */
    public static final int PreferenceTheme_preferenceLayoutChild=12;
    /**
     * <p>
     * @attr description
     * Preference list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceListStyle
     */
    public static final int PreferenceTheme_preferenceListStyle=13;
    /**
     * <p>
     * @attr description
     * Preference panel style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferencePanelStyle
     */
    public static final int PreferenceTheme_preferencePanelStyle=14;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceScreen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceScreenStyle
     */
    public static final int PreferenceTheme_preferenceScreenStyle=15;
    /**
     * <p>
     * @attr description
     * Default style for Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceStyle
     */
    public static final int PreferenceTheme_preferenceStyle=16;
    /**
     * <p>
     * @attr description
     * Theme for inflating Preference objects
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preferenceTheme
     */
    public static final int PreferenceTheme_preferenceTheme=17;
    /**
     * <p>
     * @attr description
     * Default style for RingtonePreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:ringtonePreferenceStyle
     */
    public static final int PreferenceTheme_ringtonePreferenceStyle=18;
    /**
     * <p>
     * @attr description
     * Default style for seekbar preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:seekBarPreferenceStyle
     */
    public static final int PreferenceTheme_seekBarPreferenceStyle=19;
    /**
     * <p>
     * @attr description
     * Default style for switch compat preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:switchPreferenceCompatStyle
     */
    public static final int PreferenceTheme_switchPreferenceCompatStyle=20;
    /**
     * <p>
     * @attr description
     * Default style for switch preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:switchPreferenceStyle
     */
    public static final int PreferenceTheme_switchPreferenceStyle=21;
    /**
     * <p>
     * @attr description
     * Default style for YesNoPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:yesNoPreferenceStyle
     */
    public static final int PreferenceTheme_yesNoPreferenceStyle=22;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.android.settings:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.android.settings:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
        0x7f0400e9, 0x7f0400ec
      };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.settings:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.settings:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.settings:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.settings:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.settings:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.settings:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.settings:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.settings:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.settings:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
        0x010100c4, 0x010100f1, 0x7f04009c, 0x7f04009d, 
        0x7f04009e, 0x7f04009f, 0x7f0400a0, 0x7f0400c6, 
        0x7f040111, 0x7f04012a, 0x7f040130
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=6;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extend android.support.v7.widget.RecyclerView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package name (android.support.v7.widget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:layoutManager
     */
    public static final int RecyclerView_layoutManager=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:spanCount
     */
    public static final int RecyclerView_spanCount=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=10;
    /**
     * Attributes that can be used with a RestrictedPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RestrictedPreference_useAdminDisabledSummary com.android.settings:useAdminDisabledSummary}</code></td><td>If true then we can use enabled/disabled by admin strings for summary (android.R.id.summary).</td></tr>
     * <tr><td><code>{@link #RestrictedPreference_userRestriction com.android.settings:userRestriction}</code></td><td>The user restriction on which the preference disabled by admin state will be based on.</td></tr>
     * </table>
     * @see #RestrictedPreference_useAdminDisabledSummary
     * @see #RestrictedPreference_userRestriction
     */
    public static final int[] RestrictedPreference={
        0x7f04019f, 0x7f0401a0
      };
    /**
     * <p>
     * @attr description
     * If true then we can use enabled/disabled by admin strings for summary (android.R.id.summary).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useAdminDisabledSummary
     */
    public static final int RestrictedPreference_useAdminDisabledSummary=0;
    /**
     * <p>
     * @attr description
     * The user restriction on which the preference disabled by admin state will be based on.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:userRestriction
     */
    public static final int RestrictedPreference_userRestriction=1;
    /**
     * Attributes that can be used with a RestrictedSwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RestrictedSwitchPreference_restrictedSwitchSummary com.android.settings:restrictedSwitchSummary}</code></td><td>This is used as summary for restricted switch preferences, default value is
     * @string/disabled_by_admin (Disabled by administrator).</td></tr>
     * <tr><td><code>{@link #RestrictedSwitchPreference_useAdditionalSummary com.android.settings:useAdditionalSummary}</code></td><td>If true, an additional summary will be added in addition to the existing summary and
     * this will be used for enabled/disabled by admin strings leaving android.R.id.summary untouched.</td></tr>
     * </table>
     * @see #RestrictedSwitchPreference_restrictedSwitchSummary
     * @see #RestrictedSwitchPreference_useAdditionalSummary
     */
    public static final int[] RestrictedSwitchPreference={
        0x7f040110, 0x7f04019e
      };
    /**
     * <p>
     * @attr description
     * This is used as summary for restricted switch preferences, default value is
     * @string/disabled_by_admin (Disabled by administrator).
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:restrictedSwitchSummary
     */
    public static final int RestrictedSwitchPreference_restrictedSwitchSummary=0;
    /**
     * <p>
     * @attr description
     * If true, an additional summary will be added in addition to the existing summary and
     * this will be used for enabled/disabled by admin strings leaving android.R.id.summary untouched.
     * As such when this is true, useAdminDisabledSummary will be overwritten to false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:useAdditionalSummary
     */
    public static final int RestrictedSwitchPreference_useAdditionalSummary=1;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.android.settings:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.android.settings:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.android.settings:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.android.settings:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.settings:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.android.settings:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.android.settings:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.android.settings:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.android.settings:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.android.settings:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.android.settings:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.settings:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.android.settings:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
        0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
        0x7f04005a, 0x7f040069, 0x7f04007b, 0x7f0400aa, 
        0x7f0400b9, 0x7f0400c5, 0x7f04010a, 0x7f04010b, 
        0x7f040114, 0x7f040115, 0x7f040137, 0x7f04013c, 
        0x7f0401a1
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SeekBarPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_max android:max}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_adjustable com.android.settings:adjustable}</code></td><td>Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_min com.android.settings:min}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_seekBarIncrement com.android.settings:seekBarIncrement}</code></td><td>Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_showSeekBarValue com.android.settings:showSeekBarValue}</code></td><td>Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed.</td></tr>
     * </table>
     * @see #SeekBarPreference_android_layout
     * @see #SeekBarPreference_android_max
     * @see #SeekBarPreference_adjustable
     * @see #SeekBarPreference_min
     * @see #SeekBarPreference_seekBarIncrement
     * @see #SeekBarPreference_showSeekBarValue
     */
    public static final int[] SeekBarPreference={
        0x010100f2, 0x01010136, 0x7f040022, 0x7f0400db, 
        0x7f040118, 0x7f040123
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SeekBarPreference_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#max}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:max
     */
    public static final int SeekBarPreference_android_max=1;
    /**
     * <p>
     * @attr description
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:adjustable
     */
    public static final int SeekBarPreference_adjustable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#min}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:min
     */
    public static final int SeekBarPreference_min=3;
    /**
     * <p>
     * @attr description
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.settings:seekBarIncrement
     */
    public static final int SeekBarPreference_seekBarIncrement=4;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is VISIBLE.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:showSeekBarValue
     */
    public static final int SeekBarPreference_showSeekBarValue=5;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.android.settings:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
        0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
        0x7f0400f3
      };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a SuwAbstractItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwAbstractItem_android_id android:id}</code></td><td></td></tr>
     * </table>
     * @see #SuwAbstractItem_android_id
     */
    public static final int[] SuwAbstractItem={
        0x010100d0
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #SuwAbstractItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int SuwAbstractItem_android_id=0;
    /**
     * Attributes that can be used with a SuwButtonItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwButtonItem_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwButtonItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwButtonItem_android_buttonStyle android:buttonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwButtonItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #SuwButtonItem_android_theme
     * @see #SuwButtonItem_android_enabled
     * @see #SuwButtonItem_android_buttonStyle
     * @see #SuwButtonItem_android_text
     */
    public static final int[] SuwButtonItem={
        0x01010000, 0x0101000e, 0x01010048, 0x0101014f
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#theme}
     * attribute's value can be found in the {@link #SuwButtonItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int SuwButtonItem_android_theme=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #SuwButtonItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int SuwButtonItem_android_enabled=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#buttonStyle}
     * attribute's value can be found in the {@link #SuwButtonItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:buttonStyle
     */
    public static final int SuwButtonItem_android_buttonStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#text}
     * attribute's value can be found in the {@link #SuwButtonItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int SuwButtonItem_android_text=3;
    /**
     * Attributes that can be used with a SuwColoredHeaderMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwColoredHeaderMixin_suwHeaderColor com.android.settings:suwHeaderColor}</code></td><td></td></tr>
     * </table>
     * @see #SuwColoredHeaderMixin_suwHeaderColor
     */
    public static final int[] SuwColoredHeaderMixin={
        0x7f040156
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwHeaderColor}
     * attribute's value can be found in the {@link #SuwColoredHeaderMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwHeaderColor
     */
    public static final int SuwColoredHeaderMixin_suwHeaderColor=0;
    /**
     * Attributes that can be used with a SuwDividerItemDecoration.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwDividerItemDecoration_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwDividerItemDecoration_android_listDivider android:listDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwDividerItemDecoration_suwDividerCondition com.android.settings:suwDividerCondition}</code></td><td></td></tr>
     * </table>
     * @see #SuwDividerItemDecoration_android_dividerHeight
     * @see #SuwDividerItemDecoration_android_listDivider
     * @see #SuwDividerItemDecoration_suwDividerCondition
     */
    public static final int[] SuwDividerItemDecoration={
        0x0101012a, 0x01010214, 0x7f04014b
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dividerHeight}
     * attribute's value can be found in the {@link #SuwDividerItemDecoration} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int SuwDividerItemDecoration_android_dividerHeight=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#listDivider}
     * attribute's value can be found in the {@link #SuwDividerItemDecoration} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:listDivider
     */
    public static final int SuwDividerItemDecoration_android_listDivider=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwDividerCondition}
     * attribute's value can be found in the {@link #SuwDividerItemDecoration} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>both</td><td>1</td><td></td></tr>
     * <tr><td>either</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.settings:suwDividerCondition
     */
    public static final int SuwDividerItemDecoration_suwDividerCondition=2;
    /**
     * Attributes that can be used with a SuwExpandableSwitchItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwExpandableSwitchItem_suwCollapsedSummary com.android.settings:suwCollapsedSummary}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwExpandableSwitchItem_suwExpandedSummary com.android.settings:suwExpandedSummary}</code></td><td></td></tr>
     * </table>
     * @see #SuwExpandableSwitchItem_suwCollapsedSummary
     * @see #SuwExpandableSwitchItem_suwExpandedSummary
     */
    public static final int[] SuwExpandableSwitchItem={
        0x7f040147, 0x7f040150
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwCollapsedSummary}
     * attribute's value can be found in the {@link #SuwExpandableSwitchItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:suwCollapsedSummary
     */
    public static final int SuwExpandableSwitchItem_suwCollapsedSummary=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwExpandedSummary}
     * attribute's value can be found in the {@link #SuwExpandableSwitchItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:suwExpandedSummary
     */
    public static final int SuwExpandableSwitchItem_suwExpandedSummary=1;
    /**
     * Attributes that can be used with a SuwFillContentLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwFillContentLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwFillContentLayout_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * </table>
     * @see #SuwFillContentLayout_android_maxWidth
     * @see #SuwFillContentLayout_android_maxHeight
     */
    public static final int[] SuwFillContentLayout={
        0x0101011f, 0x01010120
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SuwFillContentLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SuwFillContentLayout_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #SuwFillContentLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int SuwFillContentLayout_android_maxHeight=1;
    /**
     * Attributes that can be used with a SuwGlifLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwBackgroundBaseColor com.android.settings:suwBackgroundBaseColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwBackgroundPatterned com.android.settings:suwBackgroundPatterned}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwColorPrimary com.android.settings:suwColorPrimary}</code></td><td>Custom view attributes</td></tr>
     * <tr><td><code>{@link #SuwGlifLayout_suwFooter com.android.settings:suwFooter}</code></td><td></td></tr>
     * </table>
     * @see #SuwGlifLayout_suwBackgroundBaseColor
     * @see #SuwGlifLayout_suwBackgroundPatterned
     * @see #SuwGlifLayout_suwColorPrimary
     * @see #SuwGlifLayout_suwFooter
     */
    public static final int[] SuwGlifLayout={
        0x7f040143, 0x7f040144, 0x7f040148, 0x7f040152
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwBackgroundBaseColor}
     * attribute's value can be found in the {@link #SuwGlifLayout} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwBackgroundBaseColor
     */
    public static final int SuwGlifLayout_suwBackgroundBaseColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwBackgroundPatterned}
     * attribute's value can be found in the {@link #SuwGlifLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:suwBackgroundPatterned
     */
    public static final int SuwGlifLayout_suwBackgroundPatterned=1;
    /**
     * <p>
     * @attr description
     * Custom view attributes
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwColorPrimary
     */
    public static final int SuwGlifLayout_suwColorPrimary=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwFooter}
     * attribute's value can be found in the {@link #SuwGlifLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:suwFooter
     */
    public static final int SuwGlifLayout_suwFooter=3;
    /**
     * Attributes that can be used with a SuwHeaderMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwHeaderMixin_suwHeaderText com.android.settings:suwHeaderText}</code></td><td></td></tr>
     * </table>
     * @see #SuwHeaderMixin_suwHeaderText
     */
    public static final int[] SuwHeaderMixin={
        0x7f040157
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwHeaderText}
     * attribute's value can be found in the {@link #SuwHeaderMixin} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:suwHeaderText
     */
    public static final int SuwHeaderMixin_suwHeaderText=0;
    /**
     * Attributes that can be used with a SuwHeaderRecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwHeaderRecyclerView_suwHeader com.android.settings:suwHeader}</code></td><td></td></tr>
     * </table>
     * @see #SuwHeaderRecyclerView_suwHeader
     */
    public static final int[] SuwHeaderRecyclerView={
        0x7f040155
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwHeader}
     * attribute's value can be found in the {@link #SuwHeaderRecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:suwHeader
     */
    public static final int SuwHeaderRecyclerView_suwHeader=0;
    /**
     * Attributes that can be used with a SuwIconMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwIconMixin_android_icon android:icon}</code></td><td></td></tr>
     * </table>
     * @see #SuwIconMixin_android_icon
     */
    public static final int[] SuwIconMixin={
        0x01010002
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #SuwIconMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int SuwIconMixin_android_icon=0;
    /**
     * Attributes that can be used with a SuwIllustration.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwIllustration_suwAspectRatio com.android.settings:suwAspectRatio}</code></td><td></td></tr>
     * </table>
     * @see #SuwIllustration_suwAspectRatio
     */
    public static final int[] SuwIllustration={
        0x7f040141
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwAspectRatio}
     * attribute's value can be found in the {@link #SuwIllustration} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:suwAspectRatio
     */
    public static final int SuwIllustration_suwAspectRatio=0;
    /**
     * Attributes that can be used with a SuwIllustrationVideoView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwIllustrationVideoView_suwVideo com.android.settings:suwVideo}</code></td><td></td></tr>
     * </table>
     * @see #SuwIllustrationVideoView_suwVideo
     */
    public static final int[] SuwIllustrationVideoView={
        0x7f040167
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwVideo}
     * attribute's value can be found in the {@link #SuwIllustrationVideoView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:suwVideo
     */
    public static final int SuwIllustrationVideoView_suwVideo=0;
    /**
     * Attributes that can be used with a SuwIntrinsicSizeFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwIntrinsicSizeFrameLayout_android_height android:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwIntrinsicSizeFrameLayout_android_width android:width}</code></td><td></td></tr>
     * </table>
     * @see #SuwIntrinsicSizeFrameLayout_android_height
     * @see #SuwIntrinsicSizeFrameLayout_android_width
     */
    public static final int[] SuwIntrinsicSizeFrameLayout={
        0x01010155, 0x01010159
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#height}
     * attribute's value can be found in the {@link #SuwIntrinsicSizeFrameLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:height
     */
    public static final int SuwIntrinsicSizeFrameLayout_android_height=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#width}
     * attribute's value can be found in the {@link #SuwIntrinsicSizeFrameLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:width
     */
    public static final int SuwIntrinsicSizeFrameLayout_android_width=1;
    /**
     * Attributes that can be used with a SuwItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwItem_android_summary android:summary}</code></td><td></td></tr>
     * </table>
     * @see #SuwItem_android_icon
     * @see #SuwItem_android_enabled
     * @see #SuwItem_android_layout
     * @see #SuwItem_android_visible
     * @see #SuwItem_android_title
     * @see #SuwItem_android_summary
     */
    public static final int[] SuwItem={
        0x01010002, 0x0101000e, 0x010100f2, 0x01010194, 
        0x010101e1, 0x010101e9
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int SuwItem_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int SuwItem_android_enabled=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SuwItem_android_layout=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#visible}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int SuwItem_android_visible=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int SuwItem_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #SuwItem} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int SuwItem_android_summary=5;
    /**
     * Attributes that can be used with a SuwListMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwListMixin_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwListMixin_suwDividerInset com.android.settings:suwDividerInset}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #SuwListMixin_suwDividerInsetEnd com.android.settings:suwDividerInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwListMixin_suwDividerInsetStart com.android.settings:suwDividerInsetStart}</code></td><td></td></tr>
     * </table>
     * @see #SuwListMixin_android_entries
     * @see #SuwListMixin_suwDividerInset
     * @see #SuwListMixin_suwDividerInsetEnd
     * @see #SuwListMixin_suwDividerInsetStart
     */
    public static final int[] SuwListMixin={
        0x010100b2, 0x7f04014c, 0x7f04014d, 0x7f04014e
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #SuwListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int SuwListMixin_android_entries=0;
    /**
     * <p>
     * @attr description
     * Deprecated. Use suwDividerInsetStart and suwDividerInsetEnd instead
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:suwDividerInset
     */
    public static final int SuwListMixin_suwDividerInset=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwDividerInsetEnd}
     * attribute's value can be found in the {@link #SuwListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:suwDividerInsetEnd
     */
    public static final int SuwListMixin_suwDividerInsetEnd=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwDividerInsetStart}
     * attribute's value can be found in the {@link #SuwListMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:suwDividerInsetStart
     */
    public static final int SuwListMixin_suwDividerInsetStart=3;
    /**
     * Attributes that can be used with a SuwRecyclerItemAdapter.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwRecyclerItemAdapter_android_colorBackground android:colorBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwRecyclerItemAdapter_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwRecyclerItemAdapter_selectableItemBackground com.android.settings:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #SuwRecyclerItemAdapter_android_colorBackground
     * @see #SuwRecyclerItemAdapter_android_selectableItemBackground
     * @see #SuwRecyclerItemAdapter_selectableItemBackground
     */
    public static final int[] SuwRecyclerItemAdapter={
        0x01010031, 0x0101030e, 0x7f04011c
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#colorBackground}
     * attribute's value can be found in the {@link #SuwRecyclerItemAdapter} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:colorBackground
     */
    public static final int SuwRecyclerItemAdapter_android_colorBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #SuwRecyclerItemAdapter} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int SuwRecyclerItemAdapter_android_selectableItemBackground=1;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:selectableItemBackground
     */
    public static final int SuwRecyclerItemAdapter_selectableItemBackground=2;
    /**
     * Attributes that can be used with a SuwRecyclerMixin.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwRecyclerMixin_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwRecyclerMixin_suwDividerInset com.android.settings:suwDividerInset}</code></td><td>Deprecated.</td></tr>
     * <tr><td><code>{@link #SuwRecyclerMixin_suwDividerInsetEnd com.android.settings:suwDividerInsetEnd}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwRecyclerMixin_suwDividerInsetStart com.android.settings:suwDividerInsetStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwRecyclerMixin_suwHasStableIds com.android.settings:suwHasStableIds}</code></td><td></td></tr>
     * </table>
     * @see #SuwRecyclerMixin_android_entries
     * @see #SuwRecyclerMixin_suwDividerInset
     * @see #SuwRecyclerMixin_suwDividerInsetEnd
     * @see #SuwRecyclerMixin_suwDividerInsetStart
     * @see #SuwRecyclerMixin_suwHasStableIds
     */
    public static final int[] SuwRecyclerMixin={
        0x010100b2, 0x7f04014c, 0x7f04014d, 0x7f04014e, 
        0x7f040154
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #SuwRecyclerMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int SuwRecyclerMixin_android_entries=0;
    /**
     * <p>
     * @attr description
     * Deprecated. Use suwDividerInsetStart and suwDividerInsetEnd instead
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:suwDividerInset
     */
    public static final int SuwRecyclerMixin_suwDividerInset=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwDividerInsetEnd}
     * attribute's value can be found in the {@link #SuwRecyclerMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:suwDividerInsetEnd
     */
    public static final int SuwRecyclerMixin_suwDividerInsetEnd=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwDividerInsetStart}
     * attribute's value can be found in the {@link #SuwRecyclerMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:suwDividerInsetStart
     */
    public static final int SuwRecyclerMixin_suwDividerInsetStart=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwHasStableIds}
     * attribute's value can be found in the {@link #SuwRecyclerMixin} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:suwHasStableIds
     */
    public static final int SuwRecyclerMixin_suwHasStableIds=4;
    /**
     * Attributes that can be used with a SuwSetupWizardLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwBackground com.android.settings:suwBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwBackgroundTile com.android.settings:suwBackgroundTile}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwDecorPaddingTop com.android.settings:suwDecorPaddingTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustration com.android.settings:suwIllustration}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationAspectRatio com.android.settings:suwIllustrationAspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationHorizontalTile com.android.settings:suwIllustrationHorizontalTile}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwSetupWizardLayout_suwIllustrationImage com.android.settings:suwIllustrationImage}</code></td><td></td></tr>
     * </table>
     * @see #SuwSetupWizardLayout_suwBackground
     * @see #SuwSetupWizardLayout_suwBackgroundTile
     * @see #SuwSetupWizardLayout_suwDecorPaddingTop
     * @see #SuwSetupWizardLayout_suwIllustration
     * @see #SuwSetupWizardLayout_suwIllustrationAspectRatio
     * @see #SuwSetupWizardLayout_suwIllustrationHorizontalTile
     * @see #SuwSetupWizardLayout_suwIllustrationImage
     */
    public static final int[] SuwSetupWizardLayout={
        0x7f040142, 0x7f040145, 0x7f04014a, 0x7f040158, 
        0x7f040159, 0x7f04015a, 0x7f04015b
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwBackground}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwBackground
     */
    public static final int SuwSetupWizardLayout_suwBackground=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwBackgroundTile}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwBackgroundTile
     */
    public static final int SuwSetupWizardLayout_suwBackgroundTile=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwDecorPaddingTop}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:suwDecorPaddingTop
     */
    public static final int SuwSetupWizardLayout_suwDecorPaddingTop=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwIllustration}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwIllustration
     */
    public static final int SuwSetupWizardLayout_suwIllustration=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwIllustrationAspectRatio}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.settings:suwIllustrationAspectRatio
     */
    public static final int SuwSetupWizardLayout_suwIllustrationAspectRatio=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwIllustrationHorizontalTile}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwIllustrationHorizontalTile
     */
    public static final int SuwSetupWizardLayout_suwIllustrationHorizontalTile=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwIllustrationImage}
     * attribute's value can be found in the {@link #SuwSetupWizardLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwIllustrationImage
     */
    public static final int SuwSetupWizardLayout_suwIllustrationImage=6;
    /**
     * Attributes that can be used with a SuwStatusBarBackgroundLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwStatusBarBackgroundLayout_suwStatusBarBackground com.android.settings:suwStatusBarBackground}</code></td><td></td></tr>
     * </table>
     * @see #SuwStatusBarBackgroundLayout_suwStatusBarBackground
     */
    public static final int[] SuwStatusBarBackgroundLayout={
        0x7f040166
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwStatusBarBackground}
     * attribute's value can be found in the {@link #SuwStatusBarBackgroundLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:suwStatusBarBackground
     */
    public static final int SuwStatusBarBackgroundLayout_suwStatusBarBackground=0;
    /**
     * Attributes that can be used with a SuwStickyHeaderListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwStickyHeaderListView_suwHeader com.android.settings:suwHeader}</code></td><td></td></tr>
     * </table>
     * @see #SuwStickyHeaderListView_suwHeader
     */
    public static final int[] SuwStickyHeaderListView={
        0x7f040155
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwHeader}
     * attribute's value can be found in the {@link #SuwStickyHeaderListView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:suwHeader
     */
    public static final int SuwStickyHeaderListView_suwHeader=0;
    /**
     * Attributes that can be used with a SuwSwitchItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwSwitchItem_android_checked android:checked}</code></td><td></td></tr>
     * </table>
     * @see #SuwSwitchItem_android_checked
     */
    public static final int[] SuwSwitchItem={
        0x01010106
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#checked}
     * attribute's value can be found in the {@link #SuwSwitchItem} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int SuwSwitchItem_android_checked=0;
    /**
     * Attributes that can be used with a SuwTemplateLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SuwTemplateLayout_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SuwTemplateLayout_suwContainer com.android.settings:suwContainer}</code></td><td></td></tr>
     * </table>
     * @see #SuwTemplateLayout_android_layout
     * @see #SuwTemplateLayout_suwContainer
     */
    public static final int[] SuwTemplateLayout={
        0x010100f2, 0x7f040149
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SuwTemplateLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SuwTemplateLayout_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#suwContainer}
     * attribute's value can be found in the {@link #SuwTemplateLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:suwContainer
     */
    public static final int SuwTemplateLayout_suwContainer=1;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.android.settings:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.android.settings:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.settings:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.android.settings:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.settings:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.settings:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.android.settings:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.android.settings:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.android.settings:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.android.settings:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.android.settings:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
        0x01010124, 0x01010125, 0x01010142, 0x7f040124, 
        0x7f04012e, 0x7f04016d, 0x7f04016e, 0x7f040172, 
        0x7f040183, 0x7f040184, 0x7f040185, 0x7f04019b, 
        0x7f04019c, 0x7f04019d
      };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_disableDependentsState com.android.settings:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOff com.android.settings:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOn com.android.settings:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOff com.android.settings:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOn com.android.settings:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreference_android_summaryOn
     * @see #SwitchPreference_android_summaryOff
     * @see #SwitchPreference_android_disableDependentsState
     * @see #SwitchPreference_android_switchTextOn
     * @see #SwitchPreference_android_switchTextOff
     * @see #SwitchPreference_disableDependentsState
     * @see #SwitchPreference_summaryOff
     * @see #SwitchPreference_summaryOn
     * @see #SwitchPreference_switchTextOff
     * @see #SwitchPreference_switchTextOn
     */
    public static final int[] SwitchPreference={
        0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
        0x0101036c, 0x7f040085, 0x7f04013f, 0x7f040140, 
        0x7f040173, 0x7f040174
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreference_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreference_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreference_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:disableDependentsState
     */
    public static final int SwitchPreference_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOff
     */
    public static final int SwitchPreference_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOn
     */
    public static final int SwitchPreference_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:switchTextOff
     */
    public static final int SwitchPreference_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:switchTextOn
     */
    public static final int SwitchPreference_switchTextOn=9;
    /**
     * Attributes that can be used with a SwitchPreferenceCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_disableDependentsState com.android.settings:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOff com.android.settings:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOn com.android.settings:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOff com.android.settings:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOn com.android.settings:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreferenceCompat_android_summaryOn
     * @see #SwitchPreferenceCompat_android_summaryOff
     * @see #SwitchPreferenceCompat_android_disableDependentsState
     * @see #SwitchPreferenceCompat_android_switchTextOn
     * @see #SwitchPreferenceCompat_android_switchTextOff
     * @see #SwitchPreferenceCompat_disableDependentsState
     * @see #SwitchPreferenceCompat_summaryOff
     * @see #SwitchPreferenceCompat_summaryOn
     * @see #SwitchPreferenceCompat_switchTextOff
     * @see #SwitchPreferenceCompat_switchTextOn
     */
    public static final int[] SwitchPreferenceCompat={
        0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
        0x0101036c, 0x7f040085, 0x7f04013f, 0x7f040140, 
        0x7f040173, 0x7f040174
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreferenceCompat_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreferenceCompat_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreferenceCompat_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreferenceCompat_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOff
     */
    public static final int SwitchPreferenceCompat_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:summaryOn
     */
    public static final int SwitchPreferenceCompat_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:switchTextOff
     */
    public static final int SwitchPreferenceCompat_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:switchTextOn
     */
    public static final int SwitchPreferenceCompat_switchTextOn=9;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.android.settings:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.android.settings:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_textAllCaps
     */
    public static final int[] TextAppearance={
        0x01010095, 0x01010096, 0x01010097, 0x01010098, 
        0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
        0x01010163, 0x01010164, 0x010103ac, 0x7f0400a5, 
        0x7f040175
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:fontFamily
     */
    public static final int TextAppearance_fontFamily=11;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=12;
    /**
     * Attributes that can be used with a TintablePreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TintablePreference_android_tint android:tint}</code></td><td></td></tr>
     * </table>
     * @see #TintablePreference_android_tint
     */
    public static final int[] TintablePreference={
        0x01010121
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tint}
     * attribute's value can be found in the {@link #TintablePreference} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:tint
     */
    public static final int TintablePreference_android_tint=0;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.android.settings:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.settings:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.android.settings:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.settings:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.android.settings:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.settings:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.android.settings:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.android.settings:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.android.settings:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.android.settings:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.android.settings:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.settings:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.settings:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.android.settings:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.android.settings:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.android.settings:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.settings:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.settings:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.android.settings:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.android.settings:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.settings:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.settings:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.android.settings:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.android.settings:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.android.settings:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.settings:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.android.settings:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
        0x010100af, 0x01010140, 0x7f04004a, 0x7f04005c, 
        0x7f04005d, 0x7f04006d, 0x7f04006e, 0x7f04006f, 
        0x7f040070, 0x7f040071, 0x7f040072, 0x7f0400d2, 
        0x7f0400d3, 0x7f0400d4, 0x7f0400de, 0x7f0400df, 
        0x7f0400f3, 0x7f040138, 0x7f040139, 0x7f04013a, 
        0x7f04018c, 0x7f04018d, 0x7f04018e, 0x7f04018f, 
        0x7f040190, 0x7f040191, 0x7f040192, 0x7f040193, 
        0x7f040194
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.settings:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=14;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:navigationIcon
     */
    public static final int Toolbar_navigationIcon=15;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:popupTheme
     */
    public static final int Toolbar_popupTheme=16;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:subtitle
     */
    public static final int Toolbar_subtitle=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=18;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.settings:title
     */
    public static final int Toolbar_title=20;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMargin
     */
    public static final int Toolbar_titleMargin=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=25;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=27;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:titleTextColor
     */
    public static final int Toolbar_titleTextColor=28;
    /**
     * For UsageView
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #UsageView_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #UsageView_android_colorAccent android:colorAccent}</code></td><td></td></tr>
     * <tr><td><code>{@link #UsageView_bottomLabels com.android.settings:bottomLabels}</code></td><td></td></tr>
     * <tr><td><code>{@link #UsageView_sideLabels com.android.settings:sideLabels}</code></td><td></td></tr>
     * <tr><td><code>{@link #UsageView_textColor com.android.settings:textColor}</code></td><td></td></tr>
     * </table>
     * @see #UsageView_android_gravity
     * @see #UsageView_android_colorAccent
     * @see #UsageView_bottomLabels
     * @see #UsageView_sideLabels
     * @see #UsageView_textColor
     */
    public static final int[] UsageView={
        0x010100af, 0x01010435, 0x7f040044, 0x7f040126, 
        0x7f04017e
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int UsageView_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#colorAccent}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:colorAccent
     */
    public static final int UsageView_android_colorAccent=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#bottomLabels}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:bottomLabels
     */
    public static final int UsageView_bottomLabels=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#sideLabels}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:sideLabels
     */
    public static final int UsageView_sideLabels=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#textColor}
     * attribute's value can be found in the {@link #UsageView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:textColor
     */
    public static final int UsageView_textColor=4;
    /**
     * Attributes that can be used with a VideoPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #VideoPreference_animation com.android.settings:animation}</code></td><td></td></tr>
     * <tr><td><code>{@link #VideoPreference_preview com.android.settings:preview}</code></td><td></td></tr>
     * </table>
     * @see #VideoPreference_animation
     * @see #VideoPreference_preview
     */
    public static final int[] VideoPreference={
        0x7f04002d, 0x7f040106
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#animation}
     * attribute's value can be found in the {@link #VideoPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:animation
     */
    public static final int VideoPreference_animation=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#preview}
     * attribute's value can be found in the {@link #VideoPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:preview
     */
    public static final int VideoPreference_preview=1;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.android.settings:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.android.settings:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.android.settings:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
        0x01010000, 0x010100da, 0x7f0400ea, 0x7f0400eb, 
        0x7f040181
      };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.settings:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.settings:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.settings:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.settings:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
        0x010100d4, 0x7f04003d, 0x7f04003e
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.settings:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.settings:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
        0x010100d0, 0x010100f2, 0x010100f3
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
    /**
     * Attributes that can be used with a WifiEncryptionState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WifiEncryptionState_state_encrypted com.android.settings:state_encrypted}</code></td><td></td></tr>
     * </table>
     * @see #WifiEncryptionState_state_encrypted
     */
    public static final int[] WifiEncryptionState={
        0x7f040132
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#state_encrypted}
     * attribute's value can be found in the {@link #WifiEncryptionState} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_encrypted
     */
    public static final int WifiEncryptionState_state_encrypted=0;
    /**
     * Attributes that can be used with a WifiMeteredState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WifiMeteredState_state_metered com.android.settings:state_metered}</code></td><td></td></tr>
     * </table>
     * @see #WifiMeteredState_state_metered
     */
    public static final int[] WifiMeteredState={
        0x7f040133
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#state_metered}
     * attribute's value can be found in the {@link #WifiMeteredState} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_metered
     */
    public static final int WifiMeteredState_state_metered=0;
    /**
     * Attributes that can be used with a WifiSavedState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WifiSavedState_state_saved com.android.settings:state_saved}</code></td><td></td></tr>
     * </table>
     * @see #WifiSavedState_state_saved
     */
    public static final int[] WifiSavedState={
        0x7f040134
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#state_saved}
     * attribute's value can be found in the {@link #WifiSavedState} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:state_saved
     */
    public static final int WifiSavedState_state_saved=0;
    /**
     * Attributes that can be used with a WorkPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #WorkPreference_forWork com.android.settings:forWork}</code></td><td></td></tr>
     * </table>
     * @see #WorkPreference_forWork
     */
    public static final int[] WorkPreference={
        0x7f0400a7
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.settings.R.attr#forWork}
     * attribute's value can be found in the {@link #WorkPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.settings:forWork
     */
    public static final int WorkPreference_forWork=0;
  }
  public static final class xml {
    public static final int about_legal=0x7f150000;
    public static final int accessibility_autoclick_settings=0x7f150001;
    public static final int accessibility_daltonizer_settings=0x7f150002;
    public static final int accessibility_magnification_settings=0x7f150003;
    public static final int accessibility_settings=0x7f150004;
    public static final int accessibility_settings_for_setup_wizard=0x7f150005;
    public static final int accessibility_shortcut_settings=0x7f150006;
    public static final int account_sync_settings=0x7f150007;
    public static final int account_type_settings=0x7f150008;
    public static final int add_account_settings=0x7f150009;
    public static final int ambient_display_settings=0x7f15000a;
    public static final int apn_editor=0x7f15000b;
    public static final int apn_settings=0x7f15000c;
    public static final int app_and_notification=0x7f15000d;
    public static final int app_data_usage=0x7f15000e;
    public static final int app_default_settings=0x7f15000f;
    public static final int app_list_disclosure_settings=0x7f150010;
    public static final int app_memory_settings=0x7f150011;
    public static final int app_ops_permissions_details=0x7f150012;
    public static final int app_restrictions=0x7f150013;
    public static final int app_storage_settings=0x7f150014;
    public static final int application_settings=0x7f150015;
    public static final int appwidget_info=0x7f150016;
    public static final int assist_gesture_settings=0x7f150017;
    public static final int automatic_storage_management_settings=0x7f150018;
    public static final int available_virtual_keyboard=0x7f150019;
    public static final int backup_settings=0x7f15001a;
    public static final int battery_saver_settings=0x7f15001b;
    public static final int billing_cycle=0x7f15001c;
    public static final int bluetooth_device_advanced=0x7f15001d;
    public static final int bluetooth_device_details_fragment=0x7f15001e;
    public static final int bluetooth_pairing_detail=0x7f15001f;
    public static final int bluetooth_settings=0x7f150020;
    public static final int bluetooth_settings_obsolete=0x7f150021;
    public static final int captioning_settings=0x7f150022;
    public static final int configure_notification_settings=0x7f150023;
    public static final int connected_devices=0x7f150024;
    public static final int data_plan_usage=0x7f150025;
    public static final int data_plan_usage_cell_data_preference_screen=0x7f150026;
    public static final int data_saver=0x7f150027;
    public static final int data_usage=0x7f150028;
    public static final int data_usage_cellular=0x7f150029;
    public static final int data_usage_ethernet=0x7f15002a;
    public static final int data_usage_list=0x7f15002b;
    public static final int data_usage_metered_prefs=0x7f15002c;
    public static final int data_usage_wifi=0x7f15002d;
    public static final int date_time_prefs=0x7f15002e;
    public static final int development_prefs=0x7f15002f;
    public static final int device_info_phone_status=0x7f150030;
    public static final int device_info_settings=0x7f150031;
    public static final int device_info_sim_status=0x7f150032;
    public static final int device_info_status=0x7f150033;
    public static final int device_info_storage=0x7f150034;
    public static final int device_info_storage_volume=0x7f150035;
    public static final int device_picker=0x7f150036;
    public static final int display_settings=0x7f150037;
    public static final int double_tap_power_settings=0x7f150038;
    public static final int double_tap_screen_settings=0x7f150039;
    public static final int double_twist_gesture_settings=0x7f15003a;
    public static final int dream_fragment_overview=0x7f15003b;
    public static final int encryption_and_credential=0x7f15003c;
    public static final int enterprise_privacy_settings=0x7f15003d;
    public static final int enterprise_set_default_apps_settings=0x7f15003e;
    public static final int external_sources_details=0x7f15003f;
    public static final int file_paths=0x7f150040;
    public static final int gestures=0x7f150041;
    public static final int high_power_details=0x7f150042;
    public static final int inactive_apps=0x7f150043;
    public static final int inapp_notification_settings=0x7f150044;
    public static final int input_methods_prefs=0x7f150045;
    public static final int installed_app_details=0x7f150046;
    public static final int installed_app_launch_settings=0x7f150047;
    public static final int language_and_input=0x7f150048;
    public static final int legacy_channel_notification_settings=0x7f150049;
    public static final int location_mode=0x7f15004a;
    public static final int location_scanning=0x7f15004b;
    public static final int location_settings=0x7f15004c;
    public static final int manage_assist=0x7f15004d;
    public static final int managed_profile_settings=0x7f15004e;
    public static final int network_and_internet=0x7f15004f;
    public static final int network_scorer_picker_prefs=0x7f150050;
    public static final int nfc_payment_settings=0x7f150051;
    public static final int night_display_settings=0x7f150052;
    public static final int notification_importance=0x7f150053;
    public static final int notification_settings=0x7f150054;
    public static final int other_sound_settings=0x7f150055;
    public static final int physical_keyboard_settings=0x7f150056;
    public static final int pick_up_gesture_settings=0x7f150057;
    public static final int placeholder_prefs=0x7f150058;
    public static final int power_abnormal_detail=0x7f150059;
    public static final int power_usage_advanced=0x7f15005a;
    public static final int power_usage_detail=0x7f15005b;
    public static final int power_usage_details=0x7f15005c;
    public static final int power_usage_summary=0x7f15005d;
    public static final int print_job_settings=0x7f15005e;
    public static final int print_settings=0x7f15005f;
    public static final int privacy_settings=0x7f150060;
    public static final int process_stats_summary=0x7f150061;
    public static final int process_stats_ui=0x7f150062;
    public static final int profile_challenge_settings=0x7f150063;
    public static final int reset_dashboard_fragment=0x7f150064;
    public static final int screen_pinning_settings=0x7f150065;
    public static final int security_lockscreen_settings=0x7f150066;
    public static final int security_settings=0x7f150067;
    public static final int security_settings_chooser=0x7f150068;
    public static final int security_settings_encrypted=0x7f150069;
    public static final int security_settings_fingerprint=0x7f15006a;
    public static final int security_settings_lockscreen=0x7f15006b;
    public static final int security_settings_lockscreen_profile=0x7f15006c;
    public static final int security_settings_misc=0x7f15006d;
    public static final int security_settings_password=0x7f15006e;
    public static final int security_settings_password_profile=0x7f15006f;
    public static final int security_settings_password_sub=0x7f150070;
    public static final int security_settings_pattern=0x7f150071;
    public static final int security_settings_pattern_profile=0x7f150072;
    public static final int security_settings_pattern_sub=0x7f150073;
    public static final int security_settings_picker=0x7f150074;
    public static final int security_settings_pin=0x7f150075;
    public static final int security_settings_pin_profile=0x7f150076;
    public static final int security_settings_pin_sub=0x7f150077;
    public static final int security_settings_profile=0x7f150078;
    public static final int security_settings_slide_sub=0x7f150079;
    public static final int security_settings_status=0x7f15007a;
    public static final int security_settings_unencrypted=0x7f15007b;
    public static final int security_settings_unification=0x7f15007c;
    public static final int setup_security_settings_picker=0x7f15007d;
    public static final int shortcuts=0x7f15007e;
    public static final int sim_lock_settings=0x7f15007f;
    public static final int sim_settings=0x7f150080;
    public static final int sound_settings=0x7f150081;
    public static final int special_access=0x7f150082;
    public static final int spellchecker_prefs=0x7f150083;
    public static final int storage_dashboard_fragment=0x7f150084;
    public static final int storage_profile_fragment=0x7f150085;
    public static final int suggestion_ordering=0x7f150086;
    public static final int swipe_to_notification_settings=0x7f150087;
    public static final int sync_settings=0x7f150088;
    public static final int system_dashboard_fragment=0x7f150089;
    public static final int testing_settings=0x7f15008a;
    public static final int testing_wifi_settings=0x7f15008b;
    public static final int tether_prefs=0x7f15008c;
    public static final int timezones=0x7f15008d;
    public static final int trust_agent_settings=0x7f15008e;
    public static final int tts_engine_picker=0x7f15008f;
    public static final int tts_settings=0x7f150090;
    public static final int upgraded_app_notification_settings=0x7f150091;
    public static final int upgraded_channel_notification_settings=0x7f150092;
    public static final int usage_access_settings=0x7f150093;
    public static final int usb_settings=0x7f150094;
    public static final int user_and_accounts_settings=0x7f150095;
    public static final int user_details_settings=0x7f150096;
    public static final int user_settings=0x7f150097;
    public static final int virtual_keyboard_settings=0x7f150098;
    public static final int voice_input_settings=0x7f150099;
    public static final int vpn_app_management=0x7f15009a;
    public static final int vpn_settings2=0x7f15009b;
    public static final int wallpaper_settings=0x7f15009c;
    public static final int wifi_access_points=0x7f15009d;
    public static final int wifi_access_points_for_wifi_setup_xl=0x7f15009e;
    public static final int wifi_calling_settings=0x7f15009f;
    public static final int wifi_configure_settings=0x7f1500a0;
    public static final int wifi_display_saved_access_points=0x7f1500a1;
    public static final int wifi_display_settings=0x7f1500a2;
    public static final int wifi_network_details_fragment=0x7f1500a3;
    public static final int wifi_p2p_settings=0x7f1500a4;
    public static final int wifi_settings=0x7f1500a5;
    public static final int wifi_tether_settings=0x7f1500a6;
    public static final int zen_mode_event_rule_settings=0x7f1500a7;
    public static final int zen_mode_external_rule_settings=0x7f1500a8;
    public static final int zen_mode_priority_settings=0x7f1500a9;
    public static final int zen_mode_schedule_rule_settings=0x7f1500aa;
    public static final int zen_mode_settings=0x7f1500ab;
    public static final int zen_mode_visual_interruptions_settings=0x7f1500ac;
  }
}