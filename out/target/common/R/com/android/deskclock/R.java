/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.deskclock;

public final class R {
  public static final class anim {
    public static final int abc_fade_in=0x7f010000;
    public static final int abc_fade_out=0x7f010001;
    public static final int abc_grow_fade_in_from_bottom=0x7f010002;
    public static final int abc_popup_enter=0x7f010003;
    public static final int abc_popup_exit=0x7f010004;
    public static final int abc_shrink_fade_out_from_bottom=0x7f010005;
    public static final int abc_slide_in_bottom=0x7f010006;
    public static final int abc_slide_in_top=0x7f010007;
    public static final int abc_slide_out_bottom=0x7f010008;
    public static final int abc_slide_out_top=0x7f010009;
    public static final int caret_toclose_animation_interpolator_0=0x7f01000a;
    public static final int caret_toopen_animation_interpolator_0=0x7f01000b;
    public static final int design_bottom_sheet_slide_in=0x7f01000c;
    public static final int design_bottom_sheet_slide_out=0x7f01000d;
    public static final int design_snackbar_in=0x7f01000e;
    public static final int design_snackbar_out=0x7f01000f;
    public static final int ic_clock_animation_interpolator_0=0x7f010010;
    public static final int ic_clock_animation_interpolator_1=0x7f010011;
    public static final int ic_pause_play_animation_interpolator_0=0x7f010012;
    public static final int ic_pause_play_animation_interpolator_1=0x7f010013;
    public static final int ic_play_pause_animation_interpolator_0=0x7f010014;
    public static final int ic_play_pause_animation_interpolator_1=0x7f010015;
    public static final int ic_ringtone_active_animation_interpolator=0x7f010016;
    public static final int ic_stop_play_animation_interpolator_0=0x7f010017;
    public static final int ic_stopwatch_button_translatex_interpolator=0x7f010018;
    public static final int tooltip_enter=0x7f010019;
    public static final int tooltip_exit=0x7f01001a;
  }
  public static final class animator {
    public static final int caret_collapse_base_animation=0x7f020000;
    public static final int caret_collapse_l_animation=0x7f020001;
    public static final int caret_collapse_r_animation=0x7f020002;
    public static final int caret_expand_base_animation=0x7f020003;
    public static final int caret_expand_l_animation=0x7f020004;
    public static final int caret_expand_r_animation=0x7f020005;
    public static final int day_button_checked_alpha_animation=0x7f020006;
    public static final int day_button_checked_animation=0x7f020007;
    public static final int day_button_unchecked_alpha_animation=0x7f020008;
    public static final int day_button_unchecked_animation=0x7f020009;
    public static final int design_appbar_state_list_animator=0x7f02000a;
    public static final int ic_alarm_animation_button=0x7f02000b;
    public static final int ic_clock_hour_hand_animation=0x7f02000c;
    public static final int ic_clock_minute_hand_animation=0x7f02000d;
    public static final int ic_pause_play_path_0_animation=0x7f02000e;
    public static final int ic_pause_play_path_1_animation=0x7f02000f;
    public static final int ic_pause_play_path_2_animation=0x7f020010;
    public static final int ic_play_pause_path_0_animation=0x7f020011;
    public static final int ic_play_pause_path_1_animation=0x7f020012;
    public static final int ic_play_pause_path_2_animation=0x7f020013;
    public static final int ic_ringtone_active_outlines_0_animation=0x7f020014;
    public static final int ic_ringtone_active_outlines_1_animation=0x7f020015;
    public static final int ic_ringtone_active_outlines_2_animation=0x7f020016;
    public static final int ic_stop_play_ic_stop_play_path_0_animation=0x7f020017;
    public static final int ic_stop_play_path_1_animation=0x7f020018;
    public static final int ic_stopwatch_animation_button=0x7f020019;
    public static final int ic_stopwatch_animation_hand=0x7f02001a;
    public static final int ic_timer_animation_hourglass_fill=0x7f02001b;
    public static final int ic_timer_animation_hourglass_frame=0x7f02001c;
    public static final int ic_timer_animation_mask_1=0x7f02001d;
  }
  public static final class array {
    /**
     * Alarm confirmation toast: Describes how long from now until alarm fires
     */
    public static final int alarm_set=0x7f030000;
    /**
     * Entries listed in the ListPreference when invoking the auto silence
     * preference.
     */
    public static final int auto_silence_entries=0x7f030001;
    /**
     * Values that are retrieved from the ListPreference. These must match
     * the auto_silence_entries above.
     */
    public static final int auto_silence_values=0x7f030002;
    /**
     * This array enumerates the resource keys to all cities available to the app.
     */
    public static final int city_ids=0x7f030003;
    /**
     * Entries listed in the ListPreference when invoking the clock style
     * preference.
     */
    public static final int clock_style_entries=0x7f030004;
    /**
     * Values that are retrieved from the ListPreference. These must match
     * the clock_style_entries above.
     */
    public static final int clock_style_values=0x7f030005;
    /**
     * Entries listed in the ListPreference when invoking gradually increase
     * volume preferences.
     */
    public static final int crescendo_entries=0x7f030006;
    /**
     * Values that are retrieved from the ListPreference. These must match
     * the crescendo_entries above.
     */
    public static final int crescendo_values=0x7f030007;
    /**
     * Entries listed in the ListPreference when invoking the snooze duration preference
     */
    public static final int snooze_duration_entries=0x7f030008;
    /**
     * Values that are retrieved from the ListPreference. These must match
     * the snooze_duration_entries above.
     */
    public static final int snooze_duration_values=0x7f030009;
    /**
     * Jocular content that user may append when sharing the lap times
     */
    public static final int sw_share_strings=0x7f03000a;
    /**
     * Choices for timezones, must be kept in sync with timezone_values. CHAR LIMIT=25]
     */
    public static final int timezone_labels=0x7f03000b;
    /**
     * Choices for timezones, must be kept in sync with timezone_values.
     */
    public static final int timezone_values=0x7f03000c;
    /**
     * Entries listed in the setting for the side-button action.
     */
    public static final int volume_button_setting_entries=0x7f03000d;
    /**
     * Values for the side-button setting.
     */
    public static final int volume_button_setting_values=0x7f03000e;
    /**
     * Entries listed in ListPreference for start day.
     */
    public static final int week_start_entries=0x7f03000f;
    /**
     * Values for ListPreference for start day of week.
     */
    public static final int week_start_values=0x7f030010;
  }
  public static final class attr {
    /**
     * Custom divider drawable to use for elements in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarDivider=0x7f040000;
    /**
     * Custom item state list drawable background for action bar items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarItemBackground=0x7f040001;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarPopupTheme=0x7f040002;
    /**
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int actionBarSize=0x7f040003;
    /**
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarSplitStyle=0x7f040004;
    /**
     * Reference to a style for the Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarStyle=0x7f040005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabBarStyle=0x7f040006;
    /**
     * Default style for tabs within an action bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabStyle=0x7f040007;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTabTextStyle=0x7f040008;
    /**
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarTheme=0x7f040009;
    /**
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionBarWidgetTheme=0x7f04000a;
    /**
     * Default action button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionButtonStyle=0x7f04000b;
    /**
     * Default ActionBar dropdown style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionDropDownStyle=0x7f04000c;
    /**
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionLayout=0x7f04000d;
    /**
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionMenuTextAppearance=0x7f04000e;
    /**
     * Color for text that appears within action menu items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int actionMenuTextColor=0x7f04000f;
    /**
     * Background drawable to use for action mode UI
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeBackground=0x7f040010;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseButtonStyle=0x7f040011;
    /**
     * Drawable to use for the close action mode button
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCloseDrawable=0x7f040012;
    /**
     * Drawable to use for the Copy action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCopyDrawable=0x7f040013;
    /**
     * Drawable to use for the Cut action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeCutDrawable=0x7f040014;
    /**
     * Drawable to use for the Find action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeFindDrawable=0x7f040015;
    /**
     * Drawable to use for the Paste action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePasteDrawable=0x7f040016;
    /**
     * PopupWindow style to use for action modes when showing as a window overlay.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModePopupWindowStyle=0x7f040017;
    /**
     * Drawable to use for the Select all action button in Contextual Action Bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSelectAllDrawable=0x7f040018;
    /**
     * Drawable to use for the Share action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeShareDrawable=0x7f040019;
    /**
     * Background drawable to use for action mode UI in the lower split bar
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeSplitBackground=0x7f04001a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeStyle=0x7f04001b;
    /**
     * Drawable to use for the Web Search action button in WebView selection action modes
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionModeWebSearchDrawable=0x7f04001c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowButtonStyle=0x7f04001d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int actionOverflowMenuStyle=0x7f04001e;
    /**
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionProviderClass=0x7f04001f;
    /**
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int actionViewClass=0x7f040020;
    /**
     * Default ActivityChooserView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int activityChooserViewStyle=0x7f040021;
    /**
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int adjustable=0x7f040022;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogButtonGroupStyle=0x7f040023;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alertDialogCenterButtons=0x7f040024;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogStyle=0x7f040025;
    /**
     * Theme to use for alert dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int alertDialogTheme=0x7f040026;
    /**
     * When set to alignMargins, causes alignment to take place between the outer
     * boundary of a view, as defined by its margins. When set to alignBounds,
     * causes alignment to take place between the edges of the view.
     * The default is alignMargins.
     * See {@link android.widget.GridLayout#setAlignmentMode(int)}.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alignBounds</td><td>0</td><td>Align the bounds of the children.
     * See {@link android.widget.GridLayout#ALIGN_BOUNDS}.</td></tr>
     * <tr><td>alignMargins</td><td>1</td><td>Align the margins of the children.
     * See {@link android.widget.GridLayout#ALIGN_MARGINS}.</td></tr>
     * </table>
     */
    public static final int alignmentMode=0x7f040027;
    /**
     * Whether the preference allows displaying divider on top
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAbove=0x7f040028;
    /**
     * Whether a divider is allowed to draw after the last item
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerAfterLastItem=0x7f040029;
    /**
     * Whether the preference allows displaying divider below it
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowDividerBelow=0x7f04002a;
    /**
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int allowStacking=0x7f04002b;
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f04002c;
    /**
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int alphabeticModifiers=0x7f04002d;
    /**
     * The length of the arrow head when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowHeadLength=0x7f04002e;
    /**
     * The length of the shaft when formed to make an arrow
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int arrowShaftLength=0x7f04002f;
    /**
     * Default AutoCompleteTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoCompleteTextViewStyle=0x7f040030;
    /**
     * The maximum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMaxTextSize=0x7f040031;
    /**
     * The minimum text size constraint to be used when auto-sizing text.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeMinTextSize=0x7f040032;
    /**
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int autoSizePresetSizes=0x7f040033;
    /**
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int autoSizeStepGranularity=0x7f040034;
    /**
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     */
    public static final int autoSizeTextType=0x7f040035;
    /**
     * Specifies a background drawable for the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int background=0x7f040036;
    /**
     * Specifies a background drawable for the bottom component of a split action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundSplit=0x7f040037;
    /**
     * Specifies a background drawable for a second stacked row of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundStacked=0x7f040038;
    /**
     * Tint to apply to the background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int backgroundTint=0x7f040039;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int backgroundTintMode=0x7f04003a;
    /**
     * The length of the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f04003b;
    /**
     * Whether the FAB should automatically hide when there is no space for it.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_autoHide=0x7f04003c;
    /**
     * Whether this bottom sheet can be hidden by dragging it further downwards
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_hideable=0x7f04003d;
    /**
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int behavior_overlapTop=0x7f04003e;
    /**
     * The height of the bottom sheet when it is collapsed.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     */
    public static final int behavior_peekHeight=0x7f04003f;
    /**
     * Skip the collapsed state once expanded; no effect unless it is hideable
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int behavior_skipCollapsed=0x7f040040;
    /**
     * The width of the border around the FAB.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int borderWidth=0x7f040041;
    /**
     * Style for buttons without an explicit border, often used in groups.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int borderlessButtonStyle=0x7f040042;
    /**
     * Theme to use for modal bottom sheet dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetDialogTheme=0x7f040043;
    /**
     * Style to use for modal bottom sheets in this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int bottomSheetStyle=0x7f040044;
    /**
     * Style for buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarButtonStyle=0x7f040045;
    /**
     * Style for the "negative" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNegativeButtonStyle=0x7f040046;
    /**
     * Style for the "neutral" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarNeutralButtonStyle=0x7f040047;
    /**
     * Style for the "positive" buttons within button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarPositiveButtonStyle=0x7f040048;
    /**
     * Style for button bars
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonBarStyle=0x7f040049;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int buttonGravity=0x7f04004a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonPanelSideLayout=0x7f04004b;
    /**
     * Normal Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyle=0x7f04004c;
    /**
     * Small Button style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int buttonStyleSmall=0x7f04004d;
    /**
     * Tint to apply to the button drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int buttonTint=0x7f04004e;
    /**
     * Blending mode used to apply the button tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int buttonTintMode=0x7f04004f;
    /**
     * The center x-coordinate of the circle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int centerX=0x7f040050;
    /**
     * The center y-coordinate of the circle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int centerY=0x7f040051;
    /**
     * Default style for CheckBoxPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkBoxPreferenceStyle=0x7f040052;
    /**
     * Default Checkbox style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkboxStyle=0x7f040053;
    /**
     * Default CheckedTextView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int checkedTextViewStyle=0x7f040054;
    /**
     * Close button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeIcon=0x7f040055;
    /**
     * Specifies a layout to use for the "close" item at the starting edge.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int closeItemLayout=0x7f040056;
    /**
     * Text to set as the content description for the collapse button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int collapseContentDescription=0x7f040057;
    /**
     * Icon drawable to use for the collapse button.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapseIcon=0x7f040058;
    /**
     * Specifies how the title should be positioned when collapsed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int collapsedTitleGravity=0x7f040059;
    /**
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int collapsedTitleTextAppearance=0x7f04005a;
    /**
     * The drawing color for the bars
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int color=0x7f04005b;
    /**
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorAccent=0x7f04005c;
    /**
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorBackgroundFloating=0x7f04005d;
    /**
     * The color applied to framework buttons in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorButtonNormal=0x7f04005e;
    /**
     * The color applied to framework controls in their activated (ex. checked) state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlActivated=0x7f04005f;
    /**
     * The color applied to framework control highlights (ex. ripples, list selectors).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlHighlight=0x7f040060;
    /**
     * The color applied to framework controls in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorControlNormal=0x7f040061;
    /**
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorError=0x7f040062;
    /**
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimary=0x7f040063;
    /**
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorPrimaryDark=0x7f040064;
    /**
     * The color applied to framework switch thumbs in their normal state.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int colorSwitchThumbNormal=0x7f040065;
    /**
     * The maximum number of columns to create when automatically positioning children.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int columnCount=0x7f040066;
    /**
     * When set to true, forces column boundaries to appear in the same order
     * as column indices.
     * The default is true.
     * See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int columnOrderPreserved=0x7f040067;
    /**
     * Commit icon shown in the query suggestion row
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int commitIcon=0x7f040068;
    /**
     * The content description associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int contentDescription=0x7f040069;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEnd=0x7f04006a;
    /**
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetEndWithActions=0x7f04006b;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetLeft=0x7f04006c;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetRight=0x7f04006d;
    /**
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStart=0x7f04006e;
    /**
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int contentInsetStartWithNavigation=0x7f04006f;
    /**
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int contentScrim=0x7f040070;
    /**
     * The background used by framework controls.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int controlBackground=0x7f040071;
    /**
     * Whether the layout is laid out as if the character counter will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int counterEnabled=0x7f040072;
    /**
     * The max length to display in the character counter.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int counterMaxLength=0x7f040073;
    /**
     * TextAppearance of the character counter when the text is longer than the max.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterOverflowTextAppearance=0x7f040074;
    /**
     * TextAppearance of the character counter.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int counterTextAppearance=0x7f040075;
    /**
     * Specifies a layout for custom navigation. Overrides navigationMode.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int customNavigationLayout=0x7f040076;
    /**
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int defaultQueryHint=0x7f040077;
    /**
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int defaultValue=0x7f040078;
    /**
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dependency=0x7f040079;
    /**
     * The icon for the dialog.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogIcon=0x7f04007a;
    /**
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogLayout=0x7f04007b;
    /**
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogMessage=0x7f04007c;
    /**
     * Default style for DialogPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogPreferenceStyle=0x7f04007d;
    /**
     * Preferred padding for dialog content.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dialogPreferredPadding=0x7f04007e;
    /**
     * Theme to use for dialogs spawned from this theme.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dialogTheme=0x7f04007f;
    /**
     * The title in the dialog.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dialogTitle=0x7f040080;
    /**
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int disableDependentsState=0x7f040081;
    /**
     * Options affecting how the action bar is displayed.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int displayOptions=0x7f040082;
    /**
     * Specifies the drawable used for item dividers.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int divider=0x7f040083;
    /**
     * A drawable that may be used as a horizontal divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerHorizontal=0x7f040084;
    /**
     * Size of padding on either end of a divider.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dividerPadding=0x7f040085;
    /**
     * A drawable that may be used as a vertical divider between visual elements.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dividerVertical=0x7f040086;
    /**
     * The total size of the drawable
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int drawableSize=0x7f040087;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerArrowStyle=0x7f040088;
    /**
     * ListPopupWindow compatibility
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropDownListViewStyle=0x7f040089;
    /**
     * The preferred item height for dropdown lists.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int dropdownListPreferredItemHeight=0x7f04008a;
    /**
     * Default style for DropDownPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int dropdownPreferenceStyle=0x7f04008b;
    /**
     * EditText background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextBackground=0x7f04008c;
    /**
     * EditText text foreground color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int editTextColor=0x7f04008d;
    /**
     * Default style for EditTextPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextPreferenceStyle=0x7f04008e;
    /**
     * Default EditText style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int editTextStyle=0x7f04008f;
    /**
     * Elevation for the action bar itself
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f040090;
    /**
     * Whether the Preference is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enabled=0x7f040091;
    /**
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entries=0x7f040092;
    /**
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int entryValues=0x7f040093;
    /**
     * Whether the layout is laid out as if an error will be displayed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int errorEnabled=0x7f040094;
    /**
     * TextAppearance of any error message displayed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int errorTextAppearance=0x7f040095;
    /**
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandActivityOverflowButtonDrawable=0x7f040096;
    /**
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int expanded=0x7f040097;
    /**
     * Specifies how the title should be positioned when expanded.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int expandedTitleGravity=0x7f040098;
    /**
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMargin=0x7f040099;
    /**
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginBottom=0x7f04009a;
    /**
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginEnd=0x7f04009b;
    /**
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginStart=0x7f04009c;
    /**
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int expandedTitleMarginTop=0x7f04009d;
    /**
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int expandedTitleTextAppearance=0x7f04009e;
    /**
     * Size for the FAB.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     */
    public static final int fabSize=0x7f04009f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int fastScrollEnabled=0x7f0400a0;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalThumbDrawable=0x7f0400a1;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollHorizontalTrackDrawable=0x7f0400a2;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalThumbDrawable=0x7f0400a3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fastScrollVerticalTrackDrawable=0x7f0400a4;
    /**
     * The ARGB fill color of the circle.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int fillColor=0x7f0400a5;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f0400a6;
    /**
     * The attribute for the font family.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontFamily=0x7f0400a7;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f0400a8;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f0400a9;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f0400aa;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f0400ab;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f0400ac;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f0400ad;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f0400ae;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f0400af;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int foregroundInsidePadding=0x7f0400b0;
    /**
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fragment=0x7f0400b1;
    /**
     * The max gap between the bars when they are parallel to each other
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int gapBetweenBars=0x7f0400b2;
    /**
     * Go button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int goIcon=0x7f0400b3;
    /**
     * Layout resource to inflate as the header
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int headerLayout=0x7f0400b4;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int height=0x7f0400b5;
    /**
     * Set true to hide the action bar on a vertical nested scroll of content.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hideOnContentScroll=0x7f0400b6;
    /**
     * Whether to animate hint state changes.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintAnimationEnabled=0x7f0400b7;
    /**
     * Whether the layout's floating label functionality is enabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int hintEnabled=0x7f0400b8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int hintTextAppearance=0x7f0400b9;
    /**
     * Specifies a drawable to use for the 'home as up' indicator.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeAsUpIndicator=0x7f0400ba;
    /**
     * Specifies a layout to use for the "home" section of the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int homeLayout=0x7f0400bb;
    /**
     * Specifies the drawable used for the application icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f0400bc;
    /**
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconSpaceReserved=0x7f0400bd;
    /**
     * Tint to apply to the icon.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int iconTint=0x7f0400be;
    /**
     * Blending mode used to apply the icon tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int iconTintMode=0x7f0400bf;
    /**
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int iconifiedByDefault=0x7f0400c0;
    /**
     * ImageButton background drawable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int imageButtonStyle=0x7f0400c1;
    /**
     * Specifies a style resource to use for an indeterminate progress spinner.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int indeterminateProgressStyle=0x7f0400c2;
    /**
     * The maximal number of items initially shown in the activity list.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int initialActivityCount=0x7f0400c3;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int insetForeground=0x7f0400c4;
    /**
     * Specifies whether the theme is light, otherwise it is dark.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int isLightTheme=0x7f0400c5;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemBackground=0x7f0400c6;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemIconTint=0x7f0400c7;
    /**
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int itemPadding=0x7f0400c8;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int itemTextAppearance=0x7f0400c9;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int itemTextColor=0x7f0400ca;
    /**
     * The key to store the Preference value.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f0400cb;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f0400cc;
    /**
     * The layout to use for the search view.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout=0x7f0400cd;
    /**
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extend android.support.v7.widget.RecyclerView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package name (android.support.v7.widget) is prefixed.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layoutManager=0x7f0400ce;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f0400cf;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f0400d0;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_aspectRatio=0x7f0400d1;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f0400d2;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     */
    public static final int layout_collapseMode=0x7f0400d3;
    /**
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_collapseParallaxMultiplier=0x7f0400d4;
    /**
     * The column boundary delimiting the left of the group of cells
     * occupied by this view.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_column=0x7f0400d5;
    /**
     * The column span: the difference between the right and left
     * boundaries delimiting the group of cells occupied by this view.
     * The default is one.
     * See {@link android.widget.GridLayout.Spec}.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_columnSpan=0x7f0400d6;
    /**
     * The relative proportion of horizontal space that should be allocated to this view
     * during excess space distribution.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_columnWeight=0x7f0400d7;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>3</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f0400d8;
    /**
     * Gravity specifies how a component should be placed in its group of cells.
     * The default is LEFT | BASELINE.
     * See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_gravity=0x7f0400d9;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_heightPercent=0x7f0400da;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>3</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f0400db;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f0400dc;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginBottomPercent=0x7f0400dd;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginEndPercent=0x7f0400de;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginLeftPercent=0x7f0400df;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginPercent=0x7f0400e0;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginRightPercent=0x7f0400e1;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginStartPercent=0x7f0400e2;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginTopPercent=0x7f0400e3;
    /**
     * The row boundary delimiting the top of the group of cells
     * occupied by this view.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_row=0x7f0400e4;
    /**
     * The row span: the difference between the top and bottom
     * boundaries delimiting the group of cells occupied by this view.
     * The default is one.
     * See {@link android.widget.GridLayout.Spec}.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_rowSpan=0x7f0400e5;
    /**
     * The relative proportion of vertical space that should be allocated to this view
     * during excess space distribution.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int layout_rowWeight=0x7f0400e6;
    /**
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * </table>
     */
    public static final int layout_scrollFlags=0x7f0400e7;
    /**
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_scrollInterpolator=0x7f0400e8;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_widthPercent=0x7f0400e9;
    /**
     * Drawable used as a background for selected list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listChoiceBackgroundIndicator=0x7f0400ea;
    /**
     * The list divider used in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listDividerAlertDialog=0x7f0400eb;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listItemLayout=0x7f0400ec;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listLayout=0x7f0400ed;
    /**
     * Default menu-style ListView style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listMenuViewStyle=0x7f0400ee;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int listPopupWindowStyle=0x7f0400ef;
    /**
     * The preferred list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeight=0x7f0400f0;
    /**
     * A larger, more robust list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightLarge=0x7f0400f1;
    /**
     * A smaller, sleeker list item height.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemHeightSmall=0x7f0400f2;
    /**
     * The preferred padding along the left edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingLeft=0x7f0400f3;
    /**
     * The preferred padding along the right edge of list items.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int listPreferredItemPaddingRight=0x7f0400f4;
    /**
     * Specifies the drawable used for the application logo.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int logo=0x7f0400f5;
    /**
     * A content description string to describe the appearance of the
     * associated logo image.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int logoDescription=0x7f0400f6;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxActionInlineWidth=0x7f0400f7;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxButtonHeight=0x7f0400f8;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxHeight=0x7f0400f9;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxWidth=0x7f0400fa;
    /**
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int measureWithLargestChild=0x7f0400fb;
    /**
     * The menu resource to inflate and populate items from.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int menu=0x7f0400fc;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int min=0x7f0400fd;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int multiChoiceItemLayout=0x7f0400fe;
    /**
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int navigationContentDescription=0x7f0400ff;
    /**
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int navigationIcon=0x7f040100;
    /**
     * The type of navigation to use.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     */
    public static final int navigationMode=0x7f040101;
    /**
     * The negative button text for the dialog. Set to @null to hide the negative button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int negativeButtonText=0x7f040102;
    /**
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     */
    public static final int numericModifiers=0x7f040103;
    /**
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int order=0x7f040104;
    /**
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int orderingFromXml=0x7f040105;
    /**
     * The orientation property is not used during layout. It is only used to
     * allocate row and column parameters when they are not specified by its children's
     * layout parameters. GridLayout works like LinearLayout in this case;
     * putting all the components either in a single row or in a single column -
     * depending on the value of this flag. In the horizontal case, a columnCount
     * property may be additionally supplied to force new rows to be created when a
     * row is full. The rowCount attribute may be used similarly in the vertical case.
     * The default is horizontal.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td>Defines an horizontal widget.</td></tr>
     * <tr><td>vertical</td><td>1</td><td>Defines a vertical widget.</td></tr>
     * </table>
     */
    public static final int orientation=0x7f040106;
    /**
     * Whether the popup window should overlap its anchor view.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int overlapAnchor=0x7f040107;
    /**
     * Bottom padding to use when no buttons are present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingBottomNoButtons=0x7f040108;
    /**
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingEnd=0x7f040109;
    /**
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingStart=0x7f04010a;
    /**
     * Top padding to use when no title is present.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int paddingTopNoTitle=0x7f04010b;
    /**
     * The background of a panel when it is inset from the left and right edges of the screen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelBackground=0x7f04010c;
    /**
     * Default Panel Menu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int panelMenuListTheme=0x7f04010d;
    /**
     * Default Panel Menu width.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int panelMenuListWidth=0x7f04010e;
    /**
     * Text to set as the content description for the password input visibility toggle.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int passwordToggleContentDescription=0x7f04010f;
    /**
     * Drawable to use as the password input visibility toggle icon.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int passwordToggleDrawable=0x7f040110;
    /**
     * Whether the view will display a toggle when the EditText has a password.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int passwordToggleEnabled=0x7f040111;
    /**
     * Icon to use for the password input visibility toggle
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int passwordToggleTint=0x7f040112;
    /**
     * Blending mode used to apply the background tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int passwordToggleTintMode=0x7f040113;
    /**
     * Whether the Preference stores its value to the shared preferences.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int persistent=0x7f040114;
    /**
     * Default PopupMenu style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupMenuStyle=0x7f040115;
    /**
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupTheme=0x7f040116;
    /**
     * Default PopupWindow style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int popupWindowStyle=0x7f040117;
    /**
     * The positive button text for the dialog. Set to @null to hide the positive button.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int positiveButtonText=0x7f040118;
    /**
     * Default style for the PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceActivityStyle=0x7f040119;
    /**
     * Default style for PreferenceCategory.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceCategoryStyle=0x7f04011a;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentCompatStyle=0x7f04011b;
    /**
     * Preference fragment list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentListStyle=0x7f04011c;
    /**
     * Preference fragment padding side
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int preferenceFragmentPaddingSide=0x7f04011d;
    /**
     * Default style for Headers pane in PreferenceActivity.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceFragmentStyle=0x7f04011e;
    /**
     * Preference headers panel style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceHeaderPanelStyle=0x7f04011f;
    /**
     * Default style for informational Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceInformationStyle=0x7f040120;
    /**
     * The preference layout that has the child/tabbed effect.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceLayoutChild=0x7f040121;
    /**
     * Preference list style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceListStyle=0x7f040122;
    /**
     * Preference panel style
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferencePanelStyle=0x7f040123;
    /**
     * Default style for PreferenceScreen.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceScreenStyle=0x7f040124;
    /**
     * Default style for Preference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceStyle=0x7f040125;
    /**
     * Theme for inflating Preference objects
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int preferenceTheme=0x7f040126;
    /**
     * Whether space should be reserved in layout when an icon is missing.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int preserveIconSpacing=0x7f040127;
    /**
     * TranslationZ value for the FAB when pressed
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pressedTranslationZ=0x7f040128;
    /**
     * Specifies the horizontal padding on either end for an embedded progress bar.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int progressBarPadding=0x7f040129;
    /**
     * Specifies a style resource to use for an embedded progress bar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int progressBarStyle=0x7f04012a;
    /**
     * Background for the section containing the search query
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryBackground=0x7f04012b;
    /**
     * An optional user-defined query hint string to be displayed in the empty query field.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int queryHint=0x7f04012c;
    /**
     * Default RadioButton style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int radioButtonStyle=0x7f04012d;
    /**
     * The radius of the circle.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int radius=0x7f04012e;
    /**
     * Default RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyle=0x7f04012f;
    /**
     * Indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleIndicator=0x7f040130;
    /**
     * Small indicator RatingBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ratingBarStyleSmall=0x7f040131;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int reverseLayout=0x7f040132;
    /**
     * Default style for RingtonePreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int ringtonePreferenceStyle=0x7f040133;
    /**
     * Ripple color for the FAB.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rippleColor=0x7f040134;
    /**
     * The maximum number of rows to create when automatically positioning children.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int rowCount=0x7f040135;
    /**
     * When set to true, forces row boundaries to appear in the same order
     * as row indices.
     * The default is true.
     * See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int rowOrderPreserved=0x7f040136;
    /**
     * Specifies the duration used for scrim visibility animations.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int scrimAnimationDuration=0x7f040137;
    /**
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int scrimVisibleHeightTrigger=0x7f040138;
    /**
     * Search icon displayed as a text field hint
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchHintIcon=0x7f040139;
    /**
     * Search icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchIcon=0x7f04013a;
    /**
     * Style for the search query widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int searchViewStyle=0x7f04013b;
    /**
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int seekBarIncrement=0x7f04013c;
    /**
     * Default style for seekbar preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarPreferenceStyle=0x7f04013d;
    /**
     * Default SeekBar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int seekBarStyle=0x7f04013e;
    /**
     * Whether the Preference is selectable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectable=0x7f04013f;
    /**
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackground=0x7f040140;
    /**
     * Background drawable for borderless standalone items that need focus/pressed states.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int selectableItemBackgroundBorderless=0x7f040141;
    /**
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldDisableView=0x7f040142;
    /**
     * How this item should display in the Action Bar, if present.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     */
    public static final int showAsAction=0x7f040143;
    /**
     * Setting for which dividers to show.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int showDividers=0x7f040144;
    /**
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is VISIBLE.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showSeekBarValue=0x7f040145;
    /**
     * Whether to draw on/off text.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showText=0x7f040146;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int showTitle=0x7f040147;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int singleChoiceItemLayout=0x7f040148;
    /**
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int singleLineTitle=0x7f040149;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int spanCount=0x7f04014a;
    /**
     * Whether bars should rotate or not during transition
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int spinBars=0x7f04014b;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerDropDownItemStyle=0x7f04014c;
    /**
     * Default Spinner style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int spinnerStyle=0x7f04014d;
    /**
     * Whether to split the track and leave a gap for the thumb drawable.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int splitTrack=0x7f04014e;
    /**
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int srcCompat=0x7f04014f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stackFromEnd=0x7f040150;
    /**
     * State identifier indicating the popup will be above the anchor.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_above_anchor=0x7f040151;
    /**
     * State value for {@link android.support.design.widget.AppBarLayout} set when the view
     * has been collapsed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_collapsed=0x7f040152;
    /**
     * State value for {@link android.support.design.widget.AppBarLayout} set when the view
     * has children which are capable of being collapsed.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int state_collapsible=0x7f040153;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int statusBarBackground=0x7f040154;
    /**
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop with the correct setup.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarScrim=0x7f040155;
    /**
     * Drawable for the arrow icon indicating a particular item is a submenu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subMenuArrow=0x7f040156;
    /**
     * Background for the section containing the action (e.g. voice search)
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int submitBackground=0x7f040157;
    /**
     * Specifies subtitle text used for navigationMode="normal"
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int subtitle=0x7f040158;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextAppearance=0x7f040159;
    /**
     * A color to apply to the subtitle string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int subtitleTextColor=0x7f04015a;
    /**
     * Specifies a style to use for subtitle text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int subtitleTextStyle=0x7f04015b;
    /**
     * Layout for query suggestion rows
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int suggestionRowLayout=0x7f04015c;
    /**
     * The summary for the Preference in a PreferenceActivity screen.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summary=0x7f04015d;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOff=0x7f04015e;
    /**
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOn=0x7f04015f;
    /**
     * Minimum width for the switch component
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchMinWidth=0x7f040160;
    /**
     * Minimum space between the switch and caption text
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int switchPadding=0x7f040161;
    /**
     * Default style for switch compat preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceCompatStyle=0x7f040162;
    /**
     * Default style for switch preferences.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchPreferenceStyle=0x7f040163;
    /**
     * Default style for the Switch widget.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchStyle=0x7f040164;
    /**
     * TextAppearance style for text displayed on the switch thumb.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int switchTextAppearance=0x7f040165;
    /**
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOff=0x7f040166;
    /**
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int switchTextOn=0x7f040167;
    /**
     * Reference to a background to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabBackground=0x7f040168;
    /**
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabContentStart=0x7f040169;
    /**
     * Gravity constant for tabs.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabGravity=0x7f04016a;
    /**
     * Color of the indicator used to show the currently selected tab.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabIndicatorColor=0x7f04016b;
    /**
     * Height of the indicator used to show the currently selected tab.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabIndicatorHeight=0x7f04016c;
    /**
     * The maximum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMaxWidth=0x7f04016d;
    /**
     * The minimum width for tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabMinWidth=0x7f04016e;
    /**
     * The behavior mode for the Tabs in this layout
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int tabMode=0x7f04016f;
    /**
     * The preferred padding along all edges of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPadding=0x7f040170;
    /**
     * The preferred padding along the bottom edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingBottom=0x7f040171;
    /**
     * The preferred padding along the end edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingEnd=0x7f040172;
    /**
     * The preferred padding along the start edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingStart=0x7f040173;
    /**
     * The preferred padding along the top edge of tabs.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int tabPaddingTop=0x7f040174;
    /**
     * The text color to be applied to the currently selected tab.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabSelectedTextColor=0x7f040175;
    /**
     * A reference to a TextAppearance style to be applied to tabs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tabTextAppearance=0x7f040176;
    /**
     * The default text color to be applied to tabs.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tabTextColor=0x7f040177;
    /**
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int textAllCaps=0x7f040178;
    /**
     * Text color, typeface, size, and style for the text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceLargePopupMenu=0x7f040179;
    /**
     * The preferred TextAppearance for the primary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItem=0x7f04017a;
    /**
     * The preferred TextAppearance for the secondary text of list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSecondary=0x7f04017b;
    /**
     * The preferred TextAppearance for the primary text of small list items.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceListItemSmall=0x7f04017c;
    /**
     * Text color, typeface, size, and style for header text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearancePopupMenuHeader=0x7f04017d;
    /**
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultSubtitle=0x7f04017e;
    /**
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSearchResultTitle=0x7f04017f;
    /**
     * Text color, typeface, size, and style for small text inside of a popup menu.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int textAppearanceSmallPopupMenu=0x7f040180;
    /**
     * Color of list item text in alert dialogs.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorAlertDialogListItem=0x7f040181;
    /**
     * {@deprecated Use colorError}
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    @Deprecated
    public static final int textColorError=0x7f040182;
    /**
     * Text color for urls in search suggestions, used by things like global search
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColorSearchUrl=0x7f040183;
    /**
     * Deprecated.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int theme=0x7f040184;
    /**
     * The thickness (stroke size) for the bar paint
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thickness=0x7f040185;
    /**
     * Amount of padding on either side of text within the switch thumb.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int thumbTextPadding=0x7f040186;
    /**
     * Tint to apply to the thumb drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int thumbTint=0x7f040187;
    /**
     * Blending mode used to apply the thumb tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int thumbTintMode=0x7f040188;
    /**
     * Drawable displayed at each progress position on a seekbar.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tickMark=0x7f040189;
    /**
     * Tint to apply to the tick mark drawable.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tickMarkTint=0x7f04018a;
    /**
     * Blending mode used to apply the tick mark tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tickMarkTintMode=0x7f04018b;
    /**
     * Tint to apply to the image source.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tint=0x7f04018c;
    /**
     * Blending mode used to apply the image source tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int tintMode=0x7f04018d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f04018e;
    /**
     * Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int titleEnabled=0x7f04018f;
    /**
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMargin=0x7f040190;
    /**
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginBottom=0x7f040191;
    /**
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginEnd=0x7f040192;
    /**
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginStart=0x7f040193;
    /**
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int titleMarginTop=0x7f040194;
    /**
     * {@deprecated Use titleMargin}
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    @Deprecated
    public static final int titleMargins=0x7f040195;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextAppearance=0x7f040196;
    /**
     * A color to apply to the title string.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int titleTextColor=0x7f040197;
    /**
     * Specifies a style to use for title text.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int titleTextStyle=0x7f040198;
    /**
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarId=0x7f040199;
    /**
     * Default Toolar NavigationButtonStyle
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarNavigationButtonStyle=0x7f04019a;
    /**
     * Default Toolbar style.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int toolbarStyle=0x7f04019b;
    /**
     * Foreground color to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int tooltipForegroundColor=0x7f04019c;
    /**
     * Background to use for tooltips
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int tooltipFrameBackground=0x7f04019d;
    /**
     * The tooltip text associated with the item.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tooltipText=0x7f04019e;
    /**
     * Drawable to use as the "track" that the switch thumb slides within.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int track=0x7f04019f;
    /**
     * Tint to apply to the track.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int trackTint=0x7f0401a0;
    /**
     * Blending mode used to apply the track tint.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     */
    public static final int trackTintMode=0x7f0401a1;
    /**
     * Enable compat padding.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useCompatPadding=0x7f0401a2;
    /**
     * When set to true, tells GridLayout to use default margins when none are specified
     * in a view's layout parameters.
     * The default value is false.
     * See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int useDefaultMargins=0x7f0401a3;
    /**
     * Voice button icon
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int voiceIcon=0x7f0401a4;
    /**
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int widgetLayout=0x7f0401a5;
    /**
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBar=0x7f0401a6;
    /**
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionBarOverlay=0x7f0401a7;
    /**
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowActionModeOverlay=0x7f0401a8;
    /**
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMajor=0x7f0401a9;
    /**
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedHeightMinor=0x7f0401aa;
    /**
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMajor=0x7f0401ab;
    /**
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowFixedWidthMinor=0x7f0401ac;
    /**
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMajor=0x7f0401ad;
    /**
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int windowMinWidthMinor=0x7f0401ae;
    /**
     * Flag indicating whether there should be no title on this window.
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int windowNoTitle=0x7f0401af;
    /**
     * Default style for YesNoPreference.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int yesNoPreferenceStyle=0x7f0401b0;
  }
  public static final class bool {
    public static final int abc_action_bar_embed_tabs=0x7f050000;
    /**
     * Whether to allow vertically stacked button bars. This is disabled for
     * configurations with a small (e.g. less than 320dp) screen height.
     */
    public static final int abc_allow_stacked_button_bar=0x7f050001;
    /**
     * Whether action menu items should be displayed in ALLCAPS or not.
     * Defaults to true. If this is not appropriate for specific locales
     * it should be disabled in that locale's resources.
     */
    public static final int abc_config_actionMenuItemAllCaps=0x7f050002;
    public static final int abc_config_closeDialogWhenTouchOutside=0x7f050003;
    public static final int abc_config_showMenuShortcutsWhenKeyboardPresent=0x7f050004;
    public static final int rotateAlarmAlert=0x7f050005;
    public static final int showTabHorizontally=0x7f050006;
    public static final int showTabLabel=0x7f050007;
  }
  public static final class color {
    public static final int abc_background_cache_hint_selector_material_dark=0x7f060000;
    public static final int abc_background_cache_hint_selector_material_light=0x7f060001;
    public static final int abc_btn_colored_borderless_text_material=0x7f060002;
    public static final int abc_btn_colored_text_material=0x7f060003;
    public static final int abc_color_highlight_material=0x7f060004;
    public static final int abc_hint_foreground_material_dark=0x7f060005;
    public static final int abc_hint_foreground_material_light=0x7f060006;
    public static final int abc_input_method_navigation_guard=0x7f060007;
    public static final int abc_primary_text_disable_only_material_dark=0x7f060008;
    public static final int abc_primary_text_disable_only_material_light=0x7f060009;
    public static final int abc_primary_text_material_dark=0x7f06000a;
    public static final int abc_primary_text_material_light=0x7f06000b;
    public static final int abc_search_url_text=0x7f06000c;
    public static final int abc_search_url_text_normal=0x7f06000d;
    public static final int abc_search_url_text_pressed=0x7f06000e;
    public static final int abc_search_url_text_selected=0x7f06000f;
    public static final int abc_secondary_text_material_dark=0x7f060010;
    public static final int abc_secondary_text_material_light=0x7f060011;
    public static final int abc_tint_btn_checkable=0x7f060012;
    public static final int abc_tint_default=0x7f060013;
    public static final int abc_tint_edittext=0x7f060014;
    public static final int abc_tint_seek_thumb=0x7f060015;
    public static final int abc_tint_spinner=0x7f060016;
    public static final int abc_tint_switch_track=0x7f060017;
    public static final int accent_material_dark=0x7f060018;
    public static final int accent_material_light=0x7f060019;
    public static final int background_floating_material_dark=0x7f06001a;
    public static final int background_floating_material_light=0x7f06001b;
    public static final int background_material_dark=0x7f06001c;
    public static final int background_material_light=0x7f06001d;
    public static final int backspace_tint_color=0x7f06001e;
    public static final int black=0x7f06001f;
    public static final int black_54p=0x7f060020;
    public static final int black_87p=0x7f060021;
    /**
     * White 50%
     */
    public static final int bright_foreground_disabled_material_dark=0x7f060022;
    /**
     * Black 50%
     */
    public static final int bright_foreground_disabled_material_light=0x7f060023;
    public static final int bright_foreground_inverse_material_dark=0x7f060024;
    public static final int bright_foreground_inverse_material_light=0x7f060025;
    public static final int bright_foreground_material_dark=0x7f060026;
    public static final int bright_foreground_material_light=0x7f060027;
    public static final int button_material_dark=0x7f060028;
    public static final int button_material_light=0x7f060029;
    public static final int clock_gray=0x7f06002a;
    public static final int default_background=0x7f06002b;
    public static final int design_bottom_navigation_shadow_color=0x7f06002c;
    public static final int design_error=0x7f06002d;
    /**
     * Shadow color for the furthest pixels of a shadow
     */
    public static final int design_fab_shadow_end_color=0x7f06002e;
    /**
     * Shadow color for the middle pixels of a shadow
     */
    public static final int design_fab_shadow_mid_color=0x7f06002f;
    /**
     * Shadow color for the first pixels of a shadow
     */
    public static final int design_fab_shadow_start_color=0x7f060030;
    /**
     * Color for the bottom inner pixels in the stroke: 4% black (these are multiplied)
     */
    public static final int design_fab_stroke_end_inner_color=0x7f060031;
    /**
     * Color for the bottom outer pixels in the stroke: 6% black (these are multiplied)
     */
    public static final int design_fab_stroke_end_outer_color=0x7f060032;
    /**
     * Color for the top inner pixels in the stroke: 10% white (these are multiplied)
     */
    public static final int design_fab_stroke_top_inner_color=0x7f060033;
    /**
     * Color for the top outer pixels in the stroke: 18% white (these are multiplied)
     */
    public static final int design_fab_stroke_top_outer_color=0x7f060034;
    public static final int design_snackbar_background_color=0x7f060035;
    public static final int design_tint_password_toggle=0x7f060036;
    public static final int dim_foreground_disabled_material_dark=0x7f060037;
    public static final int dim_foreground_disabled_material_light=0x7f060038;
    public static final int dim_foreground_material_dark=0x7f060039;
    public static final int dim_foreground_material_light=0x7f06003a;
    public static final int error_color_material=0x7f06003b;
    public static final int foreground_material_dark=0x7f06003c;
    public static final int foreground_material_light=0x7f06003d;
    public static final int hairline=0x7f06003e;
    /**
     * TODO: This is 40% alpha on the default accent color.
     */
    public static final int highlighted_text_material_dark=0x7f06003f;
    /**
     * TODO: This is 40% alpha on the default accent color.
     */
    public static final int highlighted_text_material_light=0x7f060040;
    public static final int material_blue_grey_800=0x7f060041;
    public static final int material_blue_grey_900=0x7f060042;
    public static final int material_blue_grey_950=0x7f060043;
    public static final int material_deep_teal_200=0x7f060044;
    public static final int material_deep_teal_500=0x7f060045;
    public static final int material_grey_100=0x7f060046;
    public static final int material_grey_300=0x7f060047;
    public static final int material_grey_50=0x7f060048;
    public static final int material_grey_600=0x7f060049;
    public static final int material_grey_800=0x7f06004a;
    public static final int material_grey_850=0x7f06004b;
    public static final int material_grey_900=0x7f06004c;
    public static final int no_alarms=0x7f06004d;
    public static final int notification_action_color_filter=0x7f06004e;
    public static final int notification_icon_bg_color=0x7f06004f;
    /**
     * The color of the material notification background for media notifications when no custom
     * color is specified
     */
    public static final int notification_material_background_media_default_color=0x7f060050;
    /**
     * Fallback color for versions of the system where ?android:attr/colorAccent is not available
     */
    public static final int preference_fallback_accent_color=0x7f060051;
    public static final int primary_dark_material_dark=0x7f060052;
    public static final int primary_dark_material_light=0x7f060053;
    public static final int primary_material_dark=0x7f060054;
    public static final int primary_material_light=0x7f060055;
    /**
     * 100% white
     */
    public static final int primary_text_default_material_dark=0x7f060056;
    /**
     * 87% black
     */
    public static final int primary_text_default_material_light=0x7f060057;
    /**
     * 30% of default values
     */
    public static final int primary_text_disabled_material_dark=0x7f060058;
    /**
     * 26% of default values
     */
    public static final int primary_text_disabled_material_light=0x7f060059;
    /**
     * 20% white (foreground)
     */
    public static final int ripple_material_dark=0x7f06005a;
    /**
     * 12% black (foreground)
     */
    public static final int ripple_material_light=0x7f06005b;
    /**
     * 70% white
     */
    public static final int secondary_text_default_material_dark=0x7f06005c;
    /**
     * 54% black
     */
    public static final int secondary_text_default_material_light=0x7f06005d;
    public static final int secondary_text_disabled_material_dark=0x7f06005e;
    public static final int secondary_text_disabled_material_light=0x7f06005f;
    public static final int switch_thumb_disabled_material_dark=0x7f060060;
    public static final int switch_thumb_disabled_material_light=0x7f060061;
    public static final int switch_thumb_material_dark=0x7f060062;
    public static final int switch_thumb_material_light=0x7f060063;
    public static final int switch_thumb_normal_material_dark=0x7f060064;
    public static final int switch_thumb_normal_material_light=0x7f060065;
    public static final int tab_tint_color=0x7f060066;
    /**
     * Tooltip specific colors
     */
    public static final int tooltip_background_dark=0x7f060067;
    public static final int tooltip_background_light=0x7f060068;
    public static final int transparent=0x7f060069;
    public static final int white=0x7f06006a;
    public static final int white_08p=0x7f06006b;
    public static final int white_63p=0x7f06006c;
    /**
     * shadowColor for widget text
     */
    public static final int widget_shadow_color=0x7f06006d;
  }
  public static final class dimen {
    /**
     * Default content inset of an action bar.
     * Default content inset of an action bar.
     */
    public static final int abc_action_bar_content_inset_material=0x7f070000;
    /**
     * Default content inset of an action bar with navigation.
     * Default content inset of an action bar with navigation.
     */
    public static final int abc_action_bar_content_inset_with_nav=0x7f070001;
    /**
     * Default height of an action bar.
     * Default height of an action bar.
     * Default height of an action bar.
     */
    public static final int abc_action_bar_default_height_material=0x7f070002;
    /**
     * Default end padding of an action bar.
     * Default end padding of an action bar.
     */
    public static final int abc_action_bar_default_padding_end_material=0x7f070003;
    /**
     * Default start padding of an action bar.
     * Default start padding of an action bar.
     */
    public static final int abc_action_bar_default_padding_start_material=0x7f070004;
    public static final int abc_action_bar_elevation_material=0x7f070005;
    /**
     * Vertical padding around action bar icons.
     */
    public static final int abc_action_bar_icon_vertical_padding_material=0x7f070006;
    /**
     * Padding to add to the end of the overflow action button.
     */
    public static final int abc_action_bar_overflow_padding_end_material=0x7f070007;
    /**
     * Padding to add to the start of the overflow action button.
     */
    public static final int abc_action_bar_overflow_padding_start_material=0x7f070008;
    /**
     * Size of the indeterminate Progress Bar
     * Size of the indeterminate Progress Bar
     */
    public static final int abc_action_bar_progress_bar_size=0x7f070009;
    /**
     * Maximum height for a stacked tab bar as part of an action bar
     */
    public static final int abc_action_bar_stacked_max_height=0x7f07000a;
    /**
     * Maximum width for a stacked action bar tab. This prevents
     * action bar tabs from becoming too wide on a wide screen when only
     * a few are present.
     */
    public static final int abc_action_bar_stacked_tab_max_width=0x7f07000b;
    /**
     * Bottom margin for action bar subtitles
     */
    public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f07000c;
    /**
     * Top margin for action bar subtitles
     */
    public static final int abc_action_bar_subtitle_top_margin_material=0x7f07000d;
    public static final int abc_action_button_min_height_material=0x7f07000e;
    public static final int abc_action_button_min_width_material=0x7f07000f;
    public static final int abc_action_button_min_width_overflow_material=0x7f070010;
    /**
     * Dialog button bar height
     * Dialog button bar height
     */
    public static final int abc_alert_dialog_button_bar_height=0x7f070011;
    public static final int abc_button_inset_horizontal_material=0x7f070012;
    public static final int abc_button_inset_vertical_material=0x7f070013;
    public static final int abc_button_padding_horizontal_material=0x7f070014;
    /**
     * Default inner padding within buttons
     */
    public static final int abc_button_padding_vertical_material=0x7f070015;
    /**
     * Minimum "smallest width" of the display for cascading menus to be enabled.
     */
    public static final int abc_cascading_menus_min_smallest_width=0x7f070016;
    /**
     * The maximum width we would prefer dialogs to be.  0 if there is no
     * maximum (let them grow as large as the screen).  Actual values are
     * specified for -large and -xlarge configurations.
     * see comment in values/config.xml
     * see comment in values/config.xml
     */
    public static final int abc_config_prefDialogWidth=0x7f070017;
    /**
     * Default rounded corner for controls
     */
    public static final int abc_control_corner_material=0x7f070018;
    /**
     * Default insets (outer padding) around controls
     */
    public static final int abc_control_inset_material=0x7f070019;
    /**
     * Default inner padding within controls
     */
    public static final int abc_control_padding_material=0x7f07001a;
    /**
     * The platform's desired fixed height for a dialog along the major axis
     * (the screen is in portrait). This may be either a fraction or a dimension.
     */
    public static final int abc_dialog_fixed_height_major=0x7f07001b;
    /**
     * The platform's desired fixed height for a dialog along the minor axis
     * (the screen is in landscape). This may be either a fraction or a dimension.
     */
    public static final int abc_dialog_fixed_height_minor=0x7f07001c;
    /**
     * The platform's desired fixed width for a dialog along the major axis
     * (the screen is in landscape). This may be either a fraction or a dimension.
     */
    public static final int abc_dialog_fixed_width_major=0x7f07001d;
    /**
     * The platform's desired fixed width for a dialog along the minor axis
     * (the screen is in portrait). This may be either a fraction or a dimension.
     */
    public static final int abc_dialog_fixed_width_minor=0x7f07001e;
    public static final int abc_dialog_list_padding_bottom_no_buttons=0x7f07001f;
    public static final int abc_dialog_list_padding_top_no_title=0x7f070020;
    /**
     * The platform's desired minimum size for a dialog's width when it
     * is along the major axis (that is the screen is landscape).  This may
     * be either a fraction or a dimension.
     */
    public static final int abc_dialog_min_width_major=0x7f070021;
    /**
     * The platform's desired minimum size for a dialog's width when it
     * is along the minor axis (that is the screen is portrait).  This may
     * be either a fraction or a dimension.
     */
    public static final int abc_dialog_min_width_minor=0x7f070022;
    public static final int abc_dialog_padding_material=0x7f070023;
    public static final int abc_dialog_padding_top_material=0x7f070024;
    public static final int abc_dialog_title_divider_material=0x7f070025;
    public static final int abc_disabled_alpha_material_dark=0x7f070026;
    public static final int abc_disabled_alpha_material_light=0x7f070027;
    /**
     * Width of the icon in a dropdown list
     */
    public static final int abc_dropdownitem_icon_width=0x7f070028;
    /**
     * Text padding for dropdown items
     */
    public static final int abc_dropdownitem_text_padding_left=0x7f070029;
    public static final int abc_dropdownitem_text_padding_right=0x7f07002a;
    public static final int abc_edit_text_inset_bottom_material=0x7f07002b;
    public static final int abc_edit_text_inset_horizontal_material=0x7f07002c;
    public static final int abc_edit_text_inset_top_material=0x7f07002d;
    public static final int abc_floating_window_z=0x7f07002e;
    /**
     * Default padding for list items. This should match the action bar
     * content inset so that ListActivity items line up correctly.
     */
    public static final int abc_list_item_padding_horizontal_material=0x7f07002f;
    public static final int abc_panel_menu_list_width=0x7f070030;
    public static final int abc_progress_bar_height_material=0x7f070031;
    public static final int abc_search_view_preferred_height=0x7f070032;
    /**
     * Preferred width of the search view.
     */
    public static final int abc_search_view_preferred_width=0x7f070033;
    public static final int abc_seekbar_track_background_height_material=0x7f070034;
    public static final int abc_seekbar_track_progress_height_material=0x7f070035;
    /**
     * Dialog padding minus control padding, used to fix alignment.
     */
    public static final int abc_select_dialog_padding_start_material=0x7f070036;
    /**
     * Since SwitchCompat can use optical insets on v18+, reset the manual padding
     */
    public static final int abc_switch_padding=0x7f070037;
    public static final int abc_text_size_body_1_material=0x7f070038;
    public static final int abc_text_size_body_2_material=0x7f070039;
    public static final int abc_text_size_button_material=0x7f07003a;
    public static final int abc_text_size_caption_material=0x7f07003b;
    public static final int abc_text_size_display_1_material=0x7f07003c;
    public static final int abc_text_size_display_2_material=0x7f07003d;
    public static final int abc_text_size_display_3_material=0x7f07003e;
    public static final int abc_text_size_display_4_material=0x7f07003f;
    public static final int abc_text_size_headline_material=0x7f070040;
    public static final int abc_text_size_large_material=0x7f070041;
    public static final int abc_text_size_medium_material=0x7f070042;
    public static final int abc_text_size_menu_header_material=0x7f070043;
    public static final int abc_text_size_menu_material=0x7f070044;
    public static final int abc_text_size_small_material=0x7f070045;
    public static final int abc_text_size_subhead_material=0x7f070046;
    /**
     * Use the default subtitle sizes on tablets.
     * Default text size for action bar subtitle.
     */
    public static final int abc_text_size_subtitle_material_toolbar=0x7f070047;
    public static final int abc_text_size_title_material=0x7f070048;
    /**
     * Use the default title sizes on tablets.
     * Default text size for action bar title.
     */
    public static final int abc_text_size_title_material_toolbar=0x7f070049;
    public static final int alarm_clock_vertical_margin=0x7f07004a;
    /**
     * Dimens for drawable padding on Alarms tab
     */
    public static final int alarm_horizontal_padding=0x7f07004b;
    public static final int alarm_icon_padding=0x7f07004c;
    public static final int alarm_info_font_size=0x7f07004d;
    public static final int alarm_label_padding=0x7f07004e;
    public static final int alarm_label_size=0x7f07004f;
    public static final int alarm_lockscreen_alarm_horizontal_padding=0x7f070050;
    public static final int alarm_lockscreen_alarm_vertical_padding=0x7f070051;
    public static final int alarm_lockscreen_bottom_margin=0x7f070052;
    public static final int alarm_lockscreen_pulse_radius=0x7f070053;
    public static final int alarm_picker_dialog_horizontal_margin=0x7f070054;
    public static final int alarm_picker_dialog_vertical_margin=0x7f070055;
    public static final int alarm_picker_margin_bottom=0x7f070056;
    public static final int alarm_text_font_size=0x7f070057;
    /**
     * Size of margin for circles.
     */
    public static final int analog_clock_margin=0x7f070058;
    public static final int analog_clock_size=0x7f070059;
    public static final int backspace_icon_size=0x7f07005a;
    public static final int big_font_size=0x7f07005b;
    public static final int body_font_padding=0x7f07005c;
    /**
     * Analog clock size in the the screen saver
     */
    public static final int bottom_text_size=0x7f07005d;
    public static final int bottom_text_spacing_analog=0x7f07005e;
    public static final int bottom_text_spacing_analog_small=0x7f07005f;
    public static final int bottom_text_spacing_digital=0x7f070060;
    /**
     * Padding between checkbox and text.
     */
    public static final int checkbox_start_padding=0x7f070061;
    /**
     * Size of margin for circles.
     * Size of margin for circles.
     * Size of margin for circles.
     */
    public static final int circle_margin_top=0x7f070062;
    public static final int circletimer_circle_size=0x7f070063;
    public static final int circletimer_dot_size=0x7f070064;
    public static final int circletimer_marker_size=0x7f070065;
    public static final int cities_list_item_height=0x7f070066;
    /**
     * The fixed size of the font for the city name / day of week in the city widget.
     * The fixed size of the font for the city name / day of week in the city widget.
     */
    public static final int city_widget_name_font_size=0x7f070067;
    public static final int compat_button_inset_horizontal_material=0x7f070068;
    public static final int compat_button_inset_vertical_material=0x7f070069;
    public static final int compat_button_padding_horizontal_material=0x7f07006a;
    /**
     * Default inner padding within buttons
     */
    public static final int compat_button_padding_vertical_material=0x7f07006b;
    /**
     * Default rounded corner for controls
     */
    public static final int compat_control_corner_material=0x7f07006c;
    public static final int day_button_font_size=0x7f07006d;
    /**
     * The default gap between components in a layout.
     */
    public static final int default_gap=0x7f07006e;
    public static final int design_appbar_elevation=0x7f07006f;
    public static final int design_bottom_navigation_active_item_max_width=0x7f070070;
    public static final int design_bottom_navigation_active_text_size=0x7f070071;
    public static final int design_bottom_navigation_elevation=0x7f070072;
    public static final int design_bottom_navigation_height=0x7f070073;
    public static final int design_bottom_navigation_item_max_width=0x7f070074;
    public static final int design_bottom_navigation_item_min_width=0x7f070075;
    public static final int design_bottom_navigation_margin=0x7f070076;
    public static final int design_bottom_navigation_shadow_height=0x7f070077;
    public static final int design_bottom_navigation_text_size=0x7f070078;
    public static final int design_bottom_sheet_modal_elevation=0x7f070079;
    public static final int design_bottom_sheet_peek_height_min=0x7f07007a;
    public static final int design_fab_border_width=0x7f07007b;
    public static final int design_fab_elevation=0x7f07007c;
    public static final int design_fab_image_size=0x7f07007d;
    public static final int design_fab_size_mini=0x7f07007e;
    public static final int design_fab_size_normal=0x7f07007f;
    public static final int design_fab_translation_z_pressed=0x7f070080;
    public static final int design_navigation_elevation=0x7f070081;
    public static final int design_navigation_icon_padding=0x7f070082;
    public static final int design_navigation_icon_size=0x7f070083;
    /**
     * 5 * standard increment (56dp)
     * 5 * standard increment (64dp on tablets)
     */
    public static final int design_navigation_max_width=0x7f070084;
    public static final int design_navigation_padding_bottom=0x7f070085;
    public static final int design_navigation_separator_vertical_padding=0x7f070086;
    /**
     * The maximum width for a Snackbar's inline action. If the view is width than this then
     * the Snackbar will change to vertical stacking
     */
    public static final int design_snackbar_action_inline_max_width=0x7f070087;
    public static final int design_snackbar_background_corner_radius=0x7f070088;
    public static final int design_snackbar_elevation=0x7f070089;
    /**
     * Extra spacing between the action and message views
     */
    public static final int design_snackbar_extra_spacing_horizontal=0x7f07008a;
    public static final int design_snackbar_max_width=0x7f07008b;
    public static final int design_snackbar_min_width=0x7f07008c;
    public static final int design_snackbar_padding_horizontal=0x7f07008d;
    public static final int design_snackbar_padding_vertical=0x7f07008e;
    public static final int design_snackbar_padding_vertical_2lines=0x7f07008f;
    public static final int design_snackbar_text_size=0x7f070090;
    public static final int design_tab_max_width=0x7f070091;
    public static final int design_tab_scrollable_min_width=0x7f070092;
    public static final int design_tab_text_size=0x7f070093;
    public static final int design_tab_text_size_2line=0x7f070094;
    public static final int digital_widget_city_12_medium_font_size=0x7f070095;
    public static final int digital_widget_city_24_medium_font_size=0x7f070096;
    public static final int digital_widget_city_margin_bottom=0x7f070097;
    public static final int disabled_alpha_material_dark=0x7f070098;
    public static final int disabled_alpha_material_light=0x7f070099;
    public static final int fab_alarm_size=0x7f07009a;
    /**
     * Kitkat and later floating action button elevation.
     */
    public static final int fab_elevation=0x7f07009b;
    /**
     * KitKat floating action button container height; see -v21 folder for newer platforms.
     * Lollipop and later mini floating action button container height.
     * Lollipop and later normal floating action button container height.
     * Lollipop and later normal floating action button container height.
     */
    public static final int fab_height=0x7f07009c;
    /**
     * KitKat floating action button margin; see -v21 folder for newer platforms.
     * Lollipop and later mini floating action button margin.
     * Lollipop and later normal floating action button margin.
     * Lollipop and later normal floating action button margin.
     */
    public static final int fab_margin=0x7f07009d;
    public static final int fastscroll_default_thickness=0x7f07009e;
    public static final int fastscroll_margin=0x7f07009f;
    public static final int fastscroll_minimum_range=0x7f0700a0;
    /**
     * Divider height
     */
    public static final int hairline_height=0x7f0700a1;
    /**
     * Divider side padding
     */
    public static final int hairline_side_padding=0x7f0700a2;
    public static final int header_font_size=0x7f0700a3;
    public static final int highlight_alpha_material_colored=0x7f0700a4;
    public static final int highlight_alpha_material_dark=0x7f0700a5;
    public static final int highlight_alpha_material_light=0x7f0700a6;
    public static final int hint_alpha_material_dark=0x7f0700a7;
    public static final int hint_alpha_material_light=0x7f0700a8;
    public static final int hint_pressed_alpha_material_dark=0x7f0700a9;
    public static final int hint_pressed_alpha_material_light=0x7f0700aa;
    /**
     * Dimens for icon padding on Alarms tab
     */
    public static final int icon_margin=0x7f0700ab;
    /**
     * The max amount of scroll ItemTouchHelper will trigger if dragged view is out of
     * RecyclerView's bounds.
     */
    public static final int item_touch_helper_max_drag_scroll_per_frame=0x7f0700ac;
    public static final int item_touch_helper_swipe_escape_max_velocity=0x7f0700ad;
    public static final int item_touch_helper_swipe_escape_velocity=0x7f0700ae;
    public static final int label_edittext_padding=0x7f0700af;
    public static final int label_font_size=0x7f0700b0;
    public static final int label_margin_big=0x7f0700b1;
    public static final int label_text_size=0x7f0700b2;
    public static final int main_clock_digital_font_size=0x7f0700b3;
    public static final int main_clock_digital_padding=0x7f0700b4;
    public static final int main_clock_font_size=0x7f0700b5;
    public static final int max_timer_circle_size=0x7f0700b6;
    public static final int medium_space_top=0x7f0700b7;
    public static final int min_analog_widget_size=0x7f0700b8;
    public static final int min_digital_widget_height=0x7f0700b9;
    /**
     * digital widget sizing information
     * digital widget sizing information
     */
    public static final int min_digital_widget_width=0x7f0700ba;
    public static final int no_alarm_font_size=0x7f0700bb;
    public static final int no_alarms_size=0x7f0700bc;
    /**
     * The size of the action icons
     */
    public static final int notification_action_icon_size=0x7f0700bd;
    /**
     * Size of notification action text
     */
    public static final int notification_action_text_size=0x7f0700be;
    /**
     * the side margin of the big notification circle
     */
    public static final int notification_big_circle_margin=0x7f0700bf;
    /**
     * the margin at the beginning of the notification content
     * Size of margin between icon and text / title text.
     */
    public static final int notification_content_margin_start=0x7f0700c0;
    /**
     * The width of the big icons in notifications.
     */
    public static final int notification_large_icon_height=0x7f0700c1;
    /**
     * The width of the big icons in notifications.
     */
    public static final int notification_large_icon_width=0x7f0700c2;
    /**
     * the top padding of the notification content
     * the top padding of the notification content
     */
    public static final int notification_main_column_padding_top=0x7f0700c3;
    /**
     * image margin on the large icon in the narrow media template
     * image margin on the large icon in the narrow media template
     */
    public static final int notification_media_narrow_margin=0x7f0700c4;
    /**
     * the size of the small icon on the right of the largeIcon
     */
    public static final int notification_right_icon_size=0x7f0700c5;
    /**
     * the paddingtop on the right side of the notification (for time etc.)
     */
    public static final int notification_right_side_padding_top=0x7f0700c6;
    /**
     * the padding of the small icon to the circle
     */
    public static final int notification_small_icon_background_padding=0x7f0700c7;
    /**
     * small icon size when placed as large icon
     */
    public static final int notification_small_icon_size_as_large=0x7f0700c8;
    /**
     * Size of smaller notification text (see TextAppearance.StatusBar.EventContent.Line2, Info,
     * Time)
     */
    public static final int notification_subtext_size=0x7f0700c9;
    /**
     * Top padding for notifications in the standard layout.
     */
    public static final int notification_top_pad=0x7f0700ca;
    /**
     * Top padding for notification when text is large
     */
    public static final int notification_top_pad_large_text=0x7f0700cb;
    /**
     * Minimum space to allocate to the left of a preference item for an icon.
     * This helps in aligning titles when some items have icons and some don't. When space is
     * at a premium, we don't pre-allocate any space.
     */
    public static final int preference_icon_minWidth=0x7f0700cc;
    /**
     * The padding to the right of the seekbar view within a SeekBarPreference
     */
    public static final int preference_seekbar_padding_end=0x7f0700cd;
    /**
     * The padding to the left of the seekbar view within a SeekBarPreference
     */
    public static final int preference_seekbar_padding_start=0x7f0700ce;
    /**
     * The width of the TextView indicating the current value of the SeekBarPreference
     */
    public static final int preference_seekbar_value_width=0x7f0700cf;
    public static final int screensaver_margin=0x7f0700d0;
    public static final int style_label_space=0x7f0700d1;
    public static final int time_margin_top=0x7f0700d2;
    /**
     * margin should be ~ half timer_setup_font_size
     */
    public static final int timer_setup_delete_margin=0x7f0700d3;
    public static final int timer_setup_digit_font_size=0x7f0700d4;
    /**
     * Specified in sp to match the top margin of the time on the adjacent world clock tab.
     * Specified in sp to match the top margin of the time on the adjacent world clock tab.
     */
    public static final int timer_setup_top_margin=0x7f0700d5;
    /**
     * Border corner radius of the tooltip window.
     */
    public static final int tooltip_corner_radius=0x7f0700d6;
    /**
     * Left/right padding of the tooltip text.
     */
    public static final int tooltip_horizontal_padding=0x7f0700d7;
    /**
     * The tooltip does not get closer than this to the window edge
     */
    public static final int tooltip_margin=0x7f0700d8;
    /**
     * Extra tooltip offset used when anchoring to the mouse/touch position
     */
    public static final int tooltip_precise_anchor_extra_offset=0x7f0700d9;
    /**
     * View with the height equal or above this threshold will have a tooltip anchored
     * to the mouse/touch position
     */
    public static final int tooltip_precise_anchor_threshold=0x7f0700da;
    /**
     * Top/bottom padding of the tooltip text.
     */
    public static final int tooltip_vertical_padding=0x7f0700db;
    /**
     * Vertical offset from the edge of the anchor view for a non-touch-triggered tooltip.
     */
    public static final int tooltip_y_offset_non_touch=0x7f0700dc;
    /**
     * Vertical offset from the edge of the anchor view for a touch-triggered tooltip.
     */
    public static final int tooltip_y_offset_touch=0x7f0700dd;
    /**
     * The minimum height/width of any touch target
     */
    public static final int touch_target_min_size=0x7f0700de;
    /**
     * The maximum size of the font for the time in widgets.
     * The maximum size of the font for the time in widgets.
     * The maximum size of the font for the time in widgets.
     * The maximum size of the font for the time in widgets.
     * The maximum size of the font for the time in widgets.
     * The maximum size of the font for the time in widgets.
     */
    public static final int widget_max_clock_font_size=0x7f0700df;
    public static final int widget_min_world_city_list_size=0x7f0700e0;
    public static final int widget_shadow_dy=0x7f0700e1;
    /**
     * shadow styles for widget text with drop shadows
     */
    public static final int widget_shadow_radius=0x7f0700e2;
    /**
     * Size of time zone analog clocks in world clock.
     * Size of analog clock in world clock.
     */
    public static final int world_clock_analog_size=0x7f0700e3;
  }
  public static final class drawable {
    public static final int abc_ab_share_pack_mtrl_alpha=0x7f080006;
    public static final int abc_action_bar_item_background_material=0x7f080007;
    public static final int abc_btn_borderless_material=0x7f080008;
    public static final int abc_btn_check_material=0x7f080009;
    public static final int abc_btn_check_to_on_mtrl_000=0x7f08000a;
    public static final int abc_btn_check_to_on_mtrl_015=0x7f08000b;
    public static final int abc_btn_colored_material=0x7f08000c;
    public static final int abc_btn_default_mtrl_shape=0x7f08000d;
    public static final int abc_btn_radio_material=0x7f08000e;
    public static final int abc_btn_radio_to_on_mtrl_000=0x7f08000f;
    public static final int abc_btn_radio_to_on_mtrl_015=0x7f080010;
    public static final int abc_btn_switch_to_on_mtrl_00001=0x7f080011;
    public static final int abc_btn_switch_to_on_mtrl_00012=0x7f080012;
    public static final int abc_cab_background_internal_bg=0x7f080013;
    public static final int abc_cab_background_top_material=0x7f080014;
    public static final int abc_cab_background_top_mtrl_alpha=0x7f080015;
    public static final int abc_control_background_material=0x7f080016;
    public static final int abc_dialog_material_background=0x7f080017;
    public static final int abc_edit_text_material=0x7f080018;
    public static final int abc_ic_ab_back_material=0x7f080019;
    public static final int abc_ic_arrow_drop_right_black_24dp=0x7f08001a;
    public static final int abc_ic_clear_material=0x7f08001b;
    public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f08001c;
    public static final int abc_ic_go_search_api_material=0x7f08001d;
    public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f08001e;
    public static final int abc_ic_menu_cut_mtrl_alpha=0x7f08001f;
    public static final int abc_ic_menu_overflow_material=0x7f080020;
    public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f080021;
    public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f080022;
    public static final int abc_ic_menu_share_mtrl_alpha=0x7f080023;
    public static final int abc_ic_search_api_material=0x7f080024;
    public static final int abc_ic_star_black_16dp=0x7f080025;
    public static final int abc_ic_star_black_36dp=0x7f080026;
    public static final int abc_ic_star_black_48dp=0x7f080027;
    public static final int abc_ic_star_half_black_16dp=0x7f080028;
    public static final int abc_ic_star_half_black_36dp=0x7f080029;
    public static final int abc_ic_star_half_black_48dp=0x7f08002a;
    public static final int abc_ic_voice_search_api_material=0x7f08002b;
    public static final int abc_item_background_holo_dark=0x7f08002c;
    public static final int abc_item_background_holo_light=0x7f08002d;
    public static final int abc_list_divider_mtrl_alpha=0x7f08002e;
    public static final int abc_list_focused_holo=0x7f08002f;
    public static final int abc_list_longpressed_holo=0x7f080030;
    public static final int abc_list_pressed_holo_dark=0x7f080031;
    public static final int abc_list_pressed_holo_light=0x7f080032;
    public static final int abc_list_selector_background_transition_holo_dark=0x7f080033;
    public static final int abc_list_selector_background_transition_holo_light=0x7f080034;
    public static final int abc_list_selector_disabled_holo_dark=0x7f080035;
    public static final int abc_list_selector_disabled_holo_light=0x7f080036;
    public static final int abc_list_selector_holo_dark=0x7f080037;
    public static final int abc_list_selector_holo_light=0x7f080038;
    public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f080039;
    public static final int abc_popup_background_mtrl_mult=0x7f08003a;
    public static final int abc_ratingbar_indicator_material=0x7f08003b;
    public static final int abc_ratingbar_material=0x7f08003c;
    public static final int abc_ratingbar_small_material=0x7f08003d;
    public static final int abc_scrubber_control_off_mtrl_alpha=0x7f08003e;
    public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f08003f;
    public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f080040;
    public static final int abc_scrubber_primary_mtrl_alpha=0x7f080041;
    public static final int abc_scrubber_track_mtrl_alpha=0x7f080042;
    public static final int abc_seekbar_thumb_material=0x7f080043;
    public static final int abc_seekbar_tick_mark_material=0x7f080044;
    public static final int abc_seekbar_track_material=0x7f080045;
    public static final int abc_spinner_mtrl_am_alpha=0x7f080046;
    public static final int abc_spinner_textfield_background_material=0x7f080047;
    public static final int abc_switch_thumb_material=0x7f080048;
    public static final int abc_switch_track_mtrl_alpha=0x7f080049;
    public static final int abc_tab_indicator_material=0x7f08004a;
    public static final int abc_tab_indicator_mtrl_alpha=0x7f08004b;
    public static final int abc_text_cursor_material=0x7f08004c;
    public static final int abc_text_select_handle_left_mtrl_dark=0x7f08004d;
    public static final int abc_text_select_handle_left_mtrl_light=0x7f08004e;
    public static final int abc_text_select_handle_middle_mtrl_dark=0x7f08004f;
    public static final int abc_text_select_handle_middle_mtrl_light=0x7f080050;
    public static final int abc_text_select_handle_right_mtrl_dark=0x7f080051;
    public static final int abc_text_select_handle_right_mtrl_light=0x7f080052;
    public static final int abc_textfield_activated_mtrl_alpha=0x7f080053;
    public static final int abc_textfield_default_mtrl_alpha=0x7f080054;
    public static final int abc_textfield_search_activated_mtrl_alpha=0x7f080055;
    public static final int abc_textfield_search_default_mtrl_alpha=0x7f080056;
    public static final int abc_textfield_search_material=0x7f080057;
    public static final int abc_vector_test=0x7f080058;
    public static final int action_bar_shadow=0x7f080059;
    public static final int alarm_background_expanded=0x7f08005a;
    public static final int appwidget_analog_clock_preview=0x7f08005b;
    public static final int appwidget_clock_dial=0x7f08005c;
    public static final int appwidget_clock_hour=0x7f08005d;
    public static final int appwidget_clock_minute=0x7f08005e;
    public static final int appwidget_digital_clock_preview=0x7f08005f;
    public static final int avd_hide_password=0x7f080060;
    public static final int avd_show_password=0x7f080061;
    public static final int bg_circle_white=0x7f080062;
    public static final int bg_day_button_animatable=0x7f080063;
    public static final int bg_day_button_checked_to_unchecked_anim=0x7f080064;
    public static final int bg_day_button_transparent=0x7f080065;
    public static final int bg_day_button_unchecked_to_checked_anim=0x7f080066;
    public static final int bg_day_button_white=0x7f080067;
    public static final int bg_day_selected=0x7f080068;
    public static final int clock_analog_dial=0x7f080069;
    public static final int clock_analog_hour=0x7f08006a;
    public static final int clock_analog_minute=0x7f08006b;
    public static final int clock_analog_second=0x7f08006c;
    public static final int design_bottom_navigation_item_background=0x7f08006d;
    public static final int design_fab_background=0x7f08006e;
    public static final int design_ic_visibility=0x7f08006f;
    public static final int design_ic_visibility_off=0x7f080070;
    public static final int design_password_eye=0x7f080071;
    public static final int design_snackbar_background=0x7f080072;
    public static final int ic_add_24dp=0x7f080073;
    public static final int ic_add_white_24dp=0x7f080074;
    public static final int ic_alarm=0x7f080075;
    public static final int ic_alarm_off_24dp=0x7f080076;
    public static final int ic_alarm_off_white_24dp=0x7f080077;
    public static final int ic_alarm_small=0x7f080078;
    public static final int ic_backspace=0x7f080079;
    public static final int ic_caret_down=0x7f08007a;
    public static final int ic_caret_down_animation=0x7f08007b;
    public static final int ic_caret_down_static=0x7f08007c;
    public static final int ic_caret_up=0x7f08007d;
    public static final int ic_caret_up_animation=0x7f08007e;
    public static final int ic_caret_up_static=0x7f08007f;
    public static final int ic_checkmark=0x7f080080;
    public static final int ic_clock=0x7f080081;
    public static final int ic_delete_small=0x7f080082;
    public static final int ic_dismiss=0x7f080083;
    public static final int ic_fab_alarm=0x7f080084;
    public static final int ic_label=0x7f080085;
    public static final int ic_lap_white_24dp=0x7f080086;
    public static final int ic_noalarms=0x7f080087;
    public static final int ic_pause_24dp=0x7f080088;
    public static final int ic_pause_play=0x7f080089;
    public static final int ic_pause_play_animation=0x7f08008a;
    public static final int ic_pause_white_24dp=0x7f08008b;
    public static final int ic_play_pause=0x7f08008c;
    public static final int ic_play_pause_animation=0x7f08008d;
    public static final int ic_public=0x7f08008e;
    public static final int ic_reset_24dp=0x7f08008f;
    public static final int ic_reset_white_24dp=0x7f080090;
    public static final int ic_ringtone=0x7f080091;
    public static final int ic_ringtone_active=0x7f080092;
    public static final int ic_ringtone_active_animated=0x7f080093;
    public static final int ic_ringtone_active_static=0x7f080094;
    public static final int ic_ringtone_not_found=0x7f080095;
    public static final int ic_ringtone_silent=0x7f080096;
    public static final int ic_snooze=0x7f080097;
    public static final int ic_snooze_24dp=0x7f080098;
    public static final int ic_snooze_white_24dp=0x7f080099;
    public static final int ic_start_24dp=0x7f08009a;
    public static final int ic_start_white_24dp=0x7f08009b;
    public static final int ic_stop_24dp=0x7f08009c;
    public static final int ic_stop_play=0x7f08009d;
    public static final int ic_stop_play_animation=0x7f08009e;
    public static final int ic_stop_white_24dp=0x7f08009f;
    public static final int ic_stopwatch=0x7f0800a0;
    public static final int ic_sw_lap_24dp=0x7f0800a1;
    public static final int ic_swipe_circle_bottom=0x7f0800a2;
    public static final int ic_swipe_circle_dark=0x7f0800a3;
    public static final int ic_swipe_circle_light=0x7f0800a4;
    public static final int ic_swipe_circle_top=0x7f0800a5;
    public static final int ic_tab_alarm=0x7f0800a6;
    public static final int ic_tab_alarm_animated=0x7f0800a7;
    public static final int ic_tab_alarm_static=0x7f0800a8;
    public static final int ic_tab_clock=0x7f0800a9;
    public static final int ic_tab_clock_animated=0x7f0800aa;
    public static final int ic_tab_clock_static=0x7f0800ab;
    public static final int ic_tab_stopwatch=0x7f0800ac;
    public static final int ic_tab_stopwatch_animated=0x7f0800ad;
    public static final int ic_tab_stopwatch_static=0x7f0800ae;
    public static final int ic_tab_timer=0x7f0800af;
    public static final int ic_tab_timer_animated=0x7f0800b0;
    public static final int ic_tab_timer_static=0x7f0800b1;
    public static final int ic_timer=0x7f0800b2;
    public static final int navigation_empty_icon=0x7f0800b3;
    public static final int notification_action_background=0x7f0800b4;
    public static final int notification_bg=0x7f0800b5;
    public static final int notification_bg_low=0x7f0800b6;
    public static final int notification_bg_low_normal=0x7f0800b7;
    public static final int notification_bg_low_pressed=0x7f0800b8;
    public static final int notification_bg_normal=0x7f0800b9;
    public static final int notification_bg_normal_pressed=0x7f0800ba;
    public static final int notification_icon_background=0x7f0800bb;
    public static final int notification_template_icon_bg=0x7f0800bc;
    public static final int notification_template_icon_low_bg=0x7f0800bd;
    public static final int notification_tile_bg=0x7f0800be;
    public static final int notify_panel_notification_icon_bg=0x7f0800bf;
    public static final int placeholder_album_artwork=0x7f0800c0;
    public static final int preference_list_divider_material=0x7f0800c1;
    public static final int shortcut_new_alarm=0x7f0800c2;
    public static final int shortcut_new_timer=0x7f0800c3;
    public static final int shortcut_screensaver=0x7f0800c4;
    public static final int shortcut_stopwatch=0x7f0800c5;
    public static final int stat_notify_alarm=0x7f0800c6;
    public static final int stat_notify_stopwatch=0x7f0800c7;
    public static final int stat_notify_timer=0x7f0800c8;
    public static final int toggle_circle=0x7f0800c9;
    public static final int tooltip_frame_dark=0x7f0800ca;
    public static final int tooltip_frame_light=0x7f0800cb;
  }
  public static final class fraction {
    /**
     * In portrait, -100% height implies only width is used to size the timer container.
     * In landscape, timer circles are 90% of the container height; width matches height.
     */
    public static final int timer_circle_height_percent=0x7f090000;
    /**
     * In portrait, timer circles are 60% of the container width; height matches width.
     * In landscape, -100% width implies only height is used to size the timer container.
     */
    public static final int timer_circle_width_percent=0x7f090001;
  }
  public static final class id {
    public static final int ALT=0x7f0a0000;
    public static final int CTRL=0x7f0a0001;
    public static final int FUNCTION=0x7f0a0002;
    public static final int META=0x7f0a0003;
    public static final int SHIFT=0x7f0a0004;
    public static final int SYM=0x7f0a0005;
    public static final int action0=0x7f0a0006;
    public static final int action_bar=0x7f0a0007;
    public static final int action_bar_activity_content=0x7f0a0008;
    public static final int action_bar_container=0x7f0a0009;
    public static final int action_bar_root=0x7f0a000a;
    public static final int action_bar_spinner=0x7f0a000b;
    public static final int action_bar_subtitle=0x7f0a000c;
    public static final int action_bar_title=0x7f0a000d;
    public static final int action_container=0x7f0a000e;
    public static final int action_context_bar=0x7f0a000f;
    public static final int action_divider=0x7f0a0010;
    public static final int action_image=0x7f0a0011;
    public static final int action_menu_divider=0x7f0a0012;
    public static final int action_menu_presenter=0x7f0a0013;
    public static final int action_mode_bar=0x7f0a0014;
    public static final int action_mode_bar_stub=0x7f0a0015;
    public static final int action_mode_close_button=0x7f0a0016;
    public static final int action_text=0x7f0a0017;
    public static final int actions=0x7f0a0018;
    public static final int activity_chooser_view_content=0x7f0a0019;
    public static final int add=0x7f0a001a;
    public static final int alarm=0x7f0a001b;
    public static final int alarm_icon=0x7f0a001c;
    public static final int alarm_volume_slider=0x7f0a001d;
    public static final int alarms_empty_view=0x7f0a001e;
    public static final int alarms_recycler_view=0x7f0a001f;
    public static final int alert=0x7f0a0020;
    public static final int alertTitle=0x7f0a0021;
    public static final int alert_info=0x7f0a0022;
    public static final int alert_title=0x7f0a0023;
    public static final int alignBounds=0x7f0a0024;
    public static final int alignMargins=0x7f0a0025;
    public static final int all=0x7f0a0026;
    public static final int always=0x7f0a0027;
    public static final int analog_appwidget=0x7f0a0028;
    public static final int analog_clock=0x7f0a0029;
    public static final int arrow=0x7f0a002a;
    public static final int async=0x7f0a002b;
    public static final int auto=0x7f0a002c;
    public static final int beginning=0x7f0a002d;
    public static final int blocking=0x7f0a002e;
    public static final int bottom=0x7f0a002f;
    public static final int buttonPanel=0x7f0a0030;
    public static final int cancel_action=0x7f0a0031;
    public static final int cancel_button=0x7f0a0032;
    public static final int center=0x7f0a0033;
    public static final int center_horizontal=0x7f0a0034;
    public static final int center_vertical=0x7f0a0035;
    public static final int checkbox=0x7f0a0036;
    public static final int checked=0x7f0a0037;
    public static final int choose_ringtone=0x7f0a0038;
    public static final int chronometer=0x7f0a0039;
    public static final int cities=0x7f0a003a;
    public static final int cities_list=0x7f0a003b;
    public static final int city_container=0x7f0a003c;
    public static final int city_day_left=0x7f0a003d;
    public static final int city_day_right=0x7f0a003e;
    public static final int city_name=0x7f0a003f;
    public static final int city_name_left=0x7f0a0040;
    public static final int city_name_right=0x7f0a0041;
    public static final int city_onoff=0x7f0a0042;
    public static final int city_spacer=0x7f0a0043;
    public static final int city_time=0x7f0a0044;
    public static final int clip_horizontal=0x7f0a0045;
    public static final int clip_vertical=0x7f0a0046;
    public static final int clock=0x7f0a0047;
    public static final int collapseActionView=0x7f0a0048;
    public static final int container=0x7f0a0049;
    public static final int content=0x7f0a004a;
    public static final int contentPanel=0x7f0a004b;
    public static final int coordinator=0x7f0a004c;
    public static final int custom=0x7f0a004d;
    public static final int customPanel=0x7f0a004e;
    public static final int date=0x7f0a004f;
    public static final int day_button_box=0x7f0a0050;
    public static final int daysOfWeek=0x7f0a0051;
    public static final int days_of_week=0x7f0a0052;
    public static final int decor_content_parent=0x7f0a0053;
    public static final int default_activity_button=0x7f0a0054;
    public static final int delete=0x7f0a0055;
    public static final int design_bottom_sheet=0x7f0a0056;
    public static final int design_menu_item_action_area=0x7f0a0057;
    public static final int design_menu_item_action_area_stub=0x7f0a0058;
    public static final int design_menu_item_text=0x7f0a0059;
    public static final int design_navigation_view=0x7f0a005a;
    public static final int desk_clock_pager=0x7f0a005b;
    public static final int digital_clock=0x7f0a005c;
    public static final int digital_widget=0x7f0a005d;
    public static final int disableHome=0x7f0a005e;
    public static final int dismiss=0x7f0a005f;
    public static final int drop_shadow=0x7f0a0060;
    public static final int edit_label=0x7f0a0061;
    public static final int edit_query=0x7f0a0062;
    public static final int end=0x7f0a0063;
    public static final int end_padder=0x7f0a0064;
    public static final int enterAlways=0x7f0a0065;
    public static final int enterAlwaysCollapsed=0x7f0a0066;
    public static final int exitUntilCollapsed=0x7f0a0067;
    public static final int expand_activities_button=0x7f0a0068;
    public static final int expanded_menu=0x7f0a0069;
    public static final int expired_timers_activity=0x7f0a006a;
    public static final int expired_timers_list=0x7f0a006b;
    public static final int expired_timers_scroll=0x7f0a006c;
    public static final int fab=0x7f0a006d;
    public static final int fill=0x7f0a006e;
    public static final int fill_horizontal=0x7f0a006f;
    public static final int fill_vertical=0x7f0a0070;
    public static final int fixed=0x7f0a0071;
    public static final int forever=0x7f0a0072;
    public static final int ghost_view=0x7f0a0073;
    public static final int hairline=0x7f0a0074;
    public static final int hint=0x7f0a0075;
    public static final int home=0x7f0a0076;
    public static final int homeAsUp=0x7f0a0077;
    public static final int horizontal=0x7f0a0078;
    public static final int hours_ahead=0x7f0a0079;
    public static final int icon=0x7f0a007a;
    public static final int icon_frame=0x7f0a007b;
    public static final int icon_group=0x7f0a007c;
    public static final int ifRoom=0x7f0a007d;
    public static final int image=0x7f0a007e;
    public static final int index=0x7f0a007f;
    public static final int info=0x7f0a0080;
    public static final int italic=0x7f0a0081;
    /**
     * ItemTouchHelper uses this id to save a View's original elevation.
     */
    public static final int item_touch_helper_previous_elevation=0x7f0a0082;
    public static final int label=0x7f0a0083;
    public static final int lap_number=0x7f0a0084;
    public static final int lap_time=0x7f0a0085;
    public static final int lap_total=0x7f0a0086;
    public static final int laps_list=0x7f0a0087;
    public static final int largeLabel=0x7f0a0088;
    public static final int left=0x7f0a0089;
    public static final int left_button=0x7f0a008a;
    public static final int left_clock=0x7f0a008b;
    public static final int line1=0x7f0a008c;
    public static final int line3=0x7f0a008d;
    public static final int list=0x7f0a008e;
    public static final int listMode=0x7f0a008f;
    public static final int list_item=0x7f0a0090;
    public static final int main=0x7f0a0091;
    public static final int main_clock=0x7f0a0092;
    public static final int main_clock_left_pane=0x7f0a0093;
    public static final int masked=0x7f0a0094;
    public static final int media_actions=0x7f0a0095;
    public static final int menu_item_night_mode=0x7f0a0096;
    public static final int menu_item_search=0x7f0a0097;
    public static final int menu_item_settings=0x7f0a0098;
    public static final int menu_item_sort=0x7f0a0099;
    public static final int message=0x7f0a009a;
    public static final int middle=0x7f0a009b;
    public static final int mini=0x7f0a009c;
    public static final int multiply=0x7f0a009d;
    public static final int navigation_header_container=0x7f0a009e;
    public static final int never=0x7f0a009f;
    public static final int nextAlarm=0x7f0a00a0;
    public static final int nextAlarmIcon=0x7f0a00a1;
    public static final int none=0x7f0a00a2;
    public static final int normal=0x7f0a00a3;
    public static final int notification_background=0x7f0a00a4;
    public static final int notification_main_column=0x7f0a00a5;
    public static final int notification_main_column_container=0x7f0a00a6;
    public static final int numbers_key=0x7f0a00a7;
    public static final int off=0x7f0a00a8;
    public static final int on=0x7f0a00a9;
    public static final int onoff=0x7f0a00aa;
    public static final int page_indicator0=0x7f0a00ab;
    public static final int page_indicator1=0x7f0a00ac;
    public static final int page_indicator2=0x7f0a00ad;
    public static final int page_indicator3=0x7f0a00ae;
    public static final int parallax=0x7f0a00af;
    public static final int parentPanel=0x7f0a00b0;
    public static final int parent_matrix=0x7f0a00b1;
    public static final int pin=0x7f0a00b2;
    public static final int preemptive_dismiss_button=0x7f0a00b3;
    public static final int progress_circular=0x7f0a00b4;
    public static final int progress_horizontal=0x7f0a00b5;
    public static final int pulse=0x7f0a00b6;
    public static final int radio=0x7f0a00b7;
    public static final int repeat_days=0x7f0a00b8;
    public static final int repeat_onoff=0x7f0a00b9;
    public static final int reset_add=0x7f0a00ba;
    public static final int right=0x7f0a00bb;
    public static final int right_button=0x7f0a00bc;
    public static final int right_clock=0x7f0a00bd;
    public static final int right_icon=0x7f0a00be;
    public static final int right_side=0x7f0a00bf;
    public static final int ringtone_content=0x7f0a00c0;
    public static final int ringtone_image=0x7f0a00c1;
    public static final int ringtone_item_header=0x7f0a00c2;
    public static final int ringtone_name=0x7f0a00c3;
    public static final int save_image_matrix=0x7f0a00c4;
    public static final int save_non_transition_alpha=0x7f0a00c5;
    public static final int save_scale_type=0x7f0a00c6;
    public static final int saver_container=0x7f0a00c7;
    public static final int screen=0x7f0a00c8;
    public static final int scroll=0x7f0a00c9;
    public static final int scrollIndicatorDown=0x7f0a00ca;
    public static final int scrollIndicatorUp=0x7f0a00cb;
    public static final int scrollView=0x7f0a00cc;
    public static final int scrollable=0x7f0a00cd;
    public static final int search_badge=0x7f0a00ce;
    public static final int search_bar=0x7f0a00cf;
    public static final int search_button=0x7f0a00d0;
    public static final int search_close_btn=0x7f0a00d1;
    public static final int search_edit_frame=0x7f0a00d2;
    public static final int search_go_btn=0x7f0a00d3;
    public static final int search_mag_icon=0x7f0a00d4;
    public static final int search_plate=0x7f0a00d5;
    public static final int search_src_text=0x7f0a00d6;
    public static final int search_voice_btn=0x7f0a00d7;
    public static final int seekbar=0x7f0a00d8;
    public static final int seekbar_value=0x7f0a00d9;
    public static final int select_dialog_listview=0x7f0a00da;
    public static final int shortcut=0x7f0a00db;
    public static final int showCustom=0x7f0a00dc;
    public static final int showHome=0x7f0a00dd;
    public static final int showTitle=0x7f0a00de;
    public static final int smallLabel=0x7f0a00df;
    public static final int snackbar_action=0x7f0a00e0;
    public static final int snackbar_text=0x7f0a00e1;
    public static final int snap=0x7f0a00e2;
    public static final int snooze=0x7f0a00e3;
    public static final int sound_image_selected=0x7f0a00e4;
    public static final int spacer=0x7f0a00e5;
    public static final int spinner=0x7f0a00e6;
    public static final int split_action_bar=0x7f0a00e7;
    public static final int src_atop=0x7f0a00e8;
    public static final int src_in=0x7f0a00e9;
    public static final int src_over=0x7f0a00ea;
    public static final int start=0x7f0a00eb;
    public static final int state=0x7f0a00ec;
    public static final int status_bar_latest_event_content=0x7f0a00ed;
    public static final int stopwatch_circle=0x7f0a00ee;
    public static final int stopwatch_hundredths_text=0x7f0a00ef;
    public static final int stopwatch_time_text=0x7f0a00f0;
    public static final int stopwatch_time_wrapper=0x7f0a00f1;
    public static final int submenuarrow=0x7f0a00f2;
    public static final int submit_area=0x7f0a00f3;
    public static final int switchWidget=0x7f0a00f4;
    public static final int tabMode=0x7f0a00f5;
    public static final int tab_hairline=0x7f0a00f6;
    public static final int tabs=0x7f0a00f7;
    public static final int tag_transition_group=0x7f0a00f8;
    public static final int text=0x7f0a00f9;
    public static final int text2=0x7f0a00fa;
    public static final int textSpacerNoButtons=0x7f0a00fb;
    public static final int textSpacerNoTitle=0x7f0a00fc;
    public static final int text_input_password_toggle=0x7f0a00fd;
    public static final int textinput_counter=0x7f0a00fe;
    public static final int textinput_error=0x7f0a00ff;
    public static final int time=0x7f0a0100;
    public static final int timer_label=0x7f0a0101;
    public static final int timer_setup=0x7f0a0102;
    public static final int timer_setup_delete=0x7f0a0103;
    public static final int timer_setup_digit_0=0x7f0a0104;
    public static final int timer_setup_digit_1=0x7f0a0105;
    public static final int timer_setup_digit_2=0x7f0a0106;
    public static final int timer_setup_digit_3=0x7f0a0107;
    public static final int timer_setup_digit_4=0x7f0a0108;
    public static final int timer_setup_digit_5=0x7f0a0109;
    public static final int timer_setup_digit_6=0x7f0a010a;
    public static final int timer_setup_digit_7=0x7f0a010b;
    public static final int timer_setup_digit_8=0x7f0a010c;
    public static final int timer_setup_digit_9=0x7f0a010d;
    public static final int timer_setup_divider=0x7f0a010e;
    public static final int timer_setup_time=0x7f0a010f;
    public static final int timer_time=0x7f0a0110;
    public static final int timer_time_text=0x7f0a0111;
    public static final int timer_view=0x7f0a0112;
    public static final int title=0x7f0a0113;
    public static final int titleDividerNoCustom=0x7f0a0114;
    public static final int title_template=0x7f0a0115;
    public static final int toolbar=0x7f0a0116;
    public static final int top=0x7f0a0117;
    public static final int topPanel=0x7f0a0118;
    public static final int touch_outside=0x7f0a0119;
    public static final int transition_current_scene=0x7f0a011a;
    public static final int transition_layout_save=0x7f0a011b;
    public static final int transition_position=0x7f0a011c;
    public static final int transition_scene_layoutid_cache=0x7f0a011d;
    public static final int transition_transform=0x7f0a011e;
    public static final int unchecked=0x7f0a011f;
    public static final int uniform=0x7f0a0120;
    public static final int up=0x7f0a0121;
    public static final int upcoming_instance_label=0x7f0a0122;
    public static final int useLogo=0x7f0a0123;
    public static final int vertical=0x7f0a0124;
    public static final int vertical_view_pager=0x7f0a0125;
    public static final int vibrate_onoff=0x7f0a0126;
    public static final int view_offset_helper=0x7f0a0127;
    public static final int visible=0x7f0a0128;
    public static final int widget_item=0x7f0a0129;
    public static final int withText=0x7f0a012a;
    public static final int world_city_list=0x7f0a012b;
    public static final int wrap_content=0x7f0a012c;
  }
  public static final class integer {
    public static final int abc_config_activityDefaultDur=0x7f0b0000;
    /**
     * The duration (in milliseconds) of the activity open/close and fragment open/close animations.
     */
    public static final int abc_config_activityShortDur=0x7f0b0001;
    public static final int app_bar_elevation_anim_duration=0x7f0b0002;
    public static final int bottom_sheet_slide_duration=0x7f0b0003;
    public static final int cancel_button_image_alpha=0x7f0b0004;
    /**
     * The duration (in milliseconds) of the tooltip show/hide animations.
     */
    public static final int config_tooltipAnimTime=0x7f0b0005;
    public static final int design_snackbar_text_max_lines=0x7f0b0006;
    public static final int gutter_width_percent=0x7f0b0007;
    public static final int guttered_content_width_percent=0x7f0b0008;
    public static final int hide_password_duration=0x7f0b0009;
    public static final int show_password_duration=0x7f0b000a;
    /**
     * Maximum numerical value that will be shown in a status bar
     * notification icon or in the notification itself. Will be replaced
     * with @string/status_bar_notification_info_overflow when shown in the
     * UI.
     */
    public static final int status_bar_notification_info_maxnum=0x7f0b000b;
  }
  public static final class layout {
    public static final int abc_action_bar_title_item=0x7f0c0000;
    public static final int abc_action_bar_up_container=0x7f0c0001;
    public static final int abc_action_menu_item_layout=0x7f0c0002;
    public static final int abc_action_menu_layout=0x7f0c0003;
    public static final int abc_action_mode_bar=0x7f0c0004;
    public static final int abc_action_mode_close_item_material=0x7f0c0005;
    public static final int abc_activity_chooser_view=0x7f0c0006;
    public static final int abc_activity_chooser_view_list_item=0x7f0c0007;
    public static final int abc_alert_dialog_button_bar_material=0x7f0c0008;
    public static final int abc_alert_dialog_material=0x7f0c0009;
    public static final int abc_alert_dialog_title_material=0x7f0c000a;
    public static final int abc_dialog_title_material=0x7f0c000b;
    public static final int abc_expanded_menu_layout=0x7f0c000c;
    public static final int abc_list_menu_item_checkbox=0x7f0c000d;
    public static final int abc_list_menu_item_icon=0x7f0c000e;
    public static final int abc_list_menu_item_layout=0x7f0c000f;
    public static final int abc_list_menu_item_radio=0x7f0c0010;
    public static final int abc_popup_menu_header_item_layout=0x7f0c0011;
    public static final int abc_popup_menu_item_layout=0x7f0c0012;
    public static final int abc_screen_content_include=0x7f0c0013;
    public static final int abc_screen_simple=0x7f0c0014;
    public static final int abc_screen_simple_overlay_action_mode=0x7f0c0015;
    public static final int abc_screen_toolbar=0x7f0c0016;
    public static final int abc_search_dropdown_item_icons_2line=0x7f0c0017;
    public static final int abc_search_view=0x7f0c0018;
    public static final int abc_select_dialog_material=0x7f0c0019;
    public static final int alarm_activity=0x7f0c001a;
    public static final int alarm_clock=0x7f0c001b;
    public static final int alarm_row=0x7f0c001c;
    public static final int alarm_time_collapsed=0x7f0c001d;
    public static final int alarm_time_expanded=0x7f0c001e;
    public static final int alarm_time_summary=0x7f0c001f;
    public static final int alarm_volume_preference=0x7f0c0020;
    public static final int analog_appwidget=0x7f0c0021;
    public static final int chronometer_notif_content=0x7f0c0022;
    public static final int cities_activity=0x7f0c0023;
    public static final int city_list_header=0x7f0c0024;
    public static final int city_list_item=0x7f0c0025;
    public static final int clock_fragment=0x7f0c0026;
    public static final int date_and_next_alarm_time=0x7f0c0027;
    public static final int day_button=0x7f0c0028;
    public static final int design_bottom_navigation_item=0x7f0c0029;
    public static final int design_bottom_sheet_dialog=0x7f0c002a;
    public static final int design_layout_snackbar=0x7f0c002b;
    public static final int design_layout_snackbar_include=0x7f0c002c;
    public static final int design_layout_tab_icon=0x7f0c002d;
    public static final int design_layout_tab_text=0x7f0c002e;
    public static final int design_menu_item_action_area=0x7f0c002f;
    public static final int design_navigation_item=0x7f0c0030;
    public static final int design_navigation_item_header=0x7f0c0031;
    public static final int design_navigation_item_separator=0x7f0c0032;
    public static final int design_navigation_item_subheader=0x7f0c0033;
    public static final int design_navigation_menu=0x7f0c0034;
    public static final int design_navigation_menu_item=0x7f0c0035;
    public static final int design_text_input_password_icon=0x7f0c0036;
    public static final int desk_clock=0x7f0c0037;
    public static final int desk_clock_saver=0x7f0c0038;
    public static final int digital_widget=0x7f0c0039;
    public static final int digital_widget_sizer=0x7f0c003a;
    public static final int drop_shadow=0x7f0c003b;
    public static final int expired_timers_activity=0x7f0c003c;
    public static final int lap_view=0x7f0c003d;
    public static final int loading_widget=0x7f0c003e;
    public static final int main_clock_frame=0x7f0c003f;
    public static final int notification_action=0x7f0c0040;
    public static final int notification_action_tombstone=0x7f0c0041;
    public static final int notification_media_action=0x7f0c0042;
    public static final int notification_media_cancel_action=0x7f0c0043;
    public static final int notification_template_big_media=0x7f0c0044;
    public static final int notification_template_big_media_custom=0x7f0c0045;
    public static final int notification_template_big_media_narrow=0x7f0c0046;
    public static final int notification_template_big_media_narrow_custom=0x7f0c0047;
    public static final int notification_template_custom_big=0x7f0c0048;
    public static final int notification_template_icon_group=0x7f0c0049;
    public static final int notification_template_lines_media=0x7f0c004a;
    public static final int notification_template_media=0x7f0c004b;
    public static final int notification_template_media_custom=0x7f0c004c;
    public static final int notification_template_part_chronometer=0x7f0c004d;
    public static final int notification_template_part_time=0x7f0c004e;
    public static final int preemptive_dismiss=0x7f0c004f;
    public static final int preference=0x7f0c0050;
    public static final int preference_category=0x7f0c0051;
    public static final int preference_category_material=0x7f0c0052;
    public static final int preference_dialog_edittext=0x7f0c0053;
    public static final int preference_dropdown=0x7f0c0054;
    public static final int preference_dropdown_material=0x7f0c0055;
    public static final int preference_information=0x7f0c0056;
    public static final int preference_information_material=0x7f0c0057;
    public static final int preference_list_fragment=0x7f0c0058;
    public static final int preference_material=0x7f0c0059;
    public static final int preference_recyclerview=0x7f0c005a;
    public static final int preference_widget_checkbox=0x7f0c005b;
    public static final int preference_widget_seekbar=0x7f0c005c;
    public static final int preference_widget_seekbar_material=0x7f0c005d;
    public static final int preference_widget_switch=0x7f0c005e;
    public static final int preference_widget_switch_compat=0x7f0c005f;
    public static final int ringtone_item_header=0x7f0c0060;
    public static final int ringtone_item_sound=0x7f0c0061;
    public static final int ringtone_picker=0x7f0c0062;
    public static final int screensaver_settings=0x7f0c0063;
    public static final int select_dialog_item_material=0x7f0c0064;
    public static final int select_dialog_multichoice_material=0x7f0c0065;
    public static final int select_dialog_singlechoice_material=0x7f0c0066;
    public static final int selection_layout=0x7f0c0067;
    public static final int settings=0x7f0c0068;
    public static final int simple_menu_dropdown_item=0x7f0c0069;
    public static final int stopwatch_fragment=0x7f0c006a;
    public static final int stopwatch_time=0x7f0c006b;
    public static final int support_simple_spinner_dropdown_item=0x7f0c006c;
    public static final int tab_item=0x7f0c006d;
    public static final int timer_fragment=0x7f0c006e;
    public static final int timer_item=0x7f0c006f;
    public static final int timer_setup_container=0x7f0c0070;
    public static final int timer_setup_digits=0x7f0c0071;
    public static final int timer_setup_divider=0x7f0c0072;
    public static final int timer_setup_time=0x7f0c0073;
    public static final int timer_setup_view=0x7f0c0074;
    public static final int tooltip=0x7f0c0075;
    public static final int world_clock_city_container=0x7f0c0076;
    public static final int world_clock_item=0x7f0c0077;
    public static final int world_clock_remote_list_item=0x7f0c0078;
  }
  public static final class mipmap {
    public static final int ic_launcher_alarmclock=0x7f0d0000;
  }
  public static final class plurals {
    /**
     * The text shown after user snoozed an alerting alarm. The text will be shown
     * together with the word 'Snoozed' in two separate lines or example:
     * Snoozed
     * 10 min
     * [CHAR LIMIT=10]
     */
    public static final int alarm_alert_snooze_duration=0x7f0e0000;
    /**
     * Toast that appears after Alarm is snoozed from the Alarm
     * dialog. Says the alarm will snooze for xxx minutes.
     */
    public static final int alarm_alert_snooze_set=0x7f0e0001;
    /**
     * Auto silence summary string set based on the preference value.
     */
    public static final int auto_silence_summary=0x7f0e0002;
    /**
     * Alarm confirmation toast: days
     */
    public static final int days=0x7f0e0003;
    /**
     * Alarm confirmation toast, timer notification and world clock ahead/behind: hours
     */
    public static final int hours=0x7f0e0004;
    public static final int hours_short=0x7f0e0005;
    /**
     * Alarm confirmation toast and timer notification: minutes
     */
    public static final int minutes=0x7f0e0006;
    public static final int minutes_short=0x7f0e0007;
    /**
     * Timer accessibility announcement
     */
    public static final int seconds=0x7f0e0008;
  }
  public static final class raw {
    public static final int alarm_expire=0x7f0f0000;
    public static final int timer_expire=0x7f0f0001;
  }
  public static final class string {
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C1=0x7f100000;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C10=0x7f100001;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C100=0x7f100002;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C101=0x7f100003;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C102=0x7f100004;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C103=0x7f100005;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C104=0x7f100006;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C105=0x7f100007;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C106=0x7f100008;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C107=0x7f100009;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C108=0x7f10000a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C109=0x7f10000b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C11=0x7f10000c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C110=0x7f10000d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C111=0x7f10000e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C112=0x7f10000f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C113=0x7f100010;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C114=0x7f100011;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C115=0x7f100012;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C117=0x7f100013;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C118=0x7f100014;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C119=0x7f100015;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C12=0x7f100016;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C120=0x7f100017;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C121=0x7f100018;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C122=0x7f100019;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C123=0x7f10001a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C124=0x7f10001b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C125=0x7f10001c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C126=0x7f10001d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C127=0x7f10001e;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C128=0x7f10001f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C13=0x7f100020;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C130=0x7f100021;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C131=0x7f100022;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C133=0x7f100023;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C134=0x7f100024;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C135=0x7f100025;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C136=0x7f100026;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C137=0x7f100027;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C138=0x7f100028;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C139=0x7f100029;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C14=0x7f10002a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C140=0x7f10002b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C141=0x7f10002c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C142=0x7f10002d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C143=0x7f10002e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C144=0x7f10002f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C145=0x7f100030;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C146=0x7f100031;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C147=0x7f100032;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C148=0x7f100033;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C149=0x7f100034;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C15=0x7f100035;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C150=0x7f100036;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C151=0x7f100037;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C152=0x7f100038;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C153=0x7f100039;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C154=0x7f10003a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C155=0x7f10003b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C156=0x7f10003c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C157=0x7f10003d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C158=0x7f10003e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C159=0x7f10003f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C16=0x7f100040;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C160=0x7f100041;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C161=0x7f100042;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C162=0x7f100043;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C163=0x7f100044;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C164=0x7f100045;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C165=0x7f100046;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C166=0x7f100047;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C167=0x7f100048;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C168=0x7f100049;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C169=0x7f10004a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C17=0x7f10004b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C170=0x7f10004c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C171=0x7f10004d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C172=0x7f10004e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C173=0x7f10004f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C174=0x7f100050;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C175=0x7f100051;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C176=0x7f100052;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C177=0x7f100053;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C178=0x7f100054;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C179=0x7f100055;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C18=0x7f100056;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C180=0x7f100057;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C181=0x7f100058;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C182=0x7f100059;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C183=0x7f10005a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C184=0x7f10005b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C185=0x7f10005c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C186=0x7f10005d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C187=0x7f10005e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C188=0x7f10005f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C189=0x7f100060;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C19=0x7f100061;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C190=0x7f100062;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C191=0x7f100063;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C192=0x7f100064;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C193=0x7f100065;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C194=0x7f100066;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C195=0x7f100067;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C196=0x7f100068;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C197=0x7f100069;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C198=0x7f10006a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C199=0x7f10006b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C2=0x7f10006c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C20=0x7f10006d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C200=0x7f10006e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C201=0x7f10006f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C202=0x7f100070;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C203=0x7f100071;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C204=0x7f100072;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C205=0x7f100073;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C206=0x7f100074;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C207=0x7f100075;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C208=0x7f100076;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C209=0x7f100077;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C21=0x7f100078;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C210=0x7f100079;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C211=0x7f10007a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C214=0x7f10007b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C215=0x7f10007c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C216=0x7f10007d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C217=0x7f10007e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C218=0x7f10007f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C219=0x7f100080;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C22=0x7f100081;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C220=0x7f100082;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C221=0x7f100083;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C222=0x7f100084;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C223=0x7f100085;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C224=0x7f100086;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C225=0x7f100087;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C226=0x7f100088;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C227=0x7f100089;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C228=0x7f10008a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C229=0x7f10008b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C23=0x7f10008c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C230=0x7f10008d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C231=0x7f10008e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C232=0x7f10008f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C233=0x7f100090;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C234=0x7f100091;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C235=0x7f100092;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C236=0x7f100093;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C237=0x7f100094;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C238=0x7f100095;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C239=0x7f100096;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C24=0x7f100097;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C240=0x7f100098;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C241=0x7f100099;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C242=0x7f10009a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C243=0x7f10009b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C244=0x7f10009c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C245=0x7f10009d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C246=0x7f10009e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C247=0x7f10009f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C248=0x7f1000a0;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C249=0x7f1000a1;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C25=0x7f1000a2;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C250=0x7f1000a3;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C251=0x7f1000a4;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C252=0x7f1000a5;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C253=0x7f1000a6;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C254=0x7f1000a7;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C255=0x7f1000a8;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C256=0x7f1000a9;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C257=0x7f1000aa;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C258=0x7f1000ab;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C259=0x7f1000ac;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C26=0x7f1000ad;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C260=0x7f1000ae;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C261=0x7f1000af;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C262=0x7f1000b0;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C263=0x7f1000b1;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C264=0x7f1000b2;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C265=0x7f1000b3;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C266=0x7f1000b4;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C267=0x7f1000b5;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C268=0x7f1000b6;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C269=0x7f1000b7;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C27=0x7f1000b8;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C270=0x7f1000b9;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C271=0x7f1000ba;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C272=0x7f1000bb;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C273=0x7f1000bc;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C274=0x7f1000bd;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C275=0x7f1000be;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C276=0x7f1000bf;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C277=0x7f1000c0;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C278=0x7f1000c1;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C279=0x7f1000c2;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C28=0x7f1000c3;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C280=0x7f1000c4;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C281=0x7f1000c5;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C282=0x7f1000c6;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C283=0x7f1000c7;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C284=0x7f1000c8;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C285=0x7f1000c9;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C286=0x7f1000ca;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C287=0x7f1000cb;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C288=0x7f1000cc;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C29=0x7f1000cd;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C290=0x7f1000ce;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C291=0x7f1000cf;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C292=0x7f1000d0;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C293=0x7f1000d1;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C294=0x7f1000d2;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C295=0x7f1000d3;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C296=0x7f1000d4;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C297=0x7f1000d5;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C298=0x7f1000d6;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C299=0x7f1000d7;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C3=0x7f1000d8;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C300=0x7f1000d9;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C301=0x7f1000da;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C302=0x7f1000db;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C303=0x7f1000dc;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C304=0x7f1000dd;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C305=0x7f1000de;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C306=0x7f1000df;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C307=0x7f1000e0;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C308=0x7f1000e1;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C309=0x7f1000e2;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C31=0x7f1000e3;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C310=0x7f1000e4;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C311=0x7f1000e5;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C312=0x7f1000e6;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C313=0x7f1000e7;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C314=0x7f1000e8;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C315=0x7f1000e9;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C316=0x7f1000ea;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C317=0x7f1000eb;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C318=0x7f1000ec;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C319=0x7f1000ed;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C32=0x7f1000ee;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C320=0x7f1000ef;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C321=0x7f1000f0;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C322=0x7f1000f1;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C323=0x7f1000f2;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C324=0x7f1000f3;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C325=0x7f1000f4;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C326=0x7f1000f5;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C327=0x7f1000f6;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C328=0x7f1000f7;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C329=0x7f1000f8;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C33=0x7f1000f9;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C330=0x7f1000fa;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C331=0x7f1000fb;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C332=0x7f1000fc;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C333=0x7f1000fd;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C334=0x7f1000fe;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C335=0x7f1000ff;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C336=0x7f100100;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C337=0x7f100101;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C338=0x7f100102;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C339=0x7f100103;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C34=0x7f100104;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C340=0x7f100105;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C341=0x7f100106;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C342=0x7f100107;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C343=0x7f100108;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C344=0x7f100109;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C345=0x7f10010a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C346=0x7f10010b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C347=0x7f10010c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C348=0x7f10010d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C35=0x7f10010e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C36=0x7f10010f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C37=0x7f100110;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C38=0x7f100111;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C39=0x7f100112;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C4=0x7f100113;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C40=0x7f100114;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C42=0x7f100115;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C43=0x7f100116;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C44=0x7f100117;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C45=0x7f100118;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C46=0x7f100119;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C47=0x7f10011a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C48=0x7f10011b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C49=0x7f10011c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C5=0x7f10011d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C50=0x7f10011e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C51=0x7f10011f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C52=0x7f100120;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C53=0x7f100121;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C54=0x7f100122;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C55=0x7f100123;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C56=0x7f100124;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C57=0x7f100125;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C58=0x7f100126;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C59=0x7f100127;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C6=0x7f100128;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C60=0x7f100129;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C61=0x7f10012a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C62=0x7f10012b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C63=0x7f10012c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C64=0x7f10012d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C65=0x7f10012e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C66=0x7f10012f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C67=0x7f100130;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C68=0x7f100131;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C69=0x7f100132;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C7=0x7f100133;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C70=0x7f100134;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C71=0x7f100135;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C72=0x7f100136;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C73=0x7f100137;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C74=0x7f100138;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C75=0x7f100139;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C76=0x7f10013a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C77=0x7f10013b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C78=0x7f10013c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C79=0x7f10013d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C8=0x7f10013e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C80=0x7f10013f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C81=0x7f100140;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C82=0x7f100141;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C83=0x7f100142;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C84=0x7f100143;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C85=0x7f100144;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C86=0x7f100145;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C87=0x7f100146;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C88=0x7f100147;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C89=0x7f100148;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C9=0x7f100149;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C90=0x7f10014a;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C91=0x7f10014b;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C92=0x7f10014c;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C93=0x7f10014d;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C94=0x7f10014e;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C95=0x7f10014f;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C96=0x7f100150;
    /**
     * Format: [index]=[city name]:[phonetic name]|[timezone id]
     */
    public static final int C97=0x7f100151;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C98=0x7f100152;
    /**
     * Format: [index]=[city name]|[timezone id]
     */
    public static final int C99=0x7f100153;
    /**
     * Format for displaying the day of week with a preceding slash divider.
     */
    public static final int abbrev_wday=0x7f100154;
    /**
     * String matching the lock screen format for displaying the date.
     */
    public static final int abbrev_wday_month_day_no_year=0x7f100155;
    /**
     * Content description for the action bar "home" affordance. [CHAR LIMIT=NONE]
     */
    public static final int abc_action_bar_home_description=0x7f100156;
    /**
     * Content description for the action bar "up" affordance. [CHAR LIMIT=NONE]
     */
    public static final int abc_action_bar_up_description=0x7f100157;
    /**
     * Content description for the action menu overflow button. [CHAR LIMIT=NONE]
     */
    public static final int abc_action_menu_overflow_description=0x7f100158;
    /**
     * Label for the "Done" button on the far left of action mode toolbars.
     */
    public static final int abc_action_mode_done=0x7f100159;
    /**
     * Title for a button to expand the list of activities in ActivityChooserView [CHAR LIMIT=25]
     */
    public static final int abc_activity_chooser_view_see_all=0x7f10015a;
    /**
     * Description of the shwoing of a popup window with activities to choose from. [CHAR LIMIT=NONE]
     */
    public static final int abc_activitychooserview_choose_application=0x7f10015b;
    /**
     * Default text for a button that can be toggled on and off.
     */
    public static final int abc_capital_off=0x7f10015c;
    /**
     * Default text for a button that can be toggled on and off.
     */
    public static final int abc_capital_on=0x7f10015d;
    public static final int abc_font_family_body_1_material=0x7f10015e;
    public static final int abc_font_family_body_2_material=0x7f10015f;
    public static final int abc_font_family_button_material=0x7f100160;
    public static final int abc_font_family_caption_material=0x7f100161;
    public static final int abc_font_family_display_1_material=0x7f100162;
    public static final int abc_font_family_display_2_material=0x7f100163;
    public static final int abc_font_family_display_3_material=0x7f100164;
    public static final int abc_font_family_display_4_material=0x7f100165;
    public static final int abc_font_family_headline_material=0x7f100166;
    public static final int abc_font_family_menu_material=0x7f100167;
    public static final int abc_font_family_subhead_material=0x7f100168;
    public static final int abc_font_family_title_material=0x7f100169;
    /**
     * Default hint text for the system-wide search UI's text field. [CHAR LIMIT=30]
     */
    public static final int abc_search_hint=0x7f10016a;
    /**
     * SearchView accessibility description for clear button [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_clear=0x7f10016b;
    /**
     * SearchView accessibility description for search text field [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_query=0x7f10016c;
    /**
     * SearchView accessibility description for search button [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_search=0x7f10016d;
    /**
     * SearchView accessibility description for submit button [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_submit=0x7f10016e;
    /**
     * SearchView accessibility description for voice button [CHAR LIMIT=NONE]
     */
    public static final int abc_searchview_description_voice=0x7f10016f;
    /**
     * Description of the choose target button in a ShareActionProvider (share UI). [CHAR LIMIT=NONE]
     */
    public static final int abc_shareactionprovider_share_with=0x7f100170;
    /**
     * Description of a share target (both in the list of such or the default share button) in a ShareActionProvider (share UI). [CHAR LIMIT=NONE]
     */
    public static final int abc_shareactionprovider_share_with_application=0x7f100171;
    /**
     * Content description for the Toolbar icon used to collapse an expanded action mode. [CHAR LIMIT=NONE]
     */
    public static final int abc_toolbar_collapse_description=0x7f100172;
    public static final int action_add_minute=0x7f100173;
    public static final int action_collapse=0x7f100174;
    public static final int action_collapse_implied=0x7f100175;
    public static final int action_create=0x7f100176;
    public static final int action_delete=0x7f100177;
    public static final int action_disable=0x7f100178;
    /**
     * Action names for events describe what type of manipulation was performed.
     */
    public static final int action_dismiss=0x7f100179;
    public static final int action_enable=0x7f10017a;
    public static final int action_expand=0x7f10017b;
    public static final int action_expand_implied=0x7f10017c;
    public static final int action_fire=0x7f10017d;
    public static final int action_hide=0x7f10017e;
    public static final int action_lap=0x7f10017f;
    public static final int action_pause=0x7f100180;
    public static final int action_reset=0x7f100181;
    public static final int action_set_label=0x7f100182;
    public static final int action_set_ringtone=0x7f100183;
    public static final int action_set_time=0x7f100184;
    public static final int action_show=0x7f100185;
    public static final int action_snooze=0x7f100186;
    public static final int action_start=0x7f100187;
    public static final int action_stop=0x7f100188;
    public static final int action_toggle_repeat_days=0x7f100189;
    public static final int action_toggle_vibrate=0x7f10018a;
    public static final int action_update=0x7f10018b;
    /**
     * Label for adding a new ringtone sound [CHAR LIMIT=30]
     */
    public static final int add_new_sound=0x7f10018c;
    /**
     * Button labels on the alarm dialog: Dismiss
     */
    public static final int alarm_alert_dismiss_text=0x7f10018d;
    /**
     * The text shown after user dismissed an alerting alarm [CHAR LIMIT=15]
     */
    public static final int alarm_alert_off_text=0x7f10018e;
    /**
     * Text to appear in the notification title while an alarm is about to go off.
     */
    public static final int alarm_alert_predismiss_title=0x7f10018f;
    /**
     * Button labels on the alarm dialog: Snooze
     */
    public static final int alarm_alert_snooze_text=0x7f100190;
    /**
     * Text to appear inside a notification while an alarm is snoozing.
     */
    public static final int alarm_alert_snooze_until=0x7f100191;
    /**
     * The text shown after user snoozed an alerting alarm. The text will be shown
     * together with the number of minutes in two separate lines. For example:
     * Snoozed
     * 10 min
     * [CHAR LIMIT=10]
     */
    public static final int alarm_alert_snoozed_text=0x7f100192;
    /**
     * String that represents that the user attempted to dismiss an alarm that is more than
     * 24 hours away
     * %s represents the time of the alarm (e.g. 15:39)
     * [CHAR LIMIT=NONE]
     */
    public static final int alarm_cant_be_dismissed_still_more_than_24_hours_away=0x7f100193;
    /**
     * Toast content when an alarm was deleted
     */
    public static final int alarm_deleted=0x7f100194;
    /**
     * String that represents that the user has dismissed an alarm through a voice action.
     * %s represents alarm time, e.g. 14:20
     * [CHAR LIMIT=NONE]
     */
    public static final int alarm_is_dismissed=0x7f100195;
    /**
     * String that represents that the user has dismissed an alarm through a voice action.
     * %s represents alarm time, e.g. 14:20
     * [CHAR LIMIT=NONE]
     */
    public static final int alarm_is_set=0x7f100196;
    /**
     * String that represents that the user has snoozed an alarm through a voice action for 10
     * minutes.
     * %s represents alarm time, e.g. 14:20
     * [CHAR LIMIT=NONE]
     */
    public static final int alarm_is_snoozed=0x7f100197;
    public static final int alarm_missed_text=0x7f100198;
    /**
     * Alarm Alert screen: this message is shown after an alarm rung
     * unattended for a number of minutes.  It tells the user that
     * the alarm has been silenced.
     */
    public static final int alarm_missed_title=0x7f100199;
    /**
     * Setting labels on Set alarm screen: Repeat
     */
    public static final int alarm_repeat=0x7f10019a;
    /**
     * Header in the preferences settings for the section pertaining to alarms
     */
    public static final int alarm_settings=0x7f10019b;
    /**
     * Title for alarm ringtone picker screen [CHAR LIMIT=30]
     */
    public static final int alarm_sound=0x7f10019c;
    /**
     * Label shown when user is setting up non-repeating alarm for later today [CHAR LIMIT=15]
     */
    public static final int alarm_today=0x7f10019d;
    /**
     * Label shown when user is setting up non-repeating alarm for tomorrow [CHAR LIMIT=15]
     */
    public static final int alarm_tomorrow=0x7f10019e;
    /**
     * Description of the button to undo change to alarm
     */
    public static final int alarm_undo=0x7f10019f;
    /**
     * Setting labels on Set alarm screen: Vibration on or off
     */
    public static final int alarm_vibrate=0x7f1001a0;
    /**
     * Text to display when alarm volume is muted. [CHAR LIMIT=50]
     */
    public static final int alarm_volume_muted=0x7f1001a1;
    /**
     * Setting title for changing the alarm volume.
     */
    public static final int alarm_volume_title=0x7f1001a2;
    /**
     * Text to display when do-not-disturb is blocking alarms. [CHAR LIMIT=60]
     */
    public static final int alarms_blocked_by_dnd=0x7f1001a3;
    /**
     * Notification text when multiple timers are paused.
     */
    public static final int all_timers_stopped_notif=0x7f1001a4;
    /**
     * Label for analog clock gadget displayed in the widget picker. [CHAR LIMIT=18]
     */
    public static final int analog_gadget=0x7f1001a5;
    /**
     * Label for the this application displayed on-screen when this application must be represented to the user.
     */
    public static final int app_label=0x7f1001a6;
    /**
     * Text to display when app notifications are blocked. [CHAR LIMIT=50]
     */
    public static final int app_notifications_blocked=0x7f1001a7;
    /**
     * The class name to the ScrollingChildBehavior required for AppBarLayout
     */
    public static final int appbar_scrolling_view_behavior=0x7f1001a8;
    /**
     * Auto silence summary when turned off
     */
    public static final int auto_silence_never=0x7f1001a9;
    /**
     * Auto silence preference title
     */
    public static final int auto_silence_title=0x7f1001aa;
    /**
     * Title for an option that will automatically show a clock representing the user's regular timezone on the main fragment whenever the user leaves their regular timezone
     */
    public static final int automatic_home_clock=0x7f1001ab;
    /**
     * Describes the functionality provided by the automatic_home_clock option
     */
    public static final int automatic_home_clock_summary=0x7f1001ac;
    /**
     * The class name to the BottomSheetBehavior
     */
    public static final int bottom_sheet_behavior=0x7f1001ad;
    /**
     * Describes the purpose of the button to start the activity to add/edit/delete alarms
     */
    public static final int button_alarms=0x7f1001ae;
    /**
     * Describes the purpose of the button which provides a list of cities for the world clock settings
     */
    public static final int button_cities=0x7f1001af;
    /**
     * Category names for events describe the type of object that was manipulated.
     */
    public static final int category_alarm=0x7f1001b0;
    public static final int category_analog_widget=0x7f1001b1;
    public static final int category_clock=0x7f1001b2;
    public static final int category_digital_widget=0x7f1001b3;
    public static final int category_screensaver=0x7f1001b4;
    public static final int category_stopwatch=0x7f1001b5;
    public static final int category_timer=0x7f1001b6;
    /**
     * Text for action that shows the UI that changes the default alarm ringtone. [CHAR LIMIT=20]
     */
    public static final int change_setting_action=0x7f1001b7;
    /**
     * The text pattern for the character counter
     */
    public static final int character_counter_pattern=0x7f1001b8;
    /**
     * Label for the Cities activity displayed on-screen when that activity must be represented to the user.
     */
    public static final int cities_activity_title=0x7f1001b9;
    /**
     * Accessibility string read when a city checkbox is checked.
     * Ex. "Ann Arbor checked"
     */
    public static final int city_checked=0x7f1001ba;
    /**
     * Accessibility string read when a city checkbox is unchecked.
     * Ex. "Ann Arbor unchecked"
     */
    public static final int city_unchecked=0x7f1001bb;
    /**
     * ⏰ (A custom font replaces the A glyph with a clock icon)
     */
    public static final int clock_emoji=0x7f1001bc;
    /**
     * Header in the preferences settings for the section pertaining to clocks on the main fragment
     */
    public static final int clock_settings=0x7f1001bd;
    /**
     * Header for a Clock Dream Setting referring to choosing analog or digital style
     */
    public static final int clock_style=0x7f1001be;
    /**
     * Description of the up caret in the alarm alert screen to collapse the alarm content to summary perspective. [CHAR LIMIT=NONE]
     */
    public static final int collapse_alarm=0x7f1001bf;
    /**
     * Text that explains what happens to alarms and timers after removing the custom ringtone sound they use [CHAR LIMIT=NONE]
     */
    public static final int confirm_remove_custom_ringtone=0x7f1001c0;
    /**
     * Setting title for changing the crescendo duration.
     */
    public static final int crescendo_duration_title=0x7f1001c1;
    /**
     * Text that explains that the ringtone is inaccessible to the app [CHAR LIMIT=NONE]
     */
    public static final int custom_ringtone_lost_permissions=0x7f1001c2;
    /**
     * Repeat options that appear under an alarm on main Alarm Clock
     * screen to identify repetition schedule: concatenate days with
     * this character, i.e. "Mon, Tue, Wed"
     */
    public static final int day_concat=0x7f1001c3;
    /**
     * Title of default ringtone played when an alarm triggers [CHAR LIMIT=30]
     */
    public static final int default_alarm_ringtone_title=0x7f1001c4;
    /**
     * Default clock style.
     */
    public static final int default_clock_style=0x7f1001c5;
    /**
     * Default label to display for an alarm
     */
    public static final int default_label=0x7f1001c6;
    /**
     * Title of default ringtone played when a timer expires.
     */
    public static final int default_timer_ringtone_title=0x7f1001c7;
    /**
     * Setting labels on Set alarm screen: Delete [CHAR LIMIT=15]
     */
    public static final int delete=0x7f1001c8;
    /**
     * Text instruction for alarm icon on alarm lock screen. The snooze button will still
     * be on the left even on RTL languages so please do not reverse this during
     * translation.
     */
    public static final int description_direction_both=0x7f1001c9;
    /**
     * Text instruction for snooze alarm on alarm lock screen. The snooze button will still
     * be on the left even on RTL languages so please do not reverse this during
     * translation.
     */
    public static final int description_direction_left=0x7f1001ca;
    /**
     * Text instruction for dismiss alarm on alarm lock screen. The dismiss button will still
     * be on the right even on RTL languages so please do not reverse this during
     * translation.
     */
    public static final int description_direction_right=0x7f1001cb;
    /**
     * Label for "Device sounds" section on ringtone selection screen [CHAR LIMIT=60]
     */
    public static final int device_sounds=0x7f1001cc;
    /**
     * Label for digital clock gadget displayed in the widget picker. [CHAR LIMIT=18]
     */
    public static final int digital_gadget=0x7f1001cd;
    /**
     * String that shows up in the action bar for the Picker Activity
     * where a use gets to pick which alarm to dismiss
     * [CHAR LIMIT=NONE]
     */
    public static final int dismiss_alarm=0x7f1001ce;
    /**
     * Header for a setting referring to showing seconds on the main clock
     */
    public static final int display_clock_seconds_pref=0x7f1001cf;
    /**
     * Repeat options that appear under an alarm on main Alarm Clock
     * screen to identify repetition schedule: special case for when
     * the alarm is set to repeat every day
     */
    public static final int every_day=0x7f1001d0;
    /**
     * Description of the down caret in the alarm alert screen to expand the alarm content to edit perspective. [CHAR LIMIT=NONE]
     */
    public static final int expand_alarm=0x7f1001d1;
    /**
     * Format for describing the date, for accessibility.
     */
    public static final int full_wday_month_day_no_year=0x7f1001d2;
    /**
     * Title with the clock on the main page displaying the user's regular timezone (shows when automatic_home_clock enabled)
     */
    public static final int home_label=0x7f1001d3;
    /**
     * Title in the preferences change the time zone for the user's home
     */
    public static final int home_time_zone=0x7f1001d4;
    /**
     * Title in a list dialog box to pick a time zone for the user's home
     */
    public static final int home_time_zone_title=0x7f1001d5;
    /**
     * Abbreviation for temporal hours [CHAR LIMIT=1]
     */
    public static final int hours_label=0x7f1001d6;
    public static final int hours_minutes_seconds=0x7f1001d7;
    /**
     * String that represents that invalid time for an alarm was specified, e.g. 23:00am
     * or 27:68pm.
     * First %d represents hour, second %d represents minutes, %s represents am/pm,
     * If no am/pm is passed in (e.g. the locale uses 24h time) only hour and minute are printed.
     * [CHAR LIMIT=NONE]
     */
    public static final int invalid_time=0x7f1001d8;
    /**
     * String that represents that the user attempted to start a timer through a voice action
     * but specified invalid length.
     * [CHAR LIMIT=NONE]
     */
    public static final int invalid_timer_length=0x7f1001d9;
    /**
     * Setting label on Set alarm screen: Label
     */
    public static final int label=0x7f1001da;
    /**
     * Accessibility labels for alarm buttons
     */
    public static final int label_description=0x7f1001db;
    /**
     * Label names for events describe the entity responsible for the event.
     */
    public static final int label_deskclock=0x7f1001dc;
    public static final int label_hardware_button=0x7f1001dd;
    public static final int label_intent=0x7f1001de;
    public static final int label_notification=0x7f1001df;
    public static final int label_shortcut=0x7f1001e0;
    /**
     * Formats the lap number display. Allows for control of the symbol preceding the lap number. [CHAR LIMIT=5]
     */
    public static final int lap_number_double_digit=0x7f1001e1;
    /**
     * Formats the lap number display. Allows for control of the symbol preceding the lap number. [CHAR LIMIT=5]
     */
    public static final int lap_number_single_digit=0x7f1001e2;
    /**
     * Message indicating the widget is being loaded.
     */
    public static final int loading_widget=0x7f1001e3;
    /**
     * String matching the lock screen format for displaying 12-hour times.
     */
    public static final int lock_screen_12_hour_format=0x7f1001e4;
    /**
     * String matching the lock screen format for displaying 24-hour times.
     */
    public static final int lock_screen_24_hour_format=0x7f1001e5;
    /**
     * Describes the purpose of the tab button which which switches the activity to the Alarm page
     */
    public static final int menu_alarm=0x7f1001e6;
    /**
     * Describes the purpose of the tab button which which switches the activity to the Clock page
     */
    public static final int menu_clock=0x7f1001e7;
    /**
     * Menu item on most screens to get to the help information
     */
    public static final int menu_item_help=0x7f1001e8;
    /**
     * Menu item on clock screen to enter screen saver.
     */
    public static final int menu_item_night_mode=0x7f1001e9;
    /**
     * Menu item on most screens to get to more settings
     */
    public static final int menu_item_settings=0x7f1001ea;
    /**
     * Menu item on Cities screen to sort by GMT offset
     */
    public static final int menu_item_sort_by_gmt_offset=0x7f1001eb;
    /**
     * Menu item on Cities screen to sort by alphabetical order
     */
    public static final int menu_item_sort_by_name=0x7f1001ec;
    /**
     * Describes the purpose of the tab button which which switches the activity to the Stopwatch page
     */
    public static final int menu_stopwatch=0x7f1001ed;
    /**
     * Describes the purpose of the tab button which which switches the activity to the Timer page
     */
    public static final int menu_timer=0x7f1001ee;
    /**
     * Abbreviation for temporal minutes [CHAR LIMIT=1]
     */
    public static final int minutes_label=0x7f1001ef;
    public static final int minutes_seconds=0x7f1001f0;
    /**
     * Text to appear in when trying to view a missed alarm that has been deleted
     */
    public static final int missed_alarm_has_been_deleted=0x7f1001f1;
    /**
     * Label associated with a notification for a missed named Timer. [CHAR LIMIT=NONE]
     */
    public static final int missed_named_timer_notification_label=0x7f1001f2;
    /**
     * Label associated with a notification for a missed Timer. [CHAR LIMIT=30]
     */
    public static final int missed_timer_notification_label=0x7f1001f3;
    /**
     * Description of field showing the next alarm time in the clock page, for accessibility.
     */
    public static final int next_alarm_description=0x7f1001f4;
    /**
     * Notification text when at least one timer, of those in use, is counting down.
     */
    public static final int next_timer_notif=0x7f1001f5;
    /**
     * Describes intensity of display diminuation during screen saver
     */
    public static final int night_mode_summary=0x7f1001f6;
    /**
     * Title for check box to pick intensity of display diminuation during screen saver
     */
    public static final int night_mode_title=0x7f1001f7;
    /**
     * String that represents that no alarm has been specified for a requested hour:minutes.
     * This happens when a user sends a voice command 'dismiss my alarm at 3:00pm' but they have no
     * alarms specified for that time. %s represents the time of the alarm.
     * [CHAR LIMIT=NONE]
     */
    public static final int no_alarm_at=0x7f1001f8;
    /**
     * String that represents that the user has sent a voice command 'dismiss my alarm at 3pm' when
     * there was no alarm scheduled for that time (they might have had an alarm for 3pm on the list
     * but it was disabled).
     * [CHAR LIMIT=NONE]
     */
    public static final int no_alarm_scheduled_for_this_time=0x7f1001f9;
    /**
     * String for no alarms
     */
    public static final int no_alarms=0x7f1001fa;
    /**
     * String that represents that no alarm has been specified for a requested label.
     * This happens when a user sends a voice command 'dismiss my alarm with label pick up kids'
     * but they have no alarms with that label.
     * [CHAR LIMIT=NONE]
     */
    public static final int no_alarms_with_label=0x7f1001fb;
    /**
     * String that represents that the user doesn't have any alarms firing at the moment.
     * [CHAR LIMIT=NONE]
     */
    public static final int no_firing_alarms=0x7f1001fc;
    /**
     * String that represents that the user specified that they want to select an alarm to
     * dismiss by specifying a 'label' but they didn't specify any labels.
     * [CHAR LIMIT=NONE]
     */
    public static final int no_label_specified=0x7f1001fd;
    /**
     * String that represents that the user doesn't have any alarms scheduled. This happens when
     * a user sends a voice command 'dismiss next alarm' or 'dismiss all of my alarms' but they have
     * no alarms scheduled in the app.
     * [CHAR LIMIT=NONE]
     */
    public static final int no_scheduled_alarms=0x7f1001fe;
    /**
     * Title for preference to change date & time
     */
    public static final int open_date_settings=0x7f1001ff;
    /**
     * Content description for the password visibility toggle button. [CHAR LIMIT=NONE]
     */
    public static final int password_toggle_content_description=0x7f100200;
    public static final int path_password_eye=0x7f100201;
    public static final int path_password_eye_mask_strike_through=0x7f100202;
    /**
     * Resources used in the password visibility anim, see @drawable/design_password_eye
     */
    public static final int path_password_eye_mask_visible=0x7f100203;
    public static final int path_password_strike_through=0x7f100204;
    /**
     * String that represents that further action is needed from the user in case their
     * voice command was ambiguous or there are more than 1 alarms that match their request.
     * The user needs to choose an alarm they want to dismiss through the UI
     * [CHAR LIMIT=NONE]
     */
    public static final int pick_alarm_to_dismiss=0x7f100205;
    /**
     * Label for removing a ringtone sound [CHAR LIMIT=30]
     */
    public static final int remove_sound=0x7f100206;
    public static final int ringtone_description=0x7f100207;
    /**
     * Title for the screen saver settings activity.
     */
    public static final int screensaver_settings=0x7f100208;
    public static final int search_menu_title=0x7f100209;
    public static final int seconds=0x7f10020a;
    /**
     * Abbreviation for temporal seconds [CHAR LIMIT=1]
     */
    public static final int seconds_label=0x7f10020b;
    /**
     * Label for selected cities in Cities list view
     */
    public static final int selected_cities_label=0x7f10020c;
    /**
     * Label for the Settings activity displayed on-screen when that activity must be represented to the user.
     */
    public static final int settings=0x7f10020d;
    /**
     * Long label for a shortcut to create a new alarm. The maximum length is ~25 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_new_alarm_long=0x7f10020e;
    /**
     * Short label for a shortcut to create a new alarm. The maximum length is ~10 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_new_alarm_short=0x7f10020f;
    /**
     * Long label for a shortcut to create a new timer. The maximum length is ~25 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_new_timer_long=0x7f100210;
    /**
     * Short label for a shortcut to create a new timer. The maximum length is ~10 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_new_timer_short=0x7f100211;
    /**
     * Long label for a shortcut to pause the stopwatch. The maximum length is ~25 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_pause_stopwatch_long=0x7f100212;
    /**
     * Short label for a shortcut to pause the stopwatch. The maximum length is ~10 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_pause_stopwatch_short=0x7f100213;
    /**
     * Long label for a shortcut to start the screensaver. The maximum length is ~25 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_start_screensaver_long=0x7f100214;
    /**
     * Short label for a shortcut to start the screensaver. The maximum length is ~10 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_start_screensaver_short=0x7f100215;
    /**
     * Long label for a shortcut to start the stopwatch. The maximum length is ~25 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_start_stopwatch_long=0x7f100216;
    /**
     * Short label for a shortcut to start the stopwatch. The maximum length is ~10 characters
     * (longer translations may be truncated).
     */
    public static final int shortcut_start_stopwatch_short=0x7f100217;
    /**
     * Text to display when system default alarm ringtone is silent. [CHAR LIMIT=50]
     */
    public static final int silent_default_alarm_ringtone=0x7f100218;
    /**
     * Title for the silent ringtone.
     */
    public static final int silent_ringtone_title=0x7f100219;
    /**
     * Setting title for changing the snooze duration.
     */
    public static final int snooze_duration_title=0x7f10021a;
    /**
     * Text to use when the number in a notification info is too large
     * (greater than status_bar_notification_info_maxnum, defined in
     * values/config.xml) and must be truncated. May need to be localized
     * for most appropriate textual indicator of "more than X".
     * [CHAR LIMIT=4]
     */
    public static final int status_bar_notification_info_overflow=0x7f10021b;
    /**
     * Describes the service that processes actions originating from stopwatch notifications.
     */
    public static final int stopwatch_service_desc=0x7f10021c;
    /**
     * Describes the purpose of the button to record current the stopwatch value into the collection of lap times.
     */
    public static final int sw_lap_button=0x7f10021d;
    /**
     * Label to enumerate the number of laps in the notification the user has counted
     */
    public static final int sw_notification_lap_number=0x7f10021e;
    /**
     * Describes the purpose of the button to pause a stopwatch.
     */
    public static final int sw_pause_button=0x7f10021f;
    /**
     * Describes the purpose of the button
     * for stopwatch: return stopwatch to zero and remove the lap times.
     * for timer: return timer to originally set duration.
     * [CHAR LIMIT=15]
     */
    public static final int sw_reset_button=0x7f100220;
    /**
     * Describes the purpose of the button to resume running timer. [CHAR LIMIT=15]
     */
    public static final int sw_resume_button=0x7f100221;
    /**
     * Describes the purpose of the button to share the stopwatch value.
     * Also used as title for chooser when sharing stopwatch results.
     */
    public static final int sw_share_button=0x7f100222;
    /**
     * Header within the message created to share a list of lap times (a new line is appended to this)
     */
    public static final int sw_share_laps=0x7f100223;
    /**
     * Sentence within the message created to share the total time recorded within the stopwatch
     */
    public static final int sw_share_main=0x7f100224;
    /**
     * Describes the purpose of the button to begin running a stopwatch
     */
    public static final int sw_start_button=0x7f100225;
    /**
     * Description for the paused stop watch
     */
    public static final int swn_paused=0x7f100226;
    /**
     * Timer accessibility announcements
     */
    public static final int timer_accessibility_one_minute_added=0x7f100227;
    public static final int timer_accessibility_started=0x7f100228;
    public static final int timer_accessibility_stopped=0x7f100229;
    /**
     * Label for adding one minute to a timer. [CHAR LIMIT=10]
     */
    public static final int timer_add_minute=0x7f10022a;
    /**
     * Describes the purpose of the button to add a new timer
     */
    public static final int timer_add_timer=0x7f10022b;
    /**
     * Describes the purpose of the button to discard the current dialog values. Will also close the dialog if other time's exist
     */
    public static final int timer_cancel=0x7f10022c;
    /**
     * Accessibility announcement when a timer is canceled.
     */
    public static final int timer_canceled=0x7f10022d;
    /**
     * String that represents that the user has successfully created a timer through a voice action.
     * [CHAR LIMIT=NONE]
     */
    public static final int timer_created=0x7f10022e;
    /**
     * Describes the purpose of the button to delete a timer.
     */
    public static final int timer_delete=0x7f10022f;
    /**
     * String that represents that the user has successfully reset a timer through a voice action
     * that was marked as deleteAfterUse and was thus deleted instead.
     * [CHAR LIMIT=NONE]
     */
    public static final int timer_deleted=0x7f100230;
    /**
     * Talkback description for deleting a number.
     */
    public static final int timer_descriptive_delete=0x7f100231;
    /**
     * Notification content shown when multiple timers have been missed. Arg is the number of
     * timers. [CHAR LIMIT=25]
     */
    public static final int timer_multi_missed=0x7f100232;
    /**
     * Notification content shown when multiple timers have completed and have no more time
     * remaining. Arg is the number of timers. [CHAR LIMIT=25]
     */
    public static final int timer_multi_times_up=0x7f100233;
    /**
     * Label associated with a notification for a Timer
     */
    public static final int timer_notification_label=0x7f100234;
    public static final int timer_notifications_hours=0x7f100235;
    public static final int timer_notifications_hours_minutes=0x7f100236;
    public static final int timer_notifications_hours_minutes_seconds=0x7f100237;
    public static final int timer_notifications_hours_seconds=0x7f100238;
    /**
     * Timer notification: how long from now until timer goes off.
     * (Also used for timer accessibility announcements.)
     */
    public static final int timer_notifications_less_min=0x7f100239;
    public static final int timer_notifications_minutes=0x7f10023a;
    public static final int timer_notifications_minutes_seconds=0x7f10023b;
    public static final int timer_notifications_seconds=0x7f10023c;
    /**
     * Describes the purpose of the notification button to pause the timer. [CHAR LIMIT=15]
     */
    public static final int timer_pause=0x7f10023d;
    /**
     * Notification title when timer is paused. [CHAR LIMIT=25]
     */
    public static final int timer_paused=0x7f10023e;
    /**
     * Like "timer_plus_one", but with 'minute' abbreviated for the notification.
     */
    public static final int timer_plus_1_min=0x7f10023f;
    /**
     * Describes the purpose of the button increase the remaining time on a timer by one minute.
     */
    public static final int timer_plus_one=0x7f100240;
    /**
     * Verb inflection to use for multiple time units remaining
     * Ex. "2 minutes remaining"
     */
    public static final int timer_remaining_multiple=0x7f100241;
    /**
     * Verb inflection to use for single time units remaining
     * Ex. "1 minute remaining"
     */
    public static final int timer_remaining_single=0x7f100242;
    /**
     * Describes the purpose of the button to return the timer to it's original starting value.
     */
    public static final int timer_reset=0x7f100243;
    /**
     * Describes the purpose of the notification button to reset all running timers. [CHAR LIMIT=31]
     */
    public static final int timer_reset_all=0x7f100244;
    /**
     * Describes the service that processes actions originating from timer notifications.
     */
    public static final int timer_service_desc=0x7f100245;
    /**
     * Header in the preferences settings for the section pertaining to timers.
     */
    public static final int timer_settings=0x7f100246;
    /**
     * Accessibility description for new timer setup duration (e.g. 1 hour, 10 minutes, 30 seconds). [CHAR LIMIT=NONE]
     */
    public static final int timer_setup_description=0x7f100247;
    /**
     * Title for timer ringtone picker screen [CHAR LIMIT=30]
     */
    public static final int timer_sound=0x7f100248;
    /**
     * Describes the purpose of the button to begin or continue running a timer
     */
    public static final int timer_start=0x7f100249;
    /**
     * Describes the purpose of the button to stop the timer.
     */
    public static final int timer_stop=0x7f10024a;
    /**
     * Describes the purpose of the button to stop all currently firing timers. [CHAR LIMIT=25]
     */
    public static final int timer_stop_all=0x7f10024b;
    /**
     * Notification content shown when a timer has completed and has no more time remaining
     */
    public static final int timer_times_up=0x7f10024c;
    /**
     * Description for timer vibration.
     */
    public static final int timer_vibrate_title=0x7f10024d;
    /**
     * Notification title when at least one timer, of those in use, is counting down.
     */
    public static final int timers_in_use=0x7f10024e;
    /**
     * Notification title when multiple timers are paused. [CHAR LIMIT = 30]
     */
    public static final int timers_stopped=0x7f10024f;
    /**
     * Title for ringtones that cannot be located by uri.
     */
    public static final int unknown_ringtone_title=0x7f100250;
    /**
     * Text for action that presents a volume control to adjust alarm volume. [CHAR LIMIT=20]
     */
    public static final int unmute_alarm_volume=0x7f100251;
    public static final int v7_preference_off=0x7f100252;
    public static final int v7_preference_on=0x7f100253;
    /**
     * Title of the setting to change hardware button behavior. This string
     * should be changed for each piece of hardware. [CHAR LIMIT=20]
     */
    public static final int volume_button_setting_title=0x7f100254;
    /**
     * Week start day preference title.
     */
    public static final int week_start_title=0x7f100255;
    /**
     * slash between date and next alarm in the clock: used for the DigitalAppWidget
     */
    public static final int world_day_of_week_label=0x7f100256;
    /**
     * Number of hours and minutes the world city is ahead of the current city [CHAR LIMIT=NONE]
     */
    public static final int world_hours_minutes_ahead=0x7f100257;
    /**
     * Number of hours and minutes the world city is behind the current city [CHAR LIMIT=NONE]
     */
    public static final int world_hours_minutes_behind=0x7f100258;
    /**
     * The time and day the world city is ahead of the current city [CHAR LIMIT=NONE]
     */
    public static final int world_hours_tomorrow=0x7f100259;
    /**
     * Number of hours the world city is behind the current city [CHAR LIMIT=NONE]
     */
    public static final int world_hours_yesterday=0x7f10025a;
    /**
     * Number of hours or minutes the world city is ahead of the current city [CHAR LIMIT=NONE]
     */
    public static final int world_time_ahead=0x7f10025b;
    /**
     * Number of hours or minutes the world city is behind the current city [CHAR LIMIT=NONE]
     */
    public static final int world_time_behind=0x7f10025c;
    /**
     * The time in a world city is the day after the time in the current city (used in landscape) [CHAR LIMIT=NONE]
     */
    public static final int world_tomorrow=0x7f10025d;
    /**
     * The time in a world city is the day before the time in the current city (used in landscape) [CHAR LIMIT=NONE]
     */
    public static final int world_yesterday=0x7f10025e;
    /**
     * Label for "Your sounds" section on ringtone selection screen [CHAR LIMIT=60]
     */
    public static final int your_sounds=0x7f10025f;
  }
  public static final class style {
    public static final int AlertDialog_AppCompat=0x7f110000;
    public static final int AlertDialog_AppCompat_Light=0x7f110001;
    public static final int Animation_AppCompat_Dialog=0x7f110002;
    public static final int Animation_AppCompat_DropDownUp=0x7f110003;
    public static final int Animation_AppCompat_Tooltip=0x7f110004;
    public static final int Animation_Design_BottomSheetDialog=0x7f110005;
    public static final int Base_AlertDialog_AppCompat=0x7f110006;
    public static final int Base_AlertDialog_AppCompat_Light=0x7f110007;
    public static final int Base_Animation_AppCompat_Dialog=0x7f110008;
    public static final int Base_Animation_AppCompat_DropDownUp=0x7f110009;
    public static final int Base_Animation_AppCompat_Tooltip=0x7f11000a;
    public static final int Base_DialogWindowTitle_AppCompat=0x7f11000b;
    public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f11000c;
    public static final int Base_TextAppearance_AppCompat=0x7f11000d;
    public static final int Base_TextAppearance_AppCompat_Body1=0x7f11000e;
    public static final int Base_TextAppearance_AppCompat_Body2=0x7f11000f;
    public static final int Base_TextAppearance_AppCompat_Button=0x7f110010;
    public static final int Base_TextAppearance_AppCompat_Caption=0x7f110011;
    public static final int Base_TextAppearance_AppCompat_Display1=0x7f110012;
    public static final int Base_TextAppearance_AppCompat_Display2=0x7f110013;
    public static final int Base_TextAppearance_AppCompat_Display3=0x7f110014;
    public static final int Base_TextAppearance_AppCompat_Display4=0x7f110015;
    public static final int Base_TextAppearance_AppCompat_Headline=0x7f110016;
    /**
     * Deprecated text styles
     * Now deprecated styles
     */
    public static final int Base_TextAppearance_AppCompat_Inverse=0x7f110017;
    public static final int Base_TextAppearance_AppCompat_Large=0x7f110018;
    public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f110019;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f11001a;
    public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f11001b;
    public static final int Base_TextAppearance_AppCompat_Medium=0x7f11001c;
    public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f11001d;
    public static final int Base_TextAppearance_AppCompat_Menu=0x7f11001e;
    public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f11001f;
    public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f110020;
    /**
     * Search View result styles
     */
    public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f110021;
    public static final int Base_TextAppearance_AppCompat_Small=0x7f110022;
    public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f110023;
    public static final int Base_TextAppearance_AppCompat_Subhead=0x7f110024;
    public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f110025;
    public static final int Base_TextAppearance_AppCompat_Title=0x7f110026;
    public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f110027;
    public static final int Base_TextAppearance_AppCompat_Tooltip=0x7f110028;
    /**
     * We can use the fixed TextAppearance.Material.Widget.ActionBar.Menu on 23+
     */
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f110029;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f11002a;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f11002b;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f11002c;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f11002d;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f11002e;
    public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f11002f;
    public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f110030;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f110031;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Colored=0x7f110032;
    public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f110033;
    public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f110034;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f110035;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f110036;
    public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f110037;
    public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f110038;
    public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f110039;
    public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f11003a;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f11003b;
    public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f11003c;
    public static final int Base_Theme_AppCompat=0x7f11003d;
    /**
     * Menu/item attributes
     */
    public static final int Base_Theme_AppCompat_CompactMenu=0x7f11003e;
    public static final int Base_Theme_AppCompat_Dialog=0x7f11003f;
    public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f110040;
    public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f110041;
    public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f110042;
    /**
     * We're not large, so redirect to Theme.AppCompat
     */
    public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f110043;
    public static final int Base_Theme_AppCompat_Light=0x7f110044;
    public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f110045;
    public static final int Base_Theme_AppCompat_Light_Dialog=0x7f110046;
    public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f110047;
    public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f110048;
    public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f110049;
    public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f11004a;
    public static final int Base_ThemeOverlay_AppCompat=0x7f11004b;
    public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f11004c;
    public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f11004d;
    public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f11004e;
    public static final int Base_ThemeOverlay_AppCompat_Dialog=0x7f11004f;
    public static final int Base_ThemeOverlay_AppCompat_Dialog_Alert=0x7f110050;
    public static final int Base_ThemeOverlay_AppCompat_Light=0x7f110051;
    public static final int Base_V11_Theme_AppCompat_Dialog=0x7f110052;
    public static final int Base_V11_Theme_AppCompat_Light_Dialog=0x7f110053;
    public static final int Base_V11_ThemeOverlay_AppCompat_Dialog=0x7f110054;
    public static final int Base_V12_Widget_AppCompat_AutoCompleteTextView=0x7f110055;
    public static final int Base_V12_Widget_AppCompat_EditText=0x7f110056;
    public static final int Base_V14_Widget_Design_AppBarLayout=0x7f110057;
    public static final int Base_V21_Theme_AppCompat=0x7f110058;
    public static final int Base_V21_Theme_AppCompat_Dialog=0x7f110059;
    public static final int Base_V21_Theme_AppCompat_Light=0x7f11005a;
    public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f11005b;
    public static final int Base_V21_ThemeOverlay_AppCompat_Dialog=0x7f11005c;
    public static final int Base_V21_Widget_Design_AppBarLayout=0x7f11005d;
    public static final int Base_V22_Theme_AppCompat=0x7f11005e;
    public static final int Base_V22_Theme_AppCompat_Light=0x7f11005f;
    public static final int Base_V23_Theme_AppCompat=0x7f110060;
    public static final int Base_V23_Theme_AppCompat_Light=0x7f110061;
    public static final int Base_V26_Theme_AppCompat=0x7f110062;
    public static final int Base_V26_Theme_AppCompat_Light=0x7f110063;
    public static final int Base_V26_Widget_AppCompat_Toolbar=0x7f110064;
    public static final int Base_V26_Widget_Design_AppBarLayout=0x7f110065;
    /**
     * Base platform-dependent theme providing an action bar in a dark-themed activity.
     */
    public static final int Base_V7_Theme_AppCompat=0x7f110066;
    public static final int Base_V7_Theme_AppCompat_Dialog=0x7f110067;
    /**
     * Base platform-dependent theme providing an action bar in a light-themed activity.
     */
    public static final int Base_V7_Theme_AppCompat_Light=0x7f110068;
    public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f110069;
    /**
     * Theme overlay that overrides window properties to display as a dialog.
     */
    public static final int Base_V7_ThemeOverlay_AppCompat_Dialog=0x7f11006a;
    public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f11006b;
    public static final int Base_V7_Widget_AppCompat_EditText=0x7f11006c;
    public static final int Base_V7_Widget_AppCompat_Toolbar=0x7f11006d;
    public static final int Base_Widget_AppCompat_ActionBar=0x7f11006e;
    public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f11006f;
    public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f110070;
    public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f110071;
    public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f110072;
    /**
     * Action Button Styles
     */
    public static final int Base_Widget_AppCompat_ActionButton=0x7f110073;
    public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f110074;
    public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f110075;
    public static final int Base_Widget_AppCompat_ActionMode=0x7f110076;
    public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f110077;
    public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f110078;
    /**
     * Bordered ink button
     */
    public static final int Base_Widget_AppCompat_Button=0x7f110079;
    /**
     * Borderless ink button
     */
    public static final int Base_Widget_AppCompat_Button_Borderless=0x7f11007a;
    /**
     * Colored borderless ink button
     */
    public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f11007b;
    public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f11007c;
    /**
     * Colored bordered ink button
     */
    public static final int Base_Widget_AppCompat_Button_Colored=0x7f11007d;
    /**
     * Small bordered ink button
     */
    public static final int Base_Widget_AppCompat_Button_Small=0x7f11007e;
    public static final int Base_Widget_AppCompat_ButtonBar=0x7f11007f;
    public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f110080;
    public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f110081;
    public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f110082;
    public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f110083;
    /**
     * contains values used in all dpis except hdpi and xxhdpi
     */
    public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f110084;
    /**
     * contains values used in all dpis
     */
    public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f110085;
    public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f110086;
    public static final int Base_Widget_AppCompat_EditText=0x7f110087;
    public static final int Base_Widget_AppCompat_ImageButton=0x7f110088;
    public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f110089;
    public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f11008a;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f11008b;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f11008c;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f11008d;
    public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f11008e;
    public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f11008f;
    public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f110090;
    public static final int Base_Widget_AppCompat_ListMenuView=0x7f110091;
    /**
     * Popup Menu
     */
    public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f110092;
    /**
     * Base.Widget.AppCompat.Spinner.Underlined is overridden in ldltr-v21 and v23
     */
    public static final int Base_Widget_AppCompat_ListView=0x7f110093;
    /**
     * Spinner Widgets
     */
    public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f110094;
    public static final int Base_Widget_AppCompat_ListView_Menu=0x7f110095;
    public static final int Base_Widget_AppCompat_PopupMenu=0x7f110096;
    public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f110097;
    public static final int Base_Widget_AppCompat_PopupWindow=0x7f110098;
    public static final int Base_Widget_AppCompat_ProgressBar=0x7f110099;
    /**
     * Progress Bar
     * Progress Bar
     */
    public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f11009a;
    public static final int Base_Widget_AppCompat_RatingBar=0x7f11009b;
    public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f11009c;
    public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f11009d;
    public static final int Base_Widget_AppCompat_SearchView=0x7f11009e;
    public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f11009f;
    public static final int Base_Widget_AppCompat_SeekBar=0x7f1100a0;
    /**
     * A seek bar with tick marks at each progress value.
     */
    public static final int Base_Widget_AppCompat_SeekBar_Discrete=0x7f1100a1;
    public static final int Base_Widget_AppCompat_Spinner=0x7f1100a2;
    /**
     * The platform Underlined style only works in LTR in v21-22
     */
    public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f1100a3;
    public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f1100a4;
    public static final int Base_Widget_AppCompat_Toolbar=0x7f1100a5;
    /**
     * Widget.AppCompat.Toolbar style is purposely ommitted. This is because the support
     * Toolbar implementation is used on ALL platforms and relies on the unbundled attrs.
     * The supporting Toolbar styles below only use basic attrs so work fine.
     */
    public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f1100a6;
    public static final int Base_Widget_Design_AppBarLayout=0x7f1100a7;
    public static final int Base_Widget_Design_TabLayout=0x7f1100a8;
    public static final int Platform_AppCompat=0x7f1100a9;
    public static final int Platform_AppCompat_Light=0x7f1100aa;
    /**
     * Overlay themes
     */
    public static final int Platform_ThemeOverlay_AppCompat=0x7f1100ab;
    public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f1100ac;
    public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f1100ad;
    public static final int Platform_V11_AppCompat=0x7f1100ae;
    public static final int Platform_V11_AppCompat_Light=0x7f1100af;
    public static final int Platform_V14_AppCompat=0x7f1100b0;
    public static final int Platform_V14_AppCompat_Light=0x7f1100b1;
    public static final int Platform_V21_AppCompat=0x7f1100b2;
    public static final int Platform_V21_AppCompat_Light=0x7f1100b3;
    public static final int Platform_V25_AppCompat=0x7f1100b4;
    public static final int Platform_V25_AppCompat_Light=0x7f1100b5;
    public static final int Platform_Widget_AppCompat_Spinner=0x7f1100b6;
    public static final int Preference=0x7f1100b7;
    public static final int Preference_Category=0x7f1100b8;
    public static final int Preference_Category_Material=0x7f1100b9;
    public static final int Preference_CheckBoxPreference=0x7f1100ba;
    public static final int Preference_CheckBoxPreference_Material=0x7f1100bb;
    public static final int Preference_DialogPreference=0x7f1100bc;
    public static final int Preference_DialogPreference_EditTextPreference=0x7f1100bd;
    public static final int Preference_DialogPreference_EditTextPreference_Material=0x7f1100be;
    public static final int Preference_DialogPreference_Material=0x7f1100bf;
    public static final int Preference_DropDown=0x7f1100c0;
    public static final int Preference_DropDown_Material=0x7f1100c1;
    public static final int Preference_Information=0x7f1100c2;
    public static final int Preference_Information_Material=0x7f1100c3;
    public static final int Preference_Material=0x7f1100c4;
    public static final int Preference_PreferenceScreen=0x7f1100c5;
    public static final int Preference_PreferenceScreen_Material=0x7f1100c6;
    public static final int Preference_SeekBarPreference=0x7f1100c7;
    public static final int Preference_SeekBarPreference_Material=0x7f1100c8;
    public static final int Preference_SwitchPreference=0x7f1100c9;
    public static final int Preference_SwitchPreference_Material=0x7f1100ca;
    public static final int Preference_SwitchPreferenceCompat=0x7f1100cb;
    public static final int Preference_SwitchPreferenceCompat_Material=0x7f1100cc;
    public static final int PreferenceFragment=0x7f1100cd;
    public static final int PreferenceFragment_Material=0x7f1100ce;
    public static final int PreferenceFragmentList=0x7f1100cf;
    public static final int PreferenceFragmentList_Material=0x7f1100d0;
    public static final int PreferenceThemeOverlay=0x7f1100d1;
    public static final int PreferenceThemeOverlay_v14=0x7f1100d2;
    public static final int PreferenceThemeOverlay_v14_Material=0x7f1100d3;
    public static final int Preference_TextAppearanceMaterialBody2=0x7f1100d4;
    public static final int Preference_TextAppearanceMaterialSubhead=0x7f1100d5;
    public static final int PrimaryLabelTextAppearance=0x7f1100d6;
    public static final int PrimaryLabelTextParentAppearance=0x7f1100d7;
    public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f1100d8;
    public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f1100d9;
    public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f1100da;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f1100db;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f1100dc;
    public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f1100dd;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f1100de;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f1100df;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f1100e0;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f1100e1;
    public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f1100e2;
    public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f1100e3;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f1100e4;
    public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f1100e5;
    public static final int SecondaryLabelTextAppearance=0x7f1100e6;
    public static final int SecondaryLabelTextParentAppearance=0x7f1100e7;
    public static final int TextAppearance_AppCompat=0x7f1100e8;
    public static final int TextAppearance_AppCompat_Body1=0x7f1100e9;
    public static final int TextAppearance_AppCompat_Body2=0x7f1100ea;
    public static final int TextAppearance_AppCompat_Button=0x7f1100eb;
    public static final int TextAppearance_AppCompat_Caption=0x7f1100ec;
    public static final int TextAppearance_AppCompat_Display1=0x7f1100ed;
    public static final int TextAppearance_AppCompat_Display2=0x7f1100ee;
    public static final int TextAppearance_AppCompat_Display3=0x7f1100ef;
    public static final int TextAppearance_AppCompat_Display4=0x7f1100f0;
    public static final int TextAppearance_AppCompat_Headline=0x7f1100f1;
    public static final int TextAppearance_AppCompat_Inverse=0x7f1100f2;
    public static final int TextAppearance_AppCompat_Large=0x7f1100f3;
    public static final int TextAppearance_AppCompat_Large_Inverse=0x7f1100f4;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f1100f5;
    public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f1100f6;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f1100f7;
    public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f1100f8;
    public static final int TextAppearance_AppCompat_Medium=0x7f1100f9;
    public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f1100fa;
    public static final int TextAppearance_AppCompat_Menu=0x7f1100fb;
    public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f1100fc;
    public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f1100fd;
    public static final int TextAppearance_AppCompat_Small=0x7f1100fe;
    public static final int TextAppearance_AppCompat_Small_Inverse=0x7f1100ff;
    public static final int TextAppearance_AppCompat_Subhead=0x7f110100;
    public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f110101;
    public static final int TextAppearance_AppCompat_Title=0x7f110102;
    public static final int TextAppearance_AppCompat_Title_Inverse=0x7f110103;
    public static final int TextAppearance_AppCompat_Tooltip=0x7f110104;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f110105;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f110106;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f110107;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f110108;
    public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f110109;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f11010a;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f11010b;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f11010c;
    public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f11010d;
    public static final int TextAppearance_AppCompat_Widget_Button=0x7f11010e;
    public static final int TextAppearance_AppCompat_Widget_Button_Borderless_Colored=0x7f11010f;
    public static final int TextAppearance_AppCompat_Widget_Button_Colored=0x7f110110;
    public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f110111;
    public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f110112;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Header=0x7f110113;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f110114;
    public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f110115;
    public static final int TextAppearance_AppCompat_Widget_Switch=0x7f110116;
    public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f110117;
    /**
     * Use platform styles
     */
    public static final int TextAppearance_Compat_Notification=0x7f110118;
    public static final int TextAppearance_Compat_Notification_Info=0x7f110119;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f11011a;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f11011b;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f11011c;
    /**
     * Use platform styles, Media is dark again
     */
    public static final int TextAppearance_Compat_Notification_Media=0x7f11011d;
    public static final int TextAppearance_Compat_Notification_Time=0x7f11011e;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f11011f;
    public static final int TextAppearance_Compat_Notification_Title=0x7f110120;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f110121;
    public static final int TextAppearance_Design_CollapsingToolbar_Expanded=0x7f110122;
    public static final int TextAppearance_Design_Counter=0x7f110123;
    public static final int TextAppearance_Design_Counter_Overflow=0x7f110124;
    public static final int TextAppearance_Design_Error=0x7f110125;
    public static final int TextAppearance_Design_Hint=0x7f110126;
    public static final int TextAppearance_Design_Snackbar_Message=0x7f110127;
    public static final int TextAppearance_Design_Tab=0x7f110128;
    public static final int TextAppearance_Tab=0x7f110129;
    public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f11012a;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f11012b;
    public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f11012c;
    /**
     * Platform-independent theme providing an action bar in a dark-themed activity.
     */
    public static final int Theme_AppCompat=0x7f11012d;
    /**
     * Menu/item attributes
     */
    public static final int Theme_AppCompat_CompactMenu=0x7f11012e;
    /**
     * AppCompat theme (day/night vesion) for activities.
     * AppCompat theme (day/night vesion) for activities.
     */
    public static final int Theme_AppCompat_DayNight=0x7f11012f;
    /**
     * Variant of AppCompat.DayNight that has a solid (opaque) action bar
     * with an inverse color profile. The dark action bar sharply stands out against
     * the light content (when applicable).
     * Variant of AppCompat.DayNight that has a solid (opaque) action bar
     * with an inverse color profile. The dark action bar sharply stands out against
     * the light content (when applicable).
     */
    public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f110130;
    /**
     * AppCompat theme (day/night vesion) for dialog windows and activities,
     * which is used by the {@code android.support.v7.app.Dialog} class. This changes
     * the window to be floating (not fill the entire screen), and puts a
     * frame around its contents. You can set this theme on an activity if
     * you would like to make an activity that looks like a Dialog.
     * AppCompat theme (day/night vesion) for dialog windows and activities,
     * which is used by the {@code android.support.v7.app.Dialog} class. This changes
     * the window to be floating (not fill the entire screen), and puts a
     * frame around its contents. You can set this theme on an activity if
     * you would like to make an activity that looks like a Dialog.
     */
    public static final int Theme_AppCompat_DayNight_Dialog=0x7f110131;
    /**
     * AppCompat user theme for alert dialog windows, which is used by the
     * {@code android.support.v7.app.AlertDialog} class.
     * AppCompat user theme for alert dialog windows, which is used by the
     * {@code android.support.v7.app.AlertDialog} class.
     */
    public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f110132;
    /**
     * Variant of Theme.AppCompat.DayNight.Dialog that has a nice minimum width for
     * a regular dialog.
     * Variant of Theme.AppCompat.DayNight.Dialog that has a nice minimum width for
     * a regular dialog.
     */
    public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f110133;
    /**
     * Theme for a window that will be displayed either full-screen on
     * smaller screens (small, normal) or as a dialog on larger screens
     * (large, xlarge).
     * Theme for a window that will be displayed either full-screen on
     * smaller screens (small, normal) or as a dialog on larger screens
     * (large, xlarge).
     */
    public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f110134;
    /**
     * Variant of AppCompat.DayNight with no action bar.
     * Variant of AppCompat.DayNight with no action bar.
     */
    public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f110135;
    public static final int Theme_AppCompat_Dialog=0x7f110136;
    /**
     * Material theme for alert dialog windows, which is used by the AlertDialog class.
     * This is basically a dialog but sets the background to empty so it can do
     * two-tone backgrounds. For applications targeting Honeycomb or newer, this is the default
     * AlertDialog theme.
     */
    public static final int Theme_AppCompat_Dialog_Alert=0x7f110137;
    /**
     * Variant of Theme.AppCompat.Dialog that has a nice minimum width for
     * a regular dialog.
     */
    public static final int Theme_AppCompat_Dialog_MinWidth=0x7f110138;
    public static final int Theme_AppCompat_DialogWhenLarge=0x7f110139;
    /**
     * Platform-independent theme providing an action bar in a light-themed activity.
     */
    public static final int Theme_AppCompat_Light=0x7f11013a;
    /**
     * Platform-independent theme providing an action bar in a dark-themed activity.
     */
    public static final int Theme_AppCompat_Light_DarkActionBar=0x7f11013b;
    public static final int Theme_AppCompat_Light_Dialog=0x7f11013c;
    public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f11013d;
    public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f11013e;
    public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f11013f;
    public static final int Theme_AppCompat_Light_NoActionBar=0x7f110140;
    public static final int Theme_AppCompat_NoActionBar=0x7f110141;
    public static final int Theme_Design=0x7f110142;
    public static final int Theme_Design_BottomSheetDialog=0x7f110143;
    public static final int Theme_Design_Light=0x7f110144;
    public static final int Theme_Design_Light_BottomSheetDialog=0x7f110145;
    public static final int Theme_Design_Light_NoActionBar=0x7f110146;
    public static final int Theme_Design_NoActionBar=0x7f110147;
    public static final int Theme_DeskClock=0x7f110148;
    public static final int Theme_DeskClock_CitySelection=0x7f110149;
    public static final int Theme_DeskClock_RingtonePicker=0x7f11014a;
    public static final int Theme_DeskClock_Settings=0x7f11014b;
    public static final int ThemeOverlay_AppCompat=0x7f11014c;
    /**
     * Theme overlay that replaces the normal control color, which by default is the same as the
     * secondary text color, with the primary text color.
     */
    public static final int ThemeOverlay_AppCompat_ActionBar=0x7f11014d;
    /**
     * Theme overlay that replaces colors with their dark versions but preserves
     * the value of colorAccent, colorPrimary and its variants.
     */
    public static final int ThemeOverlay_AppCompat_Dark=0x7f11014e;
    /**
     * Theme overlay that replaces colors with their dark versions and replaces the normal
     * control color, which by default is the same as the secondary text color, with the primary
     * text color.
     */
    public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f11014f;
    public static final int ThemeOverlay_AppCompat_Dialog=0x7f110150;
    public static final int ThemeOverlay_AppCompat_Dialog_Alert=0x7f110151;
    /**
     * Theme overlay that replaces colors with their light versions but preserves
     * the value of colorAccent, colorPrimary and its variants.
     */
    public static final int ThemeOverlay_AppCompat_Light=0x7f110152;
    public static final int ThemeOverlay_Control_Accent=0x7f110153;
    public static final int ThemeOverlay_Popup=0x7f110154;
    public static final int Widget_ActionBar=0x7f110155;
    public static final int Widget_ActionBar_NoTitle=0x7f110156;
    /**
     * Styles in here can be extended for customisation in your application. Each utilises
     * one of the.styles. If Holo themes are available on the current platform version
     * they will be used instead of the compat styles.
     */
    public static final int Widget_AppCompat_ActionBar=0x7f110157;
    public static final int Widget_AppCompat_ActionBar_Solid=0x7f110158;
    public static final int Widget_AppCompat_ActionBar_TabBar=0x7f110159;
    public static final int Widget_AppCompat_ActionBar_TabText=0x7f11015a;
    public static final int Widget_AppCompat_ActionBar_TabView=0x7f11015b;
    public static final int Widget_AppCompat_ActionButton=0x7f11015c;
    public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f11015d;
    public static final int Widget_AppCompat_ActionButton_Overflow=0x7f11015e;
    public static final int Widget_AppCompat_ActionMode=0x7f11015f;
    public static final int Widget_AppCompat_ActivityChooserView=0x7f110160;
    public static final int Widget_AppCompat_AutoCompleteTextView=0x7f110161;
    public static final int Widget_AppCompat_Button=0x7f110162;
    public static final int Widget_AppCompat_Button_Borderless=0x7f110163;
    public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f110164;
    public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f110165;
    public static final int Widget_AppCompat_Button_Colored=0x7f110166;
    public static final int Widget_AppCompat_Button_Small=0x7f110167;
    public static final int Widget_AppCompat_ButtonBar=0x7f110168;
    public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f110169;
    public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f11016a;
    public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f11016b;
    public static final int Widget_AppCompat_CompoundButton_Switch=0x7f11016c;
    public static final int Widget_AppCompat_DrawerArrowToggle=0x7f11016d;
    /**
     * This style has an extra indirection to properly set RTL attributes. See styles_rtl.xml
     */
    public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f11016e;
    public static final int Widget_AppCompat_EditText=0x7f11016f;
    public static final int Widget_AppCompat_ImageButton=0x7f110170;
    public static final int Widget_AppCompat_Light_ActionBar=0x7f110171;
    public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f110172;
    /**
     * The following themes are deprecated.
     */
    public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f110173;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f110174;
    public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f110175;
    public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f110176;
    public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f110177;
    public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f110178;
    public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f110179;
    public static final int Widget_AppCompat_Light_ActionButton=0x7f11017a;
    public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f11017b;
    public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f11017c;
    public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f11017d;
    public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f11017e;
    public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f11017f;
    public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f110180;
    public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f110181;
    public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f110182;
    public static final int Widget_AppCompat_Light_PopupMenu=0x7f110183;
    public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f110184;
    public static final int Widget_AppCompat_Light_SearchView=0x7f110185;
    public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f110186;
    public static final int Widget_AppCompat_ListMenuView=0x7f110187;
    public static final int Widget_AppCompat_ListPopupWindow=0x7f110188;
    public static final int Widget_AppCompat_ListView=0x7f110189;
    public static final int Widget_AppCompat_ListView_DropDown=0x7f11018a;
    public static final int Widget_AppCompat_ListView_Menu=0x7f11018b;
    public static final int Widget_AppCompat_PopupMenu=0x7f11018c;
    public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f11018d;
    public static final int Widget_AppCompat_PopupWindow=0x7f11018e;
    public static final int Widget_AppCompat_ProgressBar=0x7f11018f;
    public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f110190;
    public static final int Widget_AppCompat_RatingBar=0x7f110191;
    public static final int Widget_AppCompat_RatingBar_Indicator=0x7f110192;
    public static final int Widget_AppCompat_RatingBar_Small=0x7f110193;
    public static final int Widget_AppCompat_SearchView=0x7f110194;
    public static final int Widget_AppCompat_SearchView_ActionBar=0x7f110195;
    public static final int Widget_AppCompat_SeekBar=0x7f110196;
    public static final int Widget_AppCompat_SeekBar_Discrete=0x7f110197;
    public static final int Widget_AppCompat_Spinner=0x7f110198;
    public static final int Widget_AppCompat_Spinner_DropDown=0x7f110199;
    public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f11019a;
    public static final int Widget_AppCompat_Spinner_Underlined=0x7f11019b;
    public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f11019c;
    /**
     * Toolbar
     */
    public static final int Widget_AppCompat_Toolbar=0x7f11019d;
    public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f11019e;
    public static final int Widget_Button_TimerSetupDigit=0x7f11019f;
    public static final int Widget_Compat_NotificationActionContainer=0x7f1101a0;
    public static final int Widget_Compat_NotificationActionText=0x7f1101a1;
    public static final int Widget_Design_AppBarLayout=0x7f1101a2;
    public static final int Widget_Design_BottomNavigationView=0x7f1101a3;
    public static final int Widget_Design_BottomSheet_Modal=0x7f1101a4;
    public static final int Widget_Design_CollapsingToolbar=0x7f1101a5;
    public static final int Widget_Design_CoordinatorLayout=0x7f1101a6;
    public static final int Widget_Design_FloatingActionButton=0x7f1101a7;
    public static final int Widget_Design_NavigationView=0x7f1101a8;
    public static final int Widget_Design_ScrimInsetsFrameLayout=0x7f1101a9;
    public static final int Widget_Design_Snackbar=0x7f1101aa;
    public static final int Widget_Design_TabLayout=0x7f1101ab;
    public static final int Widget_Design_TextInputLayout=0x7f1101ac;
    public static final int Widget_ImageButton=0x7f1101ad;
    public static final int Widget_TimePicker=0x7f1101ae;
    public static final int alarm_label=0x7f1101af;
    public static final int alarm_label_bold=0x7f1101b0;
    public static final int alarm_lockscreen_thin=0x7f1101b1;
    public static final int big_thin=0x7f1101b2;
    public static final int body=0x7f1101b3;
    public static final int display_time=0x7f1101b4;
    public static final int label=0x7f1101b5;
    public static final int no_alarms=0x7f1101b6;
    public static final int widget_big_thin=0x7f1101b7;
    public static final int widget_label=0x7f1101b8;
    public static final int widget_medium_thin=0x7f1101b9;
    public static final int world_clock_time=0x7f1101ba;
  }
  public static final class styleable {
    /**
     * Attributes used to style the Action Bar.
     * These should be set on your theme; the default actionBarStyle will
     * propagate them to the correct elements as needed.
     * Please Note: when overriding attributes for an ActionBar style
     * you must specify each attribute twice: once with the "android:"
     * namespace prefix and once without.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBar_background com.android.deskclock:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundSplit com.android.deskclock:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_backgroundStacked com.android.deskclock:backgroundStacked}</code></td><td>Specifies a background drawable for a second stacked row of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEnd com.android.deskclock:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetEndWithActions com.android.deskclock:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetLeft com.android.deskclock:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetRight com.android.deskclock:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStart com.android.deskclock:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_contentInsetStartWithNavigation com.android.deskclock:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #ActionBar_customNavigationLayout com.android.deskclock:customNavigationLayout}</code></td><td>Specifies a layout for custom navigation.</td></tr>
     * <tr><td><code>{@link #ActionBar_displayOptions com.android.deskclock:displayOptions}</code></td><td>Options affecting how the action bar is displayed.</td></tr>
     * <tr><td><code>{@link #ActionBar_divider com.android.deskclock:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #ActionBar_elevation com.android.deskclock:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #ActionBar_height com.android.deskclock:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_hideOnContentScroll com.android.deskclock:hideOnContentScroll}</code></td><td>Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.android.deskclock:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #ActionBar_homeLayout com.android.deskclock:homeLayout}</code></td><td>Specifies a layout to use for the "home" section of the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_icon com.android.deskclock:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.android.deskclock:indeterminateProgressStyle}</code></td><td>Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
     * <tr><td><code>{@link #ActionBar_itemPadding com.android.deskclock:itemPadding}</code></td><td>Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_logo com.android.deskclock:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #ActionBar_navigationMode com.android.deskclock:navigationMode}</code></td><td>The type of navigation to use.</td></tr>
     * <tr><td><code>{@link #ActionBar_popupTheme com.android.deskclock:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarPadding com.android.deskclock:progressBarPadding}</code></td><td>Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_progressBarStyle com.android.deskclock:progressBarStyle}</code></td><td>Specifies a style resource to use for an embedded progress bar.</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitle com.android.deskclock:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.android.deskclock:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionBar_title com.android.deskclock:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionBar_titleTextStyle com.android.deskclock:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionBar_background
     * @see #ActionBar_backgroundSplit
     * @see #ActionBar_backgroundStacked
     * @see #ActionBar_contentInsetEnd
     * @see #ActionBar_contentInsetEndWithActions
     * @see #ActionBar_contentInsetLeft
     * @see #ActionBar_contentInsetRight
     * @see #ActionBar_contentInsetStart
     * @see #ActionBar_contentInsetStartWithNavigation
     * @see #ActionBar_customNavigationLayout
     * @see #ActionBar_displayOptions
     * @see #ActionBar_divider
     * @see #ActionBar_elevation
     * @see #ActionBar_height
     * @see #ActionBar_hideOnContentScroll
     * @see #ActionBar_homeAsUpIndicator
     * @see #ActionBar_homeLayout
     * @see #ActionBar_icon
     * @see #ActionBar_indeterminateProgressStyle
     * @see #ActionBar_itemPadding
     * @see #ActionBar_logo
     * @see #ActionBar_navigationMode
     * @see #ActionBar_popupTheme
     * @see #ActionBar_progressBarPadding
     * @see #ActionBar_progressBarStyle
     * @see #ActionBar_subtitle
     * @see #ActionBar_subtitleTextStyle
     * @see #ActionBar_title
     * @see #ActionBar_titleTextStyle
     */
    public static final int[] ActionBar={
        0x7f040036, 0x7f040037, 0x7f040038, 0x7f04006a, 
        0x7f04006b, 0x7f04006c, 0x7f04006d, 0x7f04006e, 
        0x7f04006f, 0x7f040076, 0x7f040082, 0x7f040083, 
        0x7f040090, 0x7f0400b5, 0x7f0400b6, 0x7f0400ba, 
        0x7f0400bb, 0x7f0400bc, 0x7f0400c2, 0x7f0400c8, 
        0x7f0400f5, 0x7f040101, 0x7f040116, 0x7f040129, 
        0x7f04012a, 0x7f040158, 0x7f04015b, 0x7f04018e, 
        0x7f040198
      };
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:background
     */
    public static final int ActionBar_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for the bottom component of a split action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:backgroundSplit
     */
    public static final int ActionBar_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a background drawable for a second stacked row of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:backgroundStacked
     */
    public static final int ActionBar_backgroundStacked=2;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetEnd
     */
    public static final int ActionBar_contentInsetEnd=3;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetEndWithActions
     */
    public static final int ActionBar_contentInsetEndWithActions=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetLeft
     */
    public static final int ActionBar_contentInsetLeft=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetRight
     */
    public static final int ActionBar_contentInsetRight=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetStart
     */
    public static final int ActionBar_contentInsetStart=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetStartWithNavigation
     */
    public static final int ActionBar_contentInsetStartWithNavigation=8;
    /**
     * <p>
     * @attr description
     * Specifies a layout for custom navigation. Overrides navigationMode.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:customNavigationLayout
     */
    public static final int ActionBar_customNavigationLayout=9;
    /**
     * <p>
     * @attr description
     * Options affecting how the action bar is displayed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>disableHome</td><td>20</td><td></td></tr>
     * <tr><td>homeAsUp</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>showCustom</td><td>10</td><td></td></tr>
     * <tr><td>showHome</td><td>2</td><td></td></tr>
     * <tr><td>showTitle</td><td>8</td><td></td></tr>
     * <tr><td>useLogo</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:displayOptions
     */
    public static final int ActionBar_displayOptions=10;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for item dividers.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:divider
     */
    public static final int ActionBar_divider=11;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:elevation
     */
    public static final int ActionBar_elevation=12;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:height
     */
    public static final int ActionBar_height=13;
    /**
     * <p>
     * @attr description
     * Set true to hide the action bar on a vertical nested scroll of content.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:hideOnContentScroll
     */
    public static final int ActionBar_hideOnContentScroll=14;
    /**
     * <p>
     * @attr description
     * Up navigation glyph
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:homeAsUpIndicator
     */
    public static final int ActionBar_homeAsUpIndicator=15;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "home" section of the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:homeLayout
     */
    public static final int ActionBar_homeLayout=16;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:icon
     */
    public static final int ActionBar_icon=17;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an indeterminate progress spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:indeterminateProgressStyle
     */
    public static final int ActionBar_indeterminateProgressStyle=18;
    /**
     * <p>
     * @attr description
     * Specifies padding that should be applied to the left and right sides of
     * system-provided items in the bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:itemPadding
     */
    public static final int ActionBar_itemPadding=19;
    /**
     * <p>
     * @attr description
     * Specifies the drawable used for the application logo.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:logo
     */
    public static final int ActionBar_logo=20;
    /**
     * <p>
     * @attr description
     * The type of navigation to use.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>listMode</td><td>1</td><td>The action bar will use a selection list for navigation.</td></tr>
     * <tr><td>normal</td><td>0</td><td>Normal static title text</td></tr>
     * <tr><td>tabMode</td><td>2</td><td>The action bar will use a series of horizontal tabs for navigation.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:navigationMode
     */
    public static final int ActionBar_navigationMode=21;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:popupTheme
     */
    public static final int ActionBar_popupTheme=22;
    /**
     * <p>
     * @attr description
     * Specifies the horizontal padding on either end for an embedded progress bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:progressBarPadding
     */
    public static final int ActionBar_progressBarPadding=23;
    /**
     * <p>
     * @attr description
     * Specifies a style resource to use for an embedded progress bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:progressBarStyle
     */
    public static final int ActionBar_progressBarStyle=24;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:subtitle
     */
    public static final int ActionBar_subtitle=25;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:subtitleTextStyle
     */
    public static final int ActionBar_subtitleTextStyle=26;
    /**
     * <p>
     * @attr description
     * Specifies title text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:title
     */
    public static final int ActionBar_title=27;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:titleTextStyle
     */
    public static final int ActionBar_titleTextStyle=28;
    /**
     * Valid LayoutParams for views placed in the action bar as custom views.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * </table>
     * @see #ActionBarLayout_android_layout_gravity
     */
    public static final int[] ActionBarLayout={
        0x010100b3
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #ActionBarLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int ActionBarLayout_android_layout_gravity=0;
    /**
     * Attributes that can be used with a ActionMenuItemView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
     * </table>
     * @see #ActionMenuItemView_android_minWidth
     */
    public static final int[] ActionMenuItemView={
        0x0101013f
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
     * attribute's value can be found in the {@link #ActionMenuItemView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minWidth
     */
    public static final int ActionMenuItemView_android_minWidth=0;
    public static final int[] ActionMenuView={
      };
    /**
     * Attributes that can be used with a ActionMode.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActionMode_background com.android.deskclock:background}</code></td><td>Specifies a background drawable for the action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_backgroundSplit com.android.deskclock:backgroundSplit}</code></td><td>Specifies a background drawable for the bottom component of a split action bar.</td></tr>
     * <tr><td><code>{@link #ActionMode_closeItemLayout com.android.deskclock:closeItemLayout}</code></td><td>Specifies a layout to use for the "close" item at the starting edge.</td></tr>
     * <tr><td><code>{@link #ActionMode_height com.android.deskclock:height}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.android.deskclock:subtitleTextStyle}</code></td><td>Specifies a style to use for subtitle text.</td></tr>
     * <tr><td><code>{@link #ActionMode_titleTextStyle com.android.deskclock:titleTextStyle}</code></td><td>Specifies a style to use for title text.</td></tr>
     * </table>
     * @see #ActionMode_background
     * @see #ActionMode_backgroundSplit
     * @see #ActionMode_closeItemLayout
     * @see #ActionMode_height
     * @see #ActionMode_subtitleTextStyle
     * @see #ActionMode_titleTextStyle
     */
    public static final int[] ActionMode={
        0x7f040036, 0x7f040037, 0x7f040056, 0x7f0400b5, 
        0x7f04015b, 0x7f040198
      };
    /**
     * <p>
     * @attr description
     * Specifies a background for the action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:background
     */
    public static final int ActionMode_background=0;
    /**
     * <p>
     * @attr description
     * Specifies a background for the split action mode bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:backgroundSplit
     */
    public static final int ActionMode_backgroundSplit=1;
    /**
     * <p>
     * @attr description
     * Specifies a layout to use for the "close" item at the starting edge.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:closeItemLayout
     */
    public static final int ActionMode_closeItemLayout=2;
    /**
     * <p>
     * @attr description
     * Specifies a fixed height for the action mode bar.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:height
     */
    public static final int ActionMode_height=3;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for subtitle text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:subtitleTextStyle
     */
    public static final int ActionMode_subtitleTextStyle=4;
    /**
     * <p>
     * @attr description
     * Specifies a style to use for title text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:titleTextStyle
     */
    public static final int ActionMode_titleTextStyle=5;
    /**
     * Attrbitutes for a ActivityChooserView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.android.deskclock:expandActivityOverflowButtonDrawable}</code></td><td>The drawable to show in the button for expanding the activities overflow popup.</td></tr>
     * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.android.deskclock:initialActivityCount}</code></td><td>The maximal number of items initially shown in the activity list.</td></tr>
     * </table>
     * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
     * @see #ActivityChooserView_initialActivityCount
     */
    public static final int[] ActivityChooserView={
        0x7f040096, 0x7f0400c3
      };
    /**
     * <p>
     * @attr description
     * The drawable to show in the button for expanding the activities overflow popup.
     * <strong>Note:</strong> Clients would like to set this drawable
     * as a clue about the action the chosen activity will perform. For
     * example, if share activity is to be chosen the drawable should
     * give a clue that sharing is to be performed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:expandActivityOverflowButtonDrawable
     */
    public static final int ActivityChooserView_expandActivityOverflowButtonDrawable=0;
    /**
     * <p>
     * @attr description
     * The maximal number of items initially shown in the activity list.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:initialActivityCount
     */
    public static final int ActivityChooserView_initialActivityCount=1;
    /**
     * The set of attributes that describe a AlertDialog's theme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.android.deskclock:buttonPanelSideLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listItemLayout com.android.deskclock:listItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_listLayout com.android.deskclock:listLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.android.deskclock:multiChoiceItemLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_showTitle com.android.deskclock:showTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.android.deskclock:singleChoiceItemLayout}</code></td><td></td></tr>
     * </table>
     * @see #AlertDialog_android_layout
     * @see #AlertDialog_buttonPanelSideLayout
     * @see #AlertDialog_listItemLayout
     * @see #AlertDialog_listLayout
     * @see #AlertDialog_multiChoiceItemLayout
     * @see #AlertDialog_showTitle
     * @see #AlertDialog_singleChoiceItemLayout
     */
    public static final int[] AlertDialog={
        0x010100f2, 0x7f04004b, 0x7f0400ec, 0x7f0400ed, 
        0x7f0400fe, 0x7f040147, 0x7f040148
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int AlertDialog_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#buttonPanelSideLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:buttonPanelSideLayout
     */
    public static final int AlertDialog_buttonPanelSideLayout=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#listItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:listItemLayout
     */
    public static final int AlertDialog_listItemLayout=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#listLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:listLayout
     */
    public static final int AlertDialog_listLayout=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#multiChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:multiChoiceItemLayout
     */
    public static final int AlertDialog_multiChoiceItemLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#showTitle}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:showTitle
     */
    public static final int AlertDialog_showTitle=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#singleChoiceItemLayout}
     * attribute's value can be found in the {@link #AlertDialog} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:singleChoiceItemLayout
     */
    public static final int AlertDialog_singleChoiceItemLayout=6;
    /**
     * Attributes that can be used with a AppBarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_touchscreenBlocksFocus android:touchscreenBlocksFocus}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_android_keyboardNavigationCluster android:keyboardNavigationCluster}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_elevation com.android.deskclock:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #AppBarLayout_expanded com.android.deskclock:expanded}</code></td><td>The initial expanded state for the AppBarLayout.</td></tr>
     * </table>
     * @see #AppBarLayout_android_background
     * @see #AppBarLayout_android_touchscreenBlocksFocus
     * @see #AppBarLayout_android_keyboardNavigationCluster
     * @see #AppBarLayout_elevation
     * @see #AppBarLayout_expanded
     */
    public static final int[] AppBarLayout={
        0x010100d4, 0x0101048f, 0x01010540, 0x7f040090, 
        0x7f040097
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int AppBarLayout_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#touchscreenBlocksFocus}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:touchscreenBlocksFocus
     */
    public static final int AppBarLayout_android_touchscreenBlocksFocus=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#keyboardNavigationCluster}
     * attribute's value can be found in the {@link #AppBarLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:keyboardNavigationCluster
     */
    public static final int AppBarLayout_android_keyboardNavigationCluster=2;
    /**
     * <p>
     * @attr description
     * Deprecated. Elevation is now controlled via a state list animator.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:elevation
     */
    public static final int AppBarLayout_elevation=3;
    /**
     * <p>
     * @attr description
     * The initial expanded state for the AppBarLayout. This only takes effect when this
     * view is a direct child of a CoordinatorLayout.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:expanded
     */
    public static final int AppBarLayout_expanded=4;
    /**
     * Attributes that can be used with a AppBarLayoutStates.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsed com.android.deskclock:state_collapsed}</code></td><td>State value for {@link android.support.design.widget.AppBarLayout} set when the view
     * has been collapsed.</td></tr>
     * <tr><td><code>{@link #AppBarLayoutStates_state_collapsible com.android.deskclock:state_collapsible}</code></td><td>State value for {@link android.support.design.widget.AppBarLayout} set when the view
     * has children which are capable of being collapsed.</td></tr>
     * </table>
     * @see #AppBarLayoutStates_state_collapsed
     * @see #AppBarLayoutStates_state_collapsible
     */
    public static final int[] AppBarLayoutStates={
        0x7f040152, 0x7f040153
      };
    /**
     * <p>
     * @attr description
     * State value for {@link android.support.design.widget.AppBarLayout} set when the view
     * has been collapsed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:state_collapsed
     */
    public static final int AppBarLayoutStates_state_collapsed=0;
    /**
     * <p>
     * @attr description
     * State value for {@link android.support.design.widget.AppBarLayout} set when the view
     * has children which are capable of being collapsed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:state_collapsible
     */
    public static final int AppBarLayoutStates_state_collapsible=1;
    /**
     * Attributes that can be used with a AppBarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollFlags com.android.deskclock:layout_scrollFlags}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppBarLayout_Layout_layout_scrollInterpolator com.android.deskclock:layout_scrollInterpolator}</code></td><td>An interpolator to use when scrolling this View.</td></tr>
     * </table>
     * @see #AppBarLayout_Layout_layout_scrollFlags
     * @see #AppBarLayout_Layout_layout_scrollInterpolator
     */
    public static final int[] AppBarLayout_Layout={
        0x7f0400e7, 0x7f0400e8
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_scrollFlags}
     * attribute's value can be found in the {@link #AppBarLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>enterAlways</td><td>4</td><td>When entering (scrolling on screen) the view will scroll on any downwards
     * scroll event, regardless of whether the scrolling view is also scrolling. This
     * is commonly referred to as the 'quick return' pattern.</td></tr>
     * <tr><td>enterAlwaysCollapsed</td><td>8</td><td>An additional flag for 'enterAlways' which modifies the returning view to
     * only initially scroll back to it's collapsed height. Once the scrolling view has
     * reached the end of it's scroll range, the remainder of this view will be scrolled
     * into view.</td></tr>
     * <tr><td>exitUntilCollapsed</td><td>2</td><td>When exiting (scrolling off screen) the view will be scrolled until it is
     * 'collapsed'. The collapsed height is defined by the view's minimum height.</td></tr>
     * <tr><td>scroll</td><td>1</td><td>The view will be scroll in direct relation to scroll events. This flag needs to be
     * set for any of the other flags to take effect. If any sibling views
     * before this one do not have this flag, then this value has no effect.</td></tr>
     * <tr><td>snap</td><td>10</td><td>Upon a scroll ending, if the view is only partially visible then it will be
     * snapped and scrolled to it's closest edge.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:layout_scrollFlags
     */
    public static final int AppBarLayout_Layout_layout_scrollFlags=0;
    /**
     * <p>
     * @attr description
     * An interpolator to use when scrolling this View. Only takes effect when View
     * is scrollable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:layout_scrollInterpolator
     */
    public static final int AppBarLayout_Layout_layout_scrollInterpolator=1;
    /**
     * Attributes that can be used with a AppCompatImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatImageView_srcCompat com.android.deskclock:srcCompat}</code></td><td>Sets a drawable as the content of this ImageView.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tint com.android.deskclock:tint}</code></td><td>Tint to apply to the image source.</td></tr>
     * <tr><td><code>{@link #AppCompatImageView_tintMode com.android.deskclock:tintMode}</code></td><td>Blending mode used to apply the image source tint.</td></tr>
     * </table>
     * @see #AppCompatImageView_android_src
     * @see #AppCompatImageView_srcCompat
     * @see #AppCompatImageView_tint
     * @see #AppCompatImageView_tintMode
     */
    public static final int[] AppCompatImageView={
        0x01010119, 0x7f04014f, 0x7f04018c, 0x7f04018d
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#src}
     * attribute's value can be found in the {@link #AppCompatImageView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:src
     */
    public static final int AppCompatImageView_android_src=0;
    /**
     * <p>
     * @attr description
     * Sets a drawable as the content of this ImageView. Allows the use of vector drawable
     * when running on older versions of the platform.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:srcCompat
     */
    public static final int AppCompatImageView_srcCompat=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the image source.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:tint
     */
    public static final int AppCompatImageView_tint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the image source tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:tintMode
     */
    public static final int AppCompatImageView_tintMode=3;
    /**
     * Attributes that can be used with a AppCompatSeekBar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMark com.android.deskclock:tickMark}</code></td><td>Drawable displayed at each progress position on a seekbar.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTint com.android.deskclock:tickMarkTint}</code></td><td>Tint to apply to the tick mark drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatSeekBar_tickMarkTintMode com.android.deskclock:tickMarkTintMode}</code></td><td>Blending mode used to apply the tick mark tint.</td></tr>
     * </table>
     * @see #AppCompatSeekBar_android_thumb
     * @see #AppCompatSeekBar_tickMark
     * @see #AppCompatSeekBar_tickMarkTint
     * @see #AppCompatSeekBar_tickMarkTintMode
     */
    public static final int[] AppCompatSeekBar={
        0x01010142, 0x7f040189, 0x7f04018a, 0x7f04018b
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#thumb}
     * attribute's value can be found in the {@link #AppCompatSeekBar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int AppCompatSeekBar_android_thumb=0;
    /**
     * <p>
     * @attr description
     * Drawable displayed at each progress position on a seekbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:tickMark
     */
    public static final int AppCompatSeekBar_tickMark=1;
    /**
     * <p>
     * @attr description
     * Tint to apply to the tick mark drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:tickMarkTint
     */
    public static final int AppCompatSeekBar_tickMarkTint=2;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the tick mark tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:tickMarkTintMode
     */
    public static final int AppCompatSeekBar_tickMarkTintMode=3;
    /**
     * Attributes that can be used with a AppCompatTextHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableTop android:drawableTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableBottom android:drawableBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableLeft android:drawableLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableRight android:drawableRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableStart android:drawableStart}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextHelper_android_drawableEnd android:drawableEnd}</code></td><td></td></tr>
     * </table>
     * @see #AppCompatTextHelper_android_textAppearance
     * @see #AppCompatTextHelper_android_drawableTop
     * @see #AppCompatTextHelper_android_drawableBottom
     * @see #AppCompatTextHelper_android_drawableLeft
     * @see #AppCompatTextHelper_android_drawableRight
     * @see #AppCompatTextHelper_android_drawableStart
     * @see #AppCompatTextHelper_android_drawableEnd
     */
    public static final int[] AppCompatTextHelper={
        0x01010034, 0x0101016d, 0x0101016e, 0x0101016f, 
        0x01010170, 0x01010392, 0x01010393
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextHelper_android_textAppearance=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableTop}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableTop
     */
    public static final int AppCompatTextHelper_android_drawableTop=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableBottom}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableBottom
     */
    public static final int AppCompatTextHelper_android_drawableBottom=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableLeft}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableLeft
     */
    public static final int AppCompatTextHelper_android_drawableLeft=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableRight}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableRight
     */
    public static final int AppCompatTextHelper_android_drawableRight=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableStart}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableStart
     */
    public static final int AppCompatTextHelper_android_drawableStart=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#drawableEnd}
     * attribute's value can be found in the {@link #AppCompatTextHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:drawableEnd
     */
    public static final int AppCompatTextHelper_android_drawableEnd=6;
    /**
     * Attributes that can be used with a AppCompatTextView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMaxTextSize com.android.deskclock:autoSizeMaxTextSize}</code></td><td>The maximum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeMinTextSize com.android.deskclock:autoSizeMinTextSize}</code></td><td>The minimum text size constraint to be used when auto-sizing text.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizePresetSizes com.android.deskclock:autoSizePresetSizes}</code></td><td>Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeStepGranularity com.android.deskclock:autoSizeStepGranularity}</code></td><td>Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_autoSizeTextType com.android.deskclock:autoSizeTextType}</code></td><td>Specify the type of auto-size.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_fontFamily com.android.deskclock:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #AppCompatTextView_textAllCaps com.android.deskclock:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #AppCompatTextView_android_textAppearance
     * @see #AppCompatTextView_autoSizeMaxTextSize
     * @see #AppCompatTextView_autoSizeMinTextSize
     * @see #AppCompatTextView_autoSizePresetSizes
     * @see #AppCompatTextView_autoSizeStepGranularity
     * @see #AppCompatTextView_autoSizeTextType
     * @see #AppCompatTextView_fontFamily
     * @see #AppCompatTextView_textAllCaps
     */
    public static final int[] AppCompatTextView={
        0x01010034, 0x7f040031, 0x7f040032, 0x7f040033, 
        0x7f040034, 0x7f040035, 0x7f0400a7, 0x7f040178
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
     * attribute's value can be found in the {@link #AppCompatTextView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:textAppearance
     */
    public static final int AppCompatTextView_android_textAppearance=0;
    /**
     * <p>
     * @attr description
     * The maximum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:autoSizeMaxTextSize
     */
    public static final int AppCompatTextView_autoSizeMaxTextSize=1;
    /**
     * <p>
     * @attr description
     * The minimum text size constraint to be used when auto-sizing text.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:autoSizeMinTextSize
     */
    public static final int AppCompatTextView_autoSizeMinTextSize=2;
    /**
     * <p>
     * @attr description
     * Resource array of dimensions to be used in conjunction with
     * <code>autoSizeTextType</code> set to <code>uniform</code>. Overrides
     * <code>autoSizeStepGranularity</code> if set.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:autoSizePresetSizes
     */
    public static final int AppCompatTextView_autoSizePresetSizes=3;
    /**
     * <p>
     * @attr description
     * Specify the auto-size step size if <code>autoSizeTextType</code> is set to
     * <code>uniform</code>. The default is 1px. Overwrites
     * <code>autoSizePresetSizes</code> if set.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:autoSizeStepGranularity
     */
    public static final int AppCompatTextView_autoSizeStepGranularity=4;
    /**
     * <p>
     * @attr description
     * Specify the type of auto-size. Note that this feature is not supported by EditText,
     * works only for TextView.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>No auto-sizing (default).</td></tr>
     * <tr><td>uniform</td><td>1</td><td>Uniform horizontal and vertical text size scaling to fit within the
     * container.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:autoSizeTextType
     */
    public static final int AppCompatTextView_autoSizeTextType=5;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:fontFamily
     */
    public static final int AppCompatTextView_fontFamily=6;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:textAllCaps
     */
    public static final int AppCompatTextView_textAllCaps=7;
    /**
     * These are the standard attributes that make up a complete theme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.android.deskclock:actionBarDivider}</code></td><td>Custom divider drawable to use for elements in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.android.deskclock:actionBarItemBackground}</code></td><td>Custom item state list drawable background for action bar items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.android.deskclock:actionBarPopupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSize com.android.deskclock:actionBarSize}</code></td><td>Size of the Action Bar, including the contextual
     * bar used to present Action Modes.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.android.deskclock:actionBarSplitStyle}</code></td><td>Reference to a style for the split Action Bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.android.deskclock:actionBarStyle}</code></td><td>Reference to a style for the Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.android.deskclock:actionBarTabBarStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.android.deskclock:actionBarTabStyle}</code></td><td>Default style for tabs within an action bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.android.deskclock:actionBarTabTextStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.android.deskclock:actionBarTheme}</code></td><td>Reference to a theme that should be used to inflate the
     * action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.android.deskclock:actionBarWidgetTheme}</code></td><td>Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.android.deskclock:actionButtonStyle}</code></td><td>Default action button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.android.deskclock:actionDropDownStyle}</code></td><td>Default ActionBar dropdown style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.android.deskclock:actionMenuTextAppearance}</code></td><td>TextAppearance style that will be applied to text that
     * appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.android.deskclock:actionMenuTextColor}</code></td><td>Color for text that appears within action menu items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.android.deskclock:actionModeBackground}</code></td><td>Background drawable to use for action mode UI</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.android.deskclock:actionModeCloseButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.android.deskclock:actionModeCloseDrawable}</code></td><td>Drawable to use for the close action mode button</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.android.deskclock:actionModeCopyDrawable}</code></td><td>Drawable to use for the Copy action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.android.deskclock:actionModeCutDrawable}</code></td><td>Drawable to use for the Cut action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.android.deskclock:actionModeFindDrawable}</code></td><td>Drawable to use for the Find action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.android.deskclock:actionModePasteDrawable}</code></td><td>Drawable to use for the Paste action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.android.deskclock:actionModePopupWindowStyle}</code></td><td>PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.android.deskclock:actionModeSelectAllDrawable}</code></td><td>Drawable to use for the Select all action button in Contextual Action Bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.android.deskclock:actionModeShareDrawable}</code></td><td>Drawable to use for the Share action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.android.deskclock:actionModeSplitBackground}</code></td><td>Background drawable to use for action mode UI in the lower split bar</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.android.deskclock:actionModeStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.android.deskclock:actionModeWebSearchDrawable}</code></td><td>Drawable to use for the Web Search action button in WebView selection action modes</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.android.deskclock:actionOverflowButtonStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.android.deskclock:actionOverflowMenuStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.android.deskclock:activityChooserViewStyle}</code></td><td>Default ActivityChooserView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.android.deskclock:alertDialogButtonGroupStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.android.deskclock:alertDialogCenterButtons}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.android.deskclock:alertDialogStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.android.deskclock:alertDialogTheme}</code></td><td>Theme to use for alert dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.android.deskclock:autoCompleteTextViewStyle}</code></td><td>Default AutoCompleteTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.android.deskclock:borderlessButtonStyle}</code></td><td>Style for buttons without an explicit border, often used in groups.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.android.deskclock:buttonBarButtonStyle}</code></td><td>Style for buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.android.deskclock:buttonBarNegativeButtonStyle}</code></td><td>Style for the "negative" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.android.deskclock:buttonBarNeutralButtonStyle}</code></td><td>Style for the "neutral" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.android.deskclock:buttonBarPositiveButtonStyle}</code></td><td>Style for the "positive" buttons within button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.android.deskclock:buttonBarStyle}</code></td><td>Style for button bars</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyle com.android.deskclock:buttonStyle}</code></td><td>Normal Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.android.deskclock:buttonStyleSmall}</code></td><td>Small Button style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.android.deskclock:checkboxStyle}</code></td><td>Default Checkbox style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.android.deskclock:checkedTextViewStyle}</code></td><td>Default CheckedTextView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorAccent com.android.deskclock:colorAccent}</code></td><td>Bright complement to the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorBackgroundFloating com.android.deskclock:colorBackgroundFloating}</code></td><td>Default color of background imagery for floating components, ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.android.deskclock:colorButtonNormal}</code></td><td>The color applied to framework buttons in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.android.deskclock:colorControlActivated}</code></td><td>The color applied to framework controls in their activated (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.android.deskclock:colorControlHighlight}</code></td><td>The color applied to framework control highlights (ex.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.android.deskclock:colorControlNormal}</code></td><td>The color applied to framework controls in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorError com.android.deskclock:colorError}</code></td><td>Color used for error states and things that need to be drawn to
     * the user's attention.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimary com.android.deskclock:colorPrimary}</code></td><td>The primary branding color for the app.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.android.deskclock:colorPrimaryDark}</code></td><td>Dark variant of the primary branding color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.android.deskclock:colorSwitchThumbNormal}</code></td><td>The color applied to framework switch thumbs in their normal state.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_controlBackground com.android.deskclock:controlBackground}</code></td><td>The background used by framework controls.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.android.deskclock:dialogPreferredPadding}</code></td><td>Preferred padding for dialog content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dialogTheme com.android.deskclock:dialogTheme}</code></td><td>Theme to use for dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.android.deskclock:dividerHorizontal}</code></td><td>A drawable that may be used as a horizontal divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dividerVertical com.android.deskclock:dividerVertical}</code></td><td>A drawable that may be used as a vertical divider between visual elements.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.android.deskclock:dropDownListViewStyle}</code></td><td>ListPopupWindow compatibility</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.android.deskclock:dropdownListPreferredItemHeight}</code></td><td>The preferred item height for dropdown lists.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextBackground com.android.deskclock:editTextBackground}</code></td><td>EditText background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextColor com.android.deskclock:editTextColor}</code></td><td>EditText text foreground color.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_editTextStyle com.android.deskclock:editTextStyle}</code></td><td>Default EditText style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.android.deskclock:homeAsUpIndicator}</code></td><td>Specifies a drawable to use for the 'home as up' indicator.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.android.deskclock:imageButtonStyle}</code></td><td>ImageButton background drawable.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.android.deskclock:listChoiceBackgroundIndicator}</code></td><td>Drawable used as a background for selected list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.android.deskclock:listDividerAlertDialog}</code></td><td>The list divider used in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listMenuViewStyle com.android.deskclock:listMenuViewStyle}</code></td><td>Default menu-style ListView style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.android.deskclock:listPopupWindowStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.android.deskclock:listPreferredItemHeight}</code></td><td>The preferred list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.android.deskclock:listPreferredItemHeightLarge}</code></td><td>A larger, more robust list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.android.deskclock:listPreferredItemHeightSmall}</code></td><td>A smaller, sleeker list item height.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.android.deskclock:listPreferredItemPaddingLeft}</code></td><td>The preferred padding along the left edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.android.deskclock:listPreferredItemPaddingRight}</code></td><td>The preferred padding along the right edge of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelBackground com.android.deskclock:panelBackground}</code></td><td>The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.android.deskclock:panelMenuListTheme}</code></td><td>Default Panel Menu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.android.deskclock:panelMenuListWidth}</code></td><td>Default Panel Menu width.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.android.deskclock:popupMenuStyle}</code></td><td>Default PopupMenu style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.android.deskclock:popupWindowStyle}</code></td><td>Default PopupWindow style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.android.deskclock:radioButtonStyle}</code></td><td>Default RadioButton style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.android.deskclock:ratingBarStyle}</code></td><td>Default RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.android.deskclock:ratingBarStyleIndicator}</code></td><td>Indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.android.deskclock:ratingBarStyleSmall}</code></td><td>Small indicator RatingBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.android.deskclock:searchViewStyle}</code></td><td>Style for the search query widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.android.deskclock:seekBarStyle}</code></td><td>Default SeekBar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.android.deskclock:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.android.deskclock:selectableItemBackgroundBorderless}</code></td><td>Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.android.deskclock:spinnerDropDownItemStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.android.deskclock:spinnerStyle}</code></td><td>Default Spinner style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_switchStyle com.android.deskclock:switchStyle}</code></td><td>Default style for the Switch widget.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.android.deskclock:textAppearanceLargePopupMenu}</code></td><td>Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.android.deskclock:textAppearanceListItem}</code></td><td>The preferred TextAppearance for the primary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSecondary com.android.deskclock:textAppearanceListItemSecondary}</code></td><td>The preferred TextAppearance for the secondary text of list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.android.deskclock:textAppearanceListItemSmall}</code></td><td>The preferred TextAppearance for the primary text of small list items.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearancePopupMenuHeader com.android.deskclock:textAppearancePopupMenuHeader}</code></td><td>Text color, typeface, size, and style for header text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.android.deskclock:textAppearanceSearchResultSubtitle}</code></td><td>Text color, typeface, size, and style for system search result subtitle.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.android.deskclock:textAppearanceSearchResultTitle}</code></td><td>Text color, typeface, size, and style for system search result title.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.android.deskclock:textAppearanceSmallPopupMenu}</code></td><td>Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.android.deskclock:textColorAlertDialogListItem}</code></td><td>Color of list item text in alert dialogs.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.android.deskclock:textColorSearchUrl}</code></td><td>Text color for urls in search suggestions, used by things like global search</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.android.deskclock:toolbarNavigationButtonStyle}</code></td><td>Default Toolar NavigationButtonStyle</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.android.deskclock:toolbarStyle}</code></td><td>Default Toolbar style.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipForegroundColor com.android.deskclock:tooltipForegroundColor}</code></td><td>Foreground color to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_tooltipFrameBackground com.android.deskclock:tooltipFrameBackground}</code></td><td>Background to use for tooltips</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBar com.android.deskclock:windowActionBar}</code></td><td>Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.android.deskclock:windowActionBarOverlay}</code></td><td>Flag indicating whether this window's Action Bar should overlay
     * application content.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.android.deskclock:windowActionModeOverlay}</code></td><td>Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.android.deskclock:windowFixedHeightMajor}</code></td><td>A fixed height for the window along the major axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.android.deskclock:windowFixedHeightMinor}</code></td><td>A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.android.deskclock:windowFixedWidthMajor}</code></td><td>A fixed width for the window along the major axis of the screen,
     * that is, when in landscape.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.android.deskclock:windowFixedWidthMinor}</code></td><td>A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.android.deskclock:windowMinWidthMajor}</code></td><td>The minimum width the window is allowed to be, along the major
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.android.deskclock:windowMinWidthMinor}</code></td><td>The minimum width the window is allowed to be, along the minor
     * axis of the screen.</td></tr>
     * <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.android.deskclock:windowNoTitle}</code></td><td>Flag indicating whether there should be no title on this window.</td></tr>
     * </table>
     * @see #AppCompatTheme_android_windowIsFloating
     * @see #AppCompatTheme_android_windowAnimationStyle
     * @see #AppCompatTheme_actionBarDivider
     * @see #AppCompatTheme_actionBarItemBackground
     * @see #AppCompatTheme_actionBarPopupTheme
     * @see #AppCompatTheme_actionBarSize
     * @see #AppCompatTheme_actionBarSplitStyle
     * @see #AppCompatTheme_actionBarStyle
     * @see #AppCompatTheme_actionBarTabBarStyle
     * @see #AppCompatTheme_actionBarTabStyle
     * @see #AppCompatTheme_actionBarTabTextStyle
     * @see #AppCompatTheme_actionBarTheme
     * @see #AppCompatTheme_actionBarWidgetTheme
     * @see #AppCompatTheme_actionButtonStyle
     * @see #AppCompatTheme_actionDropDownStyle
     * @see #AppCompatTheme_actionMenuTextAppearance
     * @see #AppCompatTheme_actionMenuTextColor
     * @see #AppCompatTheme_actionModeBackground
     * @see #AppCompatTheme_actionModeCloseButtonStyle
     * @see #AppCompatTheme_actionModeCloseDrawable
     * @see #AppCompatTheme_actionModeCopyDrawable
     * @see #AppCompatTheme_actionModeCutDrawable
     * @see #AppCompatTheme_actionModeFindDrawable
     * @see #AppCompatTheme_actionModePasteDrawable
     * @see #AppCompatTheme_actionModePopupWindowStyle
     * @see #AppCompatTheme_actionModeSelectAllDrawable
     * @see #AppCompatTheme_actionModeShareDrawable
     * @see #AppCompatTheme_actionModeSplitBackground
     * @see #AppCompatTheme_actionModeStyle
     * @see #AppCompatTheme_actionModeWebSearchDrawable
     * @see #AppCompatTheme_actionOverflowButtonStyle
     * @see #AppCompatTheme_actionOverflowMenuStyle
     * @see #AppCompatTheme_activityChooserViewStyle
     * @see #AppCompatTheme_alertDialogButtonGroupStyle
     * @see #AppCompatTheme_alertDialogCenterButtons
     * @see #AppCompatTheme_alertDialogStyle
     * @see #AppCompatTheme_alertDialogTheme
     * @see #AppCompatTheme_autoCompleteTextViewStyle
     * @see #AppCompatTheme_borderlessButtonStyle
     * @see #AppCompatTheme_buttonBarButtonStyle
     * @see #AppCompatTheme_buttonBarNegativeButtonStyle
     * @see #AppCompatTheme_buttonBarNeutralButtonStyle
     * @see #AppCompatTheme_buttonBarPositiveButtonStyle
     * @see #AppCompatTheme_buttonBarStyle
     * @see #AppCompatTheme_buttonStyle
     * @see #AppCompatTheme_buttonStyleSmall
     * @see #AppCompatTheme_checkboxStyle
     * @see #AppCompatTheme_checkedTextViewStyle
     * @see #AppCompatTheme_colorAccent
     * @see #AppCompatTheme_colorBackgroundFloating
     * @see #AppCompatTheme_colorButtonNormal
     * @see #AppCompatTheme_colorControlActivated
     * @see #AppCompatTheme_colorControlHighlight
     * @see #AppCompatTheme_colorControlNormal
     * @see #AppCompatTheme_colorError
     * @see #AppCompatTheme_colorPrimary
     * @see #AppCompatTheme_colorPrimaryDark
     * @see #AppCompatTheme_colorSwitchThumbNormal
     * @see #AppCompatTheme_controlBackground
     * @see #AppCompatTheme_dialogPreferredPadding
     * @see #AppCompatTheme_dialogTheme
     * @see #AppCompatTheme_dividerHorizontal
     * @see #AppCompatTheme_dividerVertical
     * @see #AppCompatTheme_dropDownListViewStyle
     * @see #AppCompatTheme_dropdownListPreferredItemHeight
     * @see #AppCompatTheme_editTextBackground
     * @see #AppCompatTheme_editTextColor
     * @see #AppCompatTheme_editTextStyle
     * @see #AppCompatTheme_homeAsUpIndicator
     * @see #AppCompatTheme_imageButtonStyle
     * @see #AppCompatTheme_listChoiceBackgroundIndicator
     * @see #AppCompatTheme_listDividerAlertDialog
     * @see #AppCompatTheme_listMenuViewStyle
     * @see #AppCompatTheme_listPopupWindowStyle
     * @see #AppCompatTheme_listPreferredItemHeight
     * @see #AppCompatTheme_listPreferredItemHeightLarge
     * @see #AppCompatTheme_listPreferredItemHeightSmall
     * @see #AppCompatTheme_listPreferredItemPaddingLeft
     * @see #AppCompatTheme_listPreferredItemPaddingRight
     * @see #AppCompatTheme_panelBackground
     * @see #AppCompatTheme_panelMenuListTheme
     * @see #AppCompatTheme_panelMenuListWidth
     * @see #AppCompatTheme_popupMenuStyle
     * @see #AppCompatTheme_popupWindowStyle
     * @see #AppCompatTheme_radioButtonStyle
     * @see #AppCompatTheme_ratingBarStyle
     * @see #AppCompatTheme_ratingBarStyleIndicator
     * @see #AppCompatTheme_ratingBarStyleSmall
     * @see #AppCompatTheme_searchViewStyle
     * @see #AppCompatTheme_seekBarStyle
     * @see #AppCompatTheme_selectableItemBackground
     * @see #AppCompatTheme_selectableItemBackgroundBorderless
     * @see #AppCompatTheme_spinnerDropDownItemStyle
     * @see #AppCompatTheme_spinnerStyle
     * @see #AppCompatTheme_switchStyle
     * @see #AppCompatTheme_textAppearanceLargePopupMenu
     * @see #AppCompatTheme_textAppearanceListItem
     * @see #AppCompatTheme_textAppearanceListItemSecondary
     * @see #AppCompatTheme_textAppearanceListItemSmall
     * @see #AppCompatTheme_textAppearancePopupMenuHeader
     * @see #AppCompatTheme_textAppearanceSearchResultSubtitle
     * @see #AppCompatTheme_textAppearanceSearchResultTitle
     * @see #AppCompatTheme_textAppearanceSmallPopupMenu
     * @see #AppCompatTheme_textColorAlertDialogListItem
     * @see #AppCompatTheme_textColorSearchUrl
     * @see #AppCompatTheme_toolbarNavigationButtonStyle
     * @see #AppCompatTheme_toolbarStyle
     * @see #AppCompatTheme_tooltipForegroundColor
     * @see #AppCompatTheme_tooltipFrameBackground
     * @see #AppCompatTheme_windowActionBar
     * @see #AppCompatTheme_windowActionBarOverlay
     * @see #AppCompatTheme_windowActionModeOverlay
     * @see #AppCompatTheme_windowFixedHeightMajor
     * @see #AppCompatTheme_windowFixedHeightMinor
     * @see #AppCompatTheme_windowFixedWidthMajor
     * @see #AppCompatTheme_windowFixedWidthMinor
     * @see #AppCompatTheme_windowMinWidthMajor
     * @see #AppCompatTheme_windowMinWidthMinor
     * @see #AppCompatTheme_windowNoTitle
     */
    public static final int[] AppCompatTheme={
        0x01010057, 0x010100ae, 0x7f040000, 0x7f040001, 
        0x7f040002, 0x7f040003, 0x7f040004, 0x7f040005, 
        0x7f040006, 0x7f040007, 0x7f040008, 0x7f040009, 
        0x7f04000a, 0x7f04000b, 0x7f04000c, 0x7f04000e, 
        0x7f04000f, 0x7f040010, 0x7f040011, 0x7f040012, 
        0x7f040013, 0x7f040014, 0x7f040015, 0x7f040016, 
        0x7f040017, 0x7f040018, 0x7f040019, 0x7f04001a, 
        0x7f04001b, 0x7f04001c, 0x7f04001d, 0x7f04001e, 
        0x7f040021, 0x7f040023, 0x7f040024, 0x7f040025, 
        0x7f040026, 0x7f040030, 0x7f040042, 0x7f040045, 
        0x7f040046, 0x7f040047, 0x7f040048, 0x7f040049, 
        0x7f04004c, 0x7f04004d, 0x7f040053, 0x7f040054, 
        0x7f04005c, 0x7f04005d, 0x7f04005e, 0x7f04005f, 
        0x7f040060, 0x7f040061, 0x7f040062, 0x7f040063, 
        0x7f040064, 0x7f040065, 0x7f040071, 0x7f04007e, 
        0x7f04007f, 0x7f040084, 0x7f040086, 0x7f040089, 
        0x7f04008a, 0x7f04008c, 0x7f04008d, 0x7f04008f, 
        0x7f0400ba, 0x7f0400c1, 0x7f0400ea, 0x7f0400eb, 
        0x7f0400ee, 0x7f0400ef, 0x7f0400f0, 0x7f0400f1, 
        0x7f0400f2, 0x7f0400f3, 0x7f0400f4, 0x7f04010c, 
        0x7f04010d, 0x7f04010e, 0x7f040115, 0x7f040117, 
        0x7f04012d, 0x7f04012f, 0x7f040130, 0x7f040131, 
        0x7f04013b, 0x7f04013e, 0x7f040140, 0x7f040141, 
        0x7f04014c, 0x7f04014d, 0x7f040164, 0x7f040179, 
        0x7f04017a, 0x7f04017b, 0x7f04017c, 0x7f04017d, 
        0x7f04017e, 0x7f04017f, 0x7f040180, 0x7f040181, 
        0x7f040183, 0x7f04019a, 0x7f04019b, 0x7f04019c, 
        0x7f04019d, 0x7f0401a6, 0x7f0401a7, 0x7f0401a8, 
        0x7f0401a9, 0x7f0401aa, 0x7f0401ab, 0x7f0401ac, 
        0x7f0401ad, 0x7f0401ae, 0x7f0401af
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:windowIsFloating
     */
    public static final int AppCompatTheme_android_windowIsFloating=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int AppCompatTheme_android_windowAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Custom divider drawable to use for elements in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarDivider
     */
    public static final int AppCompatTheme_actionBarDivider=2;
    /**
     * <p>
     * @attr description
     * Custom item state list drawable background for action bar items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarItemBackground
     */
    public static final int AppCompatTheme_actionBarItemBackground=3;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarPopupTheme
     */
    public static final int AppCompatTheme_actionBarPopupTheme=4;
    /**
     * <p>
     * @attr description
     * Size of the Action Bar, including the contextual
     * bar used to present Action Modes.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>wrap_content</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:actionBarSize
     */
    public static final int AppCompatTheme_actionBarSize=5;
    /**
     * <p>
     * @attr description
     * Reference to a style for the split Action Bar. This style
     * controls the split component that holds the menu/action
     * buttons. actionBarStyle is still used for the primary
     * bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarSplitStyle
     */
    public static final int AppCompatTheme_actionBarSplitStyle=6;
    /**
     * <p>
     * @attr description
     * Reference to a style for the Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarStyle
     */
    public static final int AppCompatTheme_actionBarStyle=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionBarTabBarStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarTabBarStyle
     */
    public static final int AppCompatTheme_actionBarTabBarStyle=8;
    /**
     * <p>
     * @attr description
     * Default style for tabs within an action bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarTabStyle
     */
    public static final int AppCompatTheme_actionBarTabStyle=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionBarTabTextStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarTabTextStyle
     */
    public static final int AppCompatTheme_actionBarTabTextStyle=10;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate the
     * action bar. This will be inherited by any widget inflated
     * into the action bar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarTheme
     */
    public static final int AppCompatTheme_actionBarTheme=11;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate widgets
     * and layouts destined for the action bar. Most of the time
     * this will be a reference to the current theme, but when
     * the action bar has a significantly different contrast
     * profile than the rest of the activity the difference
     * can become important. If this is set to @null the current
     * theme will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionBarWidgetTheme
     */
    public static final int AppCompatTheme_actionBarWidgetTheme=12;
    /**
     * <p>
     * @attr description
     * Default action button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionButtonStyle
     */
    public static final int AppCompatTheme_actionButtonStyle=13;
    /**
     * <p>
     * @attr description
     * Default ActionBar dropdown style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionDropDownStyle
     */
    public static final int AppCompatTheme_actionDropDownStyle=14;
    /**
     * <p>
     * @attr description
     * TextAppearance style that will be applied to text that
     * appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionMenuTextAppearance
     */
    public static final int AppCompatTheme_actionMenuTextAppearance=15;
    /**
     * <p>
     * @attr description
     * Color for text that appears within action menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:actionMenuTextColor
     */
    public static final int AppCompatTheme_actionMenuTextColor=16;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeBackground
     */
    public static final int AppCompatTheme_actionModeBackground=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionModeCloseButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeCloseButtonStyle
     */
    public static final int AppCompatTheme_actionModeCloseButtonStyle=18;
    /**
     * <p>
     * @attr description
     * Drawable to use for the close action mode button
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeCloseDrawable
     */
    public static final int AppCompatTheme_actionModeCloseDrawable=19;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Copy action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeCopyDrawable
     */
    public static final int AppCompatTheme_actionModeCopyDrawable=20;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Cut action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeCutDrawable
     */
    public static final int AppCompatTheme_actionModeCutDrawable=21;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Find action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeFindDrawable
     */
    public static final int AppCompatTheme_actionModeFindDrawable=22;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Paste action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModePasteDrawable
     */
    public static final int AppCompatTheme_actionModePasteDrawable=23;
    /**
     * <p>
     * @attr description
     * PopupWindow style to use for action modes when showing as a window overlay.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModePopupWindowStyle
     */
    public static final int AppCompatTheme_actionModePopupWindowStyle=24;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Select all action button in Contextual Action Bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeSelectAllDrawable
     */
    public static final int AppCompatTheme_actionModeSelectAllDrawable=25;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Share action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeShareDrawable
     */
    public static final int AppCompatTheme_actionModeShareDrawable=26;
    /**
     * <p>
     * @attr description
     * Background drawable to use for action mode UI in the lower split bar
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeSplitBackground
     */
    public static final int AppCompatTheme_actionModeSplitBackground=27;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionModeStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeStyle
     */
    public static final int AppCompatTheme_actionModeStyle=28;
    /**
     * <p>
     * @attr description
     * Drawable to use for the Web Search action button in WebView selection action modes
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionModeWebSearchDrawable
     */
    public static final int AppCompatTheme_actionModeWebSearchDrawable=29;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionOverflowButtonStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionOverflowButtonStyle
     */
    public static final int AppCompatTheme_actionOverflowButtonStyle=30;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#actionOverflowMenuStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionOverflowMenuStyle
     */
    public static final int AppCompatTheme_actionOverflowMenuStyle=31;
    /**
     * <p>
     * @attr description
     * Default ActivityChooserView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:activityChooserViewStyle
     */
    public static final int AppCompatTheme_activityChooserViewStyle=32;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#alertDialogButtonGroupStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:alertDialogButtonGroupStyle
     */
    public static final int AppCompatTheme_alertDialogButtonGroupStyle=33;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#alertDialogCenterButtons}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:alertDialogCenterButtons
     */
    public static final int AppCompatTheme_alertDialogCenterButtons=34;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#alertDialogStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:alertDialogStyle
     */
    public static final int AppCompatTheme_alertDialogStyle=35;
    /**
     * <p>
     * @attr description
     * Theme to use for alert dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:alertDialogTheme
     */
    public static final int AppCompatTheme_alertDialogTheme=36;
    /**
     * <p>
     * @attr description
     * Default AutoCompleteTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:autoCompleteTextViewStyle
     */
    public static final int AppCompatTheme_autoCompleteTextViewStyle=37;
    /**
     * <p>
     * @attr description
     * Style for buttons without an explicit border, often used in groups.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:borderlessButtonStyle
     */
    public static final int AppCompatTheme_borderlessButtonStyle=38;
    /**
     * <p>
     * @attr description
     * Style for buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:buttonBarButtonStyle
     */
    public static final int AppCompatTheme_buttonBarButtonStyle=39;
    /**
     * <p>
     * @attr description
     * Style for the "negative" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:buttonBarNegativeButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNegativeButtonStyle=40;
    /**
     * <p>
     * @attr description
     * Style for the "neutral" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:buttonBarNeutralButtonStyle
     */
    public static final int AppCompatTheme_buttonBarNeutralButtonStyle=41;
    /**
     * <p>
     * @attr description
     * Style for the "positive" buttons within button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:buttonBarPositiveButtonStyle
     */
    public static final int AppCompatTheme_buttonBarPositiveButtonStyle=42;
    /**
     * <p>
     * @attr description
     * Style for button bars
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:buttonBarStyle
     */
    public static final int AppCompatTheme_buttonBarStyle=43;
    /**
     * <p>
     * @attr description
     * Normal Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:buttonStyle
     */
    public static final int AppCompatTheme_buttonStyle=44;
    /**
     * <p>
     * @attr description
     * Small Button style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:buttonStyleSmall
     */
    public static final int AppCompatTheme_buttonStyleSmall=45;
    /**
     * <p>
     * @attr description
     * Default Checkbox style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:checkboxStyle
     */
    public static final int AppCompatTheme_checkboxStyle=46;
    /**
     * <p>
     * @attr description
     * Default CheckedTextView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:checkedTextViewStyle
     */
    public static final int AppCompatTheme_checkedTextViewStyle=47;
    /**
     * <p>
     * @attr description
     * Bright complement to the primary branding color. By default, this is the color applied
     * to framework controls (via colorControlActivated).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorAccent
     */
    public static final int AppCompatTheme_colorAccent=48;
    /**
     * <p>
     * @attr description
     * Default color of background imagery for floating components, ex. dialogs, popups, and cards.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorBackgroundFloating
     */
    public static final int AppCompatTheme_colorBackgroundFloating=49;
    /**
     * <p>
     * @attr description
     * The color applied to framework buttons in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorButtonNormal
     */
    public static final int AppCompatTheme_colorButtonNormal=50;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their activated (ex. checked) state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorControlActivated
     */
    public static final int AppCompatTheme_colorControlActivated=51;
    /**
     * <p>
     * @attr description
     * The color applied to framework control highlights (ex. ripples, list selectors).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorControlHighlight
     */
    public static final int AppCompatTheme_colorControlHighlight=52;
    /**
     * <p>
     * @attr description
     * The color applied to framework controls in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorControlNormal
     */
    public static final int AppCompatTheme_colorControlNormal=53;
    /**
     * <p>
     * @attr description
     * Color used for error states and things that need to be drawn to
     * the user's attention.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorError
     */
    public static final int AppCompatTheme_colorError=54;
    /**
     * <p>
     * @attr description
     * The primary branding color for the app. By default, this is the color applied to the
     * action bar background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorPrimary
     */
    public static final int AppCompatTheme_colorPrimary=55;
    /**
     * <p>
     * @attr description
     * Dark variant of the primary branding color. By default, this is the color applied to
     * the status bar (via statusBarColor) and navigation bar (via navigationBarColor).
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorPrimaryDark
     */
    public static final int AppCompatTheme_colorPrimaryDark=56;
    /**
     * <p>
     * @attr description
     * The color applied to framework switch thumbs in their normal state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:colorSwitchThumbNormal
     */
    public static final int AppCompatTheme_colorSwitchThumbNormal=57;
    /**
     * <p>
     * @attr description
     * The background used by framework controls.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:controlBackground
     */
    public static final int AppCompatTheme_controlBackground=58;
    /**
     * <p>
     * @attr description
     * Preferred padding for dialog content.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:dialogPreferredPadding
     */
    public static final int AppCompatTheme_dialogPreferredPadding=59;
    /**
     * <p>
     * @attr description
     * Theme to use for dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:dialogTheme
     */
    public static final int AppCompatTheme_dialogTheme=60;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a horizontal divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:dividerHorizontal
     */
    public static final int AppCompatTheme_dividerHorizontal=61;
    /**
     * <p>
     * @attr description
     * A drawable that may be used as a vertical divider between visual elements.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:dividerVertical
     */
    public static final int AppCompatTheme_dividerVertical=62;
    /**
     * <p>
     * @attr description
     * ListPopupWindow compatibility
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:dropDownListViewStyle
     */
    public static final int AppCompatTheme_dropDownListViewStyle=63;
    /**
     * <p>
     * @attr description
     * The preferred item height for dropdown lists.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:dropdownListPreferredItemHeight
     */
    public static final int AppCompatTheme_dropdownListPreferredItemHeight=64;
    /**
     * <p>
     * @attr description
     * EditText background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:editTextBackground
     */
    public static final int AppCompatTheme_editTextBackground=65;
    /**
     * <p>
     * @attr description
     * EditText text foreground color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:editTextColor
     */
    public static final int AppCompatTheme_editTextColor=66;
    /**
     * <p>
     * @attr description
     * Default EditText style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:editTextStyle
     */
    public static final int AppCompatTheme_editTextStyle=67;
    /**
     * <p>
     * @attr description
     * Specifies a drawable to use for the 'home as up' indicator.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:homeAsUpIndicator
     */
    public static final int AppCompatTheme_homeAsUpIndicator=68;
    /**
     * <p>
     * @attr description
     * ImageButton background drawable.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:imageButtonStyle
     */
    public static final int AppCompatTheme_imageButtonStyle=69;
    /**
     * <p>
     * @attr description
     * Drawable used as a background for selected list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:listChoiceBackgroundIndicator
     */
    public static final int AppCompatTheme_listChoiceBackgroundIndicator=70;
    /**
     * <p>
     * @attr description
     * The list divider used in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:listDividerAlertDialog
     */
    public static final int AppCompatTheme_listDividerAlertDialog=71;
    /**
     * <p>
     * @attr description
     * Default menu-style ListView style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:listMenuViewStyle
     */
    public static final int AppCompatTheme_listMenuViewStyle=72;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#listPopupWindowStyle}
     * attribute's value can be found in the {@link #AppCompatTheme} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:listPopupWindowStyle
     */
    public static final int AppCompatTheme_listPopupWindowStyle=73;
    /**
     * <p>
     * @attr description
     * The preferred list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:listPreferredItemHeight
     */
    public static final int AppCompatTheme_listPreferredItemHeight=74;
    /**
     * <p>
     * @attr description
     * A larger, more robust list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:listPreferredItemHeightLarge
     */
    public static final int AppCompatTheme_listPreferredItemHeightLarge=75;
    /**
     * <p>
     * @attr description
     * A smaller, sleeker list item height.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:listPreferredItemHeightSmall
     */
    public static final int AppCompatTheme_listPreferredItemHeightSmall=76;
    /**
     * <p>
     * @attr description
     * The preferred padding along the left edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:listPreferredItemPaddingLeft
     */
    public static final int AppCompatTheme_listPreferredItemPaddingLeft=77;
    /**
     * <p>
     * @attr description
     * The preferred padding along the right edge of list items.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:listPreferredItemPaddingRight
     */
    public static final int AppCompatTheme_listPreferredItemPaddingRight=78;
    /**
     * <p>
     * @attr description
     * The background of a panel when it is inset from the left and right edges of the screen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:panelBackground
     */
    public static final int AppCompatTheme_panelBackground=79;
    /**
     * <p>
     * @attr description
     * Default Panel Menu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:panelMenuListTheme
     */
    public static final int AppCompatTheme_panelMenuListTheme=80;
    /**
     * <p>
     * @attr description
     * Default Panel Menu width.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:panelMenuListWidth
     */
    public static final int AppCompatTheme_panelMenuListWidth=81;
    /**
     * <p>
     * @attr description
     * Default PopupMenu style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:popupMenuStyle
     */
    public static final int AppCompatTheme_popupMenuStyle=82;
    /**
     * <p>
     * @attr description
     * Default PopupWindow style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:popupWindowStyle
     */
    public static final int AppCompatTheme_popupWindowStyle=83;
    /**
     * <p>
     * @attr description
     * Default RadioButton style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:radioButtonStyle
     */
    public static final int AppCompatTheme_radioButtonStyle=84;
    /**
     * <p>
     * @attr description
     * Default RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:ratingBarStyle
     */
    public static final int AppCompatTheme_ratingBarStyle=85;
    /**
     * <p>
     * @attr description
     * Indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:ratingBarStyleIndicator
     */
    public static final int AppCompatTheme_ratingBarStyleIndicator=86;
    /**
     * <p>
     * @attr description
     * Small indicator RatingBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:ratingBarStyleSmall
     */
    public static final int AppCompatTheme_ratingBarStyleSmall=87;
    /**
     * <p>
     * @attr description
     * Style for the search query widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:searchViewStyle
     */
    public static final int AppCompatTheme_searchViewStyle=88;
    /**
     * <p>
     * @attr description
     * Default SeekBar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:seekBarStyle
     */
    public static final int AppCompatTheme_seekBarStyle=89;
    /**
     * <p>
     * @attr description
     * A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:selectableItemBackground
     */
    public static final int AppCompatTheme_selectableItemBackground=90;
    /**
     * <p>
     * @attr description
     * Background drawable for borderless standalone items that need focus/pressed states.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:selectableItemBackgroundBorderless
     */
    public static final int AppCompatTheme_selectableItemBackgroundBorderless=91;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:spinnerDropDownItemStyle
     */
    public static final int AppCompatTheme_spinnerDropDownItemStyle=92;
    /**
     * <p>
     * @attr description
     * Default Spinner style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:spinnerStyle
     */
    public static final int AppCompatTheme_spinnerStyle=93;
    /**
     * <p>
     * @attr description
     * Default style for the Switch widget.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:switchStyle
     */
    public static final int AppCompatTheme_switchStyle=94;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for the text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:textAppearanceLargePopupMenu
     */
    public static final int AppCompatTheme_textAppearanceLargePopupMenu=95;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:textAppearanceListItem
     */
    public static final int AppCompatTheme_textAppearanceListItem=96;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the secondary text of list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:textAppearanceListItemSecondary
     */
    public static final int AppCompatTheme_textAppearanceListItemSecondary=97;
    /**
     * <p>
     * @attr description
     * The preferred TextAppearance for the primary text of small list items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:textAppearanceListItemSmall
     */
    public static final int AppCompatTheme_textAppearanceListItemSmall=98;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for header text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:textAppearancePopupMenuHeader
     */
    public static final int AppCompatTheme_textAppearancePopupMenuHeader=99;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:textAppearanceSearchResultSubtitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultSubtitle=100;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:textAppearanceSearchResultTitle
     */
    public static final int AppCompatTheme_textAppearanceSearchResultTitle=101;
    /**
     * <p>
     * @attr description
     * Text color, typeface, size, and style for small text inside of a popup menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:textAppearanceSmallPopupMenu
     */
    public static final int AppCompatTheme_textAppearanceSmallPopupMenu=102;
    /**
     * <p>
     * @attr description
     * Color of list item text in alert dialogs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:textColorAlertDialogListItem
     */
    public static final int AppCompatTheme_textColorAlertDialogListItem=103;
    /**
     * <p>
     * @attr description
     * Text color for urls in search suggestions, used by things like global search
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:textColorSearchUrl
     */
    public static final int AppCompatTheme_textColorSearchUrl=104;
    /**
     * <p>
     * @attr description
     * Default Toolar NavigationButtonStyle
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:toolbarNavigationButtonStyle
     */
    public static final int AppCompatTheme_toolbarNavigationButtonStyle=105;
    /**
     * <p>
     * @attr description
     * Default Toolbar style.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:toolbarStyle
     */
    public static final int AppCompatTheme_toolbarStyle=106;
    /**
     * <p>
     * @attr description
     * Foreground color to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:tooltipForegroundColor
     */
    public static final int AppCompatTheme_tooltipForegroundColor=107;
    /**
     * <p>
     * @attr description
     * Background to use for tooltips
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:tooltipFrameBackground
     */
    public static final int AppCompatTheme_tooltipFrameBackground=108;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window should have an Action Bar
     * in place of the usual title bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:windowActionBar
     */
    public static final int AppCompatTheme_windowActionBar=109;
    /**
     * <p>
     * @attr description
     * Flag indicating whether this window's Action Bar should overlay
     * application content. Does nothing if the window would not
     * have an Action Bar.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:windowActionBarOverlay
     */
    public static final int AppCompatTheme_windowActionBarOverlay=110;
    /**
     * <p>
     * @attr description
     * Flag indicating whether action modes should overlay window content
     * when there is not reserved space for their UI (such as an Action Bar).
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:windowActionModeOverlay
     */
    public static final int AppCompatTheme_windowActionModeOverlay=111;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the major axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:windowFixedHeightMajor
     */
    public static final int AppCompatTheme_windowFixedHeightMajor=112;
    /**
     * <p>
     * @attr description
     * A fixed height for the window along the minor axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:windowFixedHeightMinor
     */
    public static final int AppCompatTheme_windowFixedHeightMinor=113;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the major axis of the screen,
     * that is, when in landscape. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:windowFixedWidthMajor
     */
    public static final int AppCompatTheme_windowFixedWidthMajor=114;
    /**
     * <p>
     * @attr description
     * A fixed width for the window along the minor axis of the screen,
     * that is, when in portrait. Can be either an absolute dimension
     * or a fraction of the screen size in that dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:windowFixedWidthMinor
     */
    public static final int AppCompatTheme_windowFixedWidthMinor=115;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the major
     * axis of the screen.  That is, when in landscape.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:windowMinWidthMajor
     */
    public static final int AppCompatTheme_windowMinWidthMajor=116;
    /**
     * <p>
     * @attr description
     * The minimum width the window is allowed to be, along the minor
     * axis of the screen.  That is, when in portrait.  Can be either
     * an absolute dimension or a fraction of the screen size in that
     * dimension.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:windowMinWidthMinor
     */
    public static final int AppCompatTheme_windowMinWidthMinor=117;
    /**
     * <p>
     * @attr description
     * Flag indicating whether there should be no title on this window.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:windowNoTitle
     */
    public static final int AppCompatTheme_windowNoTitle=118;
    /**
     * Used to access some android attrs
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BackgroundStyle_android_selectableItemBackground android:selectableItemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BackgroundStyle_selectableItemBackground com.android.deskclock:selectableItemBackground}</code></td><td>A style that may be applied to buttons or other selectable items
     * that should react to pressed and focus states, but that do not
     * have a clear visual border along the edges.</td></tr>
     * </table>
     * @see #BackgroundStyle_android_selectableItemBackground
     * @see #BackgroundStyle_selectableItemBackground
     */
    public static final int[] BackgroundStyle={
        0x0101030e, 0x7f040140
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectableItemBackground}
     * attribute's value can be found in the {@link #BackgroundStyle} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:selectableItemBackground
     */
    public static final int BackgroundStyle_android_selectableItemBackground=0;
    /**
     * <p>
     * @attr description
     * Need a non-android: attr here so that gradle doesn't remove it
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:selectableItemBackground
     */
    public static final int BackgroundStyle_selectableItemBackground=1;
    /**
     * Attributes that can be used with a BottomNavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomNavigationView_elevation com.android.deskclock:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemBackground com.android.deskclock:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemIconTint com.android.deskclock:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_itemTextColor com.android.deskclock:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #BottomNavigationView_menu com.android.deskclock:menu}</code></td><td>The menu resource to inflate and populate items from.</td></tr>
     * </table>
     * @see #BottomNavigationView_elevation
     * @see #BottomNavigationView_itemBackground
     * @see #BottomNavigationView_itemIconTint
     * @see #BottomNavigationView_itemTextColor
     * @see #BottomNavigationView_menu
     */
    public static final int[] BottomNavigationView={
        0x7f040090, 0x7f0400c6, 0x7f0400c7, 0x7f0400ca, 
        0x7f0400fc
      };
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:elevation
     */
    public static final int BottomNavigationView_elevation=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#itemBackground}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:itemBackground
     */
    public static final int BottomNavigationView_itemBackground=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:itemIconTint
     */
    public static final int BottomNavigationView_itemIconTint=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #BottomNavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:itemTextColor
     */
    public static final int BottomNavigationView_itemTextColor=3;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:menu
     */
    public static final int BottomNavigationView_menu=4;
    /**
     * Attributes that can be used with a BottomSheetBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_hideable com.android.deskclock:behavior_hideable}</code></td><td>Whether this bottom sheet can be hidden by dragging it further downwards</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_peekHeight com.android.deskclock:behavior_peekHeight}</code></td><td>The height of the bottom sheet when it is collapsed.</td></tr>
     * <tr><td><code>{@link #BottomSheetBehavior_Layout_behavior_skipCollapsed com.android.deskclock:behavior_skipCollapsed}</code></td><td>Skip the collapsed state once expanded; no effect unless it is hideable</td></tr>
     * </table>
     * @see #BottomSheetBehavior_Layout_behavior_hideable
     * @see #BottomSheetBehavior_Layout_behavior_peekHeight
     * @see #BottomSheetBehavior_Layout_behavior_skipCollapsed
     */
    public static final int[] BottomSheetBehavior_Layout={
        0x7f04003d, 0x7f04003f, 0x7f040040
      };
    /**
     * <p>
     * @attr description
     * Whether this bottom sheet can be hidden by dragging it further downwards
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:behavior_hideable
     */
    public static final int BottomSheetBehavior_Layout_behavior_hideable=0;
    /**
     * <p>
     * @attr description
     * The height of the bottom sheet when it is collapsed.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>Peek at the 16:9 ratio keyline of its parent</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:behavior_peekHeight
     */
    public static final int BottomSheetBehavior_Layout_behavior_peekHeight=1;
    /**
     * <p>
     * @attr description
     * Skip the collapsed state once expanded; no effect unless it is hideable
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:behavior_skipCollapsed
     */
    public static final int BottomSheetBehavior_Layout_behavior_skipCollapsed=2;
    /**
     * @hide
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ButtonBarLayout_allowStacking com.android.deskclock:allowStacking}</code></td><td>Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.</td></tr>
     * </table>
     * @see #ButtonBarLayout_allowStacking
     */
    public static final int[] ButtonBarLayout={
        0x7f04002b
      };
    /**
     * <p>
     * @attr description
     * Whether to automatically stack the buttons when there is not
     * enough space to lay them out side-by-side.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:allowStacking
     */
    public static final int ButtonBarLayout_allowStacking=0;
    /**
     * Base attributes available to CheckBoxPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_disableDependentsState com.android.deskclock:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOff com.android.deskclock:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #CheckBoxPreference_summaryOn com.android.deskclock:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * </table>
     * @see #CheckBoxPreference_android_summaryOn
     * @see #CheckBoxPreference_android_summaryOff
     * @see #CheckBoxPreference_android_disableDependentsState
     * @see #CheckBoxPreference_disableDependentsState
     * @see #CheckBoxPreference_summaryOff
     * @see #CheckBoxPreference_summaryOn
     */
    public static final int[] CheckBoxPreference={
        0x010101ef, 0x010101f0, 0x010101f1, 0x7f040081, 
        0x7f04015e, 0x7f04015f
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int CheckBoxPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int CheckBoxPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #CheckBoxPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int CheckBoxPreference_android_disableDependentsState=2;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:disableDependentsState
     */
    public static final int CheckBoxPreference_disableDependentsState=3;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:summaryOff
     */
    public static final int CheckBoxPreference_summaryOff=4;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:summaryOn
     */
    public static final int CheckBoxPreference_summaryOn=5;
    /**
     * Attributes that can be used with a CircleView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CircleView_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CircleView_centerX com.android.deskclock:centerX}</code></td><td>The center x-coordinate of the circle.</td></tr>
     * <tr><td><code>{@link #CircleView_centerY com.android.deskclock:centerY}</code></td><td>The center y-coordinate of the circle.</td></tr>
     * <tr><td><code>{@link #CircleView_fillColor com.android.deskclock:fillColor}</code></td><td>The ARGB fill color of the circle.</td></tr>
     * <tr><td><code>{@link #CircleView_radius com.android.deskclock:radius}</code></td><td>The radius of the circle.</td></tr>
     * </table>
     * @see #CircleView_android_gravity
     * @see #CircleView_centerX
     * @see #CircleView_centerY
     * @see #CircleView_fillColor
     * @see #CircleView_radius
     */
    public static final int[] CircleView={
        0x010100af, 0x7f040050, 0x7f040051, 0x7f0400a5, 
        0x7f04012e
      };
    /**
     * <p>
     * @attr description
     * Sets the center/radius of the circle relative to the view's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int CircleView_android_gravity=0;
    /**
     * <p>
     * @attr description
     * The center x-coordinate of the circle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:centerX
     */
    public static final int CircleView_centerX=1;
    /**
     * <p>
     * @attr description
     * The center y-coordinate of the circle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:centerY
     */
    public static final int CircleView_centerY=2;
    /**
     * <p>
     * @attr description
     * The ARGB fill color of the circle.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:fillColor
     */
    public static final int CircleView_fillColor=3;
    /**
     * <p>
     * @attr description
     * The radius of the circle.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:radius
     */
    public static final int CircleView_radius=4;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleGravity com.android.deskclock:collapsedTitleGravity}</code></td><td>Specifies how the title should be positioned when collapsed.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_collapsedTitleTextAppearance com.android.deskclock:collapsedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_contentScrim com.android.deskclock:contentScrim}</code></td><td>The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleGravity com.android.deskclock:expandedTitleGravity}</code></td><td>Specifies how the title should be positioned when expanded.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMargin com.android.deskclock:expandedTitleMargin}</code></td><td>Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginBottom com.android.deskclock:expandedTitleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginEnd com.android.deskclock:expandedTitleMarginEnd}</code></td><td>Specifies extra space on the end side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginStart com.android.deskclock:expandedTitleMarginStart}</code></td><td>Specifies extra space on the start side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleMarginTop com.android.deskclock:expandedTitleMarginTop}</code></td><td>Specifies extra space on the top side of the the expanded title text.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_expandedTitleTextAppearance com.android.deskclock:expandedTitleTextAppearance}</code></td><td>The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimAnimationDuration com.android.deskclock:scrimAnimationDuration}</code></td><td>Specifies the duration used for scrim visibility animations.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_scrimVisibleHeightTrigger com.android.deskclock:scrimVisibleHeightTrigger}</code></td><td>Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_statusBarScrim com.android.deskclock:statusBarScrim}</code></td><td>The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_title com.android.deskclock:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_titleEnabled com.android.deskclock:titleEnabled}</code></td><td>Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.</td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_toolbarId com.android.deskclock:toolbarId}</code></td><td>The id of the primary Toolbar child that you wish to use for the purpose of collapsing.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_collapsedTitleGravity
     * @see #CollapsingToolbarLayout_collapsedTitleTextAppearance
     * @see #CollapsingToolbarLayout_contentScrim
     * @see #CollapsingToolbarLayout_expandedTitleGravity
     * @see #CollapsingToolbarLayout_expandedTitleMargin
     * @see #CollapsingToolbarLayout_expandedTitleMarginBottom
     * @see #CollapsingToolbarLayout_expandedTitleMarginEnd
     * @see #CollapsingToolbarLayout_expandedTitleMarginStart
     * @see #CollapsingToolbarLayout_expandedTitleMarginTop
     * @see #CollapsingToolbarLayout_expandedTitleTextAppearance
     * @see #CollapsingToolbarLayout_scrimAnimationDuration
     * @see #CollapsingToolbarLayout_scrimVisibleHeightTrigger
     * @see #CollapsingToolbarLayout_statusBarScrim
     * @see #CollapsingToolbarLayout_title
     * @see #CollapsingToolbarLayout_titleEnabled
     * @see #CollapsingToolbarLayout_toolbarId
     */
    public static final int[] CollapsingToolbarLayout={
        0x7f040059, 0x7f04005a, 0x7f040070, 0x7f040098, 
        0x7f040099, 0x7f04009a, 0x7f04009b, 0x7f04009c, 
        0x7f04009d, 0x7f04009e, 0x7f040137, 0x7f040138, 
        0x7f040155, 0x7f04018e, 0x7f04018f, 0x7f040199
      };
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when collapsed.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:collapsedTitleGravity
     */
    public static final int CollapsingToolbarLayout_collapsedTitleGravity=0;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayouts title when it is fully
     * 'collapsed'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:collapsedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_collapsedTitleTextAppearance=1;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when
     * it has been scrolled sufficiently off screen.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:contentScrim
     */
    public static final int CollapsingToolbarLayout_contentScrim=2;
    /**
     * <p>
     * @attr description
     * Specifies how the title should be positioned when expanded.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push title to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the title in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place title in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place title in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push title to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the title if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push title to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push title to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push title to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push title to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:expandedTitleGravity
     */
    public static final int CollapsingToolbarLayout_expandedTitleGravity=3;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start, top, end and bottom
     * sides of the the expanded title text. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:expandedTitleMargin
     */
    public static final int CollapsingToolbarLayout_expandedTitleMargin=4;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:expandedTitleMarginBottom
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginBottom=5;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:expandedTitleMarginEnd
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginEnd=6;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:expandedTitleMarginStart
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginStart=7;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the the expanded title text.
     * Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:expandedTitleMarginTop
     */
    public static final int CollapsingToolbarLayout_expandedTitleMarginTop=8;
    /**
     * <p>
     * @attr description
     * The text appearance of the CollapsingToolbarLayout's title when it is fully
     * 'expanded'
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:expandedTitleTextAppearance
     */
    public static final int CollapsingToolbarLayout_expandedTitleTextAppearance=9;
    /**
     * <p>
     * @attr description
     * Specifies the duration used for scrim visibility animations.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:scrimAnimationDuration
     */
    public static final int CollapsingToolbarLayout_scrimAnimationDuration=10;
    /**
     * <p>
     * @attr description
     * Specifies the amount of visible height in pixels used to define when to trigger a
     * scrim visibility change.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:scrimVisibleHeightTrigger
     */
    public static final int CollapsingToolbarLayout_scrimVisibleHeightTrigger=11;
    /**
     * <p>
     * @attr description
     * The drawable to use as a scrim for the status bar content when the
     * CollapsingToolbarLayout has been scrolled sufficiently off screen. Only works on
     * Lollipop with the correct setup.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:statusBarScrim
     */
    public static final int CollapsingToolbarLayout_statusBarScrim=12;
    /**
     * <p>
     * @attr description
     * The title to show when titleEnabled is set to true.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:title
     */
    public static final int CollapsingToolbarLayout_title=13;
    /**
     * <p>
     * @attr description
     * Whether the CollapsingToolbarLayout should draw its own shrinking/growing title.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:titleEnabled
     */
    public static final int CollapsingToolbarLayout_titleEnabled=14;
    /**
     * <p>
     * @attr description
     * The id of the primary Toolbar child that you wish to use for the purpose of collapsing.
     * This Toolbar descendant view does not need to be a direct child of the layout.
     * If you do not set this, the first direct Toolbar child found will be used.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:toolbarId
     */
    public static final int CollapsingToolbarLayout_toolbarId=15;
    /**
     * Attributes that can be used with a CollapsingToolbarLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseMode com.android.deskclock:layout_collapseMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier com.android.deskclock:layout_collapseParallaxMultiplier}</code></td><td>The multiplier used when layout_collapseMode is set to 'parallax'.</td></tr>
     * </table>
     * @see #CollapsingToolbarLayout_Layout_layout_collapseMode
     * @see #CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier
     */
    public static final int[] CollapsingToolbarLayout_Layout={
        0x7f0400d3, 0x7f0400d4
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_collapseMode}
     * attribute's value can be found in the {@link #CollapsingToolbarLayout_Layout} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>none</td><td>0</td><td>The view will act as normal with no collapsing behavior.</td></tr>
     * <tr><td>parallax</td><td>2</td><td>The view will scroll in a parallax fashion. See the
     * layout_collapseParallaxMultiplier attribute to change the multiplier.</td></tr>
     * <tr><td>pin</td><td>1</td><td>The view will pin in place.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:layout_collapseMode
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseMode=0;
    /**
     * <p>
     * @attr description
     * The multiplier used when layout_collapseMode is set to 'parallax'. The value should
     * be between 0.0 and 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.deskclock:layout_collapseParallaxMultiplier
     */
    public static final int CollapsingToolbarLayout_Layout_layout_collapseParallaxMultiplier=1;
    /**
     * Attributes that can be assigned to a ColorStateList item.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.android.deskclock:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
        0x010101a5, 0x0101031f, 0x7f04002c
      };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.deskclock:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CompoundButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTint com.android.deskclock:buttonTint}</code></td><td>Tint to apply to the button drawable.</td></tr>
     * <tr><td><code>{@link #CompoundButton_buttonTintMode com.android.deskclock:buttonTintMode}</code></td><td>Blending mode used to apply the button tint.</td></tr>
     * </table>
     * @see #CompoundButton_android_button
     * @see #CompoundButton_buttonTint
     * @see #CompoundButton_buttonTintMode
     */
    public static final int[] CompoundButton={
        0x01010107, 0x7f04004e, 0x7f04004f
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#button}
     * attribute's value can be found in the {@link #CompoundButton} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:button
     */
    public static final int CompoundButton_android_button=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the button drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:buttonTint
     */
    public static final int CompoundButton_buttonTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the button tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:buttonTintMode
     */
    public static final int CompoundButton_buttonTintMode=2;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.android.deskclock:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.android.deskclock:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
        0x7f0400cc, 0x7f040154
      };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.android.deskclock:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.android.deskclock:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.android.deskclock:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.android.deskclock:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.android.deskclock:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.android.deskclock:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
        0x010100b3, 0x7f0400cf, 0x7f0400d0, 0x7f0400d2, 
        0x7f0400d8, 0x7f0400db, 0x7f0400dc
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>3</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>3</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DesignTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DesignTheme_bottomSheetDialogTheme com.android.deskclock:bottomSheetDialogTheme}</code></td><td>Theme to use for modal bottom sheet dialogs spawned from this theme.</td></tr>
     * <tr><td><code>{@link #DesignTheme_bottomSheetStyle com.android.deskclock:bottomSheetStyle}</code></td><td>Style to use for modal bottom sheets in this theme.</td></tr>
     * <tr><td><code>{@link #DesignTheme_textColorError com.android.deskclock:textColorError}</code></td><td>{@deprecated Use colorError}</td></tr>
     * </table>
     * @see #DesignTheme_bottomSheetDialogTheme
     * @see #DesignTheme_bottomSheetStyle
     * @see #DesignTheme_textColorError
     */
    @Deprecated
    public static final int[] DesignTheme={
        0x7f040043, 0x7f040044, 0x7f040182
      };
    /**
     * <p>
     * @attr description
     * Theme to use for modal bottom sheet dialogs spawned from this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:bottomSheetDialogTheme
     */
    public static final int DesignTheme_bottomSheetDialogTheme=0;
    /**
     * <p>
     * @attr description
     * Style to use for modal bottom sheets in this theme.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:bottomSheetStyle
     */
    public static final int DesignTheme_bottomSheetStyle=1;
    /**
     * <p>
     * @attr description
     * {@deprecated Use colorError}
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:textColorError
     */
    @Deprecated
    public static final int DesignTheme_textColorError=2;
    /**
     * Base attributes available to DialogPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogTitle android:dialogTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogMessage android:dialogMessage}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogIcon android:dialogIcon}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_positiveButtonText android:positiveButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_negativeButtonText android:negativeButtonText}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_android_dialogLayout android:dialogLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogIcon com.android.deskclock:dialogIcon}</code></td><td>The icon for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogLayout com.android.deskclock:dialogLayout}</code></td><td>A layout to be used as the content View for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogMessage com.android.deskclock:dialogMessage}</code></td><td>The message in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_dialogTitle com.android.deskclock:dialogTitle}</code></td><td>The title in the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_negativeButtonText com.android.deskclock:negativeButtonText}</code></td><td>The negative button text for the dialog.</td></tr>
     * <tr><td><code>{@link #DialogPreference_positiveButtonText com.android.deskclock:positiveButtonText}</code></td><td>The positive button text for the dialog.</td></tr>
     * </table>
     * @see #DialogPreference_android_dialogTitle
     * @see #DialogPreference_android_dialogMessage
     * @see #DialogPreference_android_dialogIcon
     * @see #DialogPreference_android_positiveButtonText
     * @see #DialogPreference_android_negativeButtonText
     * @see #DialogPreference_android_dialogLayout
     * @see #DialogPreference_dialogIcon
     * @see #DialogPreference_dialogLayout
     * @see #DialogPreference_dialogMessage
     * @see #DialogPreference_dialogTitle
     * @see #DialogPreference_negativeButtonText
     * @see #DialogPreference_positiveButtonText
     */
    public static final int[] DialogPreference={
        0x010101f2, 0x010101f3, 0x010101f4, 0x010101f5, 
        0x010101f6, 0x010101f7, 0x7f04007a, 0x7f04007b, 
        0x7f04007c, 0x7f040080, 0x7f040102, 0x7f040118
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogTitle}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogTitle
     */
    public static final int DialogPreference_android_dialogTitle=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogMessage}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dialogMessage
     */
    public static final int DialogPreference_android_dialogMessage=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogIcon}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogIcon
     */
    public static final int DialogPreference_android_dialogIcon=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#positiveButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:positiveButtonText
     */
    public static final int DialogPreference_android_positiveButtonText=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#negativeButtonText}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:negativeButtonText
     */
    public static final int DialogPreference_android_negativeButtonText=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dialogLayout}
     * attribute's value can be found in the {@link #DialogPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:dialogLayout
     */
    public static final int DialogPreference_android_dialogLayout=5;
    /**
     * <p>
     * @attr description
     * The icon for the dialog.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:dialogIcon
     */
    public static final int DialogPreference_dialogIcon=6;
    /**
     * <p>
     * @attr description
     * A layout to be used as the content View for the dialog. By default, this shouldn't
     * be needed. If a custom DialogPreference is required, this should be set. For example,
     * the EditTextPreference uses a layout with an EditText as this attribute.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:dialogLayout
     */
    public static final int DialogPreference_dialogLayout=7;
    /**
     * <p>
     * @attr description
     * The message in the dialog. If a dialogLayout is provided and contains
     * a TextView with ID android:id/message, this message will be placed in there.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:dialogMessage
     */
    public static final int DialogPreference_dialogMessage=8;
    /**
     * <p>
     * @attr description
     * The title in the dialog.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:dialogTitle
     */
    public static final int DialogPreference_dialogTitle=9;
    /**
     * <p>
     * @attr description
     * The negative button text for the dialog. Set to @null to hide the negative button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:negativeButtonText
     */
    public static final int DialogPreference_negativeButtonText=10;
    /**
     * <p>
     * @attr description
     * The positive button text for the dialog. Set to @null to hide the positive button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:positiveButtonText
     */
    public static final int DialogPreference_positiveButtonText=11;
    /**
     * Attributes that can be used with a DrawerArrowToggle.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.android.deskclock:arrowHeadLength}</code></td><td>The length of the arrow head when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.android.deskclock:arrowShaftLength}</code></td><td>The length of the shaft when formed to make an arrow</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_barLength com.android.deskclock:barLength}</code></td><td>The length of the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_color com.android.deskclock:color}</code></td><td>The drawing color for the bars</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.android.deskclock:drawableSize}</code></td><td>The total size of the drawable</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.android.deskclock:gapBetweenBars}</code></td><td>The max gap between the bars when they are parallel to each other</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_spinBars com.android.deskclock:spinBars}</code></td><td>Whether bars should rotate or not during transition</td></tr>
     * <tr><td><code>{@link #DrawerArrowToggle_thickness com.android.deskclock:thickness}</code></td><td>The thickness (stroke size) for the bar paint</td></tr>
     * </table>
     * @see #DrawerArrowToggle_arrowHeadLength
     * @see #DrawerArrowToggle_arrowShaftLength
     * @see #DrawerArrowToggle_barLength
     * @see #DrawerArrowToggle_color
     * @see #DrawerArrowToggle_drawableSize
     * @see #DrawerArrowToggle_gapBetweenBars
     * @see #DrawerArrowToggle_spinBars
     * @see #DrawerArrowToggle_thickness
     */
    public static final int[] DrawerArrowToggle={
        0x7f04002e, 0x7f04002f, 0x7f04003b, 0x7f04005b, 
        0x7f040087, 0x7f0400b2, 0x7f04014b, 0x7f040185
      };
    /**
     * <p>
     * @attr description
     * The length of the arrow head when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:arrowHeadLength
     */
    public static final int DrawerArrowToggle_arrowHeadLength=0;
    /**
     * <p>
     * @attr description
     * The length of the shaft when formed to make an arrow
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:arrowShaftLength
     */
    public static final int DrawerArrowToggle_arrowShaftLength=1;
    /**
     * <p>
     * @attr description
     * The length of the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:barLength
     */
    public static final int DrawerArrowToggle_barLength=2;
    /**
     * <p>
     * @attr description
     * The drawing color for the bars
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:color
     */
    public static final int DrawerArrowToggle_color=3;
    /**
     * <p>
     * @attr description
     * The total size of the drawable
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:drawableSize
     */
    public static final int DrawerArrowToggle_drawableSize=4;
    /**
     * <p>
     * @attr description
     * The max gap between the bars when they are parallel to each other
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:gapBetweenBars
     */
    public static final int DrawerArrowToggle_gapBetweenBars=5;
    /**
     * <p>
     * @attr description
     * Whether bars should rotate or not during transition
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:spinBars
     */
    public static final int DrawerArrowToggle_spinBars=6;
    /**
     * <p>
     * @attr description
     * The thickness (stroke size) for the bar paint
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:thickness
     */
    public static final int DrawerArrowToggle_thickness=7;
    /**
     * Attributes that can be used with a FloatingActionButton.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTint com.android.deskclock:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_backgroundTintMode com.android.deskclock:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_borderWidth com.android.deskclock:borderWidth}</code></td><td>The width of the border around the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_elevation com.android.deskclock:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_fabSize com.android.deskclock:fabSize}</code></td><td>Size for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_pressedTranslationZ com.android.deskclock:pressedTranslationZ}</code></td><td>TranslationZ value for the FAB when pressed</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_rippleColor com.android.deskclock:rippleColor}</code></td><td>Ripple color for the FAB.</td></tr>
     * <tr><td><code>{@link #FloatingActionButton_useCompatPadding com.android.deskclock:useCompatPadding}</code></td><td>Enable compat padding.</td></tr>
     * </table>
     * @see #FloatingActionButton_backgroundTint
     * @see #FloatingActionButton_backgroundTintMode
     * @see #FloatingActionButton_borderWidth
     * @see #FloatingActionButton_elevation
     * @see #FloatingActionButton_fabSize
     * @see #FloatingActionButton_pressedTranslationZ
     * @see #FloatingActionButton_rippleColor
     * @see #FloatingActionButton_useCompatPadding
     */
    public static final int[] FloatingActionButton={
        0x7f040039, 0x7f04003a, 0x7f040041, 0x7f040090, 
        0x7f04009f, 0x7f040128, 0x7f040134, 0x7f0401a2
      };
    /**
     * <p>
     * @attr description
     * Background for the FloatingActionButton
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:backgroundTint
     */
    public static final int FloatingActionButton_backgroundTint=0;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:backgroundTintMode
     */
    public static final int FloatingActionButton_backgroundTintMode=1;
    /**
     * <p>
     * @attr description
     * The width of the border around the FAB.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:borderWidth
     */
    public static final int FloatingActionButton_borderWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation value for the FAB
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:elevation
     */
    public static final int FloatingActionButton_elevation=3;
    /**
     * <p>
     * @attr description
     * Size for the FAB.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>ffffffff</td><td>A size which will change based on the window size.</td></tr>
     * <tr><td>mini</td><td>1</td><td>The mini sized button.</td></tr>
     * <tr><td>normal</td><td>0</td><td>The normal sized button.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:fabSize
     */
    public static final int FloatingActionButton_fabSize=4;
    /**
     * <p>
     * @attr description
     * TranslationZ value for the FAB when pressed
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:pressedTranslationZ
     */
    public static final int FloatingActionButton_pressedTranslationZ=5;
    /**
     * <p>
     * @attr description
     * Ripple color for the FAB.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:rippleColor
     */
    public static final int FloatingActionButton_rippleColor=6;
    /**
     * <p>
     * @attr description
     * Enable compat padding.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:useCompatPadding
     */
    public static final int FloatingActionButton_useCompatPadding=7;
    /**
     * Attributes that can be used with a FloatingActionButton_Behavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FloatingActionButton_Behavior_Layout_behavior_autoHide com.android.deskclock:behavior_autoHide}</code></td><td>Whether the FAB should automatically hide when there is no space for it.</td></tr>
     * </table>
     * @see #FloatingActionButton_Behavior_Layout_behavior_autoHide
     */
    public static final int[] FloatingActionButton_Behavior_Layout={
        0x7f04003c
      };
    /**
     * <p>
     * @attr description
     * Whether the FAB should automatically hide when there is no space for it.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:behavior_autoHide
     */
    public static final int FloatingActionButton_Behavior_Layout_behavior_autoHide=0;
    /**
     * Attributes that are read when parsing a <fontfamily> tag.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.android.deskclock:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.android.deskclock:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.android.deskclock:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.android.deskclock:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.android.deskclock:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.android.deskclock:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
        0x7f0400a8, 0x7f0400a9, 0x7f0400aa, 0x7f0400ab, 
        0x7f0400ac, 0x7f0400ad
      };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that are read when parsing a <font> tag, which is a child of
     * <font-family>. This represents an actual font file and its attributes.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.android.deskclock:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.android.deskclock:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.android.deskclock:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontWeight
     */
    public static final int[] FontFamilyFont={
        0x7f0400a6, 0x7f0400ae, 0x7f0400af
      };
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:font
     */
    public static final int FontFamilyFont_font=0;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=1;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=2;
    /**
     * Attributes that can be used with a ForegroundLinearLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foreground android:foreground}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_android_foregroundGravity android:foregroundGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #ForegroundLinearLayout_foregroundInsidePadding com.android.deskclock:foregroundInsidePadding}</code></td><td></td></tr>
     * </table>
     * @see #ForegroundLinearLayout_android_foreground
     * @see #ForegroundLinearLayout_android_foregroundGravity
     * @see #ForegroundLinearLayout_foregroundInsidePadding
     */
    public static final int[] ForegroundLinearLayout={
        0x01010109, 0x01010200, 0x7f0400b0
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foreground}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:foreground
     */
    public static final int ForegroundLinearLayout_android_foreground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#foregroundGravity}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:foregroundGravity
     */
    public static final int ForegroundLinearLayout_android_foregroundGravity=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#foregroundInsidePadding}
     * attribute's value can be found in the {@link #ForegroundLinearLayout} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:foregroundInsidePadding
     */
    public static final int ForegroundLinearLayout_foregroundInsidePadding=2;
    /**
     * Attributes that can be used with a GridLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GridLayout_alignmentMode com.android.deskclock:alignmentMode}</code></td><td>When set to alignMargins, causes alignment to take place between the outer
     * boundary of a view, as defined by its margins.</td></tr>
     * <tr><td><code>{@link #GridLayout_columnCount com.android.deskclock:columnCount}</code></td><td>The maximum number of columns to create when automatically positioning children.</td></tr>
     * <tr><td><code>{@link #GridLayout_columnOrderPreserved com.android.deskclock:columnOrderPreserved}</code></td><td>When set to true, forces column boundaries to appear in the same order
     * as column indices.</td></tr>
     * <tr><td><code>{@link #GridLayout_orientation com.android.deskclock:orientation}</code></td><td>The orientation property is not used during layout.</td></tr>
     * <tr><td><code>{@link #GridLayout_rowCount com.android.deskclock:rowCount}</code></td><td>The maximum number of rows to create when automatically positioning children.</td></tr>
     * <tr><td><code>{@link #GridLayout_rowOrderPreserved com.android.deskclock:rowOrderPreserved}</code></td><td>When set to true, forces row boundaries to appear in the same order
     * as row indices.</td></tr>
     * <tr><td><code>{@link #GridLayout_useDefaultMargins com.android.deskclock:useDefaultMargins}</code></td><td>When set to true, tells GridLayout to use default margins when none are specified
     * in a view's layout parameters.</td></tr>
     * </table>
     * @see #GridLayout_alignmentMode
     * @see #GridLayout_columnCount
     * @see #GridLayout_columnOrderPreserved
     * @see #GridLayout_orientation
     * @see #GridLayout_rowCount
     * @see #GridLayout_rowOrderPreserved
     * @see #GridLayout_useDefaultMargins
     */
    public static final int[] GridLayout={
        0x7f040027, 0x7f040066, 0x7f040067, 0x7f040106, 
        0x7f040135, 0x7f040136, 0x7f0401a3
      };
    /**
     * <p>
     * @attr description
     * When set to alignMargins, causes alignment to take place between the outer
     * boundary of a view, as defined by its margins. When set to alignBounds,
     * causes alignment to take place between the edges of the view.
     * The default is alignMargins.
     * See {@link android.widget.GridLayout#setAlignmentMode(int)}.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alignBounds</td><td>0</td><td>Align the bounds of the children.
     * See {@link android.widget.GridLayout#ALIGN_BOUNDS}.</td></tr>
     * <tr><td>alignMargins</td><td>1</td><td>Align the margins of the children.
     * See {@link android.widget.GridLayout#ALIGN_MARGINS}.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:alignmentMode
     */
    public static final int GridLayout_alignmentMode=0;
    /**
     * <p>
     * @attr description
     * The maximum number of columns to create when automatically positioning children.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:columnCount
     */
    public static final int GridLayout_columnCount=1;
    /**
     * <p>
     * @attr description
     * When set to true, forces column boundaries to appear in the same order
     * as column indices.
     * The default is true.
     * See {@link android.widget.GridLayout#setColumnOrderPreserved(boolean)}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:columnOrderPreserved
     */
    public static final int GridLayout_columnOrderPreserved=2;
    /**
     * <p>
     * @attr description
     * The orientation property is not used during layout. It is only used to
     * allocate row and column parameters when they are not specified by its children's
     * layout parameters. GridLayout works like LinearLayout in this case;
     * putting all the components either in a single row or in a single column -
     * depending on the value of this flag. In the horizontal case, a columnCount
     * property may be additionally supplied to force new rows to be created when a
     * row is full. The rowCount attribute may be used similarly in the vertical case.
     * The default is horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td>Defines an horizontal widget.</td></tr>
     * <tr><td>vertical</td><td>1</td><td>Defines a vertical widget.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:orientation
     */
    public static final int GridLayout_orientation=3;
    /**
     * <p>
     * @attr description
     * The maximum number of rows to create when automatically positioning children.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:rowCount
     */
    public static final int GridLayout_rowCount=4;
    /**
     * <p>
     * @attr description
     * When set to true, forces row boundaries to appear in the same order
     * as row indices.
     * The default is true.
     * See {@link android.widget.GridLayout#setRowOrderPreserved(boolean)}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:rowOrderPreserved
     */
    public static final int GridLayout_rowOrderPreserved=5;
    /**
     * <p>
     * @attr description
     * When set to true, tells GridLayout to use default margins when none are specified
     * in a view's layout parameters.
     * The default value is false.
     * See {@link android.widget.GridLayout#setUseDefaultMargins(boolean)}.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:useDefaultMargins
     */
    public static final int GridLayout_useDefaultMargins=6;
    /**
     * Attributes that can be used with a GridLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_margin android:layout_margin}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_marginLeft android:layout_marginLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_marginTop android:layout_marginTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_marginRight android:layout_marginRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_android_layout_marginBottom android:layout_marginBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_column com.android.deskclock:layout_column}</code></td><td>The column boundary delimiting the left of the group of cells
     * occupied by this view.</td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_columnSpan com.android.deskclock:layout_columnSpan}</code></td><td>The column span: the difference between the right and left
     * boundaries delimiting the group of cells occupied by this view.</td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_columnWeight com.android.deskclock:layout_columnWeight}</code></td><td>The relative proportion of horizontal space that should be allocated to this view
     * during excess space distribution.</td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_gravity com.android.deskclock:layout_gravity}</code></td><td>Gravity specifies how a component should be placed in its group of cells.</td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_row com.android.deskclock:layout_row}</code></td><td>The row boundary delimiting the top of the group of cells
     * occupied by this view.</td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_rowSpan com.android.deskclock:layout_rowSpan}</code></td><td>The row span: the difference between the top and bottom
     * boundaries delimiting the group of cells occupied by this view.</td></tr>
     * <tr><td><code>{@link #GridLayout_Layout_layout_rowWeight com.android.deskclock:layout_rowWeight}</code></td><td>The relative proportion of vertical space that should be allocated to this view
     * during excess space distribution.</td></tr>
     * </table>
     * @see #GridLayout_Layout_android_layout_width
     * @see #GridLayout_Layout_android_layout_height
     * @see #GridLayout_Layout_android_layout_margin
     * @see #GridLayout_Layout_android_layout_marginLeft
     * @see #GridLayout_Layout_android_layout_marginTop
     * @see #GridLayout_Layout_android_layout_marginRight
     * @see #GridLayout_Layout_android_layout_marginBottom
     * @see #GridLayout_Layout_layout_column
     * @see #GridLayout_Layout_layout_columnSpan
     * @see #GridLayout_Layout_layout_columnWeight
     * @see #GridLayout_Layout_layout_gravity
     * @see #GridLayout_Layout_layout_row
     * @see #GridLayout_Layout_layout_rowSpan
     * @see #GridLayout_Layout_layout_rowWeight
     */
    public static final int[] GridLayout_Layout={
        0x010100f4, 0x010100f5, 0x010100f6, 0x010100f7, 
        0x010100f8, 0x010100f9, 0x010100fa, 0x7f0400d5, 
        0x7f0400d6, 0x7f0400d7, 0x7f0400d9, 0x7f0400e4, 
        0x7f0400e5, 0x7f0400e6
      };
    /**
     * <p>
     * @attr description
     * START MarginLayout layoutparams
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int GridLayout_Layout_android_layout_width=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #GridLayout_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int GridLayout_Layout_android_layout_height=1;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, top, right and bottom
     * sides of this view. This space is outside this view's bounds.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_margin
     */
    public static final int GridLayout_Layout_android_layout_margin=2;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left side of this view.
     * This space is outside this view's bounds.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginLeft
     */
    public static final int GridLayout_Layout_android_layout_marginLeft=3;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of this view.
     * This space is outside this view's bounds.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginTop
     */
    public static final int GridLayout_Layout_android_layout_marginTop=4;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the right side of this view.
     * This space is outside this view's bounds.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginRight
     */
    public static final int GridLayout_Layout_android_layout_marginRight=5;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of this view.
     * This space is outside this view's bounds.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:layout_marginBottom
     */
    public static final int GridLayout_Layout_android_layout_marginBottom=6;
    /**
     * <p>
     * @attr description
     * The column boundary delimiting the left of the group of cells
     * occupied by this view.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:layout_column
     */
    public static final int GridLayout_Layout_layout_column=7;
    /**
     * <p>
     * @attr description
     * The column span: the difference between the right and left
     * boundaries delimiting the group of cells occupied by this view.
     * The default is one.
     * See {@link android.widget.GridLayout.Spec}.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:layout_columnSpan
     */
    public static final int GridLayout_Layout_layout_columnSpan=8;
    /**
     * <p>
     * @attr description
     * The relative proportion of horizontal space that should be allocated to this view
     * during excess space distribution.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.deskclock:layout_columnWeight
     */
    public static final int GridLayout_Layout_layout_columnWeight=9;
    /**
     * <p>
     * @attr description
     * Gravity specifies how a component should be placed in its group of cells.
     * The default is LEFT | BASELINE.
     * See {@link android.widget.GridLayout.LayoutParams#setGravity(int)}.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:layout_gravity
     */
    public static final int GridLayout_Layout_layout_gravity=10;
    /**
     * <p>
     * @attr description
     * The row boundary delimiting the top of the group of cells
     * occupied by this view.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:layout_row
     */
    public static final int GridLayout_Layout_layout_row=11;
    /**
     * <p>
     * @attr description
     * The row span: the difference between the top and bottom
     * boundaries delimiting the group of cells occupied by this view.
     * The default is one.
     * See {@link android.widget.GridLayout.Spec}.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:layout_rowSpan
     */
    public static final int GridLayout_Layout_layout_rowSpan=12;
    /**
     * <p>
     * @attr description
     * The relative proportion of vertical space that should be allocated to this view
     * during excess space distribution.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.deskclock:layout_rowWeight
     */
    public static final int GridLayout_Layout_layout_rowWeight=13;
    /**
     * Attributes that can be used with a LinearLayoutCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_divider com.android.deskclock:divider}</code></td><td>Specifies the drawable used for item dividers.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.android.deskclock:dividerPadding}</code></td><td>Size of padding on either end of a divider.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.android.deskclock:measureWithLargestChild}</code></td><td>When set to true, all children with a weight will be considered having
     * the minimum size of the largest child.</td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_showDividers com.android.deskclock:showDividers}</code></td><td>Setting for which dividers to show.</td></tr>
     * </table>
     * @see #LinearLayoutCompat_android_gravity
     * @see #LinearLayoutCompat_android_orientation
     * @see #LinearLayoutCompat_android_baselineAligned
     * @see #LinearLayoutCompat_android_baselineAlignedChildIndex
     * @see #LinearLayoutCompat_android_weightSum
     * @see #LinearLayoutCompat_divider
     * @see #LinearLayoutCompat_dividerPadding
     * @see #LinearLayoutCompat_measureWithLargestChild
     * @see #LinearLayoutCompat_showDividers
     */
    public static final int[] LinearLayoutCompat={
        0x010100af, 0x010100c4, 0x01010126, 0x01010127, 
        0x01010128, 0x7f040083, 0x7f040085, 0x7f0400fb, 
        0x7f040144
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int LinearLayoutCompat_android_gravity=0;
    /**
     * <p>
     * @attr description
     * Should the layout be a column or a row?  Use "horizontal"
     * for a row, "vertical" for a column.  The default is
     * horizontal.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int LinearLayoutCompat_android_orientation=1;
    /**
     * <p>
     * @attr description
     * When set to false, prevents the layout from aligning its children's
     * baselines. This attribute is particularly useful when the children
     * use different values for gravity. The default value is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:baselineAligned
     */
    public static final int LinearLayoutCompat_android_baselineAligned=2;
    /**
     * <p>
     * @attr description
     * When a linear layout is part of another layout that is baseline
     * aligned, it can specify which of its children to baseline align to
     * (that is, which child TextView).
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:baselineAlignedChildIndex
     */
    public static final int LinearLayoutCompat_android_baselineAlignedChildIndex=3;
    /**
     * <p>
     * @attr description
     * Defines the maximum weight sum. If unspecified, the sum is computed
     * by adding the layout_weight of all of the children. This can be
     * used for instance to give a single child 50% of the total available
     * space by giving it a layout_weight of 0.5 and setting the weightSum
     * to 1.0.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:weightSum
     */
    public static final int LinearLayoutCompat_android_weightSum=4;
    /**
     * <p>
     * @attr description
     * Drawable to use as a vertical divider between buttons.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:divider
     */
    public static final int LinearLayoutCompat_divider=5;
    /**
     * <p>
     * @attr description
     * Size of padding on either end of a divider.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:dividerPadding
     */
    public static final int LinearLayoutCompat_dividerPadding=6;
    /**
     * <p>
     * @attr description
     * When set to true, all children with a weight will be considered having
     * the minimum size of the largest child. If false, all children are
     * measured normally.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:measureWithLargestChild
     */
    public static final int LinearLayoutCompat_measureWithLargestChild=7;
    /**
     * <p>
     * @attr description
     * Setting for which dividers to show.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>beginning</td><td>1</td><td></td></tr>
     * <tr><td>end</td><td>4</td><td></td></tr>
     * <tr><td>middle</td><td>2</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:showDividers
     */
    public static final int LinearLayoutCompat_showDividers=8;
    /**
     * Attributes that can be used with a LinearLayoutCompat_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
     * <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
     * </table>
     * @see #LinearLayoutCompat_Layout_android_layout_gravity
     * @see #LinearLayoutCompat_Layout_android_layout_width
     * @see #LinearLayoutCompat_Layout_android_layout_height
     * @see #LinearLayoutCompat_Layout_android_layout_weight
     */
    public static final int[] LinearLayoutCompat_Layout={
        0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int LinearLayoutCompat_Layout_android_layout_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_width}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_width
     */
    public static final int LinearLayoutCompat_Layout_android_layout_width=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_height}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_height
     */
    public static final int LinearLayoutCompat_Layout_android_layout_height=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
     * attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:layout_weight
     */
    public static final int LinearLayoutCompat_Layout_android_layout_weight=3;
    /**
     * Attributes that can be used with a ListPopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td></td></tr>
     * </table>
     * @see #ListPopupWindow_android_dropDownHorizontalOffset
     * @see #ListPopupWindow_android_dropDownVerticalOffset
     */
    public static final int[] ListPopupWindow={
        0x010102ac, 0x010102ad
      };
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset horizontally.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownHorizontalOffset
     */
    public static final int ListPopupWindow_android_dropDownHorizontalOffset=0;
    /**
     * <p>
     * @attr description
     * Amount of pixels by which the drop down should be offset vertically.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dropDownVerticalOffset
     */
    public static final int ListPopupWindow_android_dropDownVerticalOffset=1;
    /**
     * Base attributes available to ListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #ListPreference_entries com.android.deskclock:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #ListPreference_entryValues com.android.deskclock:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #ListPreference_android_entries
     * @see #ListPreference_android_entryValues
     * @see #ListPreference_entries
     * @see #ListPreference_entryValues
     */
    public static final int[] ListPreference={
        0x010100b2, 0x010101f8, 0x7f040092, 0x7f040093
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int ListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #ListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int ListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:entries
     */
    public static final int ListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks on the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:entryValues
     */
    public static final int ListPreference_entryValues=3;
    /**
     * Base attributes that are available to all groups.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td></td></tr>
     * </table>
     * @see #MenuGroup_android_enabled
     * @see #MenuGroup_android_id
     * @see #MenuGroup_android_visible
     * @see #MenuGroup_android_menuCategory
     * @see #MenuGroup_android_orderInCategory
     * @see #MenuGroup_android_checkableBehavior
     */
    public static final int[] MenuGroup={
        0x0101000e, 0x010100d0, 0x01010194, 0x010101de, 
        0x010101df, 0x010101e0
      };
    /**
     * <p>
     * @attr description
     * Whether the items are enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuGroup_android_enabled=0;
    /**
     * <p>
     * @attr description
     * The ID of the group.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuGroup_android_id=1;
    /**
     * <p>
     * @attr description
     * Whether the items are shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuGroup_android_visible=2;
    /**
     * <p>
     * @attr description
     * The category applied to all items within this group.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuGroup_android_menuCategory=3;
    /**
     * <p>
     * @attr description
     * The order within the category applied to all items within this group.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuGroup_android_orderInCategory=4;
    /**
     * <p>
     * @attr description
     * Whether the items are capable of displaying a check mark.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>1</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>single</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:checkableBehavior
     */
    public static final int MenuGroup_android_checkableBehavior=5;
    /**
     * Base attributes that are available to all Item objects.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuItem_actionLayout com.android.deskclock:actionLayout}</code></td><td>An optional layout to be used as an action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionProviderClass com.android.deskclock:actionProviderClass}</code></td><td>The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.</td></tr>
     * <tr><td><code>{@link #MenuItem_actionViewClass com.android.deskclock:actionViewClass}</code></td><td>The name of an optional View class to instantiate and use as an
     * action view.</td></tr>
     * <tr><td><code>{@link #MenuItem_alphabeticModifiers com.android.deskclock:alphabeticModifiers}</code></td><td>The alphabetic modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_contentDescription com.android.deskclock:contentDescription}</code></td><td>The content description associated with the item.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTint com.android.deskclock:iconTint}</code></td><td>Tint to apply to the icon.</td></tr>
     * <tr><td><code>{@link #MenuItem_iconTintMode com.android.deskclock:iconTintMode}</code></td><td>Blending mode used to apply the icon tint.</td></tr>
     * <tr><td><code>{@link #MenuItem_numericModifiers com.android.deskclock:numericModifiers}</code></td><td>The numeric modifier key.</td></tr>
     * <tr><td><code>{@link #MenuItem_showAsAction com.android.deskclock:showAsAction}</code></td><td>How this item should display in the Action Bar, if present.</td></tr>
     * <tr><td><code>{@link #MenuItem_tooltipText com.android.deskclock:tooltipText}</code></td><td>The tooltip text associated with the item.</td></tr>
     * </table>
     * @see #MenuItem_android_icon
     * @see #MenuItem_android_enabled
     * @see #MenuItem_android_id
     * @see #MenuItem_android_checked
     * @see #MenuItem_android_visible
     * @see #MenuItem_android_menuCategory
     * @see #MenuItem_android_orderInCategory
     * @see #MenuItem_android_title
     * @see #MenuItem_android_titleCondensed
     * @see #MenuItem_android_alphabeticShortcut
     * @see #MenuItem_android_numericShortcut
     * @see #MenuItem_android_checkable
     * @see #MenuItem_android_onClick
     * @see #MenuItem_actionLayout
     * @see #MenuItem_actionProviderClass
     * @see #MenuItem_actionViewClass
     * @see #MenuItem_alphabeticModifiers
     * @see #MenuItem_contentDescription
     * @see #MenuItem_iconTint
     * @see #MenuItem_iconTintMode
     * @see #MenuItem_numericModifiers
     * @see #MenuItem_showAsAction
     * @see #MenuItem_tooltipText
     */
    public static final int[] MenuItem={
        0x01010002, 0x0101000e, 0x010100d0, 0x01010106, 
        0x01010194, 0x010101de, 0x010101df, 0x010101e1, 
        0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5, 
        0x0101026f, 0x7f04000d, 0x7f04001f, 0x7f040020, 
        0x7f04002d, 0x7f040069, 0x7f0400be, 0x7f0400bf, 
        0x7f040103, 0x7f040143, 0x7f04019e
      };
    /**
     * <p>
     * @attr description
     * The icon associated with this item.  This icon will not always be shown, so
     * the title should be sufficient in describing this item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int MenuItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * Whether the item is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int MenuItem_android_enabled=1;
    /**
     * <p>
     * @attr description
     * The ID of the item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int MenuItem_android_id=2;
    /**
     * <p>
     * @attr description
     * Whether the item is checked.  Note that you must first have enabled checking with
     * the checkable attribute or else the check mark will not appear.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checked
     */
    public static final int MenuItem_android_checked=3;
    /**
     * <p>
     * @attr description
     * Whether the item is shown/visible.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:visible
     */
    public static final int MenuItem_android_visible=4;
    /**
     * <p>
     * @attr description
     * The category applied to the item.
     * (This will be or'ed with the orderInCategory attribute.)
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alternative</td><td>40000</td><td></td></tr>
     * <tr><td>container</td><td>10000</td><td></td></tr>
     * <tr><td>secondary</td><td>30000</td><td></td></tr>
     * <tr><td>system</td><td>20000</td><td></td></tr>
     * </table>
     *
     * @attr name android:menuCategory
     */
    public static final int MenuItem_android_menuCategory=5;
    /**
     * <p>
     * @attr description
     * The order within the category applied to the item.
     * (This will be or'ed with the category attribute.)
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:orderInCategory
     */
    public static final int MenuItem_android_orderInCategory=6;
    /**
     * <p>
     * @attr description
     * The title associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int MenuItem_android_title=7;
    /**
     * <p>
     * @attr description
     * The condensed title associated with the item.  This is used in situations where the
     * normal title may be too long to be displayed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:titleCondensed
     */
    public static final int MenuItem_android_titleCondensed=8;
    /**
     * <p>
     * @attr description
     * The alphabetic shortcut key.  This is the shortcut when using a keyboard
     * with alphabetic keys.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:alphabeticShortcut
     */
    public static final int MenuItem_android_alphabeticShortcut=9;
    /**
     * <p>
     * @attr description
     * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
     * keyboard.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:numericShortcut
     */
    public static final int MenuItem_android_numericShortcut=10;
    /**
     * <p>
     * @attr description
     * Whether the item is capable of displaying a check mark.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:checkable
     */
    public static final int MenuItem_android_checkable=11;
    /**
     * <p>
     * @attr description
     * Name of a method on the Context used to inflate the menu that will be
     * called when the item is clicked.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:onClick
     */
    public static final int MenuItem_android_onClick=12;
    /**
     * <p>
     * @attr description
     * An optional layout to be used as an action view.
     * See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:actionLayout
     */
    public static final int MenuItem_actionLayout=13;
    /**
     * <p>
     * @attr description
     * The name of an optional ActionProvider class to instantiate an action view
     * and perform operations such as default action for that menu item.
     * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:actionProviderClass
     */
    public static final int MenuItem_actionProviderClass=14;
    /**
     * <p>
     * @attr description
     * The name of an optional View class to instantiate and use as an
     * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
     * for more info.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:actionViewClass
     */
    public static final int MenuItem_actionViewClass=15;
    /**
     * <p>
     * @attr description
     * The alphabetic modifier key. This is the modifier when using a keyboard
     * with alphabetic keys. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:alphabeticModifiers
     */
    public static final int MenuItem_alphabeticModifiers=16;
    /**
     * <p>
     * @attr description
     * The content description associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:contentDescription
     */
    public static final int MenuItem_contentDescription=17;
    /**
     * <p>
     * @attr description
     * Tint to apply to the icon.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:iconTint
     */
    public static final int MenuItem_iconTint=18;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the icon tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the icon with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the icon, but with the icon’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the icon. The icon’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the icon.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:iconTintMode
     */
    public static final int MenuItem_iconTintMode=19;
    /**
     * <p>
     * @attr description
     * The numeric modifier key. This is the modifier when using a numeric (e.g., 12-key)
     * keyboard. The values should be kept in sync with KeyEvent
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>ALT</td><td>2</td><td></td></tr>
     * <tr><td>CTRL</td><td>1000</td><td></td></tr>
     * <tr><td>FUNCTION</td><td>8</td><td></td></tr>
     * <tr><td>META</td><td>10000</td><td></td></tr>
     * <tr><td>SHIFT</td><td>1</td><td></td></tr>
     * <tr><td>SYM</td><td>4</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:numericModifiers
     */
    public static final int MenuItem_numericModifiers=20;
    /**
     * <p>
     * @attr description
     * How this item should display in the Action Bar, if present.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>always</td><td>2</td><td>Always show this item in an actionbar, even if it would override
     * the system's limits of how much stuff to put there. This may make
     * your action bar look bad on some screens. In most cases you should
     * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never".</td></tr>
     * <tr><td>collapseActionView</td><td>8</td><td>This item's action view collapses to a normal menu
     * item. When expanded, the action view takes over a
     * larger segment of its container.</td></tr>
     * <tr><td>ifRoom</td><td>1</td><td>Show this item in an action bar if there is room for it as determined
     * by the system. Favor this option over "always" where possible.
     * Mutually exclusive with "never" and "always".</td></tr>
     * <tr><td>never</td><td>0</td><td>Never show this item in an action bar, show it in the overflow menu instead.
     * Mutually exclusive with "ifRoom" and "always".</td></tr>
     * <tr><td>withText</td><td>4</td><td>When this item is shown as an action in the action bar, show a text
     * label with it even if it has an icon representation.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:showAsAction
     */
    public static final int MenuItem_showAsAction=21;
    /**
     * <p>
     * @attr description
     * The tooltip text associated with the item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:tooltipText
     */
    public static final int MenuItem_tooltipText=22;
    /**
     * Attributes that can be used with a MenuView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #MenuView_preserveIconSpacing com.android.deskclock:preserveIconSpacing}</code></td><td>Whether space should be reserved in layout when an icon is missing.</td></tr>
     * <tr><td><code>{@link #MenuView_subMenuArrow com.android.deskclock:subMenuArrow}</code></td><td>Drawable for the arrow icon indicating a particular item is a submenu.</td></tr>
     * </table>
     * @see #MenuView_android_windowAnimationStyle
     * @see #MenuView_android_itemTextAppearance
     * @see #MenuView_android_horizontalDivider
     * @see #MenuView_android_verticalDivider
     * @see #MenuView_android_headerBackground
     * @see #MenuView_android_itemBackground
     * @see #MenuView_android_itemIconDisabledAlpha
     * @see #MenuView_preserveIconSpacing
     * @see #MenuView_subMenuArrow
     */
    public static final int[] MenuView={
        0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e, 
        0x0101012f, 0x01010130, 0x01010131, 0x7f040127, 
        0x7f040156
      };
    /**
     * <p>
     * @attr description
     * Default animations for the menu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:windowAnimationStyle
     */
    public static final int MenuView_android_windowAnimationStyle=0;
    /**
     * <p>
     * @attr description
     * Default appearance of menu item text.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:itemTextAppearance
     */
    public static final int MenuView_android_itemTextAppearance=1;
    /**
     * <p>
     * @attr description
     * Default horizontal divider between rows of menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:horizontalDivider
     */
    public static final int MenuView_android_horizontalDivider=2;
    /**
     * <p>
     * @attr description
     * Default vertical divider between menu items.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:verticalDivider
     */
    public static final int MenuView_android_verticalDivider=3;
    /**
     * <p>
     * @attr description
     * Default background for the menu header.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:headerBackground
     */
    public static final int MenuView_android_headerBackground=4;
    /**
     * <p>
     * @attr description
     * Default background for each menu item.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:itemBackground
     */
    public static final int MenuView_android_itemBackground=5;
    /**
     * <p>
     * @attr description
     * Default disabled icon alpha for each menu item that shows an icon.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:itemIconDisabledAlpha
     */
    public static final int MenuView_android_itemIconDisabledAlpha=6;
    /**
     * <p>
     * @attr description
     * Whether space should be reserved in layout when an icon is missing.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:preserveIconSpacing
     */
    public static final int MenuView_preserveIconSpacing=7;
    /**
     * <p>
     * @attr description
     * Drawable for the arrow icon indicating a particular item is a submenu.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:subMenuArrow
     */
    public static final int MenuView_subMenuArrow=8;
    /**
     * Attributes that can be used with a MultiSelectListPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entries com.android.deskclock:entries}</code></td><td>The human-readable array to present as a list.</td></tr>
     * <tr><td><code>{@link #MultiSelectListPreference_entryValues com.android.deskclock:entryValues}</code></td><td>The array to find the value to save for a preference when an entry from
     * entries is selected.</td></tr>
     * </table>
     * @see #MultiSelectListPreference_android_entries
     * @see #MultiSelectListPreference_android_entryValues
     * @see #MultiSelectListPreference_entries
     * @see #MultiSelectListPreference_entryValues
     */
    public static final int[] MultiSelectListPreference={
        0x010100b2, 0x010101f8, 0x7f040092, 0x7f040093
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entries}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int MultiSelectListPreference_android_entries=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#entryValues}
     * attribute's value can be found in the {@link #MultiSelectListPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entryValues
     */
    public static final int MultiSelectListPreference_android_entryValues=1;
    /**
     * <p>
     * @attr description
     * The human-readable array to present as a list. Each entry must have a corresponding
     * index in entryValues.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:entries
     */
    public static final int MultiSelectListPreference_entries=2;
    /**
     * <p>
     * @attr description
     * The array to find the value to save for a preference when an entry from
     * entries is selected. If a user clicks the second item in entries, the
     * second item in this array will be saved to the preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:entryValues
     */
    public static final int MultiSelectListPreference_entryValues=3;
    /**
     * Attributes that can be used with a NavigationView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #NavigationView_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_fitsSystemWindows android:fitsSystemWindows}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_elevation com.android.deskclock:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #NavigationView_headerLayout com.android.deskclock:headerLayout}</code></td><td>Layout resource to inflate as the header</td></tr>
     * <tr><td><code>{@link #NavigationView_itemBackground com.android.deskclock:itemBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemIconTint com.android.deskclock:itemIconTint}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextAppearance com.android.deskclock:itemTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_itemTextColor com.android.deskclock:itemTextColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #NavigationView_menu com.android.deskclock:menu}</code></td><td>The menu resource to inflate and populate items from.</td></tr>
     * </table>
     * @see #NavigationView_android_background
     * @see #NavigationView_android_fitsSystemWindows
     * @see #NavigationView_android_maxWidth
     * @see #NavigationView_elevation
     * @see #NavigationView_headerLayout
     * @see #NavigationView_itemBackground
     * @see #NavigationView_itemIconTint
     * @see #NavigationView_itemTextAppearance
     * @see #NavigationView_itemTextColor
     * @see #NavigationView_menu
     */
    public static final int[] NavigationView={
        0x010100d4, 0x010100dd, 0x0101011f, 0x7f040090, 
        0x7f0400b4, 0x7f0400c6, 0x7f0400c7, 0x7f0400c9, 
        0x7f0400ca, 0x7f0400fc
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int NavigationView_android_background=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fitsSystemWindows}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:fitsSystemWindows
     */
    public static final int NavigationView_android_fitsSystemWindows=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int NavigationView_android_maxWidth=2;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:elevation
     */
    public static final int NavigationView_elevation=3;
    /**
     * <p>
     * @attr description
     * Layout resource to inflate as the header
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:headerLayout
     */
    public static final int NavigationView_headerLayout=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#itemBackground}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:itemBackground
     */
    public static final int NavigationView_itemBackground=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#itemIconTint}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:itemIconTint
     */
    public static final int NavigationView_itemIconTint=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#itemTextAppearance}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:itemTextAppearance
     */
    public static final int NavigationView_itemTextAppearance=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#itemTextColor}
     * attribute's value can be found in the {@link #NavigationView} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:itemTextColor
     */
    public static final int NavigationView_itemTextColor=8;
    /**
     * <p>
     * @attr description
     * The menu resource to inflate and populate items from.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:menu
     */
    public static final int NavigationView_menu=9;
    /**
     * Attributes that can be used with a PercentLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_aspectRatio com.android.deskclock:layout_aspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_heightPercent com.android.deskclock:layout_heightPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginBottomPercent com.android.deskclock:layout_marginBottomPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginEndPercent com.android.deskclock:layout_marginEndPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginLeftPercent com.android.deskclock:layout_marginLeftPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginPercent com.android.deskclock:layout_marginPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginRightPercent com.android.deskclock:layout_marginRightPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginStartPercent com.android.deskclock:layout_marginStartPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginTopPercent com.android.deskclock:layout_marginTopPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_widthPercent com.android.deskclock:layout_widthPercent}</code></td><td></td></tr>
     * </table>
     * @see #PercentLayout_Layout_layout_aspectRatio
     * @see #PercentLayout_Layout_layout_heightPercent
     * @see #PercentLayout_Layout_layout_marginBottomPercent
     * @see #PercentLayout_Layout_layout_marginEndPercent
     * @see #PercentLayout_Layout_layout_marginLeftPercent
     * @see #PercentLayout_Layout_layout_marginPercent
     * @see #PercentLayout_Layout_layout_marginRightPercent
     * @see #PercentLayout_Layout_layout_marginStartPercent
     * @see #PercentLayout_Layout_layout_marginTopPercent
     * @see #PercentLayout_Layout_layout_widthPercent
     */
    public static final int[] PercentLayout_Layout={
        0x7f0400d1, 0x7f0400da, 0x7f0400dd, 0x7f0400de, 
        0x7f0400df, 0x7f0400e0, 0x7f0400e1, 0x7f0400e2, 
        0x7f0400e3, 0x7f0400e9
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_aspectRatio}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_aspectRatio
     */
    public static final int PercentLayout_Layout_layout_aspectRatio=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_heightPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_heightPercent
     */
    public static final int PercentLayout_Layout_layout_heightPercent=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_marginBottomPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_marginBottomPercent
     */
    public static final int PercentLayout_Layout_layout_marginBottomPercent=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_marginEndPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_marginEndPercent
     */
    public static final int PercentLayout_Layout_layout_marginEndPercent=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_marginLeftPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_marginLeftPercent
     */
    public static final int PercentLayout_Layout_layout_marginLeftPercent=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_marginPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_marginPercent
     */
    public static final int PercentLayout_Layout_layout_marginPercent=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_marginRightPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_marginRightPercent
     */
    public static final int PercentLayout_Layout_layout_marginRightPercent=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_marginStartPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_marginStartPercent
     */
    public static final int PercentLayout_Layout_layout_marginStartPercent=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_marginTopPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_marginTopPercent
     */
    public static final int PercentLayout_Layout_layout_marginTopPercent=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#layout_widthPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.android.deskclock:layout_widthPercent
     */
    public static final int PercentLayout_Layout_layout_widthPercent=9;
    /**
     * Attributes that can be used with a PopupWindow.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_android_popupAnimationStyle android:popupAnimationStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #PopupWindow_overlapAnchor com.android.deskclock:overlapAnchor}</code></td><td>Whether the popup window should overlap its anchor view.</td></tr>
     * </table>
     * @see #PopupWindow_android_popupBackground
     * @see #PopupWindow_android_popupAnimationStyle
     * @see #PopupWindow_overlapAnchor
     */
    public static final int[] PopupWindow={
        0x01010176, 0x010102c9, 0x7f040107
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int PopupWindow_android_popupBackground=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#popupAnimationStyle}
     * attribute's value can be found in the {@link #PopupWindow} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:popupAnimationStyle
     */
    public static final int PopupWindow_android_popupAnimationStyle=1;
    /**
     * <p>
     * @attr description
     * Whether the popup window should overlap its anchor view.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:overlapAnchor
     */
    public static final int PopupWindow_overlapAnchor=2;
    /**
     * Attributes that can be used with a PopupWindowBackgroundState.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.android.deskclock:state_above_anchor}</code></td><td>State identifier indicating the popup will be above the anchor.</td></tr>
     * </table>
     * @see #PopupWindowBackgroundState_state_above_anchor
     */
    public static final int[] PopupWindowBackgroundState={
        0x7f040151
      };
    /**
     * <p>
     * @attr description
     * State identifier indicating the popup will be above the anchor.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:state_above_anchor
     */
    public static final int PopupWindowBackgroundState_state_above_anchor=0;
    /**
     * Base attributes available to Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_persistent android:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_enabled android:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_title android:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_selectable android:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_key android:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_summary android:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_order android:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_widgetLayout android:widgetLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_dependency android:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_defaultValue android:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_shouldDisableView android:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_fragment android:fragment}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_singleLineTitle android:singleLineTitle}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_android_iconSpaceReserved android:iconSpaceReserved}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_allowDividerAbove com.android.deskclock:allowDividerAbove}</code></td><td>Whether the preference allows displaying divider on top</td></tr>
     * <tr><td><code>{@link #Preference_allowDividerBelow com.android.deskclock:allowDividerBelow}</code></td><td>Whether the preference allows displaying divider below it</td></tr>
     * <tr><td><code>{@link #Preference_defaultValue com.android.deskclock:defaultValue}</code></td><td>The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.</td></tr>
     * <tr><td><code>{@link #Preference_dependency com.android.deskclock:dependency}</code></td><td>The key of another Preference that this Preference will depend on.</td></tr>
     * <tr><td><code>{@link #Preference_enabled com.android.deskclock:enabled}</code></td><td>Whether the Preference is enabled.</td></tr>
     * <tr><td><code>{@link #Preference_fragment com.android.deskclock:fragment}</code></td><td>When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.</td></tr>
     * <tr><td><code>{@link #Preference_icon com.android.deskclock:icon}</code></td><td>Specifies the drawable used for the application icon.</td></tr>
     * <tr><td><code>{@link #Preference_iconSpaceReserved com.android.deskclock:iconSpaceReserved}</code></td><td>Whether the space for the preference icon view will be reserved.</td></tr>
     * <tr><td><code>{@link #Preference_key com.android.deskclock:key}</code></td><td>The key to store the Preference value.</td></tr>
     * <tr><td><code>{@link #Preference_layout com.android.deskclock:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #Preference_order com.android.deskclock:order}</code></td><td>The order for the Preference (lower values are to be ordered first).</td></tr>
     * <tr><td><code>{@link #Preference_persistent com.android.deskclock:persistent}</code></td><td>Whether the Preference stores its value to the shared preferences.</td></tr>
     * <tr><td><code>{@link #Preference_selectable com.android.deskclock:selectable}</code></td><td>Whether the Preference is selectable.</td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView com.android.deskclock:shouldDisableView}</code></td><td>Whether the view of this Preference should be disabled when
     * this Preference is disabled.</td></tr>
     * <tr><td><code>{@link #Preference_singleLineTitle com.android.deskclock:singleLineTitle}</code></td><td>Whether to use single line for the preference title text.</td></tr>
     * <tr><td><code>{@link #Preference_summary com.android.deskclock:summary}</code></td><td>The summary for the Preference in a PreferenceActivity screen.</td></tr>
     * <tr><td><code>{@link #Preference_title com.android.deskclock:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout com.android.deskclock:widgetLayout}</code></td><td>The layout for the controllable widget portion of a Preference.</td></tr>
     * </table>
     * @see #Preference_android_icon
     * @see #Preference_android_persistent
     * @see #Preference_android_enabled
     * @see #Preference_android_layout
     * @see #Preference_android_title
     * @see #Preference_android_selectable
     * @see #Preference_android_key
     * @see #Preference_android_summary
     * @see #Preference_android_order
     * @see #Preference_android_widgetLayout
     * @see #Preference_android_dependency
     * @see #Preference_android_defaultValue
     * @see #Preference_android_shouldDisableView
     * @see #Preference_android_fragment
     * @see #Preference_android_singleLineTitle
     * @see #Preference_android_iconSpaceReserved
     * @see #Preference_allowDividerAbove
     * @see #Preference_allowDividerBelow
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enabled
     * @see #Preference_fragment
     * @see #Preference_icon
     * @see #Preference_iconSpaceReserved
     * @see #Preference_key
     * @see #Preference_layout
     * @see #Preference_order
     * @see #Preference_persistent
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_singleLineTitle
     * @see #Preference_summary
     * @see #Preference_title
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
        0x01010002, 0x0101000d, 0x0101000e, 0x010100f2, 
        0x010101e1, 0x010101e6, 0x010101e8, 0x010101e9, 
        0x010101ea, 0x010101eb, 0x010101ec, 0x010101ed, 
        0x010101ee, 0x010102e3, 0x0101055c, 0x01010561, 
        0x7f040028, 0x7f04002a, 0x7f040078, 0x7f040079, 
        0x7f040091, 0x7f0400b1, 0x7f0400bc, 0x7f0400bd, 
        0x7f0400cb, 0x7f0400cd, 0x7f040104, 0x7f040114, 
        0x7f04013f, 0x7f040142, 0x7f040149, 0x7f04015d, 
        0x7f04018e, 0x7f0401a5
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#icon}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int Preference_android_icon=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:persistent
     */
    public static final int Preference_android_persistent=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:enabled
     */
    public static final int Preference_android_enabled=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int Preference_android_layout=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:title
     */
    public static final int Preference_android_title=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:selectable
     */
    public static final int Preference_android_selectable=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:key
     */
    public static final int Preference_android_key=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summary
     */
    public static final int Preference_android_summary=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:order
     */
    public static final int Preference_android_order=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:widgetLayout
     */
    public static final int Preference_android_widgetLayout=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:dependency
     */
    public static final int Preference_android_dependency=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:defaultValue
     */
    public static final int Preference_android_defaultValue=11;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:shouldDisableView
     */
    public static final int Preference_android_shouldDisableView=12;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fragment}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fragment
     */
    public static final int Preference_android_fragment=13;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#singleLineTitle}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:singleLineTitle
     */
    public static final int Preference_android_singleLineTitle=14;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#iconSpaceReserved}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:iconSpaceReserved
     */
    public static final int Preference_android_iconSpaceReserved=15;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider on top
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:allowDividerAbove
     */
    public static final int Preference_allowDividerAbove=16;
    /**
     * <p>
     * @attr description
     * Whether the preference allows displaying divider below it
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:allowDividerBelow
     */
    public static final int Preference_allowDividerBelow=17;
    /**
     * <p>
     * @attr description
     * The default value for the preference, which will be set either if persistence
     * is off or persistence is on and the preference is not found in the persistent
     * storage.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.deskclock:defaultValue
     */
    public static final int Preference_defaultValue=18;
    /**
     * <p>
     * @attr description
     * The key of another Preference that this Preference will depend on.  If the other
     * Preference is not set or is off, this Preference will be disabled.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:dependency
     */
    public static final int Preference_dependency=19;
    /**
     * <p>
     * @attr description
     * Whether the Preference is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:enabled
     */
    public static final int Preference_enabled=20;
    /**
     * <p>
     * @attr description
     * When used inside of a modern PreferenceActivity, this declares
     * a new PreferenceFragment to be shown when the user selects this item.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:fragment
     */
    public static final int Preference_fragment=21;
    /**
     * <p>
     * @attr description
     * The optional icon for the preference
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:icon
     */
    public static final int Preference_icon=22;
    /**
     * <p>
     * @attr description
     * Whether the space for the preference icon view will be reserved. If set to true, the
     * preference will be offset as if it would have the icon and thus aligned with other
     * preferences having icons. By default, preference icon view visibility will be set to
     * GONE when there is no icon provided, so the default value of this attribute is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:iconSpaceReserved
     */
    public static final int Preference_iconSpaceReserved=23;
    /**
     * <p>
     * @attr description
     * The key to store the Preference value.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:key
     */
    public static final int Preference_key=24;
    /**
     * <p>
     * @attr description
     * The layout for the Preference in a PreferenceActivity screen. This should
     * rarely need to be changed, look at widgetLayout instead.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:layout
     */
    public static final int Preference_layout=25;
    /**
     * <p>
     * @attr description
     * The order for the Preference (lower values are to be ordered first). If this is not
     * specified, the default ordering will be alphabetic.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:order
     */
    public static final int Preference_order=26;
    /**
     * <p>
     * @attr description
     * Whether the Preference stores its value to the shared preferences.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:persistent
     */
    public static final int Preference_persistent=27;
    /**
     * <p>
     * @attr description
     * Whether the Preference is selectable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:selectable
     */
    public static final int Preference_selectable=28;
    /**
     * <p>
     * @attr description
     * Whether the view of this Preference should be disabled when
     * this Preference is disabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:shouldDisableView
     */
    public static final int Preference_shouldDisableView=29;
    /**
     * <p>
     * @attr description
     * Whether to use single line for the preference title text. By default, preference title
     * will be constrained to one line, so the default value of this attribute is true.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:singleLineTitle
     */
    public static final int Preference_singleLineTitle=30;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:summary
     */
    public static final int Preference_summary=31;
    /**
     * <p>
     * @attr description
     * The title for the Preference in a PreferenceActivity screen.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:title
     */
    public static final int Preference_title=32;
    /**
     * <p>
     * @attr description
     * The layout for the controllable widget portion of a Preference. This is inflated
     * into the layout for a Preference and should be used more frequently than
     * the layout attribute. For example, a checkbox preference would specify
     * a custom layout (consisting of just the CheckBox) here.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:widgetLayout
     */
    public static final int Preference_widgetLayout=33;
    /**
     * Base attributes available to PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragment_allowDividerAfterLastItem com.android.deskclock:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragment_android_layout
     * @see #PreferenceFragment_android_divider
     * @see #PreferenceFragment_android_dividerHeight
     * @see #PreferenceFragment_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragment={
        0x010100f2, 0x01010129, 0x0101012a, 0x7f040029
      };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragment_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragment_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragment_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:allowDividerAfterLastItem
     */
    public static final int PreferenceFragment_allowDividerAfterLastItem=3;
    /**
     * Base attributes available to PreferenceFragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_divider android:divider}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_android_dividerHeight android:dividerHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceFragmentCompat_allowDividerAfterLastItem com.android.deskclock:allowDividerAfterLastItem}</code></td><td>Whether a divider is allowed to draw after the last item</td></tr>
     * </table>
     * @see #PreferenceFragmentCompat_android_layout
     * @see #PreferenceFragmentCompat_android_divider
     * @see #PreferenceFragmentCompat_android_dividerHeight
     * @see #PreferenceFragmentCompat_allowDividerAfterLastItem
     */
    public static final int[] PreferenceFragmentCompat={
        0x010100f2, 0x01010129, 0x0101012a, 0x7f040029
      };
    /**
     * <p>
     * @attr description
     * The layout for the PreferenceFragment. This should rarely need to be changed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int PreferenceFragmentCompat_android_layout=0;
    /**
     * <p>
     * @attr description
     * List separator to draw between preference views
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:divider
     */
    public static final int PreferenceFragmentCompat_android_divider=1;
    /**
     * <p>
     * @attr description
     * List separator height
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:dividerHeight
     */
    public static final int PreferenceFragmentCompat_android_dividerHeight=2;
    /**
     * <p>
     * @attr description
     * Whether a divider is allowed to draw after the last item
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:allowDividerAfterLastItem
     */
    public static final int PreferenceFragmentCompat_allowDividerAfterLastItem=3;
    /**
     * Base attributes available to PreferenceGroup.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceGroup_android_orderingFromXml android:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceGroup_orderingFromXml com.android.deskclock:orderingFromXml}</code></td><td>Whether to order the Preference under this group as they appear in the XML file.</td></tr>
     * </table>
     * @see #PreferenceGroup_android_orderingFromXml
     * @see #PreferenceGroup_orderingFromXml
     */
    public static final int[] PreferenceGroup={
        0x010101e7, 0x7f040105
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #PreferenceGroup} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:orderingFromXml
     */
    public static final int PreferenceGroup_android_orderingFromXml=0;
    /**
     * <p>
     * @attr description
     * Whether to order the Preference under this group as they appear in the XML file.
     * If this is false, the ordering will follow the Preference order attribute and
     * default to alphabetic for those without the order attribute.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:orderingFromXml
     */
    public static final int PreferenceGroup_orderingFromXml=1;
    /**
     * Attributes that can be used with a PreferenceImageView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_android_maxHeight android:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxHeight com.android.deskclock:maxHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PreferenceImageView_maxWidth com.android.deskclock:maxWidth}</code></td><td></td></tr>
     * </table>
     * @see #PreferenceImageView_android_maxWidth
     * @see #PreferenceImageView_android_maxHeight
     * @see #PreferenceImageView_maxHeight
     * @see #PreferenceImageView_maxWidth
     */
    public static final int[] PreferenceImageView={
        0x0101011f, 0x01010120, 0x7f0400f9, 0x7f0400fa
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int PreferenceImageView_android_maxWidth=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxHeight
     */
    public static final int PreferenceImageView_android_maxHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#maxHeight}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:maxHeight
     */
    public static final int PreferenceImageView_maxHeight=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#maxWidth}
     * attribute's value can be found in the {@link #PreferenceImageView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:maxWidth
     */
    public static final int PreferenceImageView_maxWidth=3;
    /**
     * Attributes that can be used with a PreferenceTheme.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PreferenceTheme_checkBoxPreferenceStyle com.android.deskclock:checkBoxPreferenceStyle}</code></td><td>Default style for CheckBoxPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dialogPreferenceStyle com.android.deskclock:dialogPreferenceStyle}</code></td><td>Default style for DialogPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_dropdownPreferenceStyle com.android.deskclock:dropdownPreferenceStyle}</code></td><td>Default style for DropDownPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_editTextPreferenceStyle com.android.deskclock:editTextPreferenceStyle}</code></td><td>Default style for EditTextPreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceActivityStyle com.android.deskclock:preferenceActivityStyle}</code></td><td>Default style for the PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceCategoryStyle com.android.deskclock:preferenceCategoryStyle}</code></td><td>Default style for PreferenceCategory.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentCompatStyle com.android.deskclock:preferenceFragmentCompatStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentListStyle com.android.deskclock:preferenceFragmentListStyle}</code></td><td>Preference fragment list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentPaddingSide com.android.deskclock:preferenceFragmentPaddingSide}</code></td><td>Preference fragment padding side</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceFragmentStyle com.android.deskclock:preferenceFragmentStyle}</code></td><td>Default style for Headers pane in PreferenceActivity.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceHeaderPanelStyle com.android.deskclock:preferenceHeaderPanelStyle}</code></td><td>Preference headers panel style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceInformationStyle com.android.deskclock:preferenceInformationStyle}</code></td><td>Default style for informational Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceLayoutChild com.android.deskclock:preferenceLayoutChild}</code></td><td>The preference layout that has the child/tabbed effect.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceListStyle com.android.deskclock:preferenceListStyle}</code></td><td>Preference list style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferencePanelStyle com.android.deskclock:preferencePanelStyle}</code></td><td>Preference panel style</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceScreenStyle com.android.deskclock:preferenceScreenStyle}</code></td><td>Default style for PreferenceScreen.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceStyle com.android.deskclock:preferenceStyle}</code></td><td>Default style for Preference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_preferenceTheme com.android.deskclock:preferenceTheme}</code></td><td>Theme for inflating Preference objects</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_ringtonePreferenceStyle com.android.deskclock:ringtonePreferenceStyle}</code></td><td>Default style for RingtonePreference.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_seekBarPreferenceStyle com.android.deskclock:seekBarPreferenceStyle}</code></td><td>Default style for seekbar preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceCompatStyle com.android.deskclock:switchPreferenceCompatStyle}</code></td><td>Default style for switch compat preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_switchPreferenceStyle com.android.deskclock:switchPreferenceStyle}</code></td><td>Default style for switch preferences.</td></tr>
     * <tr><td><code>{@link #PreferenceTheme_yesNoPreferenceStyle com.android.deskclock:yesNoPreferenceStyle}</code></td><td>Default style for YesNoPreference.</td></tr>
     * </table>
     * @see #PreferenceTheme_checkBoxPreferenceStyle
     * @see #PreferenceTheme_dialogPreferenceStyle
     * @see #PreferenceTheme_dropdownPreferenceStyle
     * @see #PreferenceTheme_editTextPreferenceStyle
     * @see #PreferenceTheme_preferenceActivityStyle
     * @see #PreferenceTheme_preferenceCategoryStyle
     * @see #PreferenceTheme_preferenceFragmentCompatStyle
     * @see #PreferenceTheme_preferenceFragmentListStyle
     * @see #PreferenceTheme_preferenceFragmentPaddingSide
     * @see #PreferenceTheme_preferenceFragmentStyle
     * @see #PreferenceTheme_preferenceHeaderPanelStyle
     * @see #PreferenceTheme_preferenceInformationStyle
     * @see #PreferenceTheme_preferenceLayoutChild
     * @see #PreferenceTheme_preferenceListStyle
     * @see #PreferenceTheme_preferencePanelStyle
     * @see #PreferenceTheme_preferenceScreenStyle
     * @see #PreferenceTheme_preferenceStyle
     * @see #PreferenceTheme_preferenceTheme
     * @see #PreferenceTheme_ringtonePreferenceStyle
     * @see #PreferenceTheme_seekBarPreferenceStyle
     * @see #PreferenceTheme_switchPreferenceCompatStyle
     * @see #PreferenceTheme_switchPreferenceStyle
     * @see #PreferenceTheme_yesNoPreferenceStyle
     */
    public static final int[] PreferenceTheme={
        0x7f040052, 0x7f04007d, 0x7f04008b, 0x7f04008e, 
        0x7f040119, 0x7f04011a, 0x7f04011b, 0x7f04011c, 
        0x7f04011d, 0x7f04011e, 0x7f04011f, 0x7f040120, 
        0x7f040121, 0x7f040122, 0x7f040123, 0x7f040124, 
        0x7f040125, 0x7f040126, 0x7f040133, 0x7f04013d, 
        0x7f040162, 0x7f040163, 0x7f0401b0
      };
    /**
     * <p>
     * @attr description
     * Default style for CheckBoxPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:checkBoxPreferenceStyle
     */
    public static final int PreferenceTheme_checkBoxPreferenceStyle=0;
    /**
     * <p>
     * @attr description
     * Default style for DialogPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:dialogPreferenceStyle
     */
    public static final int PreferenceTheme_dialogPreferenceStyle=1;
    /**
     * <p>
     * @attr description
     * Default style for DropDownPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:dropdownPreferenceStyle
     */
    public static final int PreferenceTheme_dropdownPreferenceStyle=2;
    /**
     * <p>
     * @attr description
     * Default style for EditTextPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:editTextPreferenceStyle
     */
    public static final int PreferenceTheme_editTextPreferenceStyle=3;
    /**
     * <p>
     * @attr description
     * Default style for the PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceActivityStyle
     */
    public static final int PreferenceTheme_preferenceActivityStyle=4;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceCategory.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceCategoryStyle
     */
    public static final int PreferenceTheme_preferenceCategoryStyle=5;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceFragmentCompatStyle
     */
    public static final int PreferenceTheme_preferenceFragmentCompatStyle=6;
    /**
     * <p>
     * @attr description
     * Preference fragment list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceFragmentListStyle
     */
    public static final int PreferenceTheme_preferenceFragmentListStyle=7;
    /**
     * <p>
     * @attr description
     * Preference fragment padding side
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:preferenceFragmentPaddingSide
     */
    public static final int PreferenceTheme_preferenceFragmentPaddingSide=8;
    /**
     * <p>
     * @attr description
     * Default style for Headers pane in PreferenceActivity.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceFragmentStyle
     */
    public static final int PreferenceTheme_preferenceFragmentStyle=9;
    /**
     * <p>
     * @attr description
     * Preference headers panel style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceHeaderPanelStyle
     */
    public static final int PreferenceTheme_preferenceHeaderPanelStyle=10;
    /**
     * <p>
     * @attr description
     * Default style for informational Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceInformationStyle
     */
    public static final int PreferenceTheme_preferenceInformationStyle=11;
    /**
     * <p>
     * @attr description
     * The preference layout that has the child/tabbed effect.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceLayoutChild
     */
    public static final int PreferenceTheme_preferenceLayoutChild=12;
    /**
     * <p>
     * @attr description
     * Preference list style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceListStyle
     */
    public static final int PreferenceTheme_preferenceListStyle=13;
    /**
     * <p>
     * @attr description
     * Preference panel style
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferencePanelStyle
     */
    public static final int PreferenceTheme_preferencePanelStyle=14;
    /**
     * <p>
     * @attr description
     * Default style for PreferenceScreen.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceScreenStyle
     */
    public static final int PreferenceTheme_preferenceScreenStyle=15;
    /**
     * <p>
     * @attr description
     * Default style for Preference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceStyle
     */
    public static final int PreferenceTheme_preferenceStyle=16;
    /**
     * <p>
     * @attr description
     * Theme for inflating Preference objects
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:preferenceTheme
     */
    public static final int PreferenceTheme_preferenceTheme=17;
    /**
     * <p>
     * @attr description
     * Default style for RingtonePreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:ringtonePreferenceStyle
     */
    public static final int PreferenceTheme_ringtonePreferenceStyle=18;
    /**
     * <p>
     * @attr description
     * Default style for seekbar preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:seekBarPreferenceStyle
     */
    public static final int PreferenceTheme_seekBarPreferenceStyle=19;
    /**
     * <p>
     * @attr description
     * Default style for switch compat preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:switchPreferenceCompatStyle
     */
    public static final int PreferenceTheme_switchPreferenceCompatStyle=20;
    /**
     * <p>
     * @attr description
     * Default style for switch preferences.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:switchPreferenceStyle
     */
    public static final int PreferenceTheme_switchPreferenceStyle=21;
    /**
     * <p>
     * @attr description
     * Default style for YesNoPreference.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:yesNoPreferenceStyle
     */
    public static final int PreferenceTheme_yesNoPreferenceStyle=22;
    /**
     * Attributes that can be used with a RecycleListView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecycleListView_paddingBottomNoButtons com.android.deskclock:paddingBottomNoButtons}</code></td><td>Bottom padding to use when no buttons are present.</td></tr>
     * <tr><td><code>{@link #RecycleListView_paddingTopNoTitle com.android.deskclock:paddingTopNoTitle}</code></td><td>Top padding to use when no title is present.</td></tr>
     * </table>
     * @see #RecycleListView_paddingBottomNoButtons
     * @see #RecycleListView_paddingTopNoTitle
     */
    public static final int[] RecycleListView={
        0x7f040108, 0x7f04010b
      };
    /**
     * <p>
     * @attr description
     * Bottom padding to use when no buttons are present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:paddingBottomNoButtons
     */
    public static final int RecycleListView_paddingBottomNoButtons=0;
    /**
     * <p>
     * @attr description
     * Top padding to use when no title is present.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:paddingTopNoTitle
     */
    public static final int RecycleListView_paddingTopNoTitle=1;
    /**
     * Attributes that can be used with a RecyclerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #RecyclerView_android_orientation android:orientation}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_android_descendantFocusability android:descendantFocusability}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollEnabled com.android.deskclock:fastScrollEnabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalThumbDrawable com.android.deskclock:fastScrollHorizontalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollHorizontalTrackDrawable com.android.deskclock:fastScrollHorizontalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalThumbDrawable com.android.deskclock:fastScrollVerticalThumbDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_fastScrollVerticalTrackDrawable com.android.deskclock:fastScrollVerticalTrackDrawable}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_layoutManager com.android.deskclock:layoutManager}</code></td><td>Class name of the Layout Manager to be used.</td></tr>
     * <tr><td><code>{@link #RecyclerView_reverseLayout com.android.deskclock:reverseLayout}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_spanCount com.android.deskclock:spanCount}</code></td><td></td></tr>
     * <tr><td><code>{@link #RecyclerView_stackFromEnd com.android.deskclock:stackFromEnd}</code></td><td></td></tr>
     * </table>
     * @see #RecyclerView_android_orientation
     * @see #RecyclerView_android_descendantFocusability
     * @see #RecyclerView_fastScrollEnabled
     * @see #RecyclerView_fastScrollHorizontalThumbDrawable
     * @see #RecyclerView_fastScrollHorizontalTrackDrawable
     * @see #RecyclerView_fastScrollVerticalThumbDrawable
     * @see #RecyclerView_fastScrollVerticalTrackDrawable
     * @see #RecyclerView_layoutManager
     * @see #RecyclerView_reverseLayout
     * @see #RecyclerView_spanCount
     * @see #RecyclerView_stackFromEnd
     */
    public static final int[] RecyclerView={
        0x010100c4, 0x010100f1, 0x7f0400a0, 0x7f0400a1, 
        0x7f0400a2, 0x7f0400a3, 0x7f0400a4, 0x7f0400ce, 
        0x7f040132, 0x7f04014a, 0x7f040150
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#orientation}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>0</td><td></td></tr>
     * <tr><td>vertical</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:orientation
     */
    public static final int RecyclerView_android_orientation=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#descendantFocusability}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>afterDescendants</td><td>1</td><td></td></tr>
     * <tr><td>beforeDescendants</td><td>0</td><td></td></tr>
     * <tr><td>blocksDescendants</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:descendantFocusability
     */
    public static final int RecyclerView_android_descendantFocusability=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#fastScrollEnabled}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:fastScrollEnabled
     */
    public static final int RecyclerView_fastScrollEnabled=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#fastScrollHorizontalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:fastScrollHorizontalThumbDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalThumbDrawable=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#fastScrollHorizontalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:fastScrollHorizontalTrackDrawable
     */
    public static final int RecyclerView_fastScrollHorizontalTrackDrawable=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#fastScrollVerticalThumbDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:fastScrollVerticalThumbDrawable
     */
    public static final int RecyclerView_fastScrollVerticalThumbDrawable=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#fastScrollVerticalTrackDrawable}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:fastScrollVerticalTrackDrawable
     */
    public static final int RecyclerView_fastScrollVerticalTrackDrawable=6;
    /**
     * <p>
     * @attr description
     * Class name of the Layout Manager to be used.
     * <p/>
     * The class must extend android.support.v7.widget.RecyclerView$LayoutManager
     * and have either a default constructor or constructor with the signature
     * (android.content.Context, android.util.AttributeSet, int, int).
     * <p/>
     * If the name starts with a '.', application package is prefixed.
     * Else, if the name contains a '.', the classname is assumed to be a full class name.
     * Else, the recycler view package name (android.support.v7.widget) is prefixed.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:layoutManager
     */
    public static final int RecyclerView_layoutManager=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#reverseLayout}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:reverseLayout
     */
    public static final int RecyclerView_reverseLayout=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#spanCount}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:spanCount
     */
    public static final int RecyclerView_spanCount=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#stackFromEnd}
     * attribute's value can be found in the {@link #RecyclerView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:stackFromEnd
     */
    public static final int RecyclerView_stackFromEnd=10;
    /**
     * Attributes that can be used with a ScrimInsetsFrameLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrimInsetsFrameLayout_insetForeground com.android.deskclock:insetForeground}</code></td><td></td></tr>
     * </table>
     * @see #ScrimInsetsFrameLayout_insetForeground
     */
    public static final int[] ScrimInsetsFrameLayout={
        0x7f0400c4
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#insetForeground}
     * attribute's value can be found in the {@link #ScrimInsetsFrameLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:insetForeground
     */
    public static final int ScrimInsetsFrameLayout_insetForeground=0;
    /**
     * Attributes that can be used with a ScrollingViewBehavior_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ScrollingViewBehavior_Layout_behavior_overlapTop com.android.deskclock:behavior_overlapTop}</code></td><td>The amount that the scrolling view should overlap the bottom of any AppBarLayout</td></tr>
     * </table>
     * @see #ScrollingViewBehavior_Layout_behavior_overlapTop
     */
    public static final int[] ScrollingViewBehavior_Layout={
        0x7f04003e
      };
    /**
     * <p>
     * @attr description
     * The amount that the scrolling view should overlap the bottom of any AppBarLayout
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:behavior_overlapTop
     */
    public static final int ScrollingViewBehavior_Layout_behavior_overlapTop=0;
    /**
     * Attributes that can be used with a SearchView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td></td></tr>
     * <tr><td><code>{@link #SearchView_closeIcon com.android.deskclock:closeIcon}</code></td><td>Close button icon</td></tr>
     * <tr><td><code>{@link #SearchView_commitIcon com.android.deskclock:commitIcon}</code></td><td>Commit icon shown in the query suggestion row</td></tr>
     * <tr><td><code>{@link #SearchView_defaultQueryHint com.android.deskclock:defaultQueryHint}</code></td><td>Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
     * <tr><td><code>{@link #SearchView_goIcon com.android.deskclock:goIcon}</code></td><td>Go button icon</td></tr>
     * <tr><td><code>{@link #SearchView_iconifiedByDefault com.android.deskclock:iconifiedByDefault}</code></td><td>The default state of the SearchView.</td></tr>
     * <tr><td><code>{@link #SearchView_layout com.android.deskclock:layout}</code></td><td>The layout to use for the search view.</td></tr>
     * <tr><td><code>{@link #SearchView_queryBackground com.android.deskclock:queryBackground}</code></td><td>Background for the section containing the search query</td></tr>
     * <tr><td><code>{@link #SearchView_queryHint com.android.deskclock:queryHint}</code></td><td>An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
     * <tr><td><code>{@link #SearchView_searchHintIcon com.android.deskclock:searchHintIcon}</code></td><td>Search icon displayed as a text field hint</td></tr>
     * <tr><td><code>{@link #SearchView_searchIcon com.android.deskclock:searchIcon}</code></td><td>Search icon</td></tr>
     * <tr><td><code>{@link #SearchView_submitBackground com.android.deskclock:submitBackground}</code></td><td>Background for the section containing the action (e.g.</td></tr>
     * <tr><td><code>{@link #SearchView_suggestionRowLayout com.android.deskclock:suggestionRowLayout}</code></td><td>Layout for query suggestion rows</td></tr>
     * <tr><td><code>{@link #SearchView_voiceIcon com.android.deskclock:voiceIcon}</code></td><td>Voice button icon</td></tr>
     * </table>
     * @see #SearchView_android_focusable
     * @see #SearchView_android_maxWidth
     * @see #SearchView_android_inputType
     * @see #SearchView_android_imeOptions
     * @see #SearchView_closeIcon
     * @see #SearchView_commitIcon
     * @see #SearchView_defaultQueryHint
     * @see #SearchView_goIcon
     * @see #SearchView_iconifiedByDefault
     * @see #SearchView_layout
     * @see #SearchView_queryBackground
     * @see #SearchView_queryHint
     * @see #SearchView_searchHintIcon
     * @see #SearchView_searchIcon
     * @see #SearchView_submitBackground
     * @see #SearchView_suggestionRowLayout
     * @see #SearchView_voiceIcon
     */
    public static final int[] SearchView={
        0x010100da, 0x0101011f, 0x01010220, 0x01010264, 
        0x7f040055, 0x7f040068, 0x7f040077, 0x7f0400b3, 
        0x7f0400c0, 0x7f0400cd, 0x7f04012b, 0x7f04012c, 
        0x7f040139, 0x7f04013a, 0x7f040157, 0x7f04015c, 
        0x7f0401a4
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#focusable}
     * attribute's value can be found in the {@link #SearchView} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int SearchView_android_focusable=0;
    /**
     * <p>
     * @attr description
     * An optional maximum width of the SearchView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SearchView_android_maxWidth=1;
    /**
     * <p>
     * @attr description
     * The input type to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>date</td><td>14</td><td></td></tr>
     * <tr><td>datetime</td><td>4</td><td></td></tr>
     * <tr><td>none</td><td>0</td><td></td></tr>
     * <tr><td>number</td><td>2</td><td></td></tr>
     * <tr><td>numberDecimal</td><td>2002</td><td></td></tr>
     * <tr><td>numberPassword</td><td>12</td><td></td></tr>
     * <tr><td>numberSigned</td><td>1002</td><td></td></tr>
     * <tr><td>phone</td><td>3</td><td></td></tr>
     * <tr><td>text</td><td>1</td><td></td></tr>
     * <tr><td>textAutoComplete</td><td>10001</td><td></td></tr>
     * <tr><td>textAutoCorrect</td><td>8001</td><td></td></tr>
     * <tr><td>textCapCharacters</td><td>1001</td><td></td></tr>
     * <tr><td>textCapSentences</td><td>4001</td><td></td></tr>
     * <tr><td>textCapWords</td><td>2001</td><td></td></tr>
     * <tr><td>textEmailAddress</td><td>21</td><td></td></tr>
     * <tr><td>textEmailSubject</td><td>31</td><td></td></tr>
     * <tr><td>textFilter</td><td>b1</td><td></td></tr>
     * <tr><td>textImeMultiLine</td><td>40001</td><td></td></tr>
     * <tr><td>textLongMessage</td><td>51</td><td></td></tr>
     * <tr><td>textMultiLine</td><td>20001</td><td></td></tr>
     * <tr><td>textNoSuggestions</td><td>80001</td><td></td></tr>
     * <tr><td>textPassword</td><td>81</td><td></td></tr>
     * <tr><td>textPersonName</td><td>61</td><td></td></tr>
     * <tr><td>textPhonetic</td><td>c1</td><td></td></tr>
     * <tr><td>textPostalAddress</td><td>71</td><td></td></tr>
     * <tr><td>textShortMessage</td><td>41</td><td></td></tr>
     * <tr><td>textUri</td><td>11</td><td></td></tr>
     * <tr><td>textVisiblePassword</td><td>91</td><td></td></tr>
     * <tr><td>textWebEditText</td><td>a1</td><td></td></tr>
     * <tr><td>textWebEmailAddress</td><td>d1</td><td></td></tr>
     * <tr><td>textWebPassword</td><td>e1</td><td></td></tr>
     * <tr><td>time</td><td>24</td><td></td></tr>
     * </table>
     *
     * @attr name android:inputType
     */
    public static final int SearchView_android_inputType=2;
    /**
     * <p>
     * @attr description
     * The IME options to set on the query text field.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>actionDone</td><td>6</td><td></td></tr>
     * <tr><td>actionGo</td><td>2</td><td></td></tr>
     * <tr><td>actionNext</td><td>5</td><td></td></tr>
     * <tr><td>actionNone</td><td>1</td><td></td></tr>
     * <tr><td>actionPrevious</td><td>7</td><td></td></tr>
     * <tr><td>actionSearch</td><td>3</td><td></td></tr>
     * <tr><td>actionSend</td><td>4</td><td></td></tr>
     * <tr><td>actionUnspecified</td><td>0</td><td></td></tr>
     * <tr><td>flagForceAscii</td><td>80000000</td><td></td></tr>
     * <tr><td>flagNavigateNext</td><td>8000000</td><td></td></tr>
     * <tr><td>flagNavigatePrevious</td><td>4000000</td><td></td></tr>
     * <tr><td>flagNoAccessoryAction</td><td>20000000</td><td></td></tr>
     * <tr><td>flagNoEnterAction</td><td>40000000</td><td></td></tr>
     * <tr><td>flagNoExtractUi</td><td>10000000</td><td></td></tr>
     * <tr><td>flagNoFullscreen</td><td>2000000</td><td></td></tr>
     * <tr><td>flagNoPersonalizedLearning</td><td>1000000</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:imeOptions
     */
    public static final int SearchView_android_imeOptions=3;
    /**
     * <p>
     * @attr description
     * Close button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:closeIcon
     */
    public static final int SearchView_closeIcon=4;
    /**
     * <p>
     * @attr description
     * Commit icon shown in the query suggestion row
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:commitIcon
     */
    public static final int SearchView_commitIcon=5;
    /**
     * <p>
     * @attr description
     * Default query hint used when {@code queryHint} is undefined and
     * the search view's {@code SearchableInfo} does not provide a hint.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:defaultQueryHint
     */
    public static final int SearchView_defaultQueryHint=6;
    /**
     * <p>
     * @attr description
     * Go button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:goIcon
     */
    public static final int SearchView_goIcon=7;
    /**
     * <p>
     * @attr description
     * The default state of the SearchView. If true, it will be iconified when not in
     * use and expanded when clicked.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:iconifiedByDefault
     */
    public static final int SearchView_iconifiedByDefault=8;
    /**
     * <p>
     * @attr description
     * The layout to use for the search view.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:layout
     */
    public static final int SearchView_layout=9;
    /**
     * <p>
     * @attr description
     * Background for the section containing the search query
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:queryBackground
     */
    public static final int SearchView_queryBackground=10;
    /**
     * <p>
     * @attr description
     * An optional user-defined query hint string to be displayed in the empty query field.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:queryHint
     */
    public static final int SearchView_queryHint=11;
    /**
     * <p>
     * @attr description
     * Search icon displayed as a text field hint
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:searchHintIcon
     */
    public static final int SearchView_searchHintIcon=12;
    /**
     * <p>
     * @attr description
     * Search icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:searchIcon
     */
    public static final int SearchView_searchIcon=13;
    /**
     * <p>
     * @attr description
     * Background for the section containing the action (e.g. voice search)
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:submitBackground
     */
    public static final int SearchView_submitBackground=14;
    /**
     * <p>
     * @attr description
     * Layout for query suggestion rows
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:suggestionRowLayout
     */
    public static final int SearchView_suggestionRowLayout=15;
    /**
     * <p>
     * @attr description
     * Voice button icon
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:voiceIcon
     */
    public static final int SearchView_voiceIcon=16;
    /**
     * Attributes that can be used with a SeekBarPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_android_max android:max}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_adjustable com.android.deskclock:adjustable}</code></td><td>Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g.</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_min com.android.deskclock:min}</code></td><td></td></tr>
     * <tr><td><code>{@link #SeekBarPreference_seekBarIncrement com.android.deskclock:seekBarIncrement}</code></td><td>Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys</td></tr>
     * <tr><td><code>{@link #SeekBarPreference_showSeekBarValue com.android.deskclock:showSeekBarValue}</code></td><td>Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed.</td></tr>
     * </table>
     * @see #SeekBarPreference_android_layout
     * @see #SeekBarPreference_android_max
     * @see #SeekBarPreference_adjustable
     * @see #SeekBarPreference_min
     * @see #SeekBarPreference_seekBarIncrement
     * @see #SeekBarPreference_showSeekBarValue
     */
    public static final int[] SeekBarPreference={
        0x010100f2, 0x01010136, 0x7f040022, 0x7f0400fd, 
        0x7f04013c, 0x7f040145
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int SeekBarPreference_android_layout=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#max}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:max
     */
    public static final int SeekBarPreference_android_max=1;
    /**
     * <p>
     * @attr description
     * Attribute indicating whether the slider within this preference can be adjusted, that is
     * pressing left/right keys when this preference is focused will move the slider accordingly
     * (e.g. inline adjustable preferences). False, if the slider within the preference is
     * read-only and cannot be adjusted. By default, the seekbar is adjustable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:adjustable
     */
    public static final int SeekBarPreference_adjustable=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#min}
     * attribute's value can be found in the {@link #SeekBarPreference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:min
     */
    public static final int SeekBarPreference_min=3;
    /**
     * <p>
     * @attr description
     * Attribute controlling the amount to increment or decrement the seekbar when the user
     * presses the arrow keys
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:seekBarIncrement
     */
    public static final int SeekBarPreference_seekBarIncrement=4;
    /**
     * <p>
     * @attr description
     * Flag indicating whether the TextView next to the seekbar that shows the current seekbar
     * value will be displayed. If true, the view is VISIBLE; if false, the view will be GONE.
     * By default, this view is VISIBLE.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:showSeekBarValue
     */
    public static final int SeekBarPreference_showSeekBarValue=5;
    /**
     * Attributes that can be used with a SnackbarLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SnackbarLayout_android_maxWidth android:maxWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #SnackbarLayout_elevation com.android.deskclock:elevation}</code></td><td>Elevation for the action bar itself</td></tr>
     * <tr><td><code>{@link #SnackbarLayout_maxActionInlineWidth com.android.deskclock:maxActionInlineWidth}</code></td><td></td></tr>
     * </table>
     * @see #SnackbarLayout_android_maxWidth
     * @see #SnackbarLayout_elevation
     * @see #SnackbarLayout_maxActionInlineWidth
     */
    public static final int[] SnackbarLayout={
        0x0101011f, 0x7f040090, 0x7f0400f7
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#maxWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:maxWidth
     */
    public static final int SnackbarLayout_android_maxWidth=0;
    /**
     * <p>
     * @attr description
     * Elevation for the action bar itself
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:elevation
     */
    public static final int SnackbarLayout_elevation=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#maxActionInlineWidth}
     * attribute's value can be found in the {@link #SnackbarLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:maxActionInlineWidth
     */
    public static final int SnackbarLayout_maxActionInlineWidth=2;
    /**
     * Attributes that can be used with a Spinner.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #Spinner_popupTheme com.android.deskclock:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * </table>
     * @see #Spinner_android_entries
     * @see #Spinner_android_popupBackground
     * @see #Spinner_android_prompt
     * @see #Spinner_android_dropDownWidth
     * @see #Spinner_popupTheme
     */
    public static final int[] Spinner={
        0x010100b2, 0x01010176, 0x0101017b, 0x01010262, 
        0x7f040116
      };
    /**
     * <p>
     * @attr description
     * Reference to an array resource that will populate the Spinner.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:entries
     */
    public static final int Spinner_android_entries=0;
    /**
     * <p>
     * @attr description
     * Background drawable to use for the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:popupBackground
     */
    public static final int Spinner_android_popupBackground=1;
    /**
     * <p>
     * @attr description
     * The prompt to display when the spinner's dialog is shown.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:prompt
     */
    public static final int Spinner_android_prompt=2;
    /**
     * <p>
     * @attr description
     * Width of the dropdown in spinnerMode="dropdown".
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fill_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>match_parent</td><td>ffffffff</td><td></td></tr>
     * <tr><td>wrap_content</td><td>fffffffe</td><td></td></tr>
     * </table>
     *
     * @attr name android:dropDownWidth
     */
    public static final int Spinner_android_dropDownWidth=3;
    /**
     * <p>
     * @attr description
     * Theme to use for the drop-down or dialog popup window.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:popupTheme
     */
    public static final int Spinner_popupTheme=4;
    /**
     * Attributes that can be used with a SwitchCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchCompat_showText com.android.deskclock:showText}</code></td><td>Whether to draw on/off text.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_splitTrack com.android.deskclock:splitTrack}</code></td><td>Whether to split the track and leave a gap for the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchMinWidth com.android.deskclock:switchMinWidth}</code></td><td>Minimum width for the switch component</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchPadding com.android.deskclock:switchPadding}</code></td><td>Minimum space between the switch and caption text</td></tr>
     * <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.android.deskclock:switchTextAppearance}</code></td><td>TextAppearance style for text displayed on the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.android.deskclock:thumbTextPadding}</code></td><td>Amount of padding on either side of text within the switch thumb.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTint com.android.deskclock:thumbTint}</code></td><td>Tint to apply to the thumb drawable.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_thumbTintMode com.android.deskclock:thumbTintMode}</code></td><td>Blending mode used to apply the thumb tint.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_track com.android.deskclock:track}</code></td><td>Drawable to use as the "track" that the switch thumb slides within.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTint com.android.deskclock:trackTint}</code></td><td>Tint to apply to the track.</td></tr>
     * <tr><td><code>{@link #SwitchCompat_trackTintMode com.android.deskclock:trackTintMode}</code></td><td>Blending mode used to apply the track tint.</td></tr>
     * </table>
     * @see #SwitchCompat_android_textOn
     * @see #SwitchCompat_android_textOff
     * @see #SwitchCompat_android_thumb
     * @see #SwitchCompat_showText
     * @see #SwitchCompat_splitTrack
     * @see #SwitchCompat_switchMinWidth
     * @see #SwitchCompat_switchPadding
     * @see #SwitchCompat_switchTextAppearance
     * @see #SwitchCompat_thumbTextPadding
     * @see #SwitchCompat_thumbTint
     * @see #SwitchCompat_thumbTintMode
     * @see #SwitchCompat_track
     * @see #SwitchCompat_trackTint
     * @see #SwitchCompat_trackTintMode
     */
    public static final int[] SwitchCompat={
        0x01010124, 0x01010125, 0x01010142, 0x7f040146, 
        0x7f04014e, 0x7f040160, 0x7f040161, 0x7f040165, 
        0x7f040186, 0x7f040187, 0x7f040188, 0x7f04019f, 
        0x7f0401a0, 0x7f0401a1
      };
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the checked/"on" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOn
     */
    public static final int SwitchCompat_android_textOn=0;
    /**
     * <p>
     * @attr description
     * Text to use when the switch is in the unchecked/"off" state.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:textOff
     */
    public static final int SwitchCompat_android_textOff=1;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "thumb" that switches back and forth.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:thumb
     */
    public static final int SwitchCompat_android_thumb=2;
    /**
     * <p>
     * @attr description
     * Whether to draw on/off text.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:showText
     */
    public static final int SwitchCompat_showText=3;
    /**
     * <p>
     * @attr description
     * Whether to split the track and leave a gap for the thumb drawable.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:splitTrack
     */
    public static final int SwitchCompat_splitTrack=4;
    /**
     * <p>
     * @attr description
     * Minimum width for the switch component
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:switchMinWidth
     */
    public static final int SwitchCompat_switchMinWidth=5;
    /**
     * <p>
     * @attr description
     * Minimum space between the switch and caption text
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:switchPadding
     */
    public static final int SwitchCompat_switchPadding=6;
    /**
     * <p>
     * @attr description
     * TextAppearance style for text displayed on the switch thumb.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:switchTextAppearance
     */
    public static final int SwitchCompat_switchTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Amount of padding on either side of text within the switch thumb.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:thumbTextPadding
     */
    public static final int SwitchCompat_thumbTextPadding=8;
    /**
     * <p>
     * @attr description
     * Tint to apply to the thumb drawable.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:thumbTint
     */
    public static final int SwitchCompat_thumbTint=9;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the thumb tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:thumbTintMode
     */
    public static final int SwitchCompat_thumbTintMode=10;
    /**
     * <p>
     * @attr description
     * Drawable to use as the "track" that the switch thumb slides within.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:track
     */
    public static final int SwitchCompat_track=11;
    /**
     * <p>
     * @attr description
     * Tint to apply to the track.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:trackTint
     */
    public static final int SwitchCompat_trackTint=12;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the track tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and drawable color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:trackTintMode
     */
    public static final int SwitchCompat_trackTintMode=13;
    /**
     * Attributes that can be used with a SwitchPreference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreference_disableDependentsState com.android.deskclock:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOff com.android.deskclock:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_summaryOn com.android.deskclock:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOff com.android.deskclock:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreference_switchTextOn com.android.deskclock:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreference_android_summaryOn
     * @see #SwitchPreference_android_summaryOff
     * @see #SwitchPreference_android_disableDependentsState
     * @see #SwitchPreference_android_switchTextOn
     * @see #SwitchPreference_android_switchTextOff
     * @see #SwitchPreference_disableDependentsState
     * @see #SwitchPreference_summaryOff
     * @see #SwitchPreference_summaryOn
     * @see #SwitchPreference_switchTextOff
     * @see #SwitchPreference_switchTextOn
     */
    public static final int[] SwitchPreference={
        0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
        0x0101036c, 0x7f040081, 0x7f04015e, 0x7f04015f, 
        0x7f040166, 0x7f040167
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreference_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreference_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreference_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreference_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreference_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:disableDependentsState
     */
    public static final int SwitchPreference_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:summaryOff
     */
    public static final int SwitchPreference_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:summaryOn
     */
    public static final int SwitchPreference_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:switchTextOff
     */
    public static final int SwitchPreference_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:switchTextOn
     */
    public static final int SwitchPreference_switchTextOn=9;
    /**
     * Attributes that can be used with a SwitchPreferenceCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOn android:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_summaryOff android:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_disableDependentsState android:disableDependentsState}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOn android:switchTextOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_android_switchTextOff android:switchTextOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_disableDependentsState com.android.deskclock:disableDependentsState}</code></td><td>The state (true for on, or false for off) that causes dependents to be disabled.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOff com.android.deskclock:summaryOff}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is unchecked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_summaryOn com.android.deskclock:summaryOn}</code></td><td>The summary for the Preference in a PreferenceActivity screen when the
     * CheckBoxPreference is checked.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOff com.android.deskclock:switchTextOff}</code></td><td>The text used on the switch itself when in the "off" state.</td></tr>
     * <tr><td><code>{@link #SwitchPreferenceCompat_switchTextOn com.android.deskclock:switchTextOn}</code></td><td>The text used on the switch itself when in the "on" state.</td></tr>
     * </table>
     * @see #SwitchPreferenceCompat_android_summaryOn
     * @see #SwitchPreferenceCompat_android_summaryOff
     * @see #SwitchPreferenceCompat_android_disableDependentsState
     * @see #SwitchPreferenceCompat_android_switchTextOn
     * @see #SwitchPreferenceCompat_android_switchTextOff
     * @see #SwitchPreferenceCompat_disableDependentsState
     * @see #SwitchPreferenceCompat_summaryOff
     * @see #SwitchPreferenceCompat_summaryOn
     * @see #SwitchPreferenceCompat_switchTextOff
     * @see #SwitchPreferenceCompat_switchTextOn
     */
    public static final int[] SwitchPreferenceCompat={
        0x010101ef, 0x010101f0, 0x010101f1, 0x0101036b, 
        0x0101036c, 0x7f040081, 0x7f04015e, 0x7f04015f, 
        0x7f040166, 0x7f040167
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOn
     */
    public static final int SwitchPreferenceCompat_android_summaryOn=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#summaryOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:summaryOff
     */
    public static final int SwitchPreferenceCompat_android_summaryOff=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#disableDependentsState}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name android:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_android_disableDependentsState=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOn}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOn
     */
    public static final int SwitchPreferenceCompat_android_switchTextOn=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#switchTextOff}
     * attribute's value can be found in the {@link #SwitchPreferenceCompat} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:switchTextOff
     */
    public static final int SwitchPreferenceCompat_android_switchTextOff=4;
    /**
     * <p>
     * @attr description
     * The state (true for on, or false for off) that causes dependents to be disabled. By default,
     * dependents will be disabled when this is unchecked, so the value of this preference is false.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:disableDependentsState
     */
    public static final int SwitchPreferenceCompat_disableDependentsState=5;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is unchecked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:summaryOff
     */
    public static final int SwitchPreferenceCompat_summaryOff=6;
    /**
     * <p>
     * @attr description
     * The summary for the Preference in a PreferenceActivity screen when the
     * SwitchPreference is checked. If separate on/off summaries are not
     * needed, the summary attribute can be used instead.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:summaryOn
     */
    public static final int SwitchPreferenceCompat_summaryOn=7;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "off" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:switchTextOff
     */
    public static final int SwitchPreferenceCompat_switchTextOff=8;
    /**
     * <p>
     * @attr description
     * The text used on the switch itself when in the "on" state.
     * This should be a very SHORT string, as it appears in a small space.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:switchTextOn
     */
    public static final int SwitchPreferenceCompat_switchTextOn=9;
    /**
     * Attributes that can be used with a TabItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabItem_android_icon android:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #TabItem_android_text android:text}</code></td><td></td></tr>
     * </table>
     * @see #TabItem_android_icon
     * @see #TabItem_android_layout
     * @see #TabItem_android_text
     */
    public static final int[] TabItem={
        0x01010002, 0x010100f2, 0x0101014f
      };
    /**
     * <p>
     * @attr description
     * Icon to display in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:icon
     */
    public static final int TabItem_android_icon=0;
    /**
     * <p>
     * @attr description
     * A reference to a layout resource to be displayed in the tab.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int TabItem_android_layout=1;
    /**
     * <p>
     * @attr description
     * Text to display in the tab.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:text
     */
    public static final int TabItem_android_text=2;
    /**
     * Attributes that can be used with a TabLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TabLayout_tabBackground com.android.deskclock:tabBackground}</code></td><td>Reference to a background to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabContentStart com.android.deskclock:tabContentStart}</code></td><td>Position in the Y axis from the starting edge that tabs should be positioned from.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabGravity com.android.deskclock:tabGravity}</code></td><td>Gravity constant for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorColor com.android.deskclock:tabIndicatorColor}</code></td><td>Color of the indicator used to show the currently selected tab.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabIndicatorHeight com.android.deskclock:tabIndicatorHeight}</code></td><td>Height of the indicator used to show the currently selected tab.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMaxWidth com.android.deskclock:tabMaxWidth}</code></td><td>The maximum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMinWidth com.android.deskclock:tabMinWidth}</code></td><td>The minimum width for tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabMode com.android.deskclock:tabMode}</code></td><td>The behavior mode for the Tabs in this layout</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPadding com.android.deskclock:tabPadding}</code></td><td>The preferred padding along all edges of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingBottom com.android.deskclock:tabPaddingBottom}</code></td><td>The preferred padding along the bottom edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingEnd com.android.deskclock:tabPaddingEnd}</code></td><td>The preferred padding along the end edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingStart com.android.deskclock:tabPaddingStart}</code></td><td>The preferred padding along the start edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabPaddingTop com.android.deskclock:tabPaddingTop}</code></td><td>The preferred padding along the top edge of tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabSelectedTextColor com.android.deskclock:tabSelectedTextColor}</code></td><td>The text color to be applied to the currently selected tab.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextAppearance com.android.deskclock:tabTextAppearance}</code></td><td>A reference to a TextAppearance style to be applied to tabs.</td></tr>
     * <tr><td><code>{@link #TabLayout_tabTextColor com.android.deskclock:tabTextColor}</code></td><td>The default text color to be applied to tabs.</td></tr>
     * </table>
     * @see #TabLayout_tabBackground
     * @see #TabLayout_tabContentStart
     * @see #TabLayout_tabGravity
     * @see #TabLayout_tabIndicatorColor
     * @see #TabLayout_tabIndicatorHeight
     * @see #TabLayout_tabMaxWidth
     * @see #TabLayout_tabMinWidth
     * @see #TabLayout_tabMode
     * @see #TabLayout_tabPadding
     * @see #TabLayout_tabPaddingBottom
     * @see #TabLayout_tabPaddingEnd
     * @see #TabLayout_tabPaddingStart
     * @see #TabLayout_tabPaddingTop
     * @see #TabLayout_tabSelectedTextColor
     * @see #TabLayout_tabTextAppearance
     * @see #TabLayout_tabTextColor
     */
    public static final int[] TabLayout={
        0x7f040168, 0x7f040169, 0x7f04016a, 0x7f04016b, 
        0x7f04016c, 0x7f04016d, 0x7f04016e, 0x7f04016f, 
        0x7f040170, 0x7f040171, 0x7f040172, 0x7f040173, 
        0x7f040174, 0x7f040175, 0x7f040176, 0x7f040177
      };
    /**
     * <p>
     * @attr description
     * Reference to a background to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:tabBackground
     */
    public static final int TabLayout_tabBackground=0;
    /**
     * <p>
     * @attr description
     * Position in the Y axis from the starting edge that tabs should be positioned from.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabContentStart
     */
    public static final int TabLayout_tabContentStart=1;
    /**
     * <p>
     * @attr description
     * Gravity constant for tabs.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>center</td><td>1</td><td></td></tr>
     * <tr><td>fill</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:tabGravity
     */
    public static final int TabLayout_tabGravity=2;
    /**
     * <p>
     * @attr description
     * Color of the indicator used to show the currently selected tab.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:tabIndicatorColor
     */
    public static final int TabLayout_tabIndicatorColor=3;
    /**
     * <p>
     * @attr description
     * Height of the indicator used to show the currently selected tab.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabIndicatorHeight
     */
    public static final int TabLayout_tabIndicatorHeight=4;
    /**
     * <p>
     * @attr description
     * The maximum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabMaxWidth
     */
    public static final int TabLayout_tabMaxWidth=5;
    /**
     * <p>
     * @attr description
     * The minimum width for tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabMinWidth
     */
    public static final int TabLayout_tabMinWidth=6;
    /**
     * <p>
     * @attr description
     * The behavior mode for the Tabs in this layout
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>fixed</td><td>1</td><td></td></tr>
     * <tr><td>scrollable</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:tabMode
     */
    public static final int TabLayout_tabMode=7;
    /**
     * <p>
     * @attr description
     * The preferred padding along all edges of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabPadding
     */
    public static final int TabLayout_tabPadding=8;
    /**
     * <p>
     * @attr description
     * The preferred padding along the bottom edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabPaddingBottom
     */
    public static final int TabLayout_tabPaddingBottom=9;
    /**
     * <p>
     * @attr description
     * The preferred padding along the end edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabPaddingEnd
     */
    public static final int TabLayout_tabPaddingEnd=10;
    /**
     * <p>
     * @attr description
     * The preferred padding along the start edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabPaddingStart
     */
    public static final int TabLayout_tabPaddingStart=11;
    /**
     * <p>
     * @attr description
     * The preferred padding along the top edge of tabs.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:tabPaddingTop
     */
    public static final int TabLayout_tabPaddingTop=12;
    /**
     * <p>
     * @attr description
     * The text color to be applied to the currently selected tab.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:tabSelectedTextColor
     */
    public static final int TabLayout_tabSelectedTextColor=13;
    /**
     * <p>
     * @attr description
     * A reference to a TextAppearance style to be applied to tabs.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:tabTextAppearance
     */
    public static final int TabLayout_tabTextAppearance=14;
    /**
     * <p>
     * @attr description
     * The default text color to be applied to tabs.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:tabTextColor
     */
    public static final int TabLayout_tabTextColor=15;
    /**
     * Attributes that can be used with a TextAppearance.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_textColorLink android:textColorLink}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_android_fontFamily android:fontFamily}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextAppearance_fontFamily com.android.deskclock:fontFamily}</code></td><td>The attribute for the font family.</td></tr>
     * <tr><td><code>{@link #TextAppearance_textAllCaps com.android.deskclock:textAllCaps}</code></td><td>Present the text in ALL CAPS.</td></tr>
     * </table>
     * @see #TextAppearance_android_textSize
     * @see #TextAppearance_android_typeface
     * @see #TextAppearance_android_textStyle
     * @see #TextAppearance_android_textColor
     * @see #TextAppearance_android_textColorHint
     * @see #TextAppearance_android_textColorLink
     * @see #TextAppearance_android_shadowColor
     * @see #TextAppearance_android_shadowDx
     * @see #TextAppearance_android_shadowDy
     * @see #TextAppearance_android_shadowRadius
     * @see #TextAppearance_android_fontFamily
     * @see #TextAppearance_fontFamily
     * @see #TextAppearance_textAllCaps
     */
    public static final int[] TextAppearance={
        0x01010095, 0x01010096, 0x01010097, 0x01010098, 
        0x0101009a, 0x0101009b, 0x01010161, 0x01010162, 
        0x01010163, 0x01010164, 0x010103ac, 0x7f0400a7, 
        0x7f040178
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textSize}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:textSize
     */
    public static final int TextAppearance_android_textSize=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#typeface}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>monospace</td><td>3</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * <tr><td>sans</td><td>1</td><td></td></tr>
     * <tr><td>serif</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:typeface
     */
    public static final int TextAppearance_android_typeface=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textStyle}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bold</td><td>1</td><td></td></tr>
     * <tr><td>italic</td><td>2</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:textStyle
     */
    public static final int TextAppearance_android_textStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColor
     */
    public static final int TextAppearance_android_textColor=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextAppearance_android_textColorHint=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorLink}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorLink
     */
    public static final int TextAppearance_android_textColorLink=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:shadowColor
     */
    public static final int TextAppearance_android_shadowColor=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDx
     */
    public static final int TextAppearance_android_shadowDx=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowDy
     */
    public static final int TextAppearance_android_shadowDy=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:shadowRadius
     */
    public static final int TextAppearance_android_shadowRadius=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontFamily}
     * attribute's value can be found in the {@link #TextAppearance} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontFamily
     */
    public static final int TextAppearance_android_fontFamily=10;
    /**
     * <p>
     * @attr description
     * The attribute for the font family.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:fontFamily
     */
    public static final int TextAppearance_fontFamily=11;
    /**
     * <p>
     * @attr description
     * Present the text in ALL CAPS. This may use a small-caps form when available.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:textAllCaps
     */
    public static final int TextAppearance_textAllCaps=12;
    /**
     * Attributes that can be used with a TextInputLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #TextInputLayout_android_textColorHint android:textColorHint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_android_hint android:hint}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterEnabled com.android.deskclock:counterEnabled}</code></td><td>Whether the layout is laid out as if the character counter will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterMaxLength com.android.deskclock:counterMaxLength}</code></td><td>The max length to display in the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterOverflowTextAppearance com.android.deskclock:counterOverflowTextAppearance}</code></td><td>TextAppearance of the character counter when the text is longer than the max.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_counterTextAppearance com.android.deskclock:counterTextAppearance}</code></td><td>TextAppearance of the character counter.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorEnabled com.android.deskclock:errorEnabled}</code></td><td>Whether the layout is laid out as if an error will be displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_errorTextAppearance com.android.deskclock:errorTextAppearance}</code></td><td>TextAppearance of any error message displayed.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintAnimationEnabled com.android.deskclock:hintAnimationEnabled}</code></td><td>Whether to animate hint state changes.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintEnabled com.android.deskclock:hintEnabled}</code></td><td>Whether the layout's floating label functionality is enabled.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_hintTextAppearance com.android.deskclock:hintTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleContentDescription com.android.deskclock:passwordToggleContentDescription}</code></td><td>Text to set as the content description for the password input visibility toggle.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleDrawable com.android.deskclock:passwordToggleDrawable}</code></td><td>Drawable to use as the password input visibility toggle icon.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleEnabled com.android.deskclock:passwordToggleEnabled}</code></td><td>Whether the view will display a toggle when the EditText has a password.</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTint com.android.deskclock:passwordToggleTint}</code></td><td>Icon to use for the password input visibility toggle</td></tr>
     * <tr><td><code>{@link #TextInputLayout_passwordToggleTintMode com.android.deskclock:passwordToggleTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #TextInputLayout_android_textColorHint
     * @see #TextInputLayout_android_hint
     * @see #TextInputLayout_counterEnabled
     * @see #TextInputLayout_counterMaxLength
     * @see #TextInputLayout_counterOverflowTextAppearance
     * @see #TextInputLayout_counterTextAppearance
     * @see #TextInputLayout_errorEnabled
     * @see #TextInputLayout_errorTextAppearance
     * @see #TextInputLayout_hintAnimationEnabled
     * @see #TextInputLayout_hintEnabled
     * @see #TextInputLayout_hintTextAppearance
     * @see #TextInputLayout_passwordToggleContentDescription
     * @see #TextInputLayout_passwordToggleDrawable
     * @see #TextInputLayout_passwordToggleEnabled
     * @see #TextInputLayout_passwordToggleTint
     * @see #TextInputLayout_passwordToggleTintMode
     */
    public static final int[] TextInputLayout={
        0x0101009a, 0x01010150, 0x7f040072, 0x7f040073, 
        0x7f040074, 0x7f040075, 0x7f040094, 0x7f040095, 
        0x7f0400b7, 0x7f0400b8, 0x7f0400b9, 0x7f04010f, 
        0x7f040110, 0x7f040111, 0x7f040112, 0x7f040113
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#textColorHint}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:textColorHint
     */
    public static final int TextInputLayout_android_textColorHint=0;
    /**
     * <p>
     * @attr description
     * The hint to display in the floating label.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:hint
     */
    public static final int TextInputLayout_android_hint=1;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if the character counter will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:counterEnabled
     */
    public static final int TextInputLayout_counterEnabled=2;
    /**
     * <p>
     * @attr description
     * The max length to display in the character counter.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.deskclock:counterMaxLength
     */
    public static final int TextInputLayout_counterMaxLength=3;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter when the text is longer than the max.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:counterOverflowTextAppearance
     */
    public static final int TextInputLayout_counterOverflowTextAppearance=4;
    /**
     * <p>
     * @attr description
     * TextAppearance of the character counter.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:counterTextAppearance
     */
    public static final int TextInputLayout_counterTextAppearance=5;
    /**
     * <p>
     * @attr description
     * Whether the layout is laid out as if an error will be displayed.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:errorEnabled
     */
    public static final int TextInputLayout_errorEnabled=6;
    /**
     * <p>
     * @attr description
     * TextAppearance of any error message displayed.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:errorTextAppearance
     */
    public static final int TextInputLayout_errorTextAppearance=7;
    /**
     * <p>
     * @attr description
     * Whether to animate hint state changes.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:hintAnimationEnabled
     */
    public static final int TextInputLayout_hintAnimationEnabled=8;
    /**
     * <p>
     * @attr description
     * Whether the layout's floating label functionality is enabled.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:hintEnabled
     */
    public static final int TextInputLayout_hintEnabled=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#hintTextAppearance}
     * attribute's value can be found in the {@link #TextInputLayout} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:hintTextAppearance
     */
    public static final int TextInputLayout_hintTextAppearance=10;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the password input visibility toggle.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:passwordToggleContentDescription
     */
    public static final int TextInputLayout_passwordToggleContentDescription=11;
    /**
     * <p>
     * @attr description
     * Drawable to use as the password input visibility toggle icon.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:passwordToggleDrawable
     */
    public static final int TextInputLayout_passwordToggleDrawable=12;
    /**
     * <p>
     * @attr description
     * Whether the view will display a toggle when the EditText has a password.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.android.deskclock:passwordToggleEnabled
     */
    public static final int TextInputLayout_passwordToggleEnabled=13;
    /**
     * <p>
     * @attr description
     * Icon to use for the password input visibility toggle
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:passwordToggleTint
     */
    public static final int TextInputLayout_passwordToggleTint=14;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:passwordToggleTintMode
     */
    public static final int TextInputLayout_passwordToggleTintMode=15;
    /**
     * Attributes that can be used with a Toolbar.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_buttonGravity com.android.deskclock:buttonGravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_collapseContentDescription com.android.deskclock:collapseContentDescription}</code></td><td>Text to set as the content description for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_collapseIcon com.android.deskclock:collapseIcon}</code></td><td>Icon drawable to use for the collapse button.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEnd com.android.deskclock:contentInsetEnd}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetEndWithActions com.android.deskclock:contentInsetEndWithActions}</code></td><td>Minimum inset for content views within a bar when actions from a menu
     * are present.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetLeft com.android.deskclock:contentInsetLeft}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetRight com.android.deskclock:contentInsetRight}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStart com.android.deskclock:contentInsetStart}</code></td><td>Minimum inset for content views within a bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_contentInsetStartWithNavigation com.android.deskclock:contentInsetStartWithNavigation}</code></td><td>Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button.</td></tr>
     * <tr><td><code>{@link #Toolbar_logo com.android.deskclock:logo}</code></td><td>Specifies the drawable used for the application logo.</td></tr>
     * <tr><td><code>{@link #Toolbar_logoDescription com.android.deskclock:logoDescription}</code></td><td>A content description string to describe the appearance of the
     * associated logo image.</td></tr>
     * <tr><td><code>{@link #Toolbar_maxButtonHeight com.android.deskclock:maxButtonHeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_navigationContentDescription com.android.deskclock:navigationContentDescription}</code></td><td>Text to set as the content description for the navigation button
     * located at the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_navigationIcon com.android.deskclock:navigationIcon}</code></td><td>Icon drawable to use for the navigation button located at
     * the start of the toolbar.</td></tr>
     * <tr><td><code>{@link #Toolbar_popupTheme com.android.deskclock:popupTheme}</code></td><td>Reference to a theme that should be used to inflate popups
     * shown by widgets in the action bar.</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitle com.android.deskclock:subtitle}</code></td><td>Specifies subtitle text used for navigationMode="normal"</td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.android.deskclock:subtitleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_subtitleTextColor com.android.deskclock:subtitleTextColor}</code></td><td>A color to apply to the subtitle string.</td></tr>
     * <tr><td><code>{@link #Toolbar_title com.android.deskclock:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargin com.android.deskclock:titleMargin}</code></td><td>Specifies extra space on the left, start, right and end sides
     * of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginBottom com.android.deskclock:titleMarginBottom}</code></td><td>Specifies extra space on the bottom side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginEnd com.android.deskclock:titleMarginEnd}</code></td><td>Specifies extra space on the end side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginStart com.android.deskclock:titleMarginStart}</code></td><td>Specifies extra space on the start side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMarginTop com.android.deskclock:titleMarginTop}</code></td><td>Specifies extra space on the top side of the toolbar's title.</td></tr>
     * <tr><td><code>{@link #Toolbar_titleMargins com.android.deskclock:titleMargins}</code></td><td>{@deprecated Use titleMargin}</td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextAppearance com.android.deskclock:titleTextAppearance}</code></td><td></td></tr>
     * <tr><td><code>{@link #Toolbar_titleTextColor com.android.deskclock:titleTextColor}</code></td><td>A color to apply to the title string.</td></tr>
     * </table>
     * @see #Toolbar_android_gravity
     * @see #Toolbar_android_minHeight
     * @see #Toolbar_buttonGravity
     * @see #Toolbar_collapseContentDescription
     * @see #Toolbar_collapseIcon
     * @see #Toolbar_contentInsetEnd
     * @see #Toolbar_contentInsetEndWithActions
     * @see #Toolbar_contentInsetLeft
     * @see #Toolbar_contentInsetRight
     * @see #Toolbar_contentInsetStart
     * @see #Toolbar_contentInsetStartWithNavigation
     * @see #Toolbar_logo
     * @see #Toolbar_logoDescription
     * @see #Toolbar_maxButtonHeight
     * @see #Toolbar_navigationContentDescription
     * @see #Toolbar_navigationIcon
     * @see #Toolbar_popupTheme
     * @see #Toolbar_subtitle
     * @see #Toolbar_subtitleTextAppearance
     * @see #Toolbar_subtitleTextColor
     * @see #Toolbar_title
     * @see #Toolbar_titleMargin
     * @see #Toolbar_titleMarginBottom
     * @see #Toolbar_titleMarginEnd
     * @see #Toolbar_titleMarginStart
     * @see #Toolbar_titleMarginTop
     * @see #Toolbar_titleMargins
     * @see #Toolbar_titleTextAppearance
     * @see #Toolbar_titleTextColor
     */
    @Deprecated
    public static final int[] Toolbar={
        0x010100af, 0x01010140, 0x7f04004a, 0x7f040057, 
        0x7f040058, 0x7f04006a, 0x7f04006b, 0x7f04006c, 
        0x7f04006d, 0x7f04006e, 0x7f04006f, 0x7f0400f5, 
        0x7f0400f6, 0x7f0400f8, 0x7f0400ff, 0x7f040100, 
        0x7f040116, 0x7f040158, 0x7f040159, 0x7f04015a, 
        0x7f04018e, 0x7f040190, 0x7f040191, 0x7f040192, 
        0x7f040193, 0x7f040194, 0x7f040195, 0x7f040196, 
        0x7f040197
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:gravity
     */
    public static final int Toolbar_android_gravity=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#minHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name android:minHeight
     */
    public static final int Toolbar_android_minHeight=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#buttonGravity}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:buttonGravity
     */
    public static final int Toolbar_buttonGravity=2;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the collapse button.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:collapseContentDescription
     */
    public static final int Toolbar_collapseContentDescription=3;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the collapse button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:collapseIcon
     */
    public static final int Toolbar_collapseIcon=4;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetEnd
     */
    public static final int Toolbar_contentInsetEnd=5;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when actions from a menu
     * are present. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetEndWithActions
     */
    public static final int Toolbar_contentInsetEndWithActions=6;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetLeft
     */
    public static final int Toolbar_contentInsetLeft=7;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetRight
     */
    public static final int Toolbar_contentInsetRight=8;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar. Navigation buttons and
     * menu views are excepted. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetStart
     */
    public static final int Toolbar_contentInsetStart=9;
    /**
     * <p>
     * @attr description
     * Minimum inset for content views within a bar when a navigation button
     * is present, such as the Up button. Only valid for some themes and configurations.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:contentInsetStartWithNavigation
     */
    public static final int Toolbar_contentInsetStartWithNavigation=10;
    /**
     * <p>
     * @attr description
     * Drawable to set as the logo that appears at the starting side of
     * the Toolbar, just after the navigation button.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:logo
     */
    public static final int Toolbar_logo=11;
    /**
     * <p>
     * @attr description
     * A content description string to describe the appearance of the
     * associated logo image.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:logoDescription
     */
    public static final int Toolbar_logoDescription=12;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#maxButtonHeight}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:maxButtonHeight
     */
    public static final int Toolbar_maxButtonHeight=13;
    /**
     * <p>
     * @attr description
     * Text to set as the content description for the navigation button
     * located at the start of the toolbar.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:navigationContentDescription
     */
    public static final int Toolbar_navigationContentDescription=14;
    /**
     * <p>
     * @attr description
     * Icon drawable to use for the navigation button located at
     * the start of the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:navigationIcon
     */
    public static final int Toolbar_navigationIcon=15;
    /**
     * <p>
     * @attr description
     * Reference to a theme that should be used to inflate popups
     * shown by widgets in the toolbar.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:popupTheme
     */
    public static final int Toolbar_popupTheme=16;
    /**
     * <p>
     * @attr description
     * Specifies subtitle text used for navigationMode="normal"
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:subtitle
     */
    public static final int Toolbar_subtitle=17;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#subtitleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:subtitleTextAppearance
     */
    public static final int Toolbar_subtitleTextAppearance=18;
    /**
     * <p>
     * @attr description
     * A color to apply to the subtitle string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:subtitleTextColor
     */
    public static final int Toolbar_subtitleTextColor=19;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#title}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.deskclock:title
     */
    public static final int Toolbar_title=20;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the left, start, right and end sides
     * of the toolbar's title. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:titleMargin
     */
    public static final int Toolbar_titleMargin=21;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the bottom side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:titleMarginBottom
     */
    public static final int Toolbar_titleMarginBottom=22;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the end side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:titleMarginEnd
     */
    public static final int Toolbar_titleMarginEnd=23;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the start side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:titleMarginStart
     */
    public static final int Toolbar_titleMarginStart=24;
    /**
     * <p>
     * @attr description
     * Specifies extra space on the top side of the toolbar's title.
     * If both this attribute and titleMargin are specified, then this
     * attribute takes precedence. Margin values should be positive.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:titleMarginTop
     */
    public static final int Toolbar_titleMarginTop=25;
    /**
     * <p>
     * @attr description
     * {@deprecated Use titleMargin}
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:titleMargins
     */
    @Deprecated
    public static final int Toolbar_titleMargins=26;
    /**
     * <p>This symbol is the offset where the {@link com.android.deskclock.R.attr#titleTextAppearance}
     * attribute's value can be found in the {@link #Toolbar} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:titleTextAppearance
     */
    public static final int Toolbar_titleTextAppearance=27;
    /**
     * <p>
     * @attr description
     * A color to apply to the title string.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:titleTextColor
     */
    public static final int Toolbar_titleTextColor=28;
    /**
     * Attributes that can be used with a View.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #View_android_theme android:theme}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td></td></tr>
     * <tr><td><code>{@link #View_paddingEnd com.android.deskclock:paddingEnd}</code></td><td>Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_paddingStart com.android.deskclock:paddingStart}</code></td><td>Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
     * <tr><td><code>{@link #View_theme com.android.deskclock:theme}</code></td><td>Deprecated.</td></tr>
     * </table>
     * @see #View_android_theme
     * @see #View_android_focusable
     * @see #View_paddingEnd
     * @see #View_paddingStart
     * @see #View_theme
     */
    public static final int[] View={
        0x01010000, 0x010100da, 0x7f040109, 0x7f04010a, 
        0x7f040184
      };
    /**
     * <p>
     * @attr description
     * Specifies a theme override for a view. When a theme override is set, the
     * view will be inflated using a {@link android.content.Context} themed with
     * the specified resource.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:theme
     */
    public static final int View_android_theme=0;
    /**
     * <p>
     * @attr description
     * Boolean that controls whether a view can take focus.  By default the user can not
     * move focus to a view; by setting this attribute to true the view is
     * allowed to take focus.  This value does not impact the behavior of
     * directly calling {@link android.view.View#requestFocus}, which will
     * always request focus regardless of this view.  It only impacts where
     * focus navigation will try to move focus.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>auto</td><td>10</td><td></td></tr>
     * </table>
     *
     * @attr name android:focusable
     */
    public static final int View_android_focusable=1;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:paddingEnd
     */
    public static final int View_paddingEnd=2;
    /**
     * <p>
     * @attr description
     * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.deskclock:paddingStart
     */
    public static final int View_paddingStart=3;
    /**
     * <p>
     * @attr description
     * Deprecated.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.deskclock:theme
     */
    public static final int View_theme=4;
    /**
     * Attributes that can be used with a ViewBackgroundHelper.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.android.deskclock:backgroundTint}</code></td><td>Tint to apply to the background.</td></tr>
     * <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.android.deskclock:backgroundTintMode}</code></td><td>Blending mode used to apply the background tint.</td></tr>
     * </table>
     * @see #ViewBackgroundHelper_android_background
     * @see #ViewBackgroundHelper_backgroundTint
     * @see #ViewBackgroundHelper_backgroundTintMode
     */
    public static final int[] ViewBackgroundHelper={
        0x010100d4, 0x7f040039, 0x7f04003a
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#background}
     * attribute's value can be found in the {@link #ViewBackgroundHelper} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:background
     */
    public static final int ViewBackgroundHelper_android_background=0;
    /**
     * <p>
     * @attr description
     * Tint to apply to the background.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.deskclock:backgroundTint
     */
    public static final int ViewBackgroundHelper_backgroundTint=1;
    /**
     * <p>
     * @attr description
     * Blending mode used to apply the background tint.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>add</td><td>10</td><td>Combines the tint and icon color and alpha channels, clamping the
     * result to valid color values. Saturate(S + D)</td></tr>
     * <tr><td>multiply</td><td>e</td><td>Multiplies the color and alpha channels of the drawable with those of
     * the tint. [Sa * Da, Sc * Dc]</td></tr>
     * <tr><td>screen</td><td>f</td><td>[Sa + Da - Sa * Da, Sc + Dc - Sc * Dc]</td></tr>
     * <tr><td>src_atop</td><td>9</td><td>The tint is drawn above the drawable, but with the drawable’s alpha
     * channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc]</td></tr>
     * <tr><td>src_in</td><td>5</td><td>The tint is masked by the alpha channel of the drawable. The drawable’s
     * color channels are thrown out. [Sa * Da, Sc * Da]</td></tr>
     * <tr><td>src_over</td><td>3</td><td>The tint is drawn on top of the drawable.
     * [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc]</td></tr>
     * </table>
     *
     * @attr name com.android.deskclock:backgroundTintMode
     */
    public static final int ViewBackgroundHelper_backgroundTintMode=2;
    /**
     * Attributes that can be used with a ViewStubCompat.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td></td></tr>
     * <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td></td></tr>
     * </table>
     * @see #ViewStubCompat_android_id
     * @see #ViewStubCompat_android_layout
     * @see #ViewStubCompat_android_inflatedId
     */
    public static final int[] ViewStubCompat={
        0x010100d0, 0x010100f2, 0x010100f3
      };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #ViewStubCompat} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int ViewStubCompat_android_id=0;
    /**
     * <p>
     * @attr description
     * Supply an identifier for the layout resource to inflate when the ViewStub
     * becomes visible or when forced to do so. The layout resource must be a
     * valid reference to a layout.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:layout
     */
    public static final int ViewStubCompat_android_layout=1;
    /**
     * <p>
     * @attr description
     * Overrides the id of the inflated View with this value.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:inflatedId
     */
    public static final int ViewStubCompat_android_inflatedId=2;
  }
  public static final class xml {
    public static final int analog_appwidget=0x7f130000;
    public static final int backup_scheme=0x7f130001;
    public static final int digital_appwidget=0x7f130002;
    public static final int screensaver_info=0x7f130003;
    public static final int screensaver_settings=0x7f130004;
    public static final int settings=0x7f130005;
  }
}