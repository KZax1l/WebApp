/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.android.launcher;

public final class R {
  public static final class anim {
    public static final int fade_in_fast=0x7f010000;
    public static final int fade_out_fast=0x7f010001;
  }
  public static final class array {
    public static final int extra_wallpapers=0x7f020000;
    public static final int wallpapers=0x7f020001;
  }
  public static final class attr {
    /**
     * The number of horizontal cells in the CellLayout
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int cellCountX=0x7f030000;
    /**
     * The number of vertical cells in the CellLayout
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int cellCountY=0x7f030001;
    /**
     * The height of a single cell
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cellHeight=0x7f030002;
    /**
     * The width of a single cell
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int cellWidth=0x7f030003;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int className=0x7f030004;
    /**
     * The x index of the item to be focused in the cling
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int clingFocusedX=0x7f030005;
    /**
     * The y index of the item to be focused in the cling
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int clingFocusedY=0x7f030006;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int container=0x7f030007;
    /**
     * The first screen the workspace should display.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int defaultScreen=0x7f030008;
    /**
     * Orientation of a widget.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>1</td><td>Horizontal widget.</td></tr>
     * <tr><td>vertical</td><td>0</td><td>Vertical widget.</td></tr>
     * </table>
     */
    public static final int direction=0x7f030009;
    /**
     * Used to identify how to draw the cling bg
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int drawIdentifier=0x7f03000a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int heightGap=0x7f03000b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int icon=0x7f03000c;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f03000d;
    /**
     * Max number of cells of applications horizontally
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxAppCellCountX=0x7f03000e;
    /**
     * Max number of cells of applications vertically
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int maxAppCellCountY=0x7f03000f;
    /**
     * The max gap size for each dimension
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int maxGap=0x7f030010;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int packageName=0x7f030011;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pageLayoutHeightGap=0x7f030012;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pageLayoutPaddingBottom=0x7f030013;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pageLayoutPaddingLeft=0x7f030014;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pageLayoutPaddingRight=0x7f030015;
    /**
     * The padding of the pages that are dynamically created per page
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pageLayoutPaddingTop=0x7f030016;
    /**
     * A spacing override for the icons within a page
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pageLayoutWidthGap=0x7f030017;
    /**
     * The space between adjacent pages of the PagedView.
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int pageSpacing=0x7f030018;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int screen=0x7f030019;
    /**
     * The padding for the scroll indicator area
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int scrollIndicatorPaddingLeft=0x7f03001a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int scrollIndicatorPaddingRight=0x7f03001b;
    /**
     * The source view to generate and apply the drawable states to/from
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int sourceImageViewId=0x7f03001c;
    /**
     * The source view to delegate touch presses events to.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int sourceViewId=0x7f03001d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int spanX=0x7f03001e;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int spanY=0x7f03001f;
    /**
     * The color of the stroke outline
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeColor=0x7f030020;
    /**
     * The color of the text
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int strokeTextColor=0x7f030021;
    /**
     * The width of the stroke
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int strokeWidth=0x7f030022;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int title=0x7f030023;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int uri=0x7f030024;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int value=0x7f030025;
    /**
     * Vertical spacing between widgets
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int widgetCellHeightGap=0x7f030026;
    /**
     * Horizontal spacing between widgets and wallpapers
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int widgetCellWidthGap=0x7f030027;
    /**
     * Number of widgets horizontally
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int widgetCountX=0x7f030028;
    /**
     * Number of widgets vertically
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int widgetCountY=0x7f030029;
    /**
     * An override for the width and height gap to allow users to specify
     * a specific size for the page using spacing instead of resolving the
     * spacing from the width of the page
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int widthGap=0x7f03002a;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int x=0x7f03002b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int y=0x7f03002c;
  }
  public static final class bool {
    public static final int allow_rotation=0x7f040000;
    public static final int config_largeHeap=0x7f040001;
    /**
     * Whether or not to use custom clings if a custom workspace layout is passed in
     * Whether or not to use custom clings if a custom workspace layout is passed in
     */
    public static final int config_useCustomClings=0x7f040002;
    /**
     * Whether or not the drop targets drop down as opposed to fade in
     * Whether or not the drop targets drop down as opposed to fade in
     * Whether or not the drop targets drop down as opposed to fade in
     */
    public static final int config_useDropTargetDownTransition=0x7f040003;
    /**
     * Whether or not to fade the side pages
     * Whether or not to fade the side pages
     * Whether or not to fade the side pages
     * Whether or not to fade the side pages
     */
    public static final int config_workspaceFadeAdjacentScreens=0x7f040004;
    /**
     * Hotseat
     * Hotseat
     */
    public static final int hotseat_transpose_layout_with_orientation=0x7f040005;
    public static final int is_large_screen=0x7f040006;
  }
  public static final class color {
    public static final int appwidget_error_color=0x7f050000;
    public static final int bubble_dark_background=0x7f050001;
    /**
     * The color tints to apply to the text and drag view when hovering
     * over the delete target or the info target
     */
    public static final int delete_target_hover_tint=0x7f050002;
    public static final int info_target_hover_tint=0x7f050003;
    public static final int workspace_all_apps_and_delete_zone_text_color=0x7f050004;
    public static final int workspace_all_apps_and_delete_zone_text_shadow_color=0x7f050005;
    public static final int workspace_icon_text_color=0x7f050006;
  }
  public static final class dimen {
    public static final int all_apps_button_vertical_padding=0x7f060000;
    public static final int app_icon_drawable_padding=0x7f060001;
    public static final int app_icon_drawable_padding_land=0x7f060002;
    public static final int app_icon_padding_top=0x7f060003;
    public static final int app_icon_size=0x7f060004;
    public static final int app_widget_preview_label_margin_left=0x7f060005;
    public static final int app_widget_preview_label_margin_right=0x7f060006;
    public static final int app_widget_preview_label_margin_top=0x7f060007;
    /**
     * Padding applied to AppWidget previews
     */
    public static final int app_widget_preview_padding_left=0x7f060008;
    public static final int app_widget_preview_padding_right=0x7f060009;
    public static final int app_widget_preview_padding_top=0x7f06000a;
    /**
     * The width can be 76dp because we don't have B padding
     */
    public static final int apps_customize_cell_height=0x7f06000b;
    /**
     * The width can be 72dp because we don't have L/R padding
     * AppsCustomize
     * AppsCustomize
     * AppsCustomize
     */
    public static final int apps_customize_cell_width=0x7f06000c;
    public static final int apps_customize_max_gap=0x7f06000d;
    public static final int apps_customize_pageLayoutHeightGap=0x7f06000e;
    public static final int apps_customize_pageLayoutPaddingBottom=0x7f06000f;
    public static final int apps_customize_pageLayoutPaddingLeft=0x7f060010;
    public static final int apps_customize_pageLayoutPaddingRight=0x7f060011;
    /**
     * AppsCustomize
     */
    public static final int apps_customize_pageLayoutPaddingTop=0x7f060012;
    /**
     * AppsCustomize
     * AppsCustomize
     * AppsCustomize
     */
    public static final int apps_customize_pageLayoutWidthGap=0x7f060013;
    /**
     * The height of the tab bar - if this changes, we should update the
     * external icon width/height above to compensate
     */
    public static final int apps_customize_tab_bar_height=0x7f060014;
    public static final int apps_customize_tab_bar_margin_top=0x7f060015;
    public static final int apps_customize_widget_cell_height_gap=0x7f060016;
    public static final int apps_customize_widget_cell_width_gap=0x7f060017;
    /**
     * height of the bottom row of controls
     * height of the bottom row of controls
     * Hotseat
     * height of the bottom row of controls
     */
    public static final int button_bar_height=0x7f060018;
    /**
     * Because portal animations go beyond the bounds of an icon, we need
     * to make the dock layout slightly larger than the button_bar_height
     */
    public static final int button_bar_height_bottom_padding=0x7f060019;
    public static final int button_bar_height_plus_padding=0x7f06001a;
    /**
     * Because portal animations go beyond the bounds of an icon, we need
     * to make the dock layout slightly larger than the button_bar_height
     * Because portal animations go beyond the bounds of an icon, we need
     * to make the dock layout slightly larger than the button_bar_height
     */
    public static final int button_bar_height_top_padding=0x7f06001b;
    /**
     * Hotseat
     */
    public static final int button_bar_width_left_padding=0x7f06001c;
    public static final int button_bar_width_right_padding=0x7f06001d;
    public static final int cell_layout_bottom_padding=0x7f06001e;
    public static final int cell_layout_bottom_padding_land=0x7f06001f;
    public static final int cell_layout_bottom_padding_port=0x7f060020;
    /**
     * Block spacing on each side of the screen.  And also padding
     * for the portals to look right.
     * Block spacing on each side of the screen.  And also padding
     * for the portals to look right.
     */
    public static final int cell_layout_left_padding=0x7f060021;
    public static final int cell_layout_left_padding_land=0x7f060022;
    /**
     * CellLayout padding
     * CellLayout padding land / port
     * CellLayout padding land / port
     */
    public static final int cell_layout_left_padding_port=0x7f060023;
    public static final int cell_layout_right_padding=0x7f060024;
    public static final int cell_layout_right_padding_land=0x7f060025;
    public static final int cell_layout_right_padding_port=0x7f060026;
    public static final int cell_layout_top_padding=0x7f060027;
    public static final int cell_layout_top_padding_land=0x7f060028;
    public static final int cell_layout_top_padding_port=0x7f060029;
    /**
     * Cling
     */
    public static final int clingPunchThroughGraphicCenterRadius=0x7f06002a;
    /**
     * The offset for the text in the cling
     * The offset for the text in the cling
     * The offset for the text in the cling
     */
    public static final int cling_text_block_offset_x=0x7f06002b;
    public static final int cling_text_block_offset_y=0x7f06002c;
    public static final int custom_cling_margin_left=0x7f06002d;
    public static final int custom_cling_margin_right=0x7f06002e;
    public static final int custom_cling_margin_top=0x7f06002f;
    /**
     * When dragging items on the workspace, the number of dps by which the position of
     * the drag view should be offset from the position of the original view.
     */
    public static final int dragViewOffsetX=0x7f060030;
    public static final int dragViewOffsetY=0x7f060031;
    /**
     * When dragging an item, how much bigger (fixed dps) the dragged view
     * should be. If 0, it will not be scaled at all.
     */
    public static final int dragViewScale=0x7f060032;
    /**
     * Drag padding to add to the bottom of drop targets
     * Drag padding to add to the bottom of drop targets
     */
    public static final int drop_target_drag_padding=0x7f060033;
    /**
     * Clings
     * Clings
     */
    public static final int folderClingMarginTop=0x7f060034;
    public static final int folder_cell_height=0x7f060035;
    /**
     * The size of the image which sits behind the preview of the folder contents
     */
    public static final int folder_cell_width=0x7f060036;
    public static final int folder_height_gap=0x7f060037;
    public static final int folder_icon_padding_top=0x7f060038;
    public static final int folder_name_padding=0x7f060039;
    public static final int folder_padding=0x7f06003a;
    /**
     * The amount that the preview contents are inset from the preview background
     */
    public static final int folder_preview_padding=0x7f06003b;
    /**
     * The size of the image which sits behind the preview of the folder contents
     * The size of the image which sits behind the preview of the folder contents
     * The size of the image which sits behind the preview of the folder contents
     */
    public static final int folder_preview_size=0x7f06003c;
    public static final int folder_width_gap=0x7f06003d;
    public static final int hotseat_cell_height=0x7f06003e;
    /**
     * Hotseat
     * Workspace
     */
    public static final int hotseat_cell_width=0x7f06003f;
    public static final int hotseat_height_gap=0x7f060040;
    /**
     * Hotseat
     * Hotseat
     */
    public static final int hotseat_width_gap=0x7f060041;
    public static final int profile_badge_margin=0x7f060042;
    /**
     * Sizes for managed profile badges
     */
    public static final int profile_badge_size=0x7f060043;
    /**
     * Workspace
     * QSB
     * QSB
     */
    public static final int qsb_bar_height=0x7f060044;
    /**
     * qsb_bar_height_inset represents qsb_bar_height minus the padding
     * that we put on each page for allowing folders to draw out of bounds
     * qsb_bar_height_inset represents qsb_bar_height minus the padding
     * that we put on each page for allowing folders to draw out of bounds
     * QSB
     * qsb_bar_height_inset represents qsb_bar_height minus the padding
     * that we put on each page for allowing folders to draw out of bounds
     * qsb_bar_height_inset represents qsb_bar_height minus the padding
     * that we put on each page for allowing folders to draw out of bounds
     */
    public static final int qsb_bar_height_inset=0x7f060045;
    public static final int qsb_padding_left=0x7f060046;
    public static final int qsb_padding_right=0x7f060047;
    /**
     * We offset the proxy to overlap with the voice icon
     * We offset the proxy to overlap with the voice icon
     */
    public static final int qsb_voice_proxy_padding_right=0x7f060048;
    public static final int reveal_radius=0x7f060049;
    /**
     * the area at the edge of the screen that makes the workspace go left
     * or right while you're dragging.
     * the area at the edge of the screen that makes the workspace go left
     * or right while you're dragging.
     * the area at the edge of the screen that makes the workspace go left
     * or right while you're dragging.
     */
    public static final int scroll_zone=0x7f06004a;
    /**
     * 44dp high for the optical bounds
     */
    public static final int search_bar_height=0x7f06004b;
    /**
     * Padding applied to shortcut previews
     */
    public static final int shortcut_preview_padding_left=0x7f06004c;
    public static final int shortcut_preview_padding_right=0x7f06004d;
    public static final int shortcut_preview_padding_top=0x7f06004e;
    public static final int toolbar_button_horizontal_padding=0x7f06004f;
    /**
     * QSB
     * QSB
     * QSB
     */
    public static final int toolbar_button_vertical_padding=0x7f060050;
    public static final int toolbar_external_icon_height=0x7f060051;
    /**
     * External toolbar icon size (for bounds)
     */
    public static final int toolbar_external_icon_width=0x7f060052;
    public static final int wallpaper_chooser_grid_height=0x7f060053;
    /**
     * dimensions for the wallpaper picker wallpaper thumbnail width
     */
    public static final int wallpaper_chooser_grid_width=0x7f060054;
    public static final int workspace_bottom_padding=0x7f060055;
    public static final int workspace_bottom_padding_land=0x7f060056;
    public static final int workspace_bottom_padding_port=0x7f060057;
    public static final int workspace_cell_height=0x7f060058;
    public static final int workspace_cell_height_land=0x7f060059;
    public static final int workspace_cell_height_port=0x7f06005a;
    /**
     * Workspace cell size
     * Workspace cell size
     */
    public static final int workspace_cell_width=0x7f06005b;
    /**
     * Workspace cell size
     * Workspace cell size
     * Workspace cell size
     */
    public static final int workspace_cell_width_land=0x7f06005c;
    public static final int workspace_cell_width_port=0x7f06005d;
    public static final int workspace_divider_padding_bottom=0x7f06005e;
    /**
     * Workspace
     * Divider width set to match the qsb width
     */
    public static final int workspace_divider_padding_left=0x7f06005f;
    public static final int workspace_divider_padding_right=0x7f060060;
    /**
     * Workspace
     * Workspace
     */
    public static final int workspace_divider_padding_top=0x7f060061;
    /**
     * Divider width set to match the qsb width
     */
    public static final int workspace_divider_width=0x7f060062;
    public static final int workspace_height_gap=0x7f060063;
    public static final int workspace_height_gap_land=0x7f060064;
    public static final int workspace_height_gap_port=0x7f060065;
    public static final int workspace_icon_text_size=0x7f060066;
    /**
     * Workspace padding
     * Workspace padding
     */
    public static final int workspace_left_padding=0x7f060067;
    public static final int workspace_left_padding_land=0x7f060068;
    /**
     * Workspace padding
     */
    public static final int workspace_left_padding_port=0x7f060069;
    public static final int workspace_max_gap=0x7f06006a;
    public static final int workspace_overscroll_drawable_padding=0x7f06006b;
    /**
     * We really want the page spacing to be the max of either the button bar
     * height or the qsb bar height
     * Workspace
     */
    public static final int workspace_page_spacing=0x7f06006c;
    public static final int workspace_right_padding=0x7f06006d;
    public static final int workspace_right_padding_land=0x7f06006e;
    public static final int workspace_right_padding_port=0x7f06006f;
    public static final int workspace_spring_loaded_page_spacing=0x7f060070;
    public static final int workspace_top_padding=0x7f060071;
    public static final int workspace_top_padding_land=0x7f060072;
    public static final int workspace_top_padding_port=0x7f060073;
    public static final int workspace_width_gap=0x7f060074;
    public static final int workspace_width_gap_land=0x7f060075;
    public static final int workspace_width_gap_port=0x7f060076;
  }
  public static final class drawable {
    public static final int all_apps_button_icon=0x7f070000;
    public static final int apps_customize_bg=0x7f070001;
    public static final int bg_appwidget_error=0x7f070002;
    public static final int bg_cling1=0x7f070003;
    public static final int bg_cling2=0x7f070004;
    public static final int bg_cling3=0x7f070005;
    public static final int bg_cling4=0x7f070006;
    public static final int bg_cling5=0x7f070007;
    public static final int btn_cling_normal=0x7f070008;
    public static final int btn_cling_pressed=0x7f070009;
    public static final int cling=0x7f07000a;
    public static final int cling_button_bg=0x7f07000b;
    public static final int default_wallpaper=0x7f07000c;
    public static final int default_wallpaper_small=0x7f07000d;
    public static final int divider_launcher_holo=0x7f07000e;
    public static final int flying_icon_bg=0x7f07000f;
    public static final int flying_icon_bg_pressed=0x7f070010;
    public static final int focusable_view_bg=0x7f070011;
    public static final int focused_bg=0x7f070012;
    public static final int grid_focused=0x7f070013;
    public static final int grid_pressed=0x7f070014;
    public static final int grid_selected=0x7f070015;
    public static final int hand=0x7f070016;
    public static final int home_press=0x7f070017;
    public static final int homescreen_blue_normal_holo=0x7f070018;
    public static final int homescreen_blue_strong_holo=0x7f070019;
    public static final int hotseat_scrubber_holo=0x7f07001a;
    public static final int hotseat_track_holo=0x7f07001b;
    public static final int ic_allapps=0x7f07001c;
    public static final int ic_allapps_pressed=0x7f07001d;
    public static final int ic_home_all_apps_holo_dark=0x7f07001e;
    public static final int ic_home_search_normal_holo=0x7f07001f;
    public static final int ic_home_voice_search_holo=0x7f070020;
    public static final int ic_launcher_clear_active_holo=0x7f070021;
    public static final int ic_launcher_clear_normal_holo=0x7f070022;
    public static final int ic_launcher_info_active_holo=0x7f070023;
    public static final int ic_launcher_info_normal_holo=0x7f070024;
    public static final int ic_launcher_market_holo=0x7f070025;
    public static final int ic_launcher_trashcan_active_holo=0x7f070026;
    public static final int ic_launcher_trashcan_normal_holo=0x7f070027;
    public static final int info_target_selector=0x7f070028;
    public static final int overscroll_glow_left=0x7f070029;
    public static final int overscroll_glow_right=0x7f07002a;
    public static final int page_hover_left_holo=0x7f07002b;
    public static final int page_hover_right_holo=0x7f07002c;
    public static final int portal_container_holo=0x7f07002d;
    public static final int portal_ring_inner_holo=0x7f07002e;
    public static final int portal_ring_inner_nolip_holo=0x7f07002f;
    public static final int portal_ring_outer_holo=0x7f070030;
    public static final int portal_ring_rest=0x7f070031;
    public static final int remove_target_selector=0x7f070032;
    public static final int search_frame=0x7f070033;
    public static final int tab_selected_focused_holo=0x7f070034;
    public static final int tab_selected_holo=0x7f070035;
    public static final int tab_selected_pressed_focused_holo=0x7f070036;
    public static final int tab_selected_pressed_holo=0x7f070037;
    public static final int tab_unselected_focused_holo=0x7f070038;
    public static final int tab_unselected_holo=0x7f070039;
    public static final int tab_unselected_pressed_focused_holo=0x7f07003a;
    public static final int tab_unselected_pressed_holo=0x7f07003b;
    public static final int tab_widget_indicator_selector=0x7f07003c;
    public static final int uninstall_target_selector=0x7f07003d;
    public static final int wallpaper_gallery_background=0x7f07003e;
    public static final int wallpaper_gallery_item=0x7f07003f;
    public static final int wallpaper_picker_preview=0x7f070040;
    public static final int widget_container_holo=0x7f070041;
    public static final int widget_preview_tile=0x7f070042;
    public static final int widget_resize_frame_holo=0x7f070043;
    public static final int widget_resize_handle_bottom=0x7f070044;
    public static final int widget_resize_handle_left=0x7f070045;
    public static final int widget_resize_handle_right=0x7f070046;
    public static final int widget_resize_handle_top=0x7f070047;
    public static final int workspace_bg=0x7f070048;
  }
  public static final class id {
    public static final int all_apps_cling=0x7f080000;
    public static final int all_apps_cling_add_item=0x7f080001;
    public static final int all_apps_cling_title=0x7f080002;
    public static final int animation_buffer=0x7f080003;
    public static final int application_icon=0x7f080004;
    public static final int apps_customize_content=0x7f080005;
    public static final int apps_customize_pane=0x7f080006;
    public static final int apps_customize_pane_content=0x7f080007;
    public static final int apps_customize_progress_bar=0x7f080008;
    public static final int cell1=0x7f080009;
    public static final int cell2=0x7f08000a;
    public static final int cell3=0x7f08000b;
    public static final int cell4=0x7f08000c;
    public static final int cell5=0x7f08000d;
    public static final int cling_dismiss=0x7f08000e;
    public static final int delete_target_text=0x7f08000f;
    public static final int dock_divider=0x7f080010;
    public static final int drag_layer=0x7f080011;
    public static final int drag_target_bar=0x7f080012;
    public static final int folder_cling=0x7f080013;
    public static final int folder_cling_create_folder=0x7f080014;
    public static final int folder_cling_title=0x7f080015;
    public static final int folder_content=0x7f080016;
    public static final int folder_icon_name=0x7f080017;
    public static final int folder_name=0x7f080018;
    public static final int gallery=0x7f080019;
    public static final int horizontal=0x7f08001a;
    public static final int hotseat=0x7f08001b;
    public static final int info_target_text=0x7f08001c;
    public static final int label=0x7f08001d;
    public static final int launcher=0x7f08001e;
    public static final int layout=0x7f08001f;
    public static final int market_button=0x7f080020;
    public static final int paged_view_indicator=0x7f080021;
    public static final int preview_background=0x7f080022;
    public static final int provider=0x7f080023;
    public static final int provider_icon=0x7f080024;
    public static final int qsb_bar=0x7f080025;
    public static final int qsb_divider=0x7f080026;
    public static final int qsb_search_bar=0x7f080027;
    public static final int search_button=0x7f080028;
    public static final int search_button_container=0x7f080029;
    public static final int set=0x7f08002a;
    public static final int tabs_container=0x7f08002b;
    public static final int vertical=0x7f08002c;
    public static final int voice_button=0x7f08002d;
    public static final int voice_button_container=0x7f08002e;
    public static final int voice_button_proxy=0x7f08002f;
    public static final int wallpaper_chooser_fragment=0x7f080030;
    public static final int wallpaper_image=0x7f080031;
    public static final int widget_dims=0x7f080032;
    public static final int widget_name=0x7f080033;
    public static final int widget_preview=0x7f080034;
    public static final int workspace=0x7f080035;
    public static final int workspace_cling=0x7f080036;
  }
  public static final class integer {
    public static final int apps_customize_cling_focused_x=0x7f090000;
    public static final int apps_customize_cling_focused_y=0x7f090001;
    /**
     * AllApps/Customize/AppsCustomize
     */
    public static final int apps_customize_maxCellCountX=0x7f090002;
    public static final int apps_customize_maxCellCountY=0x7f090003;
    /**
     * We can also afford to have a slightly wider portrait layout in
     * xlarge
     */
    public static final int apps_customize_widget_cell_count_x=0x7f090004;
    public static final int apps_customize_widget_cell_count_y=0x7f090005;
    public static final int cell_count_x=0x7f090006;
    public static final int cell_count_y=0x7f090007;
    /**
     * Batch loading for loading in LauncherModel
     */
    public static final int config_allAppsBatchLoadDelay=0x7f090008;
    public static final int config_allAppsBatchSize=0x7f090009;
    /**
     * The slope, in percent, of the drag movement needed to drag an item out of
     * AppsCustomize (y / x * 100%)
     */
    public static final int config_appsCustomizeDragSlopeThreshold=0x7f09000a;
    public static final int config_appsCustomizeFadeInTime=0x7f09000b;
    public static final int config_appsCustomizeFadeOutTime=0x7f09000c;
    /**
     * The alpha of the AppsCustomize bg in spring loaded mode
     */
    public static final int config_appsCustomizeSpringLoadedBgAlpha=0x7f09000d;
    public static final int config_appsCustomizeWorkspaceAnimationStagger=0x7f09000e;
    public static final int config_appsCustomizeWorkspaceShrinkTime=0x7f09000f;
    /**
     * Fade/zoom in/out duration & scale in the AllApps transition.
     * Note: This should be less than the workspaceShrinkTime as they happen together.
     */
    public static final int config_appsCustomizeZoomInTime=0x7f090010;
    public static final int config_appsCustomizeZoomOutTime=0x7f090011;
    public static final int config_appsCustomizeZoomScaleFactor=0x7f090012;
    /**
     * Camera distance for the overscroll effect
     * Camera distance for the overscroll effect. We use a higher value here because the
     * workspace screens run nearly flush to the edge of the screen
     * Camera distance for the overscroll effect
     */
    public static final int config_cameraDistance=0x7f090013;
    /**
     * Properties controlling the workspace fade-out during dragging
     */
    public static final int config_dragFadeOutAlpha=0x7f090014;
    public static final int config_dragFadeOutDuration=0x7f090015;
    /**
     * The duration (in ms) of the fade animation on the object outlines, used when
     * we are dragging objects around on the home screen.
     */
    public static final int config_dragOutlineFadeTime=0x7f090016;
    /**
     * The alpha value at which to show the most recent drop visualization outline.
     */
    public static final int config_dragOutlineMaxAlpha=0x7f090017;
    /**
     * The distance at which the animation should take the max duration
     */
    public static final int config_dropAnimMaxDist=0x7f090018;
    public static final int config_dropAnimMaxDuration=0x7f090019;
    /**
     * Parameters controlling the animation for when an item is dropped on the home screen,
     * and it animates from its old position to the new one.
     */
    public static final int config_dropAnimMinDuration=0x7f09001a;
    /**
     * The transition duration for the background of the drop targets
     */
    public static final int config_dropTargetBgTransitionDuration=0x7f09001b;
    /**
     * DragController
     * DragController
     */
    public static final int config_flingToDeleteMinVelocity=0x7f09001c;
    /**
     * The duration of the UserFolder opening and closing animation
     */
    public static final int config_folderAnimDuration=0x7f09001d;
    /**
     * Tab transition animation duration
     */
    public static final int config_tabTransitionDuration=0x7f09001e;
    public static final int config_workspaceAppsCustomizeAnimationStagger=0x7f09001f;
    /**
     * Out of 100, the percent to shrink the workspace during spring loaded mode.
     * Out of 100, the percent to shrink the workspace during spring loaded mode.
     */
    public static final int config_workspaceSpringLoadShrinkPercentage=0x7f090020;
    public static final int config_workspaceUnshrinkTime=0x7f090021;
    /**
     * Folder max bounds and max number of items. Note: folder_max_count_x * folder_max_count_y
     * >= folder_max_num_items. When these are set to -1, they are automatically determined.
     * Folder max bounds and max number of items. Note: folder_max_count_x * folder_max_count_y
     * >= folder_max_num_items. When these are set to -1, they are automatically determined.
     * Folder max bounds and max number of items. Note: folder_max_count_x * folder_max_count_y
     * >= folder_max_num_items. When these are set to -1, they are automatically determined.
     * Folder max bounds and max number of items.
     * Note: folder_max_count_x * folder_max_count_y >= folder_max_num_items.
     * Folder max bounds and max number of items. Note: folder_max_count_x * folder_max_count_y
     * >= folder_max_num_items. When these are set to -1, they are automatically determined.
     */
    public static final int folder_max_count_x=0x7f090022;
    public static final int folder_max_count_y=0x7f090023;
    public static final int folder_max_num_items=0x7f090024;
    public static final int hotseat_all_apps_index=0x7f090025;
    public static final int hotseat_cell_count=0x7f090026;
    /**
     * must be between 0 and 100
     * must be between 0 and 100
     */
    public static final int hotseat_item_scale_percentage=0x7f090027;
  }
  public static final class layout {
    public static final int add_list_item=0x7f0a0000;
    public static final int all_apps_cling=0x7f0a0001;
    public static final int application=0x7f0a0002;
    public static final int apps_customize_application=0x7f0a0003;
    public static final int apps_customize_pane=0x7f0a0004;
    public static final int apps_customize_progressbar=0x7f0a0005;
    public static final int apps_customize_widget=0x7f0a0006;
    public static final int appwidget_error=0x7f0a0007;
    public static final int custom_workspace_cling=0x7f0a0008;
    public static final int drop_target_bar=0x7f0a0009;
    public static final int external_widget_drop_list_item=0x7f0a000a;
    public static final int folder_cling=0x7f0a000b;
    public static final int folder_icon=0x7f0a000c;
    public static final int hotseat=0x7f0a000d;
    public static final int launcher=0x7f0a000e;
    public static final int market_button=0x7f0a000f;
    public static final int qsb_bar=0x7f0a0010;
    public static final int rename_folder=0x7f0a0011;
    public static final int scroll_indicator=0x7f0a0012;
    public static final int search_bar=0x7f0a0013;
    public static final int tab_widget_indicator=0x7f0a0014;
    public static final int user_folder=0x7f0a0015;
    public static final int wallpaper_chooser=0x7f0a0016;
    public static final int wallpaper_chooser_base=0x7f0a0017;
    public static final int wallpaper_item=0x7f0a0018;
    public static final int workspace=0x7f0a0019;
    public static final int workspace_cling=0x7f0a001a;
    public static final int workspace_divider=0x7f0a001b;
    public static final int workspace_screen=0x7f0a001c;
  }
  public static final class mipmap {
    public static final int ic_launcher_application=0x7f0b0000;
    public static final int ic_launcher_home=0x7f0b0001;
    public static final int ic_launcher_wallpaper=0x7f0b0002;
  }
  public static final class string {
    /**
     * Accessibility: AllApps button
     */
    public static final int accessibility_all_apps_button=0x7f0c0000;
    /**
     * Accessibility: Delete button
     */
    public static final int accessibility_delete_button=0x7f0c0001;
    /**
     * Accessibility: Search button
     */
    public static final int accessibility_search_button=0x7f0c0002;
    /**
     * Accessibility: Voice Search button
     */
    public static final int accessibility_voice_search_button=0x7f0c0003;
    /**
     * Displayed when user selects a shortcut for an app that was uninstalled [CHAR_LIMIT=none]
     */
    public static final int activity_not_found=0x7f0c0004;
    /**
     * All applications label
     */
    public static final int all_apps_button_label=0x7f0c0005;
    /**
     * The description of how to pick up and add an item to the workspace [CHAR_LIMIT=none]
     */
    public static final int all_apps_cling_add_item=0x7f0c0006;
    /**
     * The title text for the All Apps cling [CHAR_LIMIT=none]
     */
    public static final int all_apps_cling_title=0x7f0c0007;
    /**
     * Label for button in all applications label to go back home (to the workspace / desktop)
     * for accessibilty (spoken when the button gets focus).
     */
    public static final int all_apps_home_button_label=0x7f0c0008;
    /**
     * Application name
     */
    public static final int application_name=0x7f0c0009;
    /**
     * The format string for AppsCustomize Apps page scroll text [CHAR_LIMIT=none]
     */
    public static final int apps_customize_apps_scroll_format=0x7f0c000a;
    /**
     * The format string for AppsCustomize Apps page scroll text [CHAR_LIMIT=none]
     */
    public static final int apps_customize_widgets_scroll_format=0x7f0c000b;
    /**
     * Appears in the CAB when an app is selected in All Apps or Customize mode. [CHAR_LIMIT=50]
     */
    public static final int cab_app_selection_text=0x7f0c000c;
    /**
     * Appears in the CAB when a folder is selected in Customize mode. [CHAR_LIMIT=50]
     */
    public static final int cab_folder_selection_text=0x7f0c000d;
    /**
     * Describes the button for getting details/info about currently selected application.
     * Text is not displayed, but provided for accessibility. [CHAR_LIMIT=none]
     */
    public static final int cab_menu_app_info=0x7f0c000e;
    /**
     * Describes the button for uninstalling the currently selected application.
     * Text is not displayed, but provided for accessibility. [CHAR_LIMIT=none]
     */
    public static final int cab_menu_delete_app=0x7f0c000f;
    /**
     * Appears in the CAB when a shortcut is selected in Customize mode. [CHAR_LIMIT=50]
     */
    public static final int cab_shortcut_selection_text=0x7f0c0010;
    /**
     * Appears in the CAB when a widget is selected in Customize mode. [CHAR_LIMIT=50]
     */
    public static final int cab_widget_selection_text=0x7f0c0011;
    /**
     * Buttons in Rename folder dialog box
     */
    public static final int cancel_action=0x7f0c0012;
    /**
     * Title of dialog that appears after user selects Wallpaper from menu
     */
    public static final int chooser_wallpaper=0x7f0c0013;
    /**
     * The text on the button to dismiss a cling [CHAR_LIMIT=none]
     */
    public static final int cling_dismiss=0x7f0c0014;
    /**
     * Error message when user has filled all their home screens
     */
    public static final int completely_out_of_space=0x7f0c0015;
    /**
     * Dummy string [CHAR_LIMIT=60]
     */
    public static final int custom_workspace_cling_description_1=0x7f0c0016;
    /**
     * Dummy string [CHAR_LIMIT=60]
     */
    public static final int custom_workspace_cling_description_2=0x7f0c0017;
    /**
     * Dummy string [CHAR_LIMIT=40]
     */
    public static final int custom_workspace_cling_title_1=0x7f0c0018;
    /**
     * Dummy string [CHAR_LIMIT=40]
     */
    public static final int custom_workspace_cling_title_2=0x7f0c0019;
    public static final int default_folder_name=0x7f0c001a;
    /**
     * The format string for default page scroll text [CHAR_LIMIT=none]
     */
    public static final int default_scroll_format=0x7f0c001b;
    /**
     * Label for delete drop target. [CHAR_LIMIT=30]
     */
    public static final int delete_target_label=0x7f0c001c;
    /**
     * Label for uninstall drop target. [CHAR_LIMIT=30]
     */
    public static final int delete_target_uninstall_label=0x7f0c001d;
    /**
     * Label for trash icon in All Apps. The icon/widget will become completely unavailable on the
     * device. [CHAR_LIMIT=30]
     */
    public static final int delete_zone_label_all_apps=0x7f0c001e;
    /**
     * Label for trash icon in All Apps, when an updated system app is selected. The update will
     * be uninstalled. [CHAR_LIMIT=30]
     */
    public static final int delete_zone_label_all_apps_system_app=0x7f0c001f;
    /**
     * Label for trash icon on workspace. Meant to communicate the idea of removing the
     * icon/widget from the home screen, but not permanently. [CHAR_LIMIT=30]
     */
    public static final int delete_zone_label_workspace=0x7f0c0020;
    /**
     * Title of the Android Dreams (screensaver) module
     */
    public static final int dream_name=0x7f0c0021;
    /**
     * Error message on dummy custom cling layout [DO NOT TRANSLATE]
     */
    public static final int dummy_custom_cling_error_message=0x7f0c0022;
    /**
     * External-drop widget error string.  This is the error that is shown
     * when you drag and item into the homescreen and it is unable to fit,
     * or an error is encountered. [CHAR_LIMIT=50]
     */
    public static final int external_drop_widget_error=0x7f0c0023;
    /**
     * External-drop widget pick label format string [CHAR_LIMIT=25]
     */
    public static final int external_drop_widget_pick_format=0x7f0c0024;
    /**
     * External-drop widget pick title.  This is shown as the title of the
     * dialog which allows you to pick which widgets to handle a particular
     * drop if there are multiple choices. [CHAR_LIMIT=35]
     */
    public static final int external_drop_widget_pick_title=0x7f0c0025;
    /**
     * The description of how to create a folder [CHAR_LIMIT=none]
     */
    public static final int folder_cling_create_folder=0x7f0c0026;
    /**
     * The description of how to move an app [CHAR_LIMIT=none]
     */
    public static final int folder_cling_move_item=0x7f0c0027;
    /**
     * The title text for the Folder cling [CHAR_LIMIT=none]
     */
    public static final int folder_cling_title=0x7f0c0028;
    /**
     * Indication that folder closed
     */
    public static final int folder_closed=0x7f0c0029;
    /**
     * Default folder title
     */
    public static final int folder_hint_text=0x7f0c002a;
    /**
     * Default folder name
     */
    public static final int folder_name=0x7f0c002b;
    /**
     * Folder name format
     */
    public static final int folder_name_format=0x7f0c002c;
    /**
     * The format string for when a folder is opened, speaks the dimensions
     */
    public static final int folder_opened=0x7f0c002d;
    /**
     * Folder renamed format
     */
    public static final int folder_renamed=0x7f0c002e;
    /**
     * Instruction that clicking outside will close folder
     */
    public static final int folder_tap_to_close=0x7f0c002f;
    /**
     * Instruction that clicking outside will commit folder rename
     */
    public static final int folder_tap_to_rename=0x7f0c0030;
    /**
     * Text to show user in place of a gadget when we can't display it properly
     */
    public static final int gadget_error_text=0x7f0c0031;
    /**
     * Options in "Add to Home" dialog box; Title of the group containing the list of all apps
     */
    public static final int group_applications=0x7f0c0032;
    /**
     * Options in "Add to Home" dialog box; Title of the group containing the list of all shortcut
     * s
     */
    public static final int group_shortcuts=0x7f0c0033;
    /**
     * Options in "Add to Home" dialog box; Title of the group containing the list of apps that can set the wallpaper
     */
    public static final int group_wallpapers=0x7f0c0034;
    /**
     * Options in "Add to Home" dialog box; Title of the group containing the list of all widgets/gadgets
     */
    public static final int group_widgets=0x7f0c0035;
    /**
     * URL pointing to help text. If empty, no link to help will be created [DO NOT TRANSLATE]
     */
    public static final int help_url=0x7f0c0036;
    /**
     * Accessibility-facing application name
     */
    public static final int home=0x7f0c0037;
    /**
     * Error message when user has filled the hotseat
     */
    public static final int hotseat_out_of_space=0x7f0c0038;
    /**
     * Label for the info icon. [CHAR_LIMIT=30]
     */
    public static final int info_target_label=0x7f0c0039;
    /**
     * Error message when user tries to drop an invalid item on the hotseat
     */
    public static final int invalid_hotseat_item=0x7f0c003a;
    /**
     * Message to tell the user to press and hold on a widget to add it [CHAR_LIMIT=50]
     */
    public static final int long_press_widget_to_add=0x7f0c003b;
    /**
     * Market button text.  The market button text is removed in Launcher.java
     * in the Phone UI. [CHAR LIMIT=32]
     */
    public static final int market=0x7f0c003c;
    /**
     * Verb, menu item used to add an item on the desktop
     */
    public static final int menu_add=0x7f0c003d;
    /**
     * Noun, menu item used to show help. [CHAR_LIMIT=none]
     */
    public static final int menu_help=0x7f0c003e;
    /**
     * Title of dialog box
     */
    public static final int menu_item_add_item=0x7f0c003f;
    /**
     * Menu item used to manage installed applications
     */
    public static final int menu_manage_apps=0x7f0c0040;
    /**
     * Noun, menu item used to bring down the notifications shade
     */
    public static final int menu_notifications=0x7f0c0041;
    /**
     * Verb, menu item used to initiate global search
     */
    public static final int menu_search=0x7f0c0042;
    /**
     * Noun, menu item used to show the system settings
     */
    public static final int menu_settings=0x7f0c0043;
    /**
     * Noun, menu item used to set the desktop's wallpaper
     */
    public static final int menu_wallpaper=0x7f0c0044;
    /**
     * Error message when user has filled a home screen
     */
    public static final int out_of_space=0x7f0c0045;
    /**
     * Permission description
     */
    public static final int permdesc_install_shortcut=0x7f0c0046;
    /**
     * Permission description
     */
    public static final int permdesc_read_settings=0x7f0c0047;
    /**
     * Permission description
     */
    public static final int permdesc_uninstall_shortcut=0x7f0c0048;
    /**
     * Permission description
     */
    public static final int permdesc_write_settings=0x7f0c0049;
    /**
     * Permission short label
     */
    public static final int permlab_install_shortcut=0x7f0c004a;
    /**
     * Permission short label
     */
    public static final int permlab_read_settings=0x7f0c004b;
    /**
     * Permission short label
     */
    public static final int permlab_uninstall_shortcut=0x7f0c004c;
    /**
     * Permission short label
     */
    public static final int permlab_write_settings=0x7f0c004d;
    /**
     * Option in "Select wallpaper from" dialog box
     */
    public static final int pick_wallpaper=0x7f0c004e;
    /**
     * Buttons in Rename folder dialog box
     */
    public static final int rename_action=0x7f0c004f;
    /**
     * Label of Folder name field in Rename folder dialog box
     */
    public static final int rename_folder_label=0x7f0c0050;
    /**
     * Title of dialog box
     */
    public static final int rename_folder_title=0x7f0c0051;
    /**
     * Message displayed when an external application attemps to create a shortcut that already exists
     */
    public static final int shortcut_duplicate=0x7f0c0052;
    /**
     * Message displayed when a shortcut is created by an external application
     */
    public static final int shortcut_installed=0x7f0c0053;
    /**
     * Message displayed when a shortcut is uninstalled by an external application
     */
    public static final int shortcut_uninstalled=0x7f0c0054;
    /**
     * Title of dialog when user is selecting an application to add to homescreen
     */
    public static final int title_select_application=0x7f0c0055;
    /**
     * Title of dialog when user is selecting shortcut to add to homescreen
     */
    public static final int title_select_shortcut=0x7f0c0056;
    /**
     * Name for all applications running as this uid.
     */
    public static final int uid_name=0x7f0c0057;
    /**
     * Text to inform the user that they can't uninstall a system application
     */
    public static final int uninstall_system_app_text=0x7f0c0058;
    /**
     * Button label on Wallpaper Gallery screen; user selects this button to set a specific wallpaper
     */
    public static final int wallpaper_instructions=0x7f0c0059;
    /**
     * There is a special version of this format string for Farsi
     */
    public static final int widget_dims_format=0x7f0c005a;
    /**
     * Labels for the tabs in the customize drawer
     */
    public static final int widgets_tab_label=0x7f0c005b;
    /**
     * The description of how to use the workspace [CHAR_LIMIT=none]
     */
    public static final int workspace_cling_move_item=0x7f0c005c;
    /**
     * The description of how to open all apps from the workspace [CHAR_LIMIT=none]
     */
    public static final int workspace_cling_open_all_apps=0x7f0c005d;
    /**
     * The title text for the workspace cling [CHAR_LIMIT=none]
     */
    public static final int workspace_cling_title=0x7f0c005e;
    /**
     * The format string for Workspace descriptions [CHAR_LIMIT=none]
     */
    public static final int workspace_description_format=0x7f0c005f;
    /**
     * The format string for Workspace page scroll text [CHAR_LIMIT=none]
     */
    public static final int workspace_scroll_format=0x7f0c0060;
  }
  public static final class style {
    /**
     * Clings
     */
    public static final int ClingButton=0x7f0d0000;
    public static final int ClingText=0x7f0d0001;
    public static final int ClingTitleText=0x7f0d0002;
    public static final int CustomClingText=0x7f0d0003;
    /**
     * Overridden in device overlays
     */
    public static final int CustomClingTitleText=0x7f0d0004;
    public static final int DropTargetButton=0x7f0d0005;
    public static final int DropTargetButtonContainer=0x7f0d0006;
    public static final int MarketButton=0x7f0d0007;
    /**
     * QSB Search / Drop Target bar
     * Search Bar
     * Workspace
     */
    public static final int QSBBar=0x7f0d0008;
    public static final int SearchButton=0x7f0d0009;
    public static final int SearchDropTargetBar=0x7f0d000a;
    public static final int TabIndicator=0x7f0d000b;
    /**
     * AppsCustomize
     * AppsCustomize
     * AppsCustomize
     */
    public static final int TabIndicator_AppsCustomize=0x7f0d000c;
    public static final int Theme=0x7f0d000d;
    public static final int Theme_WallpaperPicker=0x7f0d000e;
    public static final int WorkspaceIcon=0x7f0d000f;
    public static final int WorkspaceIcon_Landscape=0x7f0d0010;
    public static final int WorkspaceIcon_Landscape_AppsCustomize=0x7f0d0011;
    public static final int WorkspaceIcon_Landscape_Folder=0x7f0d0012;
    /**
     * Workspace
     */
    public static final int WorkspaceIcon_Portrait=0x7f0d0013;
    public static final int WorkspaceIcon_Portrait_AppsCustomize=0x7f0d0014;
    public static final int WorkspaceIcon_Portrait_Folder=0x7f0d0015;
  }
  public static final class styleable {
    /**
     * AppsCustomizePagedView specific attributes.  These attributes are used to
     * customize an AppsCustomizePagedView in xml files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #AppsCustomizePagedView_clingFocusedX com.android.launcher:clingFocusedX}</code></td><td>The x index of the item to be focused in the cling</td></tr>
     * <tr><td><code>{@link #AppsCustomizePagedView_clingFocusedY com.android.launcher:clingFocusedY}</code></td><td>The y index of the item to be focused in the cling</td></tr>
     * <tr><td><code>{@link #AppsCustomizePagedView_maxAppCellCountX com.android.launcher:maxAppCellCountX}</code></td><td>Max number of cells of applications horizontally</td></tr>
     * <tr><td><code>{@link #AppsCustomizePagedView_maxAppCellCountY com.android.launcher:maxAppCellCountY}</code></td><td>Max number of cells of applications vertically</td></tr>
     * <tr><td><code>{@link #AppsCustomizePagedView_widgetCellHeightGap com.android.launcher:widgetCellHeightGap}</code></td><td>Vertical spacing between widgets</td></tr>
     * <tr><td><code>{@link #AppsCustomizePagedView_widgetCellWidthGap com.android.launcher:widgetCellWidthGap}</code></td><td>Horizontal spacing between widgets and wallpapers</td></tr>
     * <tr><td><code>{@link #AppsCustomizePagedView_widgetCountX com.android.launcher:widgetCountX}</code></td><td>Number of widgets horizontally</td></tr>
     * <tr><td><code>{@link #AppsCustomizePagedView_widgetCountY com.android.launcher:widgetCountY}</code></td><td>Number of widgets vertically</td></tr>
     * </table>
     * @see #AppsCustomizePagedView_clingFocusedX
     * @see #AppsCustomizePagedView_clingFocusedY
     * @see #AppsCustomizePagedView_maxAppCellCountX
     * @see #AppsCustomizePagedView_maxAppCellCountY
     * @see #AppsCustomizePagedView_widgetCellHeightGap
     * @see #AppsCustomizePagedView_widgetCellWidthGap
     * @see #AppsCustomizePagedView_widgetCountX
     * @see #AppsCustomizePagedView_widgetCountY
     */
    public static final int[] AppsCustomizePagedView={
        0x7f030005, 0x7f030006, 0x7f03000e, 0x7f03000f, 
        0x7f030026, 0x7f030027, 0x7f030028, 0x7f030029
      };
    /**
     * <p>
     * @attr description
     * The x index of the item to be focused in the cling
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:clingFocusedX
     */
    public static final int AppsCustomizePagedView_clingFocusedX=0;
    /**
     * <p>
     * @attr description
     * The y index of the item to be focused in the cling
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:clingFocusedY
     */
    public static final int AppsCustomizePagedView_clingFocusedY=1;
    /**
     * <p>
     * @attr description
     * Max number of cells of applications horizontally
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:maxAppCellCountX
     */
    public static final int AppsCustomizePagedView_maxAppCellCountX=2;
    /**
     * <p>
     * @attr description
     * Max number of cells of applications vertically
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:maxAppCellCountY
     */
    public static final int AppsCustomizePagedView_maxAppCellCountY=3;
    /**
     * <p>
     * @attr description
     * Vertical spacing between widgets
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:widgetCellHeightGap
     */
    public static final int AppsCustomizePagedView_widgetCellHeightGap=4;
    /**
     * <p>
     * @attr description
     * Horizontal spacing between widgets and wallpapers
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:widgetCellWidthGap
     */
    public static final int AppsCustomizePagedView_widgetCellWidthGap=5;
    /**
     * <p>
     * @attr description
     * Number of widgets horizontally
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:widgetCountX
     */
    public static final int AppsCustomizePagedView_widgetCountX=6;
    /**
     * <p>
     * @attr description
     * Number of widgets vertically
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:widgetCountY
     */
    public static final int AppsCustomizePagedView_widgetCountY=7;
    /**
     * CellLayout specific attributes. These attributes are used to customize
     * a CellLayout view in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CellLayout_cellHeight com.android.launcher:cellHeight}</code></td><td>The height of a single cell</td></tr>
     * <tr><td><code>{@link #CellLayout_cellWidth com.android.launcher:cellWidth}</code></td><td>The width of a single cell</td></tr>
     * <tr><td><code>{@link #CellLayout_heightGap com.android.launcher:heightGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #CellLayout_maxGap com.android.launcher:maxGap}</code></td><td>The max gap size for each dimension</td></tr>
     * <tr><td><code>{@link #CellLayout_widthGap com.android.launcher:widthGap}</code></td><td>An override for the width and height gap to allow users to specify
     * a specific size for the page using spacing instead of resolving the
     * spacing from the width of the page</td></tr>
     * </table>
     * @see #CellLayout_cellHeight
     * @see #CellLayout_cellWidth
     * @see #CellLayout_heightGap
     * @see #CellLayout_maxGap
     * @see #CellLayout_widthGap
     */
    public static final int[] CellLayout={
        0x7f030002, 0x7f030003, 0x7f03000b, 0x7f030010, 
        0x7f03002a
      };
    /**
     * <p>
     * @attr description
     * The height of a single cell
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:cellHeight
     */
    public static final int CellLayout_cellHeight=0;
    /**
     * <p>
     * @attr description
     * The width of a single cell
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:cellWidth
     */
    public static final int CellLayout_cellWidth=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#heightGap}
     * attribute's value can be found in the {@link #CellLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:heightGap
     */
    public static final int CellLayout_heightGap=2;
    /**
     * <p>
     * @attr description
     * The max gap size for each dimension
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:maxGap
     */
    public static final int CellLayout_maxGap=3;
    /**
     * <p>
     * @attr description
     * An override for the width and height gap to allow users to specify
     * a specific size for the page using spacing instead of resolving the
     * spacing from the width of the page
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:widthGap
     */
    public static final int CellLayout_widthGap=4;
    /**
     * Cling specific attributes. These attributes are used to customize
     * the cling in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Cling_drawIdentifier com.android.launcher:drawIdentifier}</code></td><td>Used to identify how to draw the cling bg</td></tr>
     * </table>
     * @see #Cling_drawIdentifier
     */
    public static final int[] Cling={
        0x7f03000a
      };
    /**
     * <p>
     * @attr description
     * Used to identify how to draw the cling bg
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:drawIdentifier
     */
    public static final int Cling_drawIdentifier=0;
    public static final int[] CustomClingText={
      };
    public static final int[] CustomClingTitleText={
      };
    /**
     * DrawableStateProxyView specific attributes. These attributes are used to customize
     * a DrawableStateProxyView view in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawableStateProxyView_sourceViewId com.android.launcher:sourceViewId}</code></td><td>The source view to delegate touch presses events to.</td></tr>
     * </table>
     * @see #DrawableStateProxyView_sourceViewId
     */
    public static final int[] DrawableStateProxyView={
        0x7f03001d
      };
    /**
     * <p>
     * @attr description
     * The source view to delegate touch presses events to.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:sourceViewId
     */
    public static final int DrawableStateProxyView_sourceViewId=0;
    /**
     * Attributes that can be used with a Extra.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Extra_key com.android.launcher:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Extra_value com.android.launcher:value}</code></td><td></td></tr>
     * </table>
     * @see #Extra_key
     * @see #Extra_value
     */
    public static final int[] Extra={
        0x7f03000d, 0x7f030025
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#key}
     * attribute's value can be found in the {@link #Extra} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:key
     */
    public static final int Extra_key=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#value}
     * attribute's value can be found in the {@link #Extra} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:value
     */
    public static final int Extra_value=1;
    /**
     * XML attributes used by default_workspace.xml
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Favorite_className com.android.launcher:className}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_container com.android.launcher:container}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_icon com.android.launcher:icon}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_packageName com.android.launcher:packageName}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_screen com.android.launcher:screen}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_spanX com.android.launcher:spanX}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_spanY com.android.launcher:spanY}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_title com.android.launcher:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_uri com.android.launcher:uri}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_x com.android.launcher:x}</code></td><td></td></tr>
     * <tr><td><code>{@link #Favorite_y com.android.launcher:y}</code></td><td></td></tr>
     * </table>
     * @see #Favorite_className
     * @see #Favorite_container
     * @see #Favorite_icon
     * @see #Favorite_packageName
     * @see #Favorite_screen
     * @see #Favorite_spanX
     * @see #Favorite_spanY
     * @see #Favorite_title
     * @see #Favorite_uri
     * @see #Favorite_x
     * @see #Favorite_y
     */
    public static final int[] Favorite={
        0x7f030004, 0x7f030007, 0x7f03000c, 0x7f030011, 
        0x7f030019, 0x7f03001e, 0x7f03001f, 0x7f030023, 
        0x7f030024, 0x7f03002b, 0x7f03002c
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#className}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:className
     */
    public static final int Favorite_className=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#container}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:container
     */
    public static final int Favorite_container=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#icon}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher:icon
     */
    public static final int Favorite_icon=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#packageName}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:packageName
     */
    public static final int Favorite_packageName=3;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#screen}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:screen
     */
    public static final int Favorite_screen=4;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#spanX}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:spanX
     */
    public static final int Favorite_spanX=5;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#spanY}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:spanY
     */
    public static final int Favorite_spanY=6;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#title}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.android.launcher:title
     */
    public static final int Favorite_title=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#uri}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:uri
     */
    public static final int Favorite_uri=8;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#x}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:x
     */
    public static final int Favorite_x=9;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#y}
     * attribute's value can be found in the {@link #Favorite} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.android.launcher:y
     */
    public static final int Favorite_y=10;
    /**
     * HandleView specific attributes. These attributes are used to customize
     * a HandleView view in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #HandleView_direction com.android.launcher:direction}</code></td><td>Orientation of a widget.</td></tr>
     * </table>
     * @see #HandleView_direction
     */
    public static final int[] HandleView={
        0x7f030009
      };
    /**
     * <p>
     * @attr description
     * Orientation of the handle.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>horizontal</td><td>1</td><td>Horizontal widget.</td></tr>
     * <tr><td>vertical</td><td>0</td><td>Vertical widget.</td></tr>
     * </table>
     *
     * @attr name com.android.launcher:direction
     */
    public static final int HandleView_direction=0;
    /**
     * HolographicLinearLayout specific attributes.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #HolographicLinearLayout_sourceImageViewId com.android.launcher:sourceImageViewId}</code></td><td>The source view to generate and apply the drawable states to/from</td></tr>
     * </table>
     * @see #HolographicLinearLayout_sourceImageViewId
     */
    public static final int[] HolographicLinearLayout={
        0x7f03001c
      };
    /**
     * <p>
     * @attr description
     * The source view to generate and apply the drawable states to/from
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:sourceImageViewId
     */
    public static final int HolographicLinearLayout_sourceImageViewId=0;
    /**
     * Hotseat specific attributes. These attributes are used to customize
     * the hotseat in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Hotseat_cellCountX com.android.launcher:cellCountX}</code></td><td>The number of horizontal cells in the CellLayout</td></tr>
     * <tr><td><code>{@link #Hotseat_cellCountY com.android.launcher:cellCountY}</code></td><td>The number of vertical cells in the CellLayout</td></tr>
     * </table>
     * @see #Hotseat_cellCountX
     * @see #Hotseat_cellCountY
     */
    public static final int[] Hotseat={
        0x7f030000, 0x7f030001
      };
    /**
     * <p>
     * @attr description
     * The number of horizontal cells in the CellLayout
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:cellCountX
     */
    public static final int Hotseat_cellCountX=0;
    /**
     * <p>
     * @attr description
     * The number of vertical cells in the CellLayout
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:cellCountY
     */
    public static final int Hotseat_cellCountY=1;
    /**
     * PagedView specific attributes. These attributes are used to customize
     * a PagedView view in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PagedView_pageLayoutHeightGap com.android.launcher:pageLayoutHeightGap}</code></td><td></td></tr>
     * <tr><td><code>{@link #PagedView_pageLayoutPaddingBottom com.android.launcher:pageLayoutPaddingBottom}</code></td><td></td></tr>
     * <tr><td><code>{@link #PagedView_pageLayoutPaddingLeft com.android.launcher:pageLayoutPaddingLeft}</code></td><td></td></tr>
     * <tr><td><code>{@link #PagedView_pageLayoutPaddingRight com.android.launcher:pageLayoutPaddingRight}</code></td><td></td></tr>
     * <tr><td><code>{@link #PagedView_pageLayoutPaddingTop com.android.launcher:pageLayoutPaddingTop}</code></td><td>The padding of the pages that are dynamically created per page</td></tr>
     * <tr><td><code>{@link #PagedView_pageLayoutWidthGap com.android.launcher:pageLayoutWidthGap}</code></td><td>A spacing override for the icons within a page</td></tr>
     * <tr><td><code>{@link #PagedView_pageSpacing com.android.launcher:pageSpacing}</code></td><td>The space between adjacent pages of the PagedView.</td></tr>
     * <tr><td><code>{@link #PagedView_scrollIndicatorPaddingLeft com.android.launcher:scrollIndicatorPaddingLeft}</code></td><td>The padding for the scroll indicator area</td></tr>
     * <tr><td><code>{@link #PagedView_scrollIndicatorPaddingRight com.android.launcher:scrollIndicatorPaddingRight}</code></td><td></td></tr>
     * </table>
     * @see #PagedView_pageLayoutHeightGap
     * @see #PagedView_pageLayoutPaddingBottom
     * @see #PagedView_pageLayoutPaddingLeft
     * @see #PagedView_pageLayoutPaddingRight
     * @see #PagedView_pageLayoutPaddingTop
     * @see #PagedView_pageLayoutWidthGap
     * @see #PagedView_pageSpacing
     * @see #PagedView_scrollIndicatorPaddingLeft
     * @see #PagedView_scrollIndicatorPaddingRight
     */
    public static final int[] PagedView={
        0x7f030012, 0x7f030013, 0x7f030014, 0x7f030015, 
        0x7f030016, 0x7f030017, 0x7f030018, 0x7f03001a, 
        0x7f03001b
      };
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#pageLayoutHeightGap}
     * attribute's value can be found in the {@link #PagedView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:pageLayoutHeightGap
     */
    public static final int PagedView_pageLayoutHeightGap=0;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#pageLayoutPaddingBottom}
     * attribute's value can be found in the {@link #PagedView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:pageLayoutPaddingBottom
     */
    public static final int PagedView_pageLayoutPaddingBottom=1;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#pageLayoutPaddingLeft}
     * attribute's value can be found in the {@link #PagedView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:pageLayoutPaddingLeft
     */
    public static final int PagedView_pageLayoutPaddingLeft=2;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#pageLayoutPaddingRight}
     * attribute's value can be found in the {@link #PagedView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:pageLayoutPaddingRight
     */
    public static final int PagedView_pageLayoutPaddingRight=3;
    /**
     * <p>
     * @attr description
     * The padding of the pages that are dynamically created per page
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:pageLayoutPaddingTop
     */
    public static final int PagedView_pageLayoutPaddingTop=4;
    /**
     * <p>
     * @attr description
     * A spacing override for the icons within a page
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:pageLayoutWidthGap
     */
    public static final int PagedView_pageLayoutWidthGap=5;
    /**
     * <p>
     * @attr description
     * The space between adjacent pages of the PagedView.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:pageSpacing
     */
    public static final int PagedView_pageSpacing=6;
    /**
     * <p>
     * @attr description
     * The padding for the scroll indicator area
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:scrollIndicatorPaddingLeft
     */
    public static final int PagedView_scrollIndicatorPaddingLeft=7;
    /**
     * <p>This symbol is the offset where the {@link com.android.launcher.R.attr#scrollIndicatorPaddingRight}
     * attribute's value can be found in the {@link #PagedView} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.android.launcher:scrollIndicatorPaddingRight
     */
    public static final int PagedView_scrollIndicatorPaddingRight=8;
    /**
     * StrokedTextView specific attributes.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #StrokedTextView_strokeColor com.android.launcher:strokeColor}</code></td><td>The color of the stroke outline</td></tr>
     * <tr><td><code>{@link #StrokedTextView_strokeTextColor com.android.launcher:strokeTextColor}</code></td><td>The color of the text</td></tr>
     * <tr><td><code>{@link #StrokedTextView_strokeWidth com.android.launcher:strokeWidth}</code></td><td>The width of the stroke</td></tr>
     * </table>
     * @see #StrokedTextView_strokeColor
     * @see #StrokedTextView_strokeTextColor
     * @see #StrokedTextView_strokeWidth
     */
    public static final int[] StrokedTextView={
        0x7f030020, 0x7f030021, 0x7f030022
      };
    /**
     * <p>
     * @attr description
     * The color of the stroke outline
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher:strokeColor
     */
    public static final int StrokedTextView_strokeColor=0;
    /**
     * <p>
     * @attr description
     * The color of the text
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.android.launcher:strokeTextColor
     */
    public static final int StrokedTextView_strokeTextColor=1;
    /**
     * <p>
     * @attr description
     * The width of the stroke
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.android.launcher:strokeWidth
     */
    public static final int StrokedTextView_strokeWidth=2;
    /**
     * Workspace specific attributes. These attributes are used to customize
     * the workspace in XML files.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Workspace_cellCountX com.android.launcher:cellCountX}</code></td><td>The number of horizontal cells in the CellLayout</td></tr>
     * <tr><td><code>{@link #Workspace_cellCountY com.android.launcher:cellCountY}</code></td><td>The number of vertical cells in the CellLayout</td></tr>
     * <tr><td><code>{@link #Workspace_defaultScreen com.android.launcher:defaultScreen}</code></td><td>The first screen the workspace should display.</td></tr>
     * </table>
     * @see #Workspace_cellCountX
     * @see #Workspace_cellCountY
     * @see #Workspace_defaultScreen
     */
    public static final int[] Workspace={
        0x7f030000, 0x7f030001, 0x7f030008
      };
    /**
     * <p>
     * @attr description
     * The number of horizontal cells in the CellLayout
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:cellCountX
     */
    public static final int Workspace_cellCountX=0;
    /**
     * <p>
     * @attr description
     * The number of vertical cells in the CellLayout
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:cellCountY
     */
    public static final int Workspace_cellCountY=1;
    /**
     * <p>
     * @attr description
     * The first screen the workspace should display.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.android.launcher:defaultScreen
     */
    public static final int Workspace_defaultScreen=2;
  }
  public static final class xml {
    public static final int default_workspace=0x7f0f0000;
    public static final int update_workspace=0x7f0f0001;
    public static final int wallpaper_picker_preview=0x7f0f0002;
  }
}